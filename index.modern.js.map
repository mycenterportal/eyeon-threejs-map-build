{"version":3,"file":"index.modern.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/globals.ts","../src/helpers/misc.ts","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/helpers/draw.logo.helpers.ts","../src/Hooks/useMeshFloors/index.tsx","../src/defaults.ts","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent/FloorSelector.tsx","../src/components/Icons/ATM.tsx","../src/components/Icons/DogPoopStation.tsx","../src/components/Icons/Elevator.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Icons/Management.tsx","../src/components/Icons/PlayArea.tsx","../src/components/Icons/Restroom.tsx","../src/components/Icons/Security.tsx","../src/components/UIComponent/index.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/components/MapboxForm/MapboxForm.tsx","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type {Vector2} from \"three\";\nimport {IFloorData} from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n    return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string , boolean] {\n    let exists = false;\n    let node_name:string = '-name-not-found-';\n    const currentFloor = floors[floor_index];\n    if (currentFloor.route_points !== undefined) {\n        for (let i = 0; i < currentFloor.route_points.length; i++) {\n            if (vertex.x == currentFloor.route_points[i].node.x && vertex.y == currentFloor.route_points[i].node.y) {\n                exists = true;\n                node_name = currentFloor.route_points[i].name;\n                break;\n            }\n        }\n        if (!exists) {\n            node_name = next_node_name(node_count);\n            // draw_points([{ x: vertex.x, y: vertex.y }]);\n        }\n    }\n    return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport {Graph} from \"ngraph.graph\";\nimport {Color, LineCurve, Vector2, Vector3} from \"three\";\nimport {get_node_name} from \"./nodesUtils\";\nimport {MeshType} from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n    const consolePrefix = 'MeshParams';\n    let mesh_type:MeshType = null;\n    var layer_color: Color | string = path.color.clone();\n    var extrude = 0;\n    var z_index = 0;\n    var mesh_visible = true;\n    var mesh_draw = true;\n    var mesh_transparent = false;\n    var line_thickness = config.WALL_THICKNESS;\n    var interactiveMesh = true;\n    var layer_name = path.userData?.node.id;\n    if (layer_name != undefined) {\n        if (layer_name.startsWith('boundary')) {\n            mesh_type = 'boundary';\n            layer_color = config.BOUNDARY_COLOR;\n            line_thickness = config.BOUNDARY_THICKNESS;\n            if (config.STYLE == '3D') {\n                extrude = 9;\n            }\n        } else if (layer_name.startsWith('wall')) {\n            mesh_type = 'wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 8.5;\n            }\n        } else if (layer_name.startsWith('outer-wall')) {\n            mesh_type = 'outer-wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                mesh_draw = false;\n            }\n        } else if (layer_name.startsWith('building-base')) {\n            mesh_type = 'building-base';\n            layer_color = config.BUILDING_BASE_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 12;\n                z_index = -12;\n            }\n        } else if (layer_name.startsWith('base')) {\n            mesh_type = 'base';\n            layer_color = config.BASE_COLOR;\n        } else if (layer_name.startsWith('store')) {\n            mesh_type = 'store';\n            layer_color = config.STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = parseInt(config.STORE_HEIGHT);\n            }\n            if (layer_name.startsWith('store-underlay')) {\n                interactiveMesh = false;\n            }\n        } else if (layer_name.startsWith('big-store')) {\n            mesh_type = 'big-store';\n            layer_color = config.BIG_STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 16;\n            }\n        } else if (layer_name.startsWith('route-path')) {\n            mesh_type = 'route-path';\n            mesh_draw = false;\n            path.subPaths.forEach(subPath => {\n                if (subPath.curves.length == 0) {\n                    console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n                }\n\n                subPath.curves.forEach(curve => {\n                    //@ts-ignore\n                    const v1:Vector2 = curve.v1;\n                    //@ts-ignore\n                    const v2:Vector2 = curve.v2;\n\n                    const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n                    if (!exists1) {\n                        floors[floor_index].route_points?.push({\n                            name: node1_name,\n                            node: new Vector3(v1.x, v1.y, 1)\n                        });\n                        allNodesFloor[node1_name] = floor_index;\n                    }\n                    const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n                    if (!exists2) {\n                        floors[floor_index].route_points?.push({\n                            name: node2_name,\n                            node: new Vector3(v2.x, v2.y, 1)\n                        });\n                        allNodesFloor[node2_name] = floor_index;\n                    }\n                    pathFinderGraph.addNode(node1_name, { ...v1 });\n                    pathFinderGraph.addNode(node2_name, { ...v2 });\n\n                    // pathFinderGraph.addLink(node1_name, node2_name);\n                    pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n                    pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n                });\n            });\n        } else if (layer_name.startsWith('escalator-')) {\n            mesh_type = 'escalator';\n            mesh_visible = false;\n        } else if (layer_name.startsWith('kiosk-')) {\n            mesh_type = 'kiosk';\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('amenity-')) {\n            mesh_type = 'amenity';\n            mesh_transparent = true;\n            z_index = 1;\n        } else if (layer_name.startsWith('overlay')) {\n            mesh_type = 'overlay';\n        } else if (layer_name.startsWith('special-shape')) {\n            mesh_type = 'special-shape';\n        } else {\n            extrude = 1;\n        }\n    } else {\n        console.warn(consolePrefix + 'Layer name is undefined, path', path)\n    }\n\n\n    /*console.debug({\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    })*/\n    return {\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    }\n}","import createGraph from \"ngraph.graph\";\nimport {IRetailer, MapObj} from \"./mapitApiTypes\";\nimport type {Mesh} from \"three\";\nimport path from \"ngraph.path\";\n\nexport const meshByObjectId = new Map<string,Mesh>();\nexport const allMapObjects:string[] = [];\nexport const allIndexedMapObjects = {} as Record<string, MapObj>;\nexport const allIndexedRetailers = {} as Record<string, IRetailer>;\nexport const allNodesFloor = {} as Record<string, number>;\n\n//<{ x:number, y:number }, { weight: number }>\nexport const pathFinderGraph = createGraph();\nexport const ngraphPath = path;\n","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import {BackSide, Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry, Vector3} from \"three\";\nimport {getWallShape} from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\nimport {allMapObjects} from \"../../globals\";\nimport {IConfig, IExtMesh, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {hex_to_color} from \"../../helpers/misc\";\n\nimport {IRetailer, MapObj} from \"../../mapitApiTypes\";\n\n\nconst renderOrders = {\n    'route-path': 0,\n    'escalator': 0,\n    'underlay': 0,\n    'overlay': 1,\n    'building-base': 1,\n    'base': 2,\n    'store': 3,\n    'big-store': 4,\n    'kiosk': 5,\n    'wall': 6,\n    'outer-wall': 7,\n    'boundary': 8,\n    'amenity': 9,\n    'layer-image': 10,\n    'layer-text': 11,\n    'route-tube': 12,\n    'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n        return renderOrders[mesh_type];\n    }\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\n    return 0;\n}\n\nexport const getMaterial = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    layer_color: Color | string,\n    mesh_transparent: boolean,\n    allIndexedMapObjects: Record<string, MapObj>,\n) => {\n    const material_settings = {\n        color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n        side: DoubleSide,\n        transparent: false,\n        depthWrite: true,\n        depthTest: true,\n        opacity: 1,\n    }\n    if (config.STYLE == '2D' || mesh_type == 'base' || mesh_type == null) {\n        if (mesh_type != 'boundary') {\n            material_settings.depthWrite = false;\n            material_settings.depthTest = false;\n        }\n    }\n    if (mesh_type == 'overlay') {\n        material_settings.color = config.OVERLAY_COLOR;\n        material_settings.opacity = config.OVERLAY_OPACITY;\n    }\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE != 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent == 1) {\n        material_settings.opacity = 0;\n    }\n    var material = new MeshLambertMaterial(material_settings);\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        material.colorDefault = material.color;\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color != '') {\n            material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n            //@ts-ignore\n            material.colorDefault = material.color;\n        }\n        //@ts-ignore\n        material.active = false;\n    }\n    if (config.ROLE != 'PORTAL' && mesh_transparent) {\n        material.opacity = 0;\n        material.transparent = true;\n    }\n\n    material.transparent = material.opacity !== 1;\n\n    return material;\n}\n\nexport const getGeometry = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    extrude: number,\n    line_thickness: number,\n    path: any,\n) => {\n    const consolePrefix = 'MaterialAndGeometry';\n\n    let shapes = path.toShapes(true);\n\n    // shapes.forEach((shape, index) => {\n    let extrude_meshes;\n    if (config.STYLE == '2D') {\n        extrude_meshes = ['building-base'];\n    } else {\n        extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n    }\n\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n    var geometry;\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\n        geometry = new ExtrudeGeometry(shapes, {\n            depth: -extrude,\n            bevelEnabled: false,\n        });\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n        //@ts-ignore\n        let wall_geometries = [];\n        //@ts-ignore\n        path.subPaths.forEach(subPath => {\n            //@ts-ignore\n            subPath.curves.forEach(curve => {\n                if (curve.type == 'LineCurve') {\n                    let shape_extend = 0;\n                    if (mesh_type == 'boundary') {\n                        shape_extend = 1;\n                    } else if (mesh_type == 'wall') {\n                        // shape_extend = 1 / 3;\n                    }\n                    let shape1 = getWallShape(curve, line_thickness, shape_extend);\n                    let wall_geometry = new ExtrudeGeometry(shape1, {\n                        depth: -extrude,\n                        bevelEnabled: false,\n                    });\n                    wall_geometries.push(wall_geometry);\n                } else {\n                    console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n                }\n            });\n        });\n\n        if (wall_geometries.length == 1) {\n            //@ts-ignore\n            geometry = wall_geometries[0];\n        } else if (wall_geometries.length > 1) {\n            //@ts-ignore\n            geometry = mergeGeometries(wall_geometries);\n        } else {\n            console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n        }\n    } else {\n        geometry = new ShapeGeometry(shapes);\n        try {\n            //@ts-ignore\n            if (geometry.attributes.position.count == 0) {\n                console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n            }\n        } catch (e: any) {\n            console.error(e.message);\n        }\n    }\n\n    return geometry;\n}\n\nexport const getMaterialAndGeometry = (config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n    \n    const material = getMaterial(\n        config,\n        mesh_type,\n        layer_name,\n        layer_color,\n        mesh_transparent,\n        allIndexedMapObjects\n    );\n\n    const geometry = getGeometry(\n        config,\n        mesh_type,\n        layer_name,\n        extrude,\n        line_thickness,\n        path\n    );\n\n    const mesh = new Mesh(geometry, material) as IExtMesh;\n    mesh.object_id = layer_name;\n    mesh.mesh_type = mesh_type;\n    mesh.floor_index = floor_index;\n    mesh.visible = mesh_visible;\n    mesh.position.z = z_index;\n    let storeName = '';\n    if (['retail_name', 'retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n        if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type == 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n            storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].custom_text;\n            if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n                storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n            }\n        }\n    }\n    mesh.userData.storeName = storeName;\n    if (config.STYLE == '2D') {\n        mesh.renderOrder = getRenderOrder(mesh_type);\n        if (layer_name && layer_name.includes('underlay')) {\n            mesh.renderOrder = getRenderOrder('underlay');\n        }\n    }\n\n    floors[floor_index].objsGroup.add(mesh);\n\n    if (mesh_type == 'escalator') {\n        floors[floor_index].escalatorsNodes[layer_name] = null;\n        floors[floor_index].escalatorsObjs.push(mesh);\n        mesh.escalator_id = floor_index + '-' + layer_name;\n    }\n\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        mesh.route_node_id = null;\n\n        // add floor_index to the kiosks\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'kiosk') {\n            var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n            /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n                ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n            }*/\n        }\n\n        if (config.ROLE === 'PORTAL') {\n            allMapObjects.push(layer_name);\n        }\n        if (\n            (config.ROLE !== 'PORTAL' && mesh_type == 'kiosk') ||\n            (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type == 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n            (config.ROLE !== 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'amenity' && allIndexedMapObjects[layer_name].value != '') ||\n            (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n            (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type?? ''))\n        ) {\n            // if (interactiveMesh) {\n            floors[floor_index].interactiveObjs.push(mesh);\n            // }\n        } else if (\n            (config.ROLE === 'PORTAL')\n        ) {\n            floors[floor_index].interactiveObjs.push(mesh);\n        }\n    }\n\n    // if (['store', 'big-store'].includes(mesh_type as string)) {\n    //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n    // }\n\n    return {\n        mesh,\n        geometry,\n        material,\n        object_id: layer_name,\n        mesh_type,\n        floor_index,\n        visible: mesh_visible,\n        renderOrder: mesh.renderOrder,\n    }\n    // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n    BufferGeometry,\n    CanvasTexture,\n    Color,\n    CurvePath,\n    DoubleSide,\n    LineCurve3,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    Raycaster,\n    Scene,\n    TubeGeometry,\n    Vector3,\n} from \"three\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport {PathFinder} from \"ngraph.path\";\nimport {IRetailer, MapObj} from \"../mapitApiTypes\";\nimport {IExtMesh, IFloorData} from \"../types\";\nimport {Graph, Node} from \"ngraph.graph\";\n\nconst consolePrefix = 'ROUTE: ';\nlet route_exists = null;\nlet activeMapObjectName: string | null = null;\n\nfunction makeObjectActive(object_id: string | null = null, accentColor: string | Color, scene: Scene) {\n    clearActiveEffect(scene);\n    if (object_id != null) activeMapObjectName = object_id;\n    let obj = scene.getObjectByProperty('object_id', activeMapObjectName as string) as IExtMesh;\n    // obj.material.color = config.ACCENT_COLOR;\n    //@ts-ignore\n    obj.material.color = new Color(`#${accentColor}`);\n    //@ts-ignore\n    obj.material.active = true;\n    return obj;\n}\n\nfunction clearActiveEffect(scene: Scene) {\n    if (activeMapObjectName) {\n        let obj = scene.getObjectByProperty('object_id', activeMapObjectName) as IExtMesh;\n        //@ts-ignore\n        obj.material.color = { ...obj.material.colorDefault };\n        //@ts-ignore\n        obj.material.active = false;\n        activeMapObjectName = null;\n    }\n}\n\nexport function delete_route_path(floors: IFloorData[]) {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n        const floor = floors[floor_index];\n        floor.route_active = false;\n\n        if (floor.route_tube != null) {\n            floor.route_tube.geometry.dispose();\n            //@ts-ignore\n            floor.route_tube.material.dispose();\n            floor.objsGroup?.remove(floor.route_tube);\n        }\n\n        floor.route_tube = undefined;\n        floor.route_texture = null;\n        floor.escalatorMeshes = [];\n    }\n}\n\nexport function create_route(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n    if (from_mesh_object_id === to_mesh_object_id) {\n        return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[] , floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    // console.log({\n    //     from_mesh_object_id,\n    //     to_mesh_object_id,\n    //     from_obj,\n    //     to_obj,\n    //     from_node_name,\n    //     to_node_name,\n    // })\n\n    // from_node_name = 'node-147';\n    // to_node_name = 'node-221';\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n        return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n        const routeNode = routeNodes[index];\n        if (floor_routes[allNodesFloor[routeNode.id]]) {\n            floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n        } else {\n            floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n        }\n\n        if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n            // don't consider these middle escalators nodes\n        } else {\n            routeNodesEsclators.push(routeNode);\n        }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n        const routeNode = routeNodesEsclators[index];\n        if (\n            allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n            && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n        ) {\n            const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n            const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n            let goToFloor = null;\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index + 1].id],\n                    direction: 'Next',\n                };\n            }\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index - 1].id],\n                    direction: 'Previous',\n                };\n            }\n\n            if (goToFloor && escalator_mesh) {\n                escalator_mesh.goToFloor = goToFloor;\n                //@ts-ignore\n                floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n            }\n        }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n        const floor_route = floor_routes[floor_index];\n        if (floor_route && floor_route.length > 1) {\n            const routePath = create_route_path(floor_route, floor_index, floors, style);\n            routePaths[floor_index] = routePath;\n\n            floors[floor_index].route_active = true;\n            floors[floor_index].routeMeshes = [ routePath ];\n            if (floor_index === from_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(from_obj);\n            }\n            if (floor_index === to_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(to_obj);\n            }\n        }\n    }\n\n    // setTimeout(function () {\n    //     //TODO openFloorMap functionality\n    //     // openFloorMap(from_route_floor_index);\n    // });\n\n    return routePaths;\n}\n\nfunction create_route_path(\n    routeNodes: Node<any>[],\n    floor_index: number,\n    floors: IFloorData[],\n    style = '2D',// config.STYLE\n) {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n        let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n        let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n        route_path.add(new LineCurve3(from_node, to_node));\n        distance += from_node.distanceTo(to_node);\n    };\n    var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    //@ts-ignore\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n        map: get_route_texture(distance, floor_index, floors),\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style === '2D') {\n        route_tube.position.z = -10;\n        route_tube.scale.z = 0.1;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n    return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n        let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n        distance += link?.data.weight || 0;\n    };\n    return distance;\n}\n\nfunction draw_route_tube(route_tube: IExtMesh, total_faces: number) {\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, total_faces);\n    /*createjs.Ticker.framerate = 60;\n    createjs.Tween.get({ x: 0 },\n        {\n            onChange: function (event) {\n                route_tube.geometry.setDrawRange(0, event.target.target.x);\n            },\n            onComplete: function () {\n                animate_route_path(floors);\n            }\n        })\n        .to({ x: total_faces }, 1000, createjs.Ease.cubicInOut);\n    */\n}\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n        ctx.canvas.width = distance;\n        ctx.canvas.height = 80;\n\n        ctx.fillStyle = \"#4ea5ff\";\n        ctx.fillRect(0, 0, distance, 80);\n\n        let grd_width = 0.1 * distance;\n        const min_grd_width = 60;\n        const max_grd_width = 120;\n        if (grd_width < min_grd_width) grd_width = min_grd_width;\n        if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n        let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n        grd.addColorStop(0, \"#4ea5ff\");\n        grd.addColorStop(0.4, \"white\");\n        grd.addColorStop(0.6, \"white\");\n        grd.addColorStop(1, \"#4ea5ff\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n        floors[floor_index].route_texture = route_texture;\n\n        return route_texture;\n    } else {\n        return undefined;\n    }\n}\n\n//TODO\nfunction animate_route_path(floors: IFloorData[]) {\n    /*floors.forEach(floor => {\n        if (floor.route_texture != null) {\n            createjs.Ticker.framerate = 60;\n            createjs.Tween.get(floor.route_texture.offset, { loop: true })\n                .to({ x: -1 }, 2000, createjs.Ease.cubicInOut)\n        }\n    });*/\n}\n\nexport function assign_route_nodes_to_stores(\n    floor_index: number,\n     floors: IFloorData[],\n     allIndexedMapObjects: Record<string, MapObj>,\n     allIndexedRetailers: Record<string, IRetailer>,\n     allNodesFloor: Record<string, number>,\n     escalator_nodes: string[],\n     find_store_node_raycaster: Raycaster,\n     role: string, //config.ROLE\n     ) {\n    const result = new Map();\n    const currentFloor = floors[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n        currentFloor.route_points.forEach(point => {\n            let origin_point = new Vector3(point.node.x, point.node.y, -10);\n            let target_direction = new Vector3(0, 0, 1);\n            find_store_node_raycaster.set(origin_point, target_direction);\n            //@ts-ignore\n            var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n            if (storeIntersects.length) {\n                //@ts-ignore\n                storeIntersects[0].object.route_node_id = point.name;\n                //@ts-ignore\n                result.set(storeIntersects[0].object.object_id, point.name);\n                if (false && role != 'PORTAL') {\n                    //@ts-ignore\n                    var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n                    if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n                        var retailer_index = allIndexedRetailers[retailer_id].index;\n                        // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n                    }\n                }\n            }\n\n            var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n            if (escalatorIntersects.length) {\n                const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n                let escalator_obj_id = obj.object_id;\n                const escalatorNodes = floors[floor_index].escalatorsNodes;\n                if (escalatorNodes) {\n                    escalatorNodes[escalator_obj_id as string] = point.name;\n                    allNodesFloor[point.name] = floor_index;\n                    escalator_nodes.push(point.name);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n    // console.log('linkFloorEscalators', floors)\n    if (floors.length > 1) {\n        for(let i=0; i < (floors.length-1); i++) {\n            // console.log('floors[i]',i, floors[i])\n            const floor_escalators = floors[i].escalatorsNodes;\n            // console.log('floor_escalators', floor_escalators);\n            Object.keys(floor_escalators as object).forEach(escalator => {\n                if (floors[i].escalatorsNodes?.[escalator] != null && floors[i+1].escalatorsNodes?.[escalator] != null) {\n                    // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n                    const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n                    const nodeIdTo = floors[i+1].escalatorsNodes?.[escalator];\n                    if (nodeIdFrom && nodeIdTo) {\n                        pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                        pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n                    }\n                } else {\n                    // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n                }\n            })\n        }\n    }\n}\n\nexport function make_amenity_route(kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string ): Mesh[] {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    // if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj? kiosk_obj.route_node_id : '';\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for(let key in allIndexedMapObjects) {\n        const mapObject = allIndexedMapObjects[key];\n        if (\n            mapObject.layer_type === 'amenity'\n            && mapObject.obj_type === 'special'\n            && mapObject.value === amenity_type\n        ) {\n            map_objs.push(key);\n        }\n    }\n    map_objs.forEach((amenity_obj_name: string, index: number) => {\n        let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n            var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n            if (route_distance && route_distance < shortest_distance) {\n                shortest_distance = route_distance;\n                to_obj_name = amenity_obj_name;\n            }\n        } catch(e: any) {\n            console.warn(`Amenity Path: ${e.message}`);\n        }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n        to_obj_name = amenity_node_name;\n    }\n    });\n    return create_route(kiosk_obj_name, to_obj_name?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import {getMeshParams} from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport {IConfig, IFloorData, IMeshValues, TMapMode, TRoles} from \"src/types\";\nimport {allIndexedMapObjects, allIndexedRetailers, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport {getMaterialAndGeometry} from \"./getMaterialAndGeometry\";\nimport {Raycaster} from \"three\";\nimport {assign_route_nodes_to_stores, linkFloorEscalators} from \"src/helpers/route.helpers\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(floors:IFloorData[], config:IConfig, results:SVGResult[], role?: TRoles) {\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n    const escalator_nodes: string[] = [];\n    results.forEach((result, floor_index) => {\n        if (result.paths && result.paths.length) {\n            const pathIds = [];\n            for (let i = 0; i < result.paths.length; i++) {\n                pathIds.push(result.paths[i]?.userData?.node.id);\n            }\n            const paths = result.paths;\n            for (let i = 0; i < paths.length; i++) {\n                const {\n                    mesh_type,\n                    layer_color,\n                    extrude,\n                    z_index,\n                    mesh_visible,\n                    mesh_draw,\n                    mesh_transparent,\n                    line_thickness,\n                    interactiveMesh,\n                    path,\n                    layer_name,\n                } = getMeshParams(\n                    paths[i],\n                    paths,\n                    floors,\n                    floor_index,\n                    config,\n                    ++node_count,\n                    //@ts-ignore\n                    allNodesFloor,\n                    pathFinderGraph\n                );\n\n                if (mesh_draw) {\n                    const meshParams = getMaterialAndGeometry(\n                        config,\n                        mesh_type,\n                        layer_name,\n                        layer_color,\n                        mesh_transparent,\n                        mesh_visible,\n                        z_index,\n                        extrude,\n                        line_thickness,\n                        floors,\n                        floor_index,\n                        allIndexedMapObjects,\n                        allIndexedRetailers,\n                        path,\n                        role\n                    );\n\n                    if (layer_name.startsWith('kiosk-')) {\n                        if (role === 'PORTAL') {\n                            // meshParams.mesh.visible = false;\n                            //@ts-ignore\n                            // meshParams.mesh.material.visible = false;\n                        }\n                    }\n\n                    if (!GeometriesAndMaterials[floor_index]) {\n                        GeometriesAndMaterials[floor_index] = [];\n                    }\n\n                    GeometriesAndMaterials[floor_index].push(meshParams);\n                }\n            }\n            const findStoreNodeRaycaster = new Raycaster();\n            const routeNodeIds = assign_route_nodes_to_stores(\n                floor_index,\n                floors,\n                allIndexedMapObjects,\n                allIndexedRetailers,\n                allNodesFloor,\n                escalator_nodes,\n                findStoreNodeRaycaster,\n                config.ROLE\n            );\n            \n            if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n                for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n                    if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n                        GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n                    }\n                }\n            }\n\n            linkFloorEscalators(floors, pathFinderGraph);\n\n        }\n    })\n\n    return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes};\n}","import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3, Color, SphereGeometry } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport {IExtMesh} from \"../types\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {hex_to_color} from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n        addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n        //@ts-ignore\n        add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n}\n\nfunction deleteMeshByObjectID(object_id: string, scene: Scene, floors: Record<any, any>) {\n    if (object_id) {\n        let mesh = scene.getObjectByProperty('object_id', object_id);\n        if (mesh) {\n            //@ts-ignore\n            mesh.geometry.dispose();\n            //@ts-ignore\n            mesh.material.dispose();\n            //@ts-ignore\n            floors[mesh.floor_index].objsGroup.remove(mesh);\n        }\n    }\n}\n\nfunction getCenterPoint(mesh: Mesh) {\n    var mesh_center_point = new Vector3();\n    getMeshGroupBoundingBox(mesh).getCenter(mesh_center_point);\n    return mesh_center_point;\n}\n\nfunction getMeshSize(mesh: Mesh) {\n    var point = new Vector3();\n    //@ts-ignore\n    getMeshGroupBoundingBox(mesh).getSize(point);\n    return point;\n}\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n    if (!Array.isArray(mesh)) {\n        mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        //@ts-ignore\n        box.union(obj.geometry.boundingBox);\n        return box;\n    }, new Box3());\n    return box;\n}\n\nfunction layer_text_logo_position(mesh: Mesh, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    const object_id = (mesh as IExtMesh).object_id;\n    if (!object_id) return;\n    return layer_text_logo_position_by_id(object_id, newMeshPos, mesh_size, newMesh, allIndexedMapObjects);\n}\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    let map_obj = allIndexedMapObjects[object_id];\n\n    if (!map_obj) {\n        map_obj = {\n            offsetX: \"0\",\n            offsetY: \"0\",\n            rotate: \"0\",\n        }\n    }\n\n    let offsetX = parseInt(map_obj.offsetX);\n    let offsetY = parseInt(map_obj.offsetY);\n\n    newMeshPos.z = -mesh_size.z;\n\n    //@ts-ignore\n    newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n    //@ts-ignore\n    newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += offsetX;\n    newMeshPos.y += offsetY;\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n        const img = new Image();\n        img.crossOrigin = 'Anonymous';\n        if (map_obj.obj_type == 'retailer') {\n            if (retailer) {\n                img.src = retailer.logo;\n            } else {\n                console.error('retailer not found');\n                return null;\n            }\n        } else if (map_obj.obj_type == 'special') {\n    \n            let svg_image_name = map_obj.value;\n            if (map_obj.layer_type == 'kiosk') svg_image_name = 'kiosk';\n            if (svg_image_name) {\n                let svg_color = '222222';\n                if (map_obj.text_color != null) {\n                    svg_color = map_obj.text_color;\n                }\n    \n                const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n                if (!svg_block) {\n                    console.error('svg_block not found', svg_image_name);\n                    return null;\n                }\n                const svg_element = svg_block.querySelector(\"svg\");\n                if (!svg_element) {\n                    console.error('svg_element not found', svg_image_name);\n                    return null;\n                }\n    \n                const svgColoredParts = svg_element.querySelectorAll('[fill]');\n                svgColoredParts.forEach((svgColoredPart) => {\n                    svgColoredPart.setAttribute('fill', '#' + svg_color);\n                })\n    \n                const svgData = (new XMLSerializer()).serializeToString(svg_element);\n                img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n            }\n    \n        } else {\n            img.src = map_obj.custom_image;\n        }\n\n        return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    img.onload = function () {\n        const c = document.createElement(\"canvas\");\n        const ctx = c.getContext(\"2d\");\n\n        c.width = img.width;\n        c.height = img.height;\n\n        ctx?.drawImage(img, 0, 0);\n\n        let texture = new CanvasTexture(c);\n        texture.colorSpace = 'srgb'\n\n        const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n        const material = new MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            side: DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n        });\n        \n        afterOnload(geometry, material);\n    };\n}\n\nfunction getImageLogo(allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry,object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: {storeLogo: Object3D}) => void): void {\n    const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n    if (img === null) return;\n\n    processImage(img, map_obj, (geometry, material) => {\n        const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n        // @ts-ignore\n        const floor_index = mesh.floor_index;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n        logoMesh.object_id = new_object_id;\n        logoMesh.floor_index = floor_index;\n        logoMesh.renderOrder = getRenderOrder('layer-image');\n        floors[floor_index]?.objsGroup.add(logoMesh);\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        logoMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        //@ts-ignore\n        BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        \n        handleAsync({storeLogo: BoundingSphereMesh});\n        */\n        handleAsync({storeLogo: logoMesh});\n    })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id:string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): {textMesh: IExtMesh} | null | false {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n        return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    const map_obj: MapObj = allIndexedMapObjects[object_id]? allIndexedMapObjects[object_id] : {layer_type: 'custom_text', 'custom_text': '', 'size': 8};\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            text = '';\n        }\n\n        let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n        if (map_obj.text_color) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n        textMesh.userData.font = myFont;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        textMesh.object_id = new_object_id;\n        textMesh.floor_index = floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        if (map_obj.layer_type === 'retail_name') {\n            textMesh.userData.retail_name = text;\n        }\n\n        floors[floor_index].objsGroup.add(textMesh);\n\n        //scene.add(textMesh);\n        //console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        */\n        result = { textMesh };\n    }\n\n    else if (\n       map_obj.layer_type == 'retail_logo' ||\n       map_obj.layer_type == 'custom_image' ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'kiosk' && map_obj.kiosk_id != null) ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'amenity' && map_obj.value != '')\n   ) {\n        getImageLogo(allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n   }\n   return result;\n}","import {\n    Group,\n    Scene,\n    Object3D,\n    Mesh,\n    BufferGeometry,\n    Color,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport {loadFloors} from \"./loadFloors\";\nimport type {IConfig, IExtMesh, IFloorData, IMeshParams, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {defaultVars, mapit2DefaultVars} from \"../../defaults\";\nimport {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport {drawTextLogoStoreOnMap, get_store_name_logo_geo} from \"src/helpers/draw.logo.helpers\";\nimport { FontLoader, Font } from \"three-stdlib\";\nimport { IJsonConfig, IMeshParamsTmp} from \"../../types\";\nimport {hex_to_color} from \"src/helpers/misc\";\nimport {Kiosk, Floor, MapIt2Response, MapObj} from \"../../mapitApiTypes\";\nimport { EventedType } from \"ngraph.events\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars}\n\nconst defaultMapObjValues = {\n\tid: null,\n\tcenter_id: config.CENTER_ID,\n\tretailer_id: null,\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: 8,\n\trotate: 0,\n\toffsetX: 0,\n\toffsetY: 0,\n} as Record<string, string | number | null| undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\nconst extraMapObjects = []\nlet activeMapObjectName = null;\nconst floorsData:IFloorData[] = [];\nconst floors = [] as Floor[];\nlet floors_loaded = 0;\nlet MEDIA_STORAGE_URI: string = '';\n\nfunction select<T>(...values: T[]) {\n    return values.find(value => value !== '' && value != null) || values.at(-1);\n}\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n\tfor (let key in obj) {\n\t\tdelete obj[key];\n\t}\n}\n\nfunction makeIndexedMapObjects(map_objs: MapObj[]) {\n\tclearObject(allIndexedMapObjects);\n\n    allNonIndexedMapObjects = map_objs;\n\n    for (let i = 0; i < map_objs.length; i++) {\n        const obj = map_objs[i];\n        allIndexedMapObjects[obj.map_obj_name] = obj;\n        for (let key in defaultMapObjValues) {\n            const value = defaultMapObjValues[key];\n            //@ts-ignore\n            if (value != null && obj[key] == null) {\n                //@ts-ignore\n                allIndexedMapObjects[obj.map_obj_name][key] = value;\n            }\n        }\n    }\n}\n\nconst init = (config: IJsonConfig, floors:IFloorData[], response: MapIt2Response) => {\n    const KIOSKS:Record<string, Kiosk> = {};\n\n    response.kiosks.forEach((kiosk) => {\n        const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n        if (mapObj) {\n            kiosk.map_obj_name = mapObj.map_obj_name;\n        }\n        KIOSKS[kiosk.id] = kiosk;\n    });\n\n\n    for (let index in response.retailers) {\n        const retailer = response.retailers[index];\n        allIndexedRetailers[retailer.id] = retailer;\n        allIndexedRetailers[retailer.id].index = index;\n    }\n\n    // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n    // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n    makeIndexedMapObjects(response.map_objs);\n\n    floors.length = 0;\n    response.floors.forEach((value: IFloorData, index: number) => {\n        const objsGroup = new Group();\n        objsGroup.scale.y *= -1;\n        objsGroup.lookAt(0, 1, 0);\n\n        floors.push({\n            id: value.id,\n            // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n            svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n            title: value.title,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n        });\n    });\n    const DEFAULT_CAMERA_FOV = 75;\n    const WP_SITE_CAMERA_FOV = 30;\n    const DEFAULT_CAMERA_FAR = 10000;\n    config.CAMERA.far = DEFAULT_CAMERA_FAR;\n    config.CAMERA.fov = config.ROLE === 'WP_SITE'? WP_SITE_CAMERA_FOV : DEFAULT_CAMERA_FOV;\n    const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n    config.CAMERA.maxDistance *= fovCorrection;\n    config.CAMERA.far *= fovCorrection;\n\n    const processedConfig: IConfig = {\n        ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n        BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n        BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n        BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n        BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n        BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n        CAMERA: config.CAMERA,\n        CAMERA_CONTROLS_STATES: response.camera_controls_states[config.DEVICE],\n        CENTER_ID: config.CENTER_ID,\n        CONTROLS: null,\n        DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n        DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n        DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n        DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n        DEVICE: config.DEVICE,\n        KIOSK: config.KIOSK? config.KIOSK : '',\n        KIOSKS: KIOSKS,\n        MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n        ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n        OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n        OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n        ROLE: config.ROLE,\n        STATS: config.STATS === 'true' || config.STATS === '1',\n        STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n        STORE_HEIGHT: response.settings.STORE_HEIGHT? response.settings.STORE_HEIGHT : config.STORE_HEIGHT? config.STORE_HEIGHT : '8',\n        STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n        STYLE: config.STYLE? config.STYLE : response.settings.STYLE? response.settings.STYLE : config.STYLE,\n        WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n        WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n        FLOORS: response.floors,\n        AMENITIES: response.amenities,\n        RETAILERS: response.retailers,\n        AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n        AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n        KIOSK_SIZE: response.settings.KIOSK_SIZE? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    };\n\n    // AMENITIES_NAV_BG_COLOR: string;\n    // AMENITIES_NAV_ICON_COLOR: string;\n\n    return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response|null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n    const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n    const [textParams, setTextParams] = useState<Array<{textMesh:IExtMesh}[]>>([]);\n    const [storeLogos, setStoreLogos] = useState<{storeLogo: Mesh}[][]>([]);\n    const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n    const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n    const [urls, setUrls] = useState<string[]>([]);\n    const [ processedConfig, setProcessedConfig ] = useState<IConfig|null>(null);\n    let result = useLoader(SVGLoader, urls);\n\n    MEDIA_STORAGE_URI = useMemo(() => {\n        const r = /\\/$/;\n        if (mediaStorageURI) {\n            return mediaStorageURI?.replace(r, '');\n        }\n\n        return '';\n\n    }, [mediaStorageURI])\n\n    const consolePrefix = 'MAPIT2';\n    // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n    const myFont = useFont(fontData as unknown as FontData);\n\n    // const getWallShape = (...params: any): Shape | Shape[] => {\n    //     return []\n    // }\n\n\n    const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: {storeLogo: Mesh}) => {\n        setStoreLogos((prevLogos) => {\n            // console.debug({floorIndex});\n            if (prevLogos[floorIndex]) {\n                prevLogos[floorIndex].push({...meshLogo});\n            } else {\n                prevLogos[floorIndex] = [{...meshLogo}];\n            }\n            // console.debug({prevLogos});\n            return [...prevLogos];\n        });\n    }), [])\n\n\n    useEffect(() => {\n        if (!data) return;\n\n\n        // console.log('useMeshFloors[data]', {data})\n\n        const processedConfig = init(jsonConfig ? {...config, ...jsonConfig} : config, floorsData, data as MapIt2Response);\n        const values: string[] = [];\n        processedConfig.FLOORS.forEach((value) => {\n            // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n            //@ts-ignore\n            values.push(`${value.svg}`);\n        });\n\n        setProcessedConfig(processedConfig);\n        setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n    return () => {\n        if (meshParams) {\n            meshParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.mesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (textParams) {\n            textParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.textMesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (storeLogos) {\n            storeLogos.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.storeLogo.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        setMeshParams([]);\n        setTextParams([]);\n        setStoreLogos([]);\n    }\n    }, [data]);\n\n    useEffect(() => {\n        if (!processedConfig || !urls.length || !myFont || !result) return;\n\n        const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(floorsData, processedConfig, result, role);\n        const TextsAndLogos:Array<{textMesh:IExtMesh}[]> = [];\n        allNonIndexedMapObjects.forEach((params) => {\n            let values: IMeshValues | undefined;\n            for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n                //@ts-ignore\n                values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n                if (values !== undefined) {\n                    break;\n                } \n            }\n            if (!values) return null;\n            const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n            if (textParams) {\n                if (!TextsAndLogos[values.floor_index]) {\n                    TextsAndLogos[values.floor_index] = [];\n                }\n                TextsAndLogos[values.floor_index].push(textParams);\n            }\n        })\n        const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n            return (acc + item.length);\n        }, 0);\n        const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n        if (countNonIndexedObjs > 0) {\n            const mapObjNames = new Set<string>();\n            allNonIndexedMapObjects.forEach((item) => {\n                mapObjNames.add(item.map_obj_name);\n            });\n            GeometriesAndMaterials.forEach((items) => {\n                items.forEach(item => {\n                    if (!mapObjNames.has(item.object_id)) {\n                        const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n                        if (textParams) {\n                            \n                            if (!TextsAndLogos[item.floor_index]) {\n                                TextsAndLogos[item.floor_index] = [];\n                            }\n                            TextsAndLogos[item.floor_index].push(textParams);\n                        }\n                    };\n                })\n            });\n        }\n        setMeshParams(GeometriesAndMaterials);\n        setTextParams(TextsAndLogos);\n        setPathFinderGraph(graph);\n        setEscalatorNodes([...escalator_nodes]);\n\n    }, [processedConfig, urls, result, myFont]);\n\n    return useMemo(() => {\n        return {\n            config: processedConfig,\n            meshParams,\n            textParams,\n            storeLogos,\n            floors: floorsData,\n            pathFinderGraph,\n            escalator_nodes: escalatorNodes,\n        }\n    }, [ processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes ])\n}\n\nexport default useMeshFloors","import {IJsonConfig} from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n    ROLE: 'WEBSITE',\n    DEVICE: 'display_app',\n    CENTER_ID: '',\n    KIOSK: '',\n    STYLE: '3D',\n    DEFAULT_SELECTED_STORE: '',\n    DEBUG: '1',\n\n    MAP_BACKGROUND_COLOR: \"FFFFFF\",\n    ACCENT_COLOR: \"4EA5FF\",\n    STORE_DEFAULT_COLOR: \"E2E2E2\",\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n    WALL_THICKNESS: '0.6',\n    WALL_COLOR: \"888888\",\n    BOUNDARY_THICKNESS: '0.8',\n    BOUNDARY_COLOR: \"888888\",\n    BASE_COLOR: \"25292B\",\n    STORE_TEXT_COLOR: \"222222\",\n    OVERLAY_COLOR: \"FFFFFF\",\n    OVERLAY_OPACITY: '0.7',\n    // AMENITIES_NAV_BG_COLOR: \"000000\",\n    // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    }\n}\n\nexport const defaultVars: IJsonConfig = {\n    MAP_BACKGROUND_COLOR: '',\n    ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n    DEVICE: 'display_app',\n    KIOSK: '',\n    FLOORS: [],\n    KIOSKS: {},\n    CENTER_ID: null,\n    STATS: 'false',\n    STYLE: '3D', // 2D, 3D\n    DEBUG: '0',\n    ACCENT_COLOR: '4EA5FF',\n    STORE_DEFAULT_COLOR: 'E2E2E2',\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n    WALL_THICKNESS: '0.6',\n    BOUNDARY_THICKNESS: '0.8',\n    WALL_COLOR: '888888',\n    BOUNDARY_COLOR: '888888',\n    BASE_COLOR: '25292B',\n    BUILDING_BASE_COLOR: 'DADADA',\n    STORE_TEXT_COLOR: '222222',\n    OVERLAY_COLOR: 'FFFFFF',\n    OVERLAY_OPACITY: '0.7',\n    CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n    ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n    DEFAULT_CAMERA_POSITION: null, // custom default camera position\n    DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n    DEFAULT_SELECTED_STORE: null,\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    },\n    KIOSK_SIZE: '15',\n};","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import {IMeshParams, TRoles} from \"../../types\";\nimport {ThreeEvent} from \"@react-three/fiber\";\nimport React, {MouseEventHandler} from \"react\";\nimport {Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB, BoxHelper} from \"three\";\nimport {RouteTube} from \"./RouteTube\";\nimport {Html} from \"@react-three/drei\";\nimport styles from '../../MapBox.module.css';\n\ninterface IMapProps {\n    floorIndex: number,\n    meshFloors: IMeshParams;\n    currKioskObj: Mesh | null;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    routeTube?: Mesh;\n    visible: boolean,\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>;\n}\n\nconst getDarkerColor = (color: RGB) => {\n    if (color) {\n        var newColor = { ...color }\n        newColor.r = color.r * 0.92;\n        newColor.g = color.g * 0.92;\n        newColor.b = color.b * 0.92;\n        return newColor;\n    }\n    return null;\n}\n\nexport const Map = (params: IMapProps) => {\n    const {meshFloors, routeTube, floorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor} = params;\n\n    const { config, meshParams, textParams, storeLogos} = meshFloors;\n    const floor = meshFloors.floors[floorIndex];\n\n    const onPointerMove = params.onPointerMove;\n    const onPointerOver = params.onPointerEnter;\n    const onPointerOut = params.onPointerLeave;\n    const onClick = params.onClick;\n\n    const floorMeshParams = meshParams[floorIndex];\n    const floorTextParams = textParams[floorIndex];\n    const floorStoreLogos = storeLogos[floorIndex];\n    const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n    // console.log('Map', floorIndex, { meshParams, floorIndex, floorMeshParams, floorTextParams, floorStoreLogos, routeTubes})\n    return (\n        <group visible={visible}>\n            {floorMeshParams?.map((params) => {\n                if (!params.mesh) return null;\n\n                const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n                const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n                const active = activeObjectId && params.mesh.object_id === activeObjectId;\n                if (interactive) {\n                    // TODO: move those colorDefault, active, etc to userData of mesh or material\n                    if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n                        // @ts-ignore\n                        const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n                        //console.log('Map', {baseColor, active, hovered})\n                        params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n                    } else {\n                        // @ts-ignore\n                        params.mesh.material.color = params.mesh.material.colorDefault;\n                    }\n                }\n\n                return <group key={params.mesh.uuid} {...(interactive? {onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n                    <primitive object={params.mesh}></primitive>\n                </group>\n            })}\n            {floorTextParams?.map((params) => {\n                if (!params.textMesh) return null;\n                return <primitive key={params.textMesh.uuid} object={params.textMesh}>\n                </primitive>\n            })}\n            {floorStoreLogos?.map((params) => {\n                if (!params.storeLogo) return null;\n\n                return <primitive key={params.storeLogo.uuid} object={params.storeLogo}>\n                    {params.storeLogo.userData.htmlContent? <Html>{params.storeLogo.userData.htmlContent}</Html> : null}\n                </primitive>\n            })}\n            {escalatorMeshes?.map((params) => {\n                //@ts-ignore\n                return <primitive key={`escalator-${params.object_id}`} object={params}>\n                    <Html visible={false} position={params.geometry.boundingSphere?.center}>\n                        <div onClick={handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n                            <div className={styles.element} id={params.object_id as string}>\n                                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\n                            </div>\n                        </div>\n                    </Html>\n                </primitive>\n            })}\n            <RouteTube mesh={routeTube} />\n        </group>\n    )\n}","import type {Mesh} from \"three\";\nimport {Box3, Vector3} from \"three\";\n\nexport function get_camera_focus_object(objs:Mesh[], fov:number, aspectRatio: number, style: string) {\n    // config.STYLE\n    // config.CAMERA.fov\n\n    if (!Array.isArray(objs)) {\n        objs = [objs];\n    }\n    if (!objs.length) {\n        console.warn('get_camera_focus_object: no objects passed');\n        return { position: new Vector3(), target: new Vector3() };\n    }\n\n    const objsBoundingBox = objs.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        if (obj.geometry.boundingBox) {\n            box.union(obj.geometry.boundingBox);\n        }\n        return box;\n    }, new Box3());\n\n    const obj_size = new Vector3();\n    objsBoundingBox.getSize(obj_size);\n\n    const center = new Vector3();\n    objsBoundingBox.getCenter(center);\n\n    objs[0].localToWorld(center);\n\n    // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n    // var padding = max_length * 0.2;\n    // if (padding > 50) padding = 50;\n    // max_length += padding;\n    // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n    let tanFOV = Math.tan(Math.PI * fov / 360);\n    let padding = 1.1;\n    let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n    let new_height = (obj_size.y * padding) / 2 / tanFOV;\n    let new_y = Math.max(new_width, new_height);\n    let new_z = getCameraTiltPosition(new_y, style);\n\n    const target = new Vector3(center.x, 0, center.z);\n    const position = new Vector3(center.x, new_y, center.z + new_z);\n\n    // createjs.Ticker.framerate = 60;\n    // createjs.Tween.get(config.CONTROLS.target)\n    //     .to({ x: center.x, z: center.z }, 400);\n    // createjs.Tween.get(config.CAMERA.position)\n    //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n    return {position, target};\n}\n\nfunction getCameraTiltPosition(y:number, style:string): number {\n    let angle = 60;\n    if (style == '2D') angle = 89.9;\n    return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IJsonConfig, IMeshParams, TMapMode } from \"../../types\";\nimport { Map } from \"./Map\";\nimport React, { MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\nimport { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { isMobile } from \"react-device-detect\";\n\ninterface IFloorsMapProps {\n    meshFloors: IMeshParams;\n    currentFloorIndex: number;\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    onCameraMove?: (e: any) => void;\n    currKioskObj: Mesh;\n    routeTargetId?: string;\n    routeTargetFromId?: string;\n    amenityTargetType: string;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>,\n    escalatorNodes: string[];\n    zoom: IZoomData | null;\n    handleCameraLength?: (length: number) => void;\n    config: IConfig;\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n    const [firstMove, setFirstMove] = useState<boolean>(false);\n    const { meshFloors, currentFloorIndex, currKioskObj, routeTargetId, routeTargetFromId, amenityTargetType, handleChangeFloor, escalatorNodes, zoom, handleCameraLength, config } = params;\n    const { floors } = meshFloors;\n\n    const groupRef = useRef<Group>(null);\n    const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n    const mapControlRef = useRef<any>(null);\n    const { camera, scene } = useThree();\n    const cameraFocus = useRef<{\n        position: Vector3, target: Vector3,\n        fromPosition: Vector3, fromTarget: Vector3,\n        animationStartTime: number, duration: number\n    } | null>(null);\n    // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n    const style = meshFloors.config.STYLE;\n    const accentColor = meshFloors.config.ACCENT_COLOR;\n    const pathFinderGraph = meshFloors.pathFinderGraph;\n    const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n        routeTargetFromId ? routeTargetFromId : undefined;\n\n    useEffect(() => {\n        if (!amenityTargetType || config.ROLE === 'PORTAL') {\n            setRouteTubes([]);\n            return;\n        }\n        const route = make_amenity_route(from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n        setRouteTubes(route);\n    }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from])\n\n    useEffect(() => {\n        if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n            if (config.ROLE === 'PORTAL') {\n                if (routeTargetId) {\n                    const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n                    if (targetMesh) {\n                        setRouteTubes([targetMesh as IExtMesh])\n                    }\n                } else {\n                    setRouteTubes([]);\n                }\n            } else {\n                // setRouteTubes([]);\n            }\n            return;\n        }\n        if (!amenityTargetType) {\n            floors.forEach(floor => {\n                floor.escalatorMeshes = [];\n            });\n        }\n\n\n        console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n        /* MAKE ROUTE PATH */\n\n        const route = create_route(from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n        // TODO: activate object (moved out of create_route function)\n        // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n        // TODO: focus object (moved out of create_route function)\n        // if (!routePaths.length) {\n        //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n        //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n        //     camera.position.copy(position);\n        // }\n\n\n        setRouteTubes(route);\n\n    }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE]);\n\n    const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n    useEffect(() => {\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n        let meshes: Mesh[];\n        if (routeTubes[currentFloorIndex]) {\n            meshes = [routeTubes[currentFloorIndex]];\n\n            const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n            if (currentActiveObject) {\n                meshes.push(currentActiveObject.mesh);\n            }\n        } else {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n\n        return () => {\n            cameraFocus.current = null;\n        };\n    }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed]);\n\n    useEffect(() => {\n        if (zoom?.direction && mapControlRef.current) {\n            if (!(camera instanceof PerspectiveCamera)) {\n                console.error('Camera is not a PerspectiveCamera');\n                return;\n            }\n\n            if (!selectedFloorMeshParams.length) {\n                console.warn('objects not loaded yet');\n                return;\n            }\n\n            let meshes: Mesh[];\n            if (routeTubes[currentFloorIndex]) {\n                meshes = [routeTubes[currentFloorIndex]];\n\n                const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n                if (currentActiveObject) {\n                    meshes.push(currentActiveObject.mesh);\n                }\n            } else {\n                meshes = selectedFloorMeshParams.map(item => item.mesh);\n            }\n            const focus = {\n                position: mapControlRef.current.object.position.clone(),\n                target: mapControlRef.current.target.clone()\n            };\n\n            let cameraDistance = focus.position.distanceTo(focus.target);\n            const zoomStep = cameraDistance * 0.4;\n\n            if (zoom.direction === 'in') {\n                cameraDistance -= zoomStep;\n            } else {\n                cameraDistance += zoomStep;\n            }\n\n            cameraDistance = Math.min(\n                config.CAMERA.maxDistance,\n                Math.max(\n                    config.CAMERA.minDistance,\n                    cameraDistance\n                )\n            );\n\n            focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n            cameraFocus.current = {\n                ...focus,\n                fromPosition: mapControlRef.current.object.position.clone(),\n                fromTarget: mapControlRef.current.target.clone(),\n                animationStartTime: performance.now(),\n                duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n            };\n        }\n    }, [zoom])\n\n    const onCameraMove = useCallback((e: any) => {\n        if (handleCameraLength) {\n            const vector = new Vector3();\n            vector.copy(e.target.object.position);\n            vector.sub(mapControlRef.current.target);\n            handleCameraLength(vector.length());\n        }\n    }, [handleCameraLength])\n\n    useFrame(() => {\n        if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n            if (!firstMove) {\n                setFirstMove(true);\n                cameraFocus.current.duration = 0;\n            }\n            const focus = cameraFocus.current;\n            const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n            const animationProgress = Math.min(1, animationTime / focus?.duration);\n            mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n            mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n            mapControlRef.current.object.updateProjectionMatrix();\n            if (animationProgress >= 1) {\n                cameraFocus.current = null;\n            }\n        }\n    })\n\n    const resetCamera = (fullReset: boolean = false) => {\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n        let meshes: Mesh[];\n        if (routeTubes[currentFloorIndex]) {\n            meshes = [routeTubes[currentFloorIndex]];\n\n            const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n            if (currentActiveObject) {\n                meshes.push(currentActiveObject.mesh);\n            }\n        } else {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n    };\n\n    useImperativeHandle(ref, () => ({\n        resetCamera,\n    }))\n\n    return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n        <>\n            <MapControls\n                makeDefault\n                onChange={onCameraMove}\n                ref={mapControlRef}\n                maxPolarAngle={Math.PI / 2}\n                minDistance={config.CAMERA.minDistance}\n                maxDistance={config.CAMERA.maxDistance}\n                enableZoom={config.ROLE !== \"WP_SITE\" || (config.ROLE === 'WP_SITE' && isMobile)}\n                enableRotate={config.ROLE !== \"WP_SITE\"}\n            />\n\n            {floors && floors.map((value: IFloorData, index: number) => (\n                <Map\n                    key={`Map-${index}`}\n                    visible={currentFloorIndex === index}\n                    floorIndex={index}\n                    currKioskObj={params.currKioskObj}\n                    activeObjectId={params.activeObjectId}\n                    hoverObjectId={params.hoverObjectId}\n                    meshFloors={meshFloors}\n                    routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n                    onPointerEnter={params.onPointerEnter}\n                    onPointerLeave={params.onPointerLeave}\n                    onPointerMove={params.onPointerMove}\n                    onClick={params.onClick}\n                    handleChangeFloor={handleChangeFloor}\n                />\n            ))}\n        </>\n    </group>)\n})","import { IFloorSelectorProps } from \"../../types\";\nimport styles from '../../MapBox.module.css';\n\ntype TFloorButtonProps = {\n    isActive: boolean,\n    onClick: (e: any) => void,\n    text: string,\n}\n\nconst FloorButton = ({isActive, onClick, text }: TFloorButtonProps) => {\n    return (\n\n        <div\n            className={`${styles.floor} ${styles.control_btn} ${isActive ? styles.active : ''}`} onClick={onClick}\n        >\n            {text}\n        </div>\n    )\n}\n\nconst FloorSelector = ({floors, selectedFloorIndex, handleFloorChange, accentColor}: IFloorSelectorProps) => {\n    const floorButtons: Array<TFloorButtonProps & {key: string}> = [];\n    for (let i = 0; i < floors.length; i++) {\n        const style = {display: 'flex', cursor: 'pointer', background: 'white'};\n        if (i === selectedFloorIndex) {\n            style.background = accentColor;\n        }\n        floorButtons.push({\n            key: `floor-change-btn-${i}`,\n            isActive: i === selectedFloorIndex,\n            onClick: handleFloorChange(i),\n            text: floors[i].title,\n        })\n    }\n\n    return (\n        <div className={`${styles.floors} ${styles.btn_group}`}>\n            {floorButtons.map(value => <FloorButton key={value.key} isActive={value.isActive} onClick={value.onClick} text={value.text} ></FloorButton>)}\n        </div>\n    );\n}\n\nexport default FloorSelector;\n","const ATM = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n        </svg>\n    )\n}\n\nexport default ATM;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","\nconst Elevator = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n        </svg>\n    )\n}\n\nexport default Elevator;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst Management = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Management;","\nconst PlayArea = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default PlayArea;","\nconst Restroom = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Restroom;","\nconst Security = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Security;","import { IAmenitiesInteractiveList, IFloorSelectorProps, TMapMode, TRoles } from \"src/types\";\nimport FloorSelector from \"./FloorSelector\";\nimport { MouseEventHandler, useMemo } from \"react\";\nimport styles from '../../MapBox.module.css';\nimport ATM from \"../Icons/ATM\";\nimport DogPoopStation from \"../Icons/DogPoopStation\";\nimport Elevator from \"../Icons/Elevator\";\nimport FamilyRestroom from \"../Icons/FamilyRestroom\";\nimport Management from \"../Icons/Management\";\nimport PlayArea from \"../Icons/PlayArea\";\nimport Restroom from \"../Icons/Restroom\";\nimport Security from \"../Icons/Security\";\nimport { MapObj } from \"src/mapitApiTypes\";\n\nconst Names = ['atm', 'dog-poop-station', 'elevator', 'family-restroom', 'management', 'playarea', 'restroom', 'security'] as const;\n\ntype TIconName = (typeof Names)[number];\n\ntype TAmenityIconProps = {\n    type: TIconName,\n}\n\ntype TElement =  undefined | (() => JSX.Element);\n\nconst AmenityIcon = ({type}: TAmenityIconProps) => {\n    let name: TElement;\n    name = undefined;\n\n    switch (type) {\n        case 'atm':\n                name = ATM;\n            break;\n        case 'dog-poop-station':\n                name = DogPoopStation;\n            break;\n        case 'elevator':\n                name = Elevator;\n            break;\n        case 'family-restroom':\n                name = FamilyRestroom;\n            break;\n        case 'management':\n                name = Management;\n            break;\n        case 'playarea':\n                name = PlayArea;\n            break;\n        case 'restroom':\n                name = Restroom;\n            break;\n        case 'security':\n                name = Security;\n            break;\n    \n        default:\n            break;\n    }\n    if (name !== undefined) {\n        const Comp = name;\n        return (\n            <>\n                <Comp></Comp>\n            </>\n        )\n    } else {\n        return null;\n    }\n\n}\n\n\nconst UIComponent = ({\n    floors,\n    accentColor,\n    selectedFloorIndex,\n    handleFloorChange,\n    amenitiesList,\n    zoomIn,\n    zoomOut,\n    reset,\n    clearRoute,\n    handleAmenityClick,\n    role,\n    mapObjs\n}: IFloorSelectorProps & {\n    amenitiesList: IAmenitiesInteractiveList[],\n    zoomIn?: MouseEventHandler<HTMLDivElement>,\n    zoomOut?: MouseEventHandler<HTMLDivElement>,\n    reset?: () => void,\n    clearRoute?: MouseEventHandler<HTMLDivElement>,\n    handleAmenityClick: (type: string) => void,\n    role?: TRoles,\n    mapObjs?: MapObj[]\n}\n) => {\n    const handleResetClick: MouseEventHandler = (e) => {\n        e.preventDefault();\n        if (reset instanceof Function) {\n            reset();\n        }\n    }\n\n    const extractValues = useMemo(() => {\n\n        if(!mapObjs)\n        {\n            return [];\n        }\n        \n        return mapObjs\n          .filter(obj => obj.layer_type === \"amenity\")\n          .map(obj => obj.value);\n      }, [mapObjs])\n\n return(\n        <div id={styles['threejs-map-wrapper']}>\n            <div id={styles['threejs-map']}>\n                <div id={styles['map_controls']} className={`${!floors? 'hide' : ''}`}>\n                    <div className={styles['btn_group']}>\n                        <div onClick={handleResetClick} className={`${styles['reset']} ${styles['control_btn']}`}>RESET</div>\n                        <div onClick={clearRoute} className={`${styles['clear_route']} ${styles['control_btn']} ${clearRoute? '' : styles.hide}`}>Clear Route</div>\n                    </div>\n                    <FloorSelector  accentColor={accentColor} floors={floors} selectedFloorIndex={selectedFloorIndex} handleFloorChange={handleFloorChange}/>\n                    <div className={`${styles['btn_group']} ${styles['zoom_btns']}`}>\n                        <div onClick={zoomOut} className={`${styles['zoom-out']} ${styles['control_btn']}`}>–</div>\n                        <div onClick={zoomIn} className={`${styles['zoom-in']} ${styles['control_btn']}`}>+</div>\n                    </div>\n                </div>\n                <div id={styles['mapit2_loader']} className={styles['hide']}>Loading map, please wait...</div>\n                    {role !== 'PORTAL' &&\n                        <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n                            {amenitiesList.map((amenity, index) => {\n                                if(!extractValues.includes(amenity.type))\n                                {\n                                    return null;\n                                }\n                                return (\n                                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                                    <div className={styles.img}>\n                                        <AmenityIcon type={amenity.type as TIconName}></AmenityIcon>\n                                     \n                                    </div>\n                                    <div className={`${styles.name}`}>{amenity.name}</div>\n                                </div>\n                            )})}\n                        </div>\n                    }\n            </div>\n        </div>\n )   \n}\n\nexport default UIComponent;\n","import React, {useEffect} from \"react\";\nimport styles from '../../MapBox.module.css';\n\nexport const MapCenterMarker = ({size, koef, blink}: {size: number, koef: number, blink: boolean}) => {\n    const kioskElementRef = React.useRef<HTMLDivElement>(null);\n\n    // todo figure out better way\n    useEffect(() => {\n        if (!kioskElementRef.current) return;\n        const kioskElement = kioskElementRef.current;\n        const svgOrigin = document.querySelector('#map-special-svg-kiosk svg');\n        let svgClone:Node;\n        if (svgOrigin) {\n            svgClone = svgOrigin.cloneNode(true);\n            kioskElement.appendChild(svgClone);\n        }\n\n        return () => {\n            if (svgClone) {\n                kioskElement.removeChild(svgClone);\n            }\n        }\n    }, []);\n\n    return <>\n        <div className={styles['kioskMarker']} ref={kioskElementRef} style={{width: koef*10+size*2, height: koef*10+size*2}}></div>\n        {blink? <div className={styles['mapCenterMarker']}></div> : null}\n    </>\n}","import { createContext, useContext, useState } from \"react\"\nimport { Object3D } from \"three\";\nimport { IExtMesh } from \"src/types\";\n\n\ntype TMeshObjectContext = {\n    MeshObject: IExtMesh[] | null;\n    SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>>;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext | null>(null);\n\nexport default function MeshObjectContextProvider({children}: {children: React.ReactNode}) {\n    const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n\n    return (\n        <MeshObjectContext.Provider\n            value={{\n                MeshObject,\n                SetMeshObject,\n            }}\n        >\n            {children}\n        </MeshObjectContext.Provider>\n    )\n}\n\nexport function useMeshObjectContext() {\n    const context = useContext(MeshObjectContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n    }\n\n    return context;\n}\n","import { useCallback, useMemo, useState } from \"react\";\n\ntype GetRetailersParams = {\n    centerId: string | number,\n    apiURI?: string,\n    limit?: number,\n    page?: number,\n}\n\ntype Data = {\n    isError: boolean,\n    error: string | null,\n    items: any[],\n    count: number,\n}\n\nconst defaultData: Data = {\n    isError: false,\n    error: null,\n    items: [],\n    count: 0,\n}\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n    const { centerId, apiURI, limit, page } = params;\n\n    const fetchRetailers = useCallback((search: string) => {\n        const r = /\\/$/;\n        const uri = apiURI?.replace(r, '');\n        const url = `${uri}/v1/retailers/?limit=${limit ? limit : 100}&page=${page ? page : 1}&search=${search ? search : ''}`;\n\n        return fetch(url, {\n            headers: {\n                center_id: centerId.toString(),\n            },\n        }).then(response => {\n            if (!response.ok) {\n                return {\n                    ...defaultData,\n                    isError: true,\n                    error: `Server error: [${response.status}] [${response.statusText}] [${response.url}]`,\n                    items: [],\n                };\n            }\n            return (async () => {\n                return await response.json().then(retailers => {\n                    return {\n                        ...defaultData,\n                        items: retailers.items,\n                        count: retailers.count,\n                    }\n                });\n            })()\n        }).catch((e: any) => {\n            return {\n                ...defaultData,\n                isError: true,\n                error: e.message ? e.message : 'useGetRetailer: something went wrong!',\n                items: [],\n            };\n        })\n    }\n        , [centerId, limit, page, apiURI]);\n\n    return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor, hex_to_color } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { MouseEventHandler, SyntheticEvent, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, FormControl, FormControlProps, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, Euler, MeshBasicMaterial, MeshPhongMaterial, Object3D, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { Geometry, TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IJsonConfig, IMeshParamsTmp } from \"src/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useGetRetailers from \"./useGetRetailersBySearch\";\n\n\ninterface IMapboxForm {\n    floorIndex: number;\n    meshFloors: IMeshParamsTmp;\n    config: IConfig;\n    data: any;\n    setData: (index: number, data: MapObj) => void;\n    selectedId: string;\n    centerId: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    apiURI?: string;\n    onResetData?: (data: MapObj) => void;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n    [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n\tid: '',\n\tcenter_id: centerId,\n\tretailer_id: '',\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: '8',\n\trotate: '0',\n\toffsetX: '0',\n\toffsetY: '0',\n});\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n    const {data, setData, selectedId, centerId, config, floorIndex, meshFloors, onResetData} = params;\n\n    const myFont = useFont(fontData as unknown as FontData);\n    const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n    const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n    const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n    const [formData, setFormData] = useState<MapObj | null>(null);\n    const [rotation, setRotation] = useState<number | undefined>(undefined);\n    const context = useMeshObjectContext();\n    const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [, startTransition] = useTransition();\n    const intervalRefs = useRef<TIncDecInterval>({});\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const fetchRetailers = useGetRetailers({centerId, apiURI: params.apiURI});\n\n    const loadOptions = (inputValue: string, callback: (options: any[]) => void) => {\n        setIsLoading(true);\n        const retailersData = fetchRetailers(inputValue);\n        retailersData.then(data => {\n            setIsLoading(false);\n            let result: any = [];\n            if (!data) return result;\n            if (!data.isError) {\n                result = data.items.map((item: any) => {\n                    return {\n                        value: item.id,\n                        label: item.name,\n                    }\n                })\n            } else {\n                console.error(`Fetch Retailers error: ${data.error}`)\n            }\n            callback(result);\n        })\n    }\n\n    useEffect(() => {\n        switch(mainTabKey) {\n            case 'retailer':\n                handleChangeTab(retailerTabsKey);\n                break;\n        }\n    }, [formData, mainTabKey, retailerTabsKey])\n\n    const handleChangeTab = (k:  any | null) => {\n        if (!formData) return;\n        const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n        if (key !== null) {\n            if (isTMainTabsKey(key)) {\n                setMainTabKey(key);\n                if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n                    formData.obj_type = key;\n                    if (key === 'retailer') {\n                        formData.layer_type = 'retail_name';\n                    } else if (key === 'special') {\n                        formData.layer_type = 'kiosk';\n                        formData.retailer_id = '';\n                    } else if (key === 'custom') {\n                        formData.layer_type = 'custom_text';\n                        formData.retailer_id = '';\n                    }\n                    setMainTabKey('');\n                    setRetailerTabsKey('');\n                    setSpecialTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    });\n                }\n            } else if (isTRetailerTabsKey(key)) {\n                setRetailerTabsKey(key);\n                if (formData.id && retailerTabsKey && key) {\n                    formData.layer_type = key;\n                    if (formData.layer_type !== key) {\n                        setFormData({ ...formData });\n                    }\n                    updateData({\n                        ...formData,\n                    })\n                    if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n                        let text = '';\n                        switch (key) {\n                            case 'retail_name':\n                               \n                                if(!formData.retailer_id)\n                                {\n                                    break;\n                                }\n\n                                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                               \n                                if (retailIndex !== -1) {\n                                    text = data.retailers[retailIndex].retail_name;\n\n                                }\n                                break;\n                            case 'retail_text':\n                            case 'custom_text':\n                                text = formData.custom_text;\n                                break;\n                        }\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            makeTextGeometry(obj, text, formData.size);\n                        }\n                    }\n\n                    if (['retail_logo', 'custom_image'].includes(key)) {\n                        context?.MeshObject?.forEach((obj, index) => {\n                            if (index === 0) return;\n\n                            makeImage(formData, obj);\n                        })\n                    }\n                }\n            } else if (isTSpecialTabsKey(key)) {\n                setSpecialTabsKey(key);\n                if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n                    formData.layer_type = key;\n                    formData.kiosk_id = '';\n                    formData.retailer_id = '';\n                    formData.value = '';\n                    setFormData({ ...formData });\n                    updateData({ ...formData });\n                }\n            }\n        }\n    }\n\n    const handleRotateChange = (e: any) => {\n        if (!formData) return;\n        formData.rotate = e.target.value;\n        setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = {...formData};\n            setData(index, {...data});\n        }\n    }\n\n    const handleReset = () => {\n        if (!formData) return;\n        const defaultValues = getDefaultMapOjbValues(formData.center_id);\n        if (onResetData) {\n            onResetData({\n                ...formData,\n            })\n        }\n        setFormData({\n            ...defaultValues,\n            id: formData.id,\n        });\n        updateData({\n            ...defaultValues,\n            id: formData.id,\n        });\n    }\n\n    const updateData = (formData: MapObj) => {\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = { ...formData };\n            setData(index, { ...formData });\n        }\n    }\n\n    const handleChangeRetailer = ({value}: {value: string}) => {\n        if (value && formData) {\n            formData.retailer_id = value;\n            formData.kiosk_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeKiosk = (e: any) => {\n        if (e.target.value && formData) {\n            formData.kiosk_id = e.target.value;\n            formData.retailer_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const handleChangeAmenity = (e: any) => {\n        if (e.target.value && formData) {\n            formData.value = e.target.value; \n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const makeTextGeometry = (obj: IExtMesh, text: string, size: string) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let text_geometry = new TextGeometry(text, {\n            font: (obj.userData && obj.userData.font)? obj.userData.font : myFont,\n            size: parseInt(size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n        if (obj.geometry) {\n            obj.geometry.dispose();\n        }\n        obj.geometry = text_geometry;\n    }\n\n    const makeImage = (formData: MapObj, obj: IExtMesh) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let img = null;\n        if (formData.layer_type === 'retail_logo') {\n            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n            if (retailIndex !== -1) {\n                img = getImage(formData, data.retailers[retailIndex]);\n            }\n        } else {\n            img = getImage(formData);\n        }\n        if (img instanceof HTMLImageElement) {\n            processImage(img, formData, (geometry, material) => {\n                obj.geometry = geometry;\n                obj.material = material;\n\n                const boundingBox = geometry.boundingBox;\n\n                const mesh_center_point = new Vector3();\n                if (boundingBox) {\n                    boundingBox.getCenter(mesh_center_point);\n\n                    const mesh_size = new Vector3();\n                    boundingBox.getSize(mesh_size);\n                    if (obj.object_id) {\n                        layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n                    }\n                }\n            });\n        }\n    }\n\n    const changeValue = (name: string, value: string) => {\n        if (!formData) return;\n        // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n        //     formData.custom_image = value;\n        //     setFormData({...formData});\n        //     updateData({...formData});\n        // }\n\n        context?.MeshObject?.forEach((obj, index) => {\n            if (!obj.userData) {\n                obj.userData = {};\n            }\n            if (!obj.userData.position) {\n                obj.userData.position = new Vector3();\n                if (obj.position) {\n                    obj.userData.position.copy(obj.position);\n                }\n            }\n            const position = new Vector3();\n            if (obj.userData.position){\n                position.copy(obj.userData.position);\n            }\n            switch (name) {\n                case 'custom_text':\n                    if (index === 0) break;\n                    formData.custom_text = value;\n                    if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        makeTextGeometry(obj, formData.custom_text, formData.size);\n                    }\n                    break;\n                case 'custom_image':\n                    if (index === 0) break;\n                    formData.custom_image = value;\n                    makeImage(formData, obj);\n                    updateData({\n                        ...formData,\n                    })\n                    break;\n                case 'size':\n                    if (index === 0) break;\n                    formData.size = value;\n                    if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n                        let text = '';\n                        if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n                            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                            if (retailIndex !== -1) {\n                                text = data.retailers[retailIndex].retail_name;\n                            }\n                        } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                            text = formData.custom_text;\n                        }\n                        makeTextGeometry(obj, text, formData.size);\n                    } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n                        makeImage(formData, obj);\n                        if (timeoutRef.current) {\n                            clearInterval(timeoutRef.current);\n                        }\n                        timeoutRef.current = setTimeout(() => {\n                            updateData({ ...formData });\n                        }, 300);\n                    } else if (['amenity', 'kiosk'].includes(formData.layer_type)) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            setFormData({ ...formData });\n                            updateData({ ...formData });\n                        })\n                    } \n                    break;\n\n                case 'rotate':\n                    if (index === 0) break;\n                    formData.rotate = value;\n                    obj.rotation.set(\n                        obj.rotation.x,\n                        obj.rotation.y,\n                        parseFloat(formData.rotate) * Math.PI / 180\n                    );\n                    break;\n\n                case 'offsetX':\n                    if (index === 0) break;\n                    position.x += parseFloat(value);\n                    obj.position.setX(position.x);\n                    formData.offsetX = value;\n                    break;\n\n                case 'offsetY':\n                    if (index === 0) break;\n                    position.y += parseFloat(value);\n                    obj.position.setY(position.y);\n                    formData.offsetY = value;\n                    break;\n\n                case 'text_color':\n                    if (index === 0) break;\n                    formData.text_color = value;\n                    if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        const material_settings = {\n                            // color: hex_to_color(formData.text_color),\n                            color: formData.text_color,\n                            transparent: true,\n                            side: DoubleSide,\n                            depthWrite: false,\n                            depthTest: false,\n                        };\n                        let text_material = new MeshPhongMaterial(material_settings);\n                        obj.material = text_material;\n                    } else if (\n                        formData.layer_type === 'retail_logo' ||\n                        formData.layer_type === 'custom_image' ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            updateData({\n                                ...formData,\n                                text_color: formData.text_color.replace('#', ''),\n                            });\n                        })\n                    }\n                    break;\n\n                case 'bg_color':\n                    if (index !== 0) break;\n                    formData.bg_color = value;\n                    let meshType: MeshType = 'store';\n                    if (obj.object_id?.startsWith('big-store')) {\n                        meshType = 'big-store';\n                    }\n                    obj.material = getMaterial(\n                        config,\n                        meshType,\n                        formData.map_obj_name,\n                        formData.bg_color,\n                        formData.transparent === \"1\"? true : false,\n                        {[formData.map_obj_name]: {...formData}}\n                        );\n                    // updateData({...formData});\n                    break;\n            \n                default:\n                    break;\n            }\n            startTransition(() => {\n                setFormData({ ...formData })\n                updateData({ ...formData });\n            });\n\n        })\n    }\n    const handleChange = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value;\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    useEffect(() => {\n        if (data && data.map_objs && selectedId) {\n            const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n            if (index !== -1) {\n                setFormData({...data.map_objs[index]});\n            } else {\n                setFormData({\n                    ...getDefaultMapOjbValues(centerId),\n                    id: 'new-' + (new Date()).getTime(),\n                });\n            }\n        }\n        return () => {\n            setRetailerTabsKey('');\n        }\n    }, [data, selectedId])\n\n    useEffect(() => {\n        if (!formData) return;\n        if (formData.obj_type) {\n            handleChangeTab(formData.obj_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n        if (formData.layer_type) {\n            handleChangeTab(formData.layer_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n    }, [formData])\n\n    const decrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value -= 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const incrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const rotateByFixedAngle = (key:TIncDecKey, angle: number) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += angle;\n            if (value > 360) {\n                value = angle;\n            } else if (value === 360) {\n                value = 0;\n            }\n\n            changeValue(key, value.toString());\n        }\n    }\n\n    const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            rotateByFixedAngle(key, angle);\n        }, 100);\n    } \n\n    const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            decrementValue(key);\n        }, 100);\n    }\n\n    const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            incrementValue(key);\n        }, 100);\n    }\n\n    const stopIntervals = () => {\n        let key:TIncDecKey;\n        for (key in intervalRefs.current) {\n            if (intervalRefs.current[key])\n                clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n                intervalRefs.current[key] = null;\n        }\n    }\n\n    const handleOnSubmit = () => {\n        if (params.onSubmit && context && context.MeshObject && formData) {\n            formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n            params.onSubmit({...formData, map_obj_name: context.MeshObject[0].object_id as string});\n        }\n    }\n\n    if (!formData) return null;\n\n    return (\n        <>\n            <Tab.Container activeKey={mainTabKey}>\n                <Col>\n                    <Row>\n                        <Col sm=\"9\">\n                            <Nav\n                                variant=\"tabs\"\n                                className=\"flex-row\"\n                                // activeKey={mainTabKey}\n                                onSelect={handleChangeTab}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col sm=\"3\" className=\"px-0\">\n                            {/* \n                //@ts-ignore */}\n                            <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Tab.Content>\n                                <Tab.Pane eventKey={\"retailer\"}>\n                            <AsyncSelect\n                                className=\"mb-3\"\n                                aria-label=\"Choose a Retailer\"\n                                loadOptions={loadOptions}\n                                noOptionsMessage={() => 'Retailers not found'}\n                                placeholder=\"Choose a Retailer...\"\n                                value={data.retailers?.filter((item: IRetailer) => item.id === formData.retailer_id)?.map((item: IRetailer) => ({\n                                    value: item.id,\n                                    label: `${item.retail_name}${item.location && item.location.length > 1 ? item.location : ''}`,\n                                }))}\n                                defaultOptions={data.retailers?.map((item: any) => ({value: item.id, label: `${item.retail_name}${item.location && item.location.length > 1? item.location : ''}`}))}\n                                onChange={handleChangeRetailer}\n\n                            />\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"retail-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                    >\n                        <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                        <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                        <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"custom_text\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"special\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"special-tab-form\"\n                        activeKey={specialTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.kiosk_id?? ''} onChange={handleChangeKiosk}>\n                                <option value={''} disabled hidden>Choose a Kiosk...</option>\n                                {data.kiosks?.map((value: any, index: number) => <option key={`kiosk-${value.id}-${index}`} value={value.id}>{value.title}</option>)}\n                            </Form.Select>\n                        </Tab>\n                        <Tab eventKey=\"amenity\" title=\"Amenity\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                                <option value={''} disabled hidden>Choose Amenity...</option>\n                                {Object.keys(data.amenities)?.map((value: string) => (\n                                    <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                                ))}\n                            </Form.Select>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"custom\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"custom-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"custom_text\" title=\"Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            name=\"custom_text\"\n                                            as=\"textarea\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"custom_image\" title=\"Image\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            type=\"string\"\n                                            name=\"custom_image\"\n                                            value={formData.custom_image}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Col>\n            </Tab.Container>\n            <Form.Group className=\"mb-3 mt-3\">\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Size</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('size')}\n                                    onMouseDown={handleDecrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"size\"\n                                    type=\"text\"\n                                    value={formData.size}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('size')}\n                                    onMouseDown={handleIncrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Rotate</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('rotate')}\n                                    onMouseDown={handleDecrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"rotate\"\n                                    type=\"number\"\n                                    value={rotation ?? formData.rotate}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('rotate')}\n                                    onMouseDown={handleIncrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                            <div style={{maxWidth: 50, height: 50}}>\n                                <Button\n                                    onClick={() => rotateByFixedAngle('rotate', 45)}\n                                    onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >\n                                    <ArrowClockwise size={'1rem'} />\n                                </Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset X</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetX')}\n                                    onMouseDown={handleDecrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n\n                                <Form.Control\n                                    name=\"offsetX\"\n                                    type=\"number\"\n                                    value={formData.offsetX}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetX')}\n                                    onMouseDown={handleIncrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetY')}\n                                    onMouseDown={handleDecrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"offsetY\"\n                                    type=\"number\"\n                                    value={formData.offsetY}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetY')}\n                                    onMouseDown={handleIncrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"3\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">BG Color</Form.Label>\n                    </Col>\n                    <Col sm=\"3\" className=\"p-0\">\n                        <Form.Control\n                            name=\"bg_color\"\n                            type=\"string\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"2\">\n                        <Form.Control\n                            type=\"color\"\n                            name=\"bg_color\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Row>\n                            <Col sm=\"3\">\n                                <input\n                                        name=\"transparent\"\n                                        id=\"transparent\"\n                                        type=\"checkbox\"\n                                        value={formData.transparent}\n                                        onChange={handleChange}\n                                ></input>\n                            </Col>\n                            <Col sm=\"9\" className=\"p-0\">\n                                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                            <Form.Label className=\"mb-0\">Text Color</Form.Label>\n                        </Col>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                name=\"text_color\"\n                                type=\"color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                {['kiosk', 'amenity'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                type=\"color\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                <Row className=\"justify-content-center px-5 py-5\">\n                    <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-')? 'Save' : 'Update'}</button>\n                </Row>\n            </Form.Group>\n        </>\n    );\n}\n\nexport default MapboxForm;\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n    centerId: string,\n    slug: string,\n    webApiURI: string,\n}\n\nexport type RetailerData = {\n    data: IRetailer | null,\n    isLoading: boolean,\n    isError: boolean,\n    error: string | null,\n}\n\nconst defaultData: RetailerData = {\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n} \nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n    const {centerId, slug, webApiURI} = props;\n    const [data, setData] = useState<RetailerData>(defaultData);\n\n    useMemo(() => {\n        if (!slug || !centerId) {\n            setData({...defaultData});\n            return false;\n        }\n\n        let apiURI = webApiURI;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            setData({\n                isLoading: true,\n                data: null,\n                isError: false,\n                error: null,\n            })\n            fetch(`${apiURI}/v1/retailers/${slug}`, {\n                headers: {\n                    center_id: centerId,\n                }\n            }).then(\n                (response) => response.json()\n            ).then(data => {\n                setData({\n                    isLoading: false,\n                    isError: false,\n                    error: null,\n                    data: {\n                        id: data.id,\n                        retail_name: data.name,\n                        slug: data.slug,\n                        location: data.location && data.location !== '-'? data.location : '',\n                        retailer_phone: data.retailer_phone,\n                        retailer_description: data.global_retailer.description,\n                        logo: data.media.url,\n                        map_obj_name: '',\n                    }\n                });\n            }).catch((e: any) => {\n                setData({\n                    data: null,\n                    isLoading: false,\n                    isError: true,\n                    error: `Error fetch retaler data: ${e.message}`,\n                })\n            })\n        } else {\n            setData({\n                isLoading: false,\n                isError: true,\n                error: 'webApiURI not provided!',\n                data: null,\n            })\n        }\n\n    }, [centerId, slug, webApiURI]);\n\n    return data;\n\n}\n\nexport default useRetailerData;\n","import { Col, Form, FormGroup, Modal, Placeholder, Row, Spinner  } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { XCircleFill } from \"react-bootstrap-icons\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { CSSProperties, ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n    amenity: string,\n    show: boolean,\n    onHide: () => void,\n    centerId: string,\n    retailers?: IRetailer[],\n    mapObjs?: MapObj[],\n    mapObjectName?: string,\n    webApiURI: string,\n    onClick?: (id: string, amenityType?: string) => void,\n}\n\nconst RetailerInfoList = ({retailers, retailer, isLoading, onClick, isAmenity, mapObjs}: {retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[]}) => {\n\n    const [retailerId, setRetailerId] = useState<string>('');\n\n    const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n        e.preventDefault();\n        if (onClick) {\n            onClick(retailerId);\n        }\n    }\n\n    const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n        setRetailerId(e.target.value);\n    }\n\n    const filterRetailers = (retailers:IRetailer[], arrayObjects:MapObj[]) => {\n        return retailers.filter(retailer => \n            arrayObjects.some(obj => obj.retailer_id === retailer.id)\n        );\n    }\n\n    if (!isAmenity && (isLoading || !retailer )) {\n        return (\n        <div>\n            <div className={styles['retailer-info-spinner']} >\n                <Spinner animation=\"border\" role=\"status\" variant=\"secondary\"/>\n            </div>\n            <div className={styles['retailer-info-content']} >\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={5} /> <Placeholder bg=\"secondary\"  xs={3} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={7} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            {!!retailer && (\n                <>\n                    <div className={styles['retailer-logo']}>\n                        <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n                    </div>\n                    <div className={styles['retailer-info-content']} >\n                        <div>\n                            <b>Retailer:</b> {retailer.retail_name}\n                        </div>\n                        {retailer.location &&\n                            <div>\n                                <b>Location:</b> {retailer.location}\n                            </div>\n                        }\n                        {retailer.retailer_phone &&\n                            <div>\n                                <b>Phone:</b> {retailer.retailer_phone}\n                            </div>\n                        }\n                        {retailer.retailer_description &&\n                            <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n                        }\n                    </div>\n                </>\n            )}\n            <Form className={styles['get-directions-from']}>\n                <FormGroup>\n                    <div className=\"d-flex align-items-center gap-3\">\n                        <div className=\"label text-nowrap\">Get directions from</div>\n                        <Form.Select\n                            name=\"retailer\"\n                            onChange={onChange}\n                            value={retailerId}\n                            >\n                            <option value={''} selected disabled>Choose Retailer ...</option>\n                            {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                                if (retailer && item.id === retailer.id) return null;\n                                return (\n                                    <option key={index} value={item.id}>{item.retail_name}</option>\n                                )\n                            }\n                            )}\n                        </Form.Select>\n                        <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n                    </div>\n                </FormGroup>\n            </Form>\n        </div>\n    );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n    const {\n        amenity,\n        show,\n        onHide,\n        centerId,\n        retailers,\n        mapObjs,\n        mapObjectName,\n        webApiURI,\n        onClick,\n    } = props;\n    const slug = useMemo(() => {\n        if (centerId && mapObjs && retailers && mapObjectName) {\n            const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n            if (mapObj && mapObj.retailer_id) {\n                const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n                if (retailer) {\n                    return retailer.slug;\n                }\n            }\n        }\n        return '';\n    }, [centerId, mapObjectName, mapObjs, retailers]);\n    const data = useRetailerData({ centerId, slug, webApiURI });\n    const handleOnClick = (retailerId: string) => {\n        if (!onClick) return;\n        const mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n        let mapObjectName = '';\n\n        if (mapObj) {\n            mapObjectName = mapObj.map_obj_name;\n        }\n        if (amenity) {\n            onClick(mapObjectName, amenity);\n        } else {\n            onClick(mapObjectName);\n        }\n    }\n\n    const isAmenity = (amenity !== '' || (mapObjectName? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n    return (\n        <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n            <div className={styles['retailerInfoCloseBtn']}>\n                <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n            </div>\n            <Modal.Body className=\"p-3\">\n                <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} />\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default RetailerInfoModal;\n","import React, {CSSProperties, MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState} from \"react\";\nimport {Canvas, ThreeEvent, useThree} from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport {SceneProperties} from \"./SceneProperties\";\nimport {CameraProperties} from \"./CameraProperties\";\nimport {DoubleSide, Mesh, MeshLambertMaterial, Object3D} from \"three\";\nimport {IAmenitiesInteractiveList, IExtMesh, IJsonConfig, IMeshParams, IMeshValues, TMapMode, TMapSettingsProps} from \"src/types\";\nimport {FloorsMap} from \"./FloorsMap\";\nimport {useMapit2Data} from \"../../useMapit2Data\";\nimport {MapIt2Response, MapObj, MapObjToSave} from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport {MapCenterMarker} from \"./MapCenterMarker\";\nimport { delete_route_path } from \"src/helpers/route.helpers\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.css';\nimport {Alert} from 'react-bootstrap';\nimport { hex_to_color } from \"src/helpers/misc\";\nimport RetailerInfoModal from \"./RetailerInfoModal\";\n\nconst amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        imageUrl: '/assets/threejs/assets/img/amenities/atm.svg?color=FFFFFF',\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        imageUrl: '/assets/threejs/assets/img/amenities/management.svg?color=FFFFFF',\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        imageUrl: '/assets/threejs/assets/img/amenities/playarea.svg?color=FFFFFF',\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        imageUrl: '/assets/threejs/assets/img/amenities/restroom.svg?color=FFFFFF',\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        imageUrl: '/assets/threejs/assets/img/amenities/elevator.svg?color=FFFFFF',\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        imageUrl: '/assets/threejs/assets/img/amenities/security.svg?color=FFFFFF',\n    },\n] \n\ninterface ISceneComponentProps {\n    mapitData?: MapIt2Response;\n    config: Partial<IJsonConfig>;\n    selectedActiveObjectId: string;\n    setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n    onMapDataUpdate?: (data: MapObj[]) => void;\n    onSettingsLoading?: (settings: MapIt2Response) => void;\n    webApiURI?: string;\n    mediaStorageURI?: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    onResetData?: (data: MapObj) => void;\n}\n\nexport interface IZoomData {\n    direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params:ISceneComponentProps, ref) => {\n    const {data, refreshData} = useMapit2Data({ mapitData:params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n    const [fromObjectId, setFromObjectId] = useState<string>('');\n    const [hovered, setHovered] = useState<boolean>(false);\n    const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n    const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n\n    const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate } = params;\n\n    const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n    const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n    const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n    const [cameraLength, setCameraLength] = useState<number>(0);\n\n    const statsParentRef = useRef(null);\n\n    const floorsMapRef = useRef<{resetCamera: () => void | null}>(null);\n\n    const handleCameraLength = useCallback((length: number) => {\n        setCameraLength(length);\n    }, [])\n\n    const handleFloorChange = (floorIndex: number): MouseEventHandler<HTMLDivElement> => (e) => {\n        setSelectedFloorIndex(floorIndex);\n    }\n\n\n    const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n    const mapCenterMarkerRef = useRef(null);\n    const labelRef = useRef<HTMLDivElement>(null);\n    const [ currentHoveredObject, setCurrentHoveredObject ] = useState<Object3D | null>(null);\n    const meshObjectContext = useMeshObjectContext();\n\n    const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n\n    const config = meshFloors.config;\n    const floors = meshFloors.floors;\n    const meshParams = meshFloors.meshParams;\n    \n    useImperativeHandle(ref, () => ({\n        refreshData,\n    }))\n\n    useEffect(() => {\n        if (data && meshFloors.config && params.onSettingsLoading) {\n            params.onSettingsLoading(\n                {\n                    ...data,\n                    settings: {\n                        ...data.settings,\n                        STYLE: meshFloors.config.STYLE,\n                        ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n                        AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n                        AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n                        BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n                        BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n                        BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n                        BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n                        MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n                        OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n                        OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n                        STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n                        STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n                        WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n                        WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n                        KIOSK_SIZE: meshFloors.config.KIOSK_SIZE? meshFloors.config.KIOSK_SIZE : '15',\n                        STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n                    }\n                });\n        }\n    }, [data, meshFloors])\n\n\n    // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n    let activeFromObjectId = '';\n    let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n    if (selectedActiveObjectId) {\n        activeObjectId = selectedActiveObjectId;\n        activeFromObjectId = fromObjectId;\n    } else if (amenityTargetType) {\n        activeObjectId = '';\n        activeFromObjectId = fromObjectId;\n        // activeFromObjectId = '';\n    }\n\n    const handleChangeMapitData = (index: number, newData: MapObj) => {\n        const itemIndex = formMapObjData.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n        if (itemIndex !== -1) {\n            formMapObjData[itemIndex] = { index, data: { ...newData } };\n        } else {\n            formMapObjData.push({ index, data: { ...newData } })\n        }\n\n        setFormMapObjData([...formMapObjData]);\n    }\n\n  const getMapitData = (): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n        params.onSubmit(data, refreshData);\n    }\n  }\n\n    useEffect(() => {\n        // console.log('useEffect currentHoveredObject', currentHoveredObject)\n        document.body.style.cursor = currentHoveredObject? 'pointer' : 'default';\n    }, [currentHoveredObject]);\n\n    const [ currKioskObj, currKioskFloorIndex, kioskError ]: [ Mesh | null, number, string ] = useMemo(() => {\n        if (!config) {\n            return [ null, 0, '' ] // not an error - loading/initializing\n        }\n        let kioskError = '';\n        let currKioskObj: Mesh | null = null;\n        let currKioskFloorIndex = 0;\n        if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n            const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n            const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n            if (currKioskMeshParams) {\n                currKioskObj = currKioskMeshParams.mesh;\n                currKioskFloorIndex = currKioskMeshParams.floor_index;\n            }\n        } else {\n            if (config.ROLE === 'WEBSITE') {\n                // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n            }\n            if (config.ROLE === 'WEBSITE') {\n                console.error('Kiosk not found in config');\n                // kioskError = 'Map initialization error';\n            }\n        }\n\n        return [ currKioskObj, currKioskFloorIndex, kioskError]\n    }, [config, meshParams]);\n\n    const resetHandle = () => {\n        setSelectedFloorIndex(currKioskFloorIndex);\n        setSelectedActiveObjectId('');\n        setFromObjectId('');\n        setAmenityTargetType('');\n    }\n\n    useEffect(() => {\n            if (!selectedActiveObjectId && floorsMapRef.current) {\n                floorsMapRef.current.resetCamera();\n            }\n    }, [selectedActiveObjectId])\n\n    useEffect(() => {\n        if (!config) {\n          return;\n        }\n\n        const kiosks:IMeshValues[] = [];\n        meshFloors.meshParams.forEach(floor => {\n          floor.forEach(item => {\n            if (item?.mesh_type === \"kiosk\") {\n              kiosks.push(item);\n            }\n          })\n        })\n        // console.log('kiosks', kiosks);\n  \n        const mapObjectIdToKiosk = new Map();\n        const mapObjectIdToLogo = new Map();\n        kiosks.forEach(item => {\n          mapObjectIdToKiosk.set(item.object_id, item.mesh);\n        });\n        // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n        meshFloors.storeLogos.forEach(floor => {\n          floor.forEach(item => {\n              mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n          })\n        });\n        // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n        // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n  \n        const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n  \n        const koef = cameraLength/(config.CAMERA.maxDistance - config.CAMERA.minDistance);\n        const currKioskLogo:IExtMesh[] = [];\n        const mapData = getMapitData();\n        kiosks.forEach(item => {\n          const kiosk = item.mesh;\n          const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n          const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n          if (kiosk && logo) {\n            logo.userData.htmlContent = <MapCenterMarker blink={item.object_id === currKioskId} size={mapObj? Number(mapObj.size) : Number(config.KIOSK_SIZE)} koef={1-koef} />\n            logo.visible = false;\n  \n            currKioskLogo.push(logo);\n          }\n        });\n  \n        return () => {\n          currKioskLogo?.forEach(mesh => {\n            mesh.userData.htmlContent = null;\n          });\n        }\n  \n      }, [meshFloors, currKioskObj, cameraLength, config]);\n\n    useEffect(() => {\n        if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId && meshObjectContext?.SetMeshObject) {\n            const object = meshFloors.meshParams[selectedFloorIndex === -1? 0 : selectedFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n            if (object) {\n                //@ts-ignore\n                handleMeshObjectContext(object);\n            }\n            //@ts-ignore\n        }\n    }, [meshFloors])\n\n    useEffect(() => {\n        if (onMapDataUpdate) {\n            const exportData: MapObj[] = [];\n\n            formMapObjData.forEach((value) => {\n                exportData.push({...value.data});\n            })\n        }\n    }, [formMapObjData])\n\n    useEffect(() => {\n        document.body.style.cursor = hovered? 'pointer' : 'auto';\n\n    }, [hovered])\n\n    const handleMeshObjectContext = (object: IExtMesh) => {\n        if (meshObjectContext?.SetMeshObject) {\n            const textParams = meshFloors.textParams[selectedFloorIndex === -1? 0 : selectedFloorIndex]?.find(value => {\n                return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const logoParams = meshFloors.storeLogos[selectedFloorIndex === -1? 0 : selectedFloorIndex]?.find(value => {\n                return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const result = [object as IExtMesh];\n\n            if (textParams) {\n                result.push(textParams.textMesh);\n            }\n\n            if (logoParams) {\n                result.push(logoParams.storeLogo)\n            }\n\n            // if (result.length === 1) {\n            //     const mediaObject = new Object3D() as IExtMesh; \n            //     mediaObject.object_id =  `${textLogoNamePrefix}${(object as IExtMesh).object_id}`;\n\n            //     result.push(mediaObject);\n            // }\n\n            meshObjectContext.SetMeshObject([...result]);\n        }\n    }\n\n    const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n        e.stopPropagation();\n        // console.log('onClick', e.object)\n\n        const targetId = (e.object as IExtMesh).object_id;\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n        // console.log('set active object', targetId);\n        setAmenityTargetType('');\n        setFromObjectId('');\n        if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n            setShowRetailerInfo(true);\n        }\n    }, [selectedFloorIndex, meshFloors.meshParams.length]);\n\n    const handleAmenityClick = (type: string) => {\n        setSelectedActiveObjectId('')\n        setFromObjectId('')\n        if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n            setSelectedAmenityType(type)\n            setShowRetailerInfo(true);\n        } else {\n            setAmenityTargetType(type)\n        }\n    };\n\n    const onCameraMove = useCallback((e: any) => {\n        if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n            return\n        }\n    }, []);\n\n    const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        console.debug()\n        setHovered(true);\n        // console.log('onPointerEnter', e.object)\n        if (!e.object.userData.storeName && config && config.ROLE !== 'PORTAL') {\n            // console.warn('onPointerEnter no storeName', e.object);\n            return;\n        }\n        setCurrentHoveredObject(e.object);\n    }, []);\n\n    const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerLeave', e.object)\n        setCurrentHoveredObject(null);\n        setHovered(false);\n        if (labelRef && labelRef.current) {\n            labelRef.current.style.display = 'none';\n        }\n    }, []);\n\n    const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerMove', e.object)\n\n        if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n                        labelRef.current.style.top = `${e.offsetY - 65}px`;\n            labelRef.current.style.left = `${e.offsetX}px`;\n            labelRef.current.style.display = 'block';\n        } else if (labelRef.current) {\n            labelRef.current.style.display = 'none';\n        }\n    }\n\n    const messageStyle: CSSProperties = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%',\n    }\n\n    if (data && (!data.floors || data.floors.length <= 0)) {\n        return <div style={messageStyle}>Map doesn't have any floors</div>\n    }\n\n    if (!config || !meshFloors.meshParams.length) {\n        console.warn('LOADING MAP')\n        if(config?.ROLE === 'WP_SITE')\n        {\n            return <div style={messageStyle}>No map for Center</div> \n        }\n        return <div style={messageStyle}>Map loading, please wait...</div>\n    }\n\n    if (kioskError) {\n        return <div style={messageStyle}>{kioskError}</div>\n    }\n\n    const currentFloorIndex = selectedFloorIndex > -1 ? selectedFloorIndex : currKioskFloorIndex;\n\n    if (!currKioskObj && config.ROLE === 'WEBSITE') {\n        console.error('NO KIOSK OBJECT FOUND');\n        // return <div style={messageStyle}>Map initialization error</div>\n    }\n\n    // make sure that meshFloors conditionals are not null\n    const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n\n    let hoverObject = currentHoveredObject as IExtMesh\n    let hoverObjectId = '';\n    if (hoverObject && hoverObject.object_id) {\n        hoverObjectId = hoverObject.object_id;\n    }\n\n    const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n        if (!amenityType) {\n            setFromObjectId(retailerId);\n        } else {\n            // setSelectedActiveObjectId(retailerId);\n            setFromObjectId(retailerId);\n            setAmenityTargetType(amenityType);\n        }\n        setShowRetailerInfo(false);\n    }\n\n    return (\n        <>\n            {config.ROLE === 'PORTAL' &&\n                <div className={styles['mapbox-admin-form']}>\n                    {!selectedActiveObjectId? \n                    <Alert variant=\"info\">Select a store to customize.</Alert>\n                    :\n                        <MapboxForm\n                            floorIndex={currentFloorIndex}\n                            meshFloors={meshFloors}\n                            config={config}\n                            data={getMapitData()}\n                            setData={handleChangeMapitData}\n                            selectedId={selectedActiveObjectId}\n                            centerId={params.config.CENTER_ID as string}\n                            onSubmit={handleOnSubmit}\n                            apiURI={params.webApiURI}\n                            onResetData={params.onResetData}\n                        />\n                    }\n                </div>\n            }\n\n            <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n                <UIComponent \n                    accentColor={config.ACCENT_COLOR.getStyle()} \n                    floors={floors} \n                    selectedFloorIndex={currentFloorIndex} \n                    handleFloorChange={handleFloorChange} \n                    amenitiesList={amenitiesList} \n                    handleAmenityClick={handleAmenityClick} \n                    reset={resetHandle} \n                    zoomIn={() => setZoom({ direction: 'in' })} \n                    zoomOut={() => setZoom({ direction: 'out' })} \n                    role={config.ROLE}\n                    mapObjs={data?.map_objs}\n                 />\n                <Canvas style={{position: 'absolute', top: 0, left: 0}} flat>\n                    {Number(params.config.STATS)? <Stats className={styles.stats} parent={statsParentRef} /> : null }\n                    <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n                    <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n                    {/*<axesHelper args={[5000]} />*/}\n\n                    <ambientLight intensity={1} color={'#c4c4c4'} />\n                    <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n                    <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n                    <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n                    <FloorsMap\n                        onCameraMove={onCameraMove}\n                        meshFloors={meshFloorsChecked}\n                        activeObjectId={activeObjectId}\n                        hoverObjectId={hoverObjectId}\n                        // @ts-ignore\n                        currKioskObj={currKioskObj}\n                        routeTargetId={activeObjectId}\n                        routeTargetFromId={activeFromObjectId}\n                        currentFloorIndex={currentFloorIndex}\n                        onPointerEnter={onPointerEnter}\n                        onPointerLeave={onPointerLeave}\n                        onPointerMove={onPointerMove}\n                        onClick={onClick}\n                        handleChangeFloor={handleFloorChange}\n                        amenityTargetType={amenityTargetType}\n                        escalatorNodes={meshFloors.escalator_nodes}\n                        zoom={zoom}\n                        handleCameraLength={handleCameraLength}\n                        config={config}\n                        ref={floorsMapRef}\n                    />\n                </Canvas>\n                <div ref={labelRef}\n                    style={{\n                        position: 'absolute',\n                        padding: 10,\n                        background: '#ffffff',\n                        fontWeight: 600,\n                        color: '#000000',\n                        fontSize: 16,\n                        display: currentHoveredObject ? 'block' : 'none',\n                        top: 300,\n                        left: 400,\n                        opacity: .8,\n                    }}\n                >\n                    <div>\n                        {currentHoveredObject && currentHoveredObject.userData.storeName}\n                    </div>\n                </div>\n\n            </div>\n            \n            <RetailerInfoModal\n                amenity={selectedAmenityType}\n                show={showRetailerInfo}\n                onHide={() => setShowRetailerInfo(false)}\n                centerId={params.config.CENTER_ID? params.config.CENTER_ID.toString() : ''}\n                mapObjectName={selectedActiveObjectId}\n                retailers={data?.retailers}\n                mapObjs={data?.map_objs}\n                webApiURI={params.webApiURI?? ''}\n                onClick={handleRetailerInfoOnClick}\n            />\n        </>\n    )\n});\n\n\n\nexport default SceneComponent;\n","import {useCallback, useEffect, useState} from \"react\";\nimport {IRetailer, MapIt2Response, Settings} from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\n\ninterface useMapIt2DataProps {\n    CENTER_ID: string;\n    mapitData?: MapIt2Response;\n    webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n    data: MapIt2Response | null,\n    refreshData: () => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps) : Mapit2DataReturn {\n    const [data, setData] = useState<MapIt2Response|null>(null);\n\n    if (!CENTER_ID && !mapitData) {\n        console.error('useMapit2Data requires either CENTER_ID or mapitData');\n    }\n\n    const getData = useCallback(() => {\n        let apiURI = webApiURI || null;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            const retailersApiUri = `${apiURI}/v1/retailers/?limit=1000&page=1`;\n            const mapObjsApiUri = `${apiURI}/v1/mapit2/data/`;\n            const floorsApiUri = `${apiURI}/v1/mapit2/floors/?limit=1000&offset=0`;\n            const kioskApiUri = `${apiURI}/v1/display_kiosks/?limit=1000&page=1`;\n            const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n\n            const retailersPromise = fetch(retailersApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => {console.error(e)})\n\n            const mapObjsPromise = fetch(mapObjsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => {console.error(e)})\n\n            const floorsPromise = fetch(floorsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            })\n            .then(data => {\n                if (!data\n                    || !data.items\n                    || (data.items && !data.items.length)) {\n                    console.error('Empty floors data from server');\n                }\n                return data;\n            }).catch(e => {console.error(e)})\n\n            const kiosksPromise = fetch(kioskApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => {console.error(e)})\n\n            const settingsPromise = fetch(settingsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => {console.error(e)})\n\n            Promise.all<Array<any>>([\n                retailersPromise,\n                mapObjsPromise,\n                floorsPromise,\n                kiosksPromise,\n                settingsPromise,\n            ]).then(data => {\n                if (data.length >= 5) {\n                    const responseData: Partial<MapIt2Response> = {};\n                    responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n                        id: item.id,\n                        retail_name: item.name,\n                        slug: item.slug,\n                        location: item.location,\n                        retailer_phone: '',\n                        retailer_description: '',\n                        logo: item.media.url,\n                        map_obj_name: '',\n                    }));\n                    responseData.map_objs = [...data[1].items].map(item => ({\n                        ...item,\n                        offsetX: item.offset_x,\n                        offsetY: item.offset_y,\n                    }));\n                    responseData.floors = [...data[2].items];\n                    responseData.camera_controls_states = {...demoData.camera_controls_states};\n                    responseData.settings = {\n                        ...demoData.settings as Settings,\n                        KIOSK_SIZE: \"1\",\n                    }\n                    responseData.kiosks = [];\n                    responseData.amenities = {...demoData.amenities};\n                    responseData.kiosks = [...data[3].items];\n                    const settings: Settings = data[4]?.settings? data[4].settings : {\n                        \"STYLE\": \"3D\",\n                        \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n                        \"ACCENT_COLOR\": \"4EA5FF\",\n                        \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n                        \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n                        \"WALL_THICKNESS\": \"0.6\",\n                        \"WALL_COLOR\": \"888888\",\n                        \"BOUNDARY_THICKNESS\": \"0.8\",\n                        \"BOUNDARY_COLOR\": \"888888\",\n                        \"BASE_COLOR\": \"25292B\",\n                        \"STORE_TEXT_COLOR\": \"222222\",\n                        \"OVERLAY_COLOR\": \"FFFFFF\",\n                        \"OVERLAY_OPACITY\": \"0.7\",\n                        \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n                        \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\"\n                    };\n                    responseData.settings = settings;\n\n                    setData({...responseData as MapIt2Response})\n                }\n            })\n        }\n    }, [CENTER_ID, webApiURI])\n\n    useEffect(() => {\n        if (mapitData) {\n            setData(mapitData);\n            return;\n        }\n\n        if (!CENTER_ID) {\n            return;\n        }\n\n        getData();\n\n    }, [CENTER_ID, mapitData, getData]);\n\n    const refreshData = () => getData();\n    return {data, refreshData};\n}","import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport styles from './MapBox.module.css';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport {isMapIt2Response, MapIt2Response, MapObj, MapObjToSave} from \"./mapitApiTypes\";\nimport {IJsonConfig, TMapMode, TMapSettingsProps, TRoles} from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n}\nexport interface IAppProps {\n    mapitData?: unknown;\n    config: Partial<IJsonConfig>;\n    stats?: boolean;\n    onSettingsLoading?: (settings: MapIt2Response) => void;\n    webApiURI?: string;\n    mediaStorageURI?: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n    onResetData?: (data: MapObj) => void;\n}\n\n\nfunction MapBox({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, onResetData }: IAppProps) {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <MeshObjectContextProvider>\n      <div className={`${styles['mapbox-component']} ${config.ROLE !== 'PORTAL'? styles.view : ''}`}>\n        <SceneComponent\n          ref={refObj}\n          setSelectedActiveObjectId={setSelectedActiveObjectId}\n          selectedActiveObjectId={selectedActiveObjectId}\n          mapitData={mapData}\n          config={config}\n          onSettingsLoading={onSettingsLoading}\n          webApiURI={webApiURI}\n          mediaStorageURI={mediaStorageURI}\n          onSubmit={handleOnSubmit}\n          onResetData={onResetData}\n        />\n        <div className={styles.hide}>\n          <div id=\"map-special-svg-kiosk\">\n            <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n              <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-atm\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n              <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-management\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n              <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-playarea\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n              <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n              <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-family-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n              <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-elevator\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n              <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-security\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n              <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-dog-poop-station\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n              <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n              <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n              <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n              <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n              <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </MeshObjectContextProvider>\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n    id: string;\n    index?: string;\n    retail_name: string;\n    slug: string;\n    location: string;\n    retailer_phone: string;\n    retailer_description: string;\n    logo: string;\n    map_obj_name: string;\n};\n\nexport type MapObj = {\n    id: string | number;\n    center_id: string;\n    retailer_id: string;\n    kiosk_id: string | null;\n    map_obj_name: string;\n    obj_type: string;\n    layer_type: string;\n    value: string;\n    custom_text: string;\n    custom_image: string;\n    hover_text: string;\n    bg_color: string;\n    transparent: string | number;\n    text_color: string;\n    size: string;\n    rotate: string;\n    offsetX: string;\n    offsetY: string;\n    goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<MapObj, 'goToFloor'>;\n\nexport type Floor = {\n    id: string;\n    svg_map?: string;\n    objsGroup?: Group;\n    interactiveObjs?: any[];\n    escalatorsObjs?: any[];\n    escalatorsNodes?: Record<any, any>;\n    escalatorMeshes?: any[];\n    route_points?: IRoutePoint[];\n    route_tube?: any;\n    route_texture?: Texture | null | undefined;\n    routeMeshes?: any[];\n    route_active?: boolean;\n    center_id?: string;\n    title: string;\n    svg?: string;\n    status?: string;\n    created_at?: string;\n};\n\nexport type CameraControlsState = {\n    camera: null;\n    controls: null;\n};\n\nexport type Settings = {\n    STYLE: '2D' | '3D',\n    MAP_BACKGROUND_COLOR: string;\n    ACCENT_COLOR: string;\n    STORE_DEFAULT_COLOR: string;\n    BIG_STORE_DEFAULT_COLOR: string;\n    WALL_THICKNESS: string;\n    WALL_COLOR: string;\n    BOUNDARY_THICKNESS: string;\n    BOUNDARY_COLOR: string;\n    BASE_COLOR: string;\n    STORE_TEXT_COLOR: string;\n    STORE_HEIGHT: string;\n    OVERLAY_COLOR: string;\n    OVERLAY_OPACITY: string;\n    AMENITIES_NAV_BG_COLOR: string;\n    AMENITIES_NAV_ICON_COLOR: string;\n    KIOSK_SIZE: string;\n};\n\nexport type Kiosk = {\n    id: string;\n    title: string;\n    map_obj_name: string;\n};\n\nexport type Amenity = {\n    name: string;\n    image: string;\n};\n\nexport type MapIt2Response = {\n    retailers: IRetailer[];\n    map_objs: MapObj[];\n    floors: Floor[];\n    camera_controls_states: {\n        display_app: CameraControlsState;\n        desktop: CameraControlsState;\n        tablet: CameraControlsState;\n        mobile: CameraControlsState;\n    };\n    settings: Settings;\n    kiosks: Kiosk[];\n    amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n    name: string;\n    node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const response = obj as Record<string, unknown>;\n\n    return (\n        Array.isArray(response.retailers) &&\n        Array.isArray(response.map_objs) &&\n        Array.isArray(response.floors) &&\n        typeof response.camera_controls_states === 'object' &&\n        response.camera_controls_states !== null &&\n        typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n        typeof response.settings === 'object' &&\n        Array.isArray(response.kiosks) &&\n        typeof response.amenities === 'object'\n    );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","_path$userData","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","_floors$floor_index$r","push","Vector3","node2_name","exists2","_floors$floor_index$r2","addNode","_extends","addLink","weight","distanceTo","allIndexedMapObjects","allIndexedRetailers","createGraph","hex_to_color","hex_code","Color","getFormatedColor","replace","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","role","_allIndexedMapObjects","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","type","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","_mesh$mesh_type","layer_type","retailer_id","retail_name","custom_text","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","value","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","_floor$objsGroup","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","find","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","_floors$allNodesFloor","escalator_mesh","goToFloor","_floors$allNodesFloor2","direction","floor_route","routePath","create_route_path","_floors$floor_index","_floors$floor_index2","routeMeshes","create_route_paths","_floors$floor_index$o","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","loadFloors","results","GeometriesAndMaterials","result","meshParams","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","Map","point","origin_point","target_direction","set","storeIntersects","intersectObjects","object","escalatorIntersects","escalatorNodes","assign_route_nodes_to_stores","size","has","get","_floors$i$escalatorsN","_floors$escalatorsNod","_floors$i$escalatorsN2","_floors$escalatorsNod2","nodeIdFrom","nodeIdTo","linkFloorEscalators","graph","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","getImageLogo","new_object_id","mesh_center_point","handleAsync","logoMesh","storeLogo","get_store_name_logo_geo","textLogoNamePrefix","myFont","boundingBox","computeBoundingBox","getCenter","getSize","text","STORE_TEXT_COLOR","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minDistance","maxDistance","animSpeed","KIOSK_SIZE","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","floorsData","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","setMeshParams","useState","textParams","setTextParams","storeLogos","setStoreLogos","setPathFinderGraph","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","useEffect","init","response","kiosks","mapObj","map_objs","item","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","camera_controls_states","CONTROLS","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","values","removeFromParent","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","_mesh$geometry$index","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","_jsx","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","_jsxs","children","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","uuid","htmlContent","Html","_params$geometry$boun","_params$goToFloor","_params$goToFloor2","boundingSphere","styles","escalator_elems","display","className","element","label","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currentFloorIndex","currKioskObj","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","route","kiosk_obj_name","amenity_type","_to_obj_name","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","targetMesh","selectedFloorMeshParams","meshes","currentActiveObject","focus","aspect","cameraDistance","min","setLength","fromPosition","fromTarget","animationStartTime","duration","zoomStep","onCameraMove","vector","_cameraFocus$current","_cameraFocus$current2","animationTime","animationProgress","lerpVectors","resetCamera","fullReset","useImperativeHandle","rotation","_Fragment","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","isMobile","enableRotate","FloorButton","isActive","control_btn","FloorSelector","selectedFloorIndex","handleFloorChange","floorButtons","btn_group","ATM","xmlns","viewBox","d","transform","fill","DogPoopStation","cx","cy","rx","ry","Elevator","FamilyRestroom","Management","PlayArea","Restroom","Security","AmenityIcon","UIComponent","amenitiesList","zoomIn","zoomOut","reset","clearRoute","handleAmenityClick","mapObjs","extractValues","filter","preventDefault","Function","hide","backgroundColor","MapCenterMarker","koef","blink","kioskElementRef","React","kioskElement","svgOrigin","svgClone","cloneNode","appendChild","removeChild","MeshObjectContext","createContext","MeshObjectContextProvider","MeshObject","SetMeshObject","Provider","useMeshObjectContext","context","useContext","Error","defaultData","isError","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","MapboxForm","_data$retailers","_data$retailers2","_formData$kiosk_id","_data$kiosks","_Object$keys","setData","selectedId","onResetData","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","formData","setFormData","setRotation","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","setIsLoading","fetchRetailers","apiURI","limit","page","search","uri","fetch","headers","toString","then","ok","json","status","statusText","url","catch","useGetRetailers","handleChangeTab","k","updateData","retailIndex","findIndex","makeTextGeometry","_context$MeshObject","makeImage","HTMLImageElement","changeValue","_context$MeshObject4","_obj$object_id","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadOptions","inputValue","callback","noOptionsMessage","placeholder","location","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","Select","_context$MeshObject2","disabled","hidden","_context$MeshObject3","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","ArrowClockwise","htmlFor","handleOnSubmit","onSubmit","handleRotateByFixedAngle","RetailerInfoList","isAmenity","_filterRetailers","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","selected","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","slug","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","imageUrl","SceneComponent","_config$DEFAULT_SELEC","_params$webApiURI","refreshData","mapitData","getData","mapObjsApiUri","floorsApiUri","kioskApiUri","settingsApiUri","retailersPromise","mapObjsPromise","floorsPromise","kiosksPromise","settingsPromise","Promise","all","_data$","responseData","offset_x","offset_y","demoData","useMapit2Data","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","cameraLength","setCameraLength","statsParentRef","floorsMapRef","labelRef","currentHoveredObject","setCurrentHoveredObject","meshObjectContext","showRetailerInfo","setShowRetailerInfo","onSettingsLoading","getHexString","activeFromObjectId","getMapitData","body","cursor","currKioskFloorIndex","kioskError","kioskMapObjName","currKioskMeshParams","flat","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","currKioskLogo","mapData","Number","handleMeshObjectContext","exportData","_meshFloors$textParam","_meshFloors$storeLogo","logoParams","stopPropagation","targetId","messageStyle","top","left","meshFloorsChecked","handleChangeMapitData","newData","itemIndex","Alert","getStyle","resetHandle","Canvas","Stats","stats","parent","intensity","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","MapBox","refObj","setMapData","display_app","desktop","tablet","mobile","isMapIt2Response","view"],"mappings":"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"}