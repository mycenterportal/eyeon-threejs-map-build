{"version":3,"file":"index.umd.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/contexts/MapBoxContextProvider.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/services/retailersApi.tsx","../src/Hooks/useAllRetailers.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/MapboxForm.tsx","../src/components/MapboxForm/hooks/useRetailersOptions.ts","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/store.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type { Vector2 } from \"three\";\nimport { IFloorData } from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n  return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string, boolean] {\n  let exists = false;\n  let node_name: string = '-name-not-found-';\n  const currentFloor = floors[floor_index];\n  if (currentFloor.route_points !== undefined) {\n    for (let i = 0; i < currentFloor.route_points.length; i++) {\n      if (vertex.x === currentFloor.route_points[i].node.x && vertex.y === currentFloor.route_points[i].node.y) {\n        exists = true;\n        node_name = currentFloor.route_points[i].name;\n        break;\n      }\n    }\n    if (!exists) {\n      node_name = next_node_name(node_count);\n      // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n  }\n  return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport { Graph } from \"ngraph.graph\";\nimport { Color, Vector2, Vector3 } from \"three\";\nimport { get_node_name } from \"./nodesUtils\";\nimport { MeshType } from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n  const consolePrefix = 'MeshParams';\n  let mesh_type: MeshType = null;\n  var layer_color: Color | string = path.color.clone();\n  var extrude = 0;\n  var z_index = 0;\n  var mesh_visible = true;\n  var mesh_draw = true;\n  var mesh_transparent = false;\n  var line_thickness = config.WALL_THICKNESS;\n  var interactiveMesh = true;\n  var layer_name = path.userData?.node.id;\n  if (layer_name !== undefined) {\n    if (layer_name.startsWith('boundary')) {\n      mesh_type = 'boundary';\n      layer_color = config.BOUNDARY_COLOR;\n      line_thickness = config.BOUNDARY_THICKNESS;\n      if (config.STYLE === '3D') {\n        extrude = 9;\n      }\n    } else if (layer_name.startsWith('wall')) {\n      mesh_type = 'wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 8.5;\n      }\n    } else if (layer_name.startsWith('outer-wall')) {\n      mesh_type = 'outer-wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        mesh_draw = false;\n      }\n    } else if (layer_name.startsWith('building-base')) {\n      mesh_type = 'building-base';\n      layer_color = config.BUILDING_BASE_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 12;\n        z_index = -12;\n      }\n    } else if (layer_name.startsWith('base')) {\n      mesh_type = 'base';\n      layer_color = config.BASE_COLOR;\n    } else if (layer_name.startsWith('store')) {\n      mesh_type = 'store';\n      layer_color = config.STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = parseInt(config.STORE_HEIGHT);\n      }\n      if (layer_name.startsWith('store-underlay')) {\n        interactiveMesh = false;\n      }\n    } else if (layer_name.startsWith('big-store')) {\n      mesh_type = 'big-store';\n      layer_color = config.BIG_STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 16;\n      }\n    } else if (layer_name.startsWith('route-path')) {\n      mesh_type = 'route-path';\n      mesh_draw = false;\n      path.subPaths.forEach(subPath => {\n        if (subPath.curves.length === 0) {\n          console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n        }\n\n        subPath.curves.forEach(curve => {\n          //@ts-ignore\n          const v1: Vector2 = curve.v1;\n          //@ts-ignore\n          const v2: Vector2 = curve.v2;\n\n          const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n          if (!exists1) {\n            floors[floor_index].route_points?.push({\n              name: node1_name,\n              node: new Vector3(v1.x, v1.y, 1)\n            });\n            allNodesFloor[node1_name] = floor_index;\n          }\n          const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n          if (!exists2) {\n            floors[floor_index].route_points?.push({\n              name: node2_name,\n              node: new Vector3(v2.x, v2.y, 1)\n            });\n            allNodesFloor[node2_name] = floor_index;\n          }\n          pathFinderGraph.addNode(node1_name, { ...v1 });\n          pathFinderGraph.addNode(node2_name, { ...v2 });\n\n          // pathFinderGraph.addLink(node1_name, node2_name);\n          pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n          pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n        });\n      });\n    } else if (layer_name.startsWith('escalator-')) {\n      mesh_type = 'escalator';\n      mesh_visible = false;\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('kiosk-')) {\n      mesh_type = 'kiosk';\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('amenity-')) {\n      mesh_type = 'amenity';\n      mesh_transparent = true;\n      z_index = 1;\n    } else if (layer_name.startsWith('overlay')) {\n      mesh_type = 'overlay';\n    } else if (layer_name.startsWith('special-shape')) {\n      mesh_type = 'special-shape';\n    } else {\n      extrude = 1;\n    }\n  } else {\n    console.warn(consolePrefix + 'Layer name is undefined, path', path)\n  }\n\n\n  /*console.debug({\n      mesh_type,\n      layer_color,\n      extrude,\n      z_index,\n      mesh_visible,\n      mesh_draw,\n      mesh_transparent,\n      line_thickness,\n      interactiveMesh,\n      path,\n      layer_name,\n  })*/\n  return {\n    mesh_type,\n    layer_color,\n    extrude,\n    z_index,\n    mesh_visible,\n    mesh_draw,\n    mesh_transparent,\n    line_thickness,\n    interactiveMesh,\n    path,\n    layer_name,\n  }\n}","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import { IAmenitiesInteractiveList } from \"src/types\";\n\nexport const amenitiesList: IAmenitiesInteractiveList[] = [\n  {\n    name: \"ATM\",\n    type: \"atm\",\n    icon: \"atm\",\n  },\n  {\n    name: \"Management\",\n    type: \"management\",\n    icon: \"management\",\n  },\n  {\n    name: \"Kids Area\",\n    type: \"playarea\",\n    icon: \"playarea\",\n  },\n  {\n    name: \"Restroom\",\n    type: \"restroom\",\n    icon: \"restroom\",\n  },\n  {\n    name: \"Family Restroom\",\n    type: \"family-restroom\",\n    icon: \"family-restroom\",\n  },\n  {\n    name: \"Elevator\",\n    type: \"elevator\",\n    icon: \"elevator\",\n  },\n  {\n    name: \"Security\",\n    type: \"security\",\n    icon: \"security\",\n  },\n]\n\n","import { Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry } from \"three\";\nimport { getWallShape } from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\n// import {allMapObjects} from \"../../globals\";\nimport { IConfig, IExtMesh, IMeshValues, TRoles } from \"../../types\";\nimport { hex_to_color } from \"../../helpers/misc\";\n\nimport { IRetailer, MapObj } from \"../../mapitApiTypes\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n  'route-path': 0,\n  'escalator': 0,\n  'underlay': 0,\n  'overlay': 1,\n  'building-base': 1,\n  'base': 2,\n  'store': 3,\n  'big-store': 4,\n  'kiosk': 5,\n  'wall': 6,\n  'outer-wall': 7,\n  'boundary': 8,\n  'amenity': 9,\n  'layer-image': 10,\n  'layer-text': 11,\n  'route-tube': 12,\n  'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n  if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n    return renderOrders[mesh_type];\n  }\n  // console.warn(`Unknown mesh type: ${mesh_type}`)\n  return 0;\n}\n\nexport const getMaterial = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  layer_color: Color | string,\n  mesh_transparent: boolean,\n  allIndexedMapObjects: Record<string, MapObj>,\n) => {\n  const material_settings = {\n    color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n    side: DoubleSide,\n    transparent: false,\n    depthWrite: true,\n    depthTest: true,\n    opacity: 1,\n  }\n  if (config.STYLE === '2D' || mesh_type === 'base' || mesh_type == null) {\n    if (mesh_type !== 'boundary') {\n      material_settings.depthWrite = false;\n      material_settings.depthTest = false;\n    }\n  }\n  if (mesh_type === 'overlay') {\n    material_settings.color = config.OVERLAY_COLOR;\n    material_settings.opacity = config.OVERLAY_OPACITY;\n  }\n  if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE !== 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent === 1) {\n    material_settings.opacity = 0;\n  }\n  var material = new MeshLambertMaterial(material_settings);\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    material.colorDefault = material.color;\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color !== '') {\n      material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n      //@ts-ignore\n      material.colorDefault = material.color;\n    }\n    //@ts-ignore\n    material.active = false;\n  }\n  if (config.ROLE !== 'PORTAL' && mesh_transparent) {\n    material.opacity = 0;\n    material.transparent = true;\n  }\n\n  material.transparent = material.opacity !== 1;\n\n  return material;\n}\n\nexport const getGeometry = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  extrude: number,\n  line_thickness: number,\n  path: any,\n) => {\n  const consolePrefix = 'MaterialAndGeometry';\n\n  let shapes = path.toShapes(true);\n\n  // shapes.forEach((shape, index) => {\n  let extrude_meshes;\n  if (config.STYLE === '2D') {\n    extrude_meshes = ['building-base'];\n  } else {\n    extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n  }\n\n  let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n  var geometry;\n  if (mesh_type && extrude_meshes.includes(mesh_type)) {\n    geometry = new ExtrudeGeometry(shapes, {\n      depth: -extrude,\n      bevelEnabled: false,\n    });\n  } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n    //@ts-ignore\n    let wall_geometries = [];\n    //@ts-ignore\n    path.subPaths.forEach(subPath => {\n      //@ts-ignore\n      subPath.curves.forEach(curve => {\n        if (curve.type === 'LineCurve') {\n          let shape_extend = 0;\n          if (mesh_type === 'boundary') {\n            shape_extend = 1;\n          } else if (mesh_type === 'wall') {\n            // shape_extend = 1 / 3;\n          }\n          let shape1 = getWallShape(curve, line_thickness, shape_extend);\n          let wall_geometry = new ExtrudeGeometry(shape1, {\n            depth: -extrude,\n            bevelEnabled: false,\n          });\n          wall_geometries.push(wall_geometry);\n        } else {\n          console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n        }\n      });\n    });\n\n    if (wall_geometries.length === 1) {\n      //@ts-ignore\n      geometry = wall_geometries[0];\n    } else if (wall_geometries.length > 1) {\n      //@ts-ignore\n      geometry = mergeGeometries(wall_geometries);\n    } else {\n      console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n    }\n  } else {\n    geometry = new ShapeGeometry(shapes);\n    try {\n      //@ts-ignore\n      if (geometry.attributes.position.count === 0) {\n        console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n      }\n    } catch (e: any) {\n      console.error(e.message);\n    }\n  }\n\n  return geometry;\n}\n\nexport const getMaterialAndGeometry = (allMapObjects: string[], config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n\n  const material = getMaterial(\n    config,\n    mesh_type,\n    layer_name,\n    layer_color,\n    mesh_transparent,\n    allIndexedMapObjects\n  );\n\n  const geometry = getGeometry(\n    config,\n    mesh_type,\n    layer_name,\n    extrude,\n    line_thickness,\n    path\n  );\n\n  const mesh = new Mesh(geometry, material) as IExtMesh;\n  mesh.object_id = layer_name;\n  mesh.mesh_type = mesh_type;\n  mesh.floor_index = floor_index;\n  mesh.visible = mesh_visible;\n  mesh.position.z = z_index;\n  let storeName = '';\n  if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n    if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type === 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n      storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].custom_text;\n      if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n        storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n      }\n    } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].value;\n      if (storeName.length > 1) {\n        const amenity = amenitiesList.find(item => item.type === storeName)\n        if (amenity) {\n          storeName = amenity.name;\n        }\n      }\n    }\n  }\n  mesh.userData.storeName = storeName;\n  if (config.STYLE === '2D') {\n    mesh.renderOrder = getRenderOrder(mesh_type);\n    if (layer_name && layer_name.includes('underlay')) {\n      mesh.renderOrder = getRenderOrder('underlay');\n    }\n  }\n\n  floors[floor_index].objsGroup.add(mesh);\n\n  if (mesh_type === 'escalator') {\n    floors[floor_index].escalatorsNodes[layer_name] = null;\n    floors[floor_index].escalatorsObjs.push(mesh);\n    mesh.escalator_id = floor_index + '-' + layer_name;\n  }\n\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    mesh.route_node_id = null;\n\n    // add floor_index to the kiosks\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'kiosk') {\n      // var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n      /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n          ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n      }*/\n    }\n\n    if (config.ROLE === 'PORTAL') {\n      allMapObjects.push(layer_name);\n    }\n    if (\n      (config.ROLE !== 'PORTAL' && mesh_type === 'kiosk') ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'amenity' && allIndexedMapObjects[layer_name].value !== '') ||\n      (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n      (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type ?? ''))\n    ) {\n      // if (interactiveMesh) {\n      floors[floor_index].interactiveObjs.push(mesh);\n      // }\n    } else if (\n      (config.ROLE === 'PORTAL')\n    ) {\n      floors[floor_index].interactiveObjs.push(mesh);\n    }\n  }\n\n  // if (['store', 'big-store'].includes(mesh_type as string)) {\n  //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n  // }\n\n  return {\n    mesh,\n    geometry,\n    material,\n    object_id: layer_name,\n    mesh_type,\n    floor_index,\n    visible: mesh_visible,\n    renderOrder: mesh.renderOrder,\n  }\n  // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n  BufferGeometry,\n  CanvasTexture,\n  CurvePath,\n  DoubleSide,\n  LineCurve3,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Raycaster,\n  Scene,\n  TubeGeometry,\n  Vector3,\n} from \"three\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\n// import {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport { PathFinder } from \"ngraph.path\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\nimport { IExtMesh, IFloorData } from \"../types\";\nimport { Graph, Node } from \"ngraph.graph\";\n// import { allNodesFloor } from \"src/globals\";\n\nconst consolePrefix = 'ROUTE: ';\n\n\n\nexport function delete_route_path(floors: IFloorData[]) {\n  for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n    const floor = floors[floor_index];\n    floor.route_active = false;\n\n    if (floor.route_tube != null) {\n      floor.route_tube.geometry.dispose();\n      //@ts-ignore\n      floor.route_tube.material.dispose();\n      floor.objsGroup?.remove(floor.route_tube);\n    }\n\n    floor.route_tube = undefined;\n    floor.route_texture = null;\n    floor.escalatorMeshes = [];\n  }\n}\n\nexport function create_route(allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n  if (from_mesh_object_id === to_mesh_object_id) {\n    return [];\n  }\n  const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n  if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n  return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[], floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n  // TODO: remove scene dependency and scene.getObjectByProperty\n  const routePaths = [] as any[];\n  delete_route_path(floors);\n  let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n  let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n  let from_node_name = from_obj.route_node_id;\n  let to_node_name = to_obj.route_node_id;\n\n  // console.log({\n  //     from_mesh_object_id,\n  //     to_mesh_object_id,\n  //     from_obj,\n  //     to_obj,\n  //     from_node_name,\n  //     to_node_name,\n  // })\n\n  // from_node_name = 'node-147';\n  // to_node_name = 'node-221';\n\n  if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n  if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n  if (!from_node_name || !to_node_name) return routePaths;\n\n  const from_route_floor_index = from_obj.floor_index;\n  const to_route_floor_index = to_obj.floor_index;\n\n  const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n    distance: function (fromNode, toNode, link) {\n      if (link.data) return link.data.weight;\n      return false;\n    },\n    //@ts-ignore\n    debug: true,\n  });\n  const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n  const routeNodesEsclators = [];\n  if (!routeNodes) {\n    return [];\n  }\n  const floor_routes = [];\n\n  for (let index = 0; index < routeNodes.length; index++) {\n    const routeNode = routeNodes[index];\n    if (floor_routes[allNodesFloor[routeNode.id]]) {\n      floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n    } else {\n      floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n    }\n\n    if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n      // don't consider these middle escalators nodes\n    } else {\n      routeNodesEsclators.push(routeNode);\n    }\n  }\n  for (let index = 0; index < routeNodesEsclators.length; index++) {\n    const routeNode = routeNodesEsclators[index];\n    if (\n      allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n      && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n    ) {\n      const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n      const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n\n      let goToFloor = null;\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index + 1].id],\n          direction: 'Next',\n        };\n      }\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index - 1].id],\n          direction: 'Previous',\n        };\n      }\n\n\n      if (goToFloor && escalator_mesh) {\n        escalator_mesh.goToFloor = goToFloor;\n        const escalator_clone = escalator_mesh.clone();\n        escalator_clone.goToFloor = goToFloor;\n        //@ts-ignore\n        floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_clone);\n      }\n    }\n\n  }\n  for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n    const floor_route = floor_routes[floor_index];\n    if (floor_route && floor_route.length > 1) {\n      const routePath = create_route_path(floor_route, floor_index, floors, style);\n      routePaths[floor_index] = routePath;\n\n      floors[floor_index].route_active = true;\n      floors[floor_index].routeMeshes = [routePath];\n      if (floor_index === from_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(from_obj);\n      }\n      if (floor_index === to_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(to_obj);\n\n      }\n    }\n  }\n\n  // setTimeout(function () {\n  //     //TODO openFloorMap functionality\n  //     // openFloorMap(from_route_floor_index);\n  // });\n\n  return routePaths;\n}\n\nfunction create_route_path(\n  routeNodes: Node<any>[],\n  floor_index: number,\n  floors: IFloorData[],\n  style = '2D',// config.STYLE\n) {\n  let distance = 0;\n  let route_path = new CurvePath<Vector3>();\n  for (let i = 1; i < routeNodes.length; i++) {\n    let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n    let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n    route_path.add(new LineCurve3(from_node, to_node));\n    distance += from_node.distanceTo(to_node);\n  };\n  var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n  //@ts-ignore\n  geometry = new BufferGeometry().copy(geometry);\n  var material = new MeshBasicMaterial({\n    map: get_route_texture(distance, floor_index, floors),\n    transparent: true,\n    side: DoubleSide,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  let route_tube = new Mesh(geometry, material) as IExtMesh;\n  if (style === '2D') {\n    route_tube.position.z = -10;\n    route_tube.scale.z = 0.1;\n  }\n  route_tube.position.z = 0;\n  route_tube.renderOrder = getRenderOrder('route-tube');\n  route_tube.mesh_type = 'route-tube';\n  //@ts-ignore\n  route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n  // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n  floors[floor_index].route_tube = route_tube;\n  floors[floor_index].objsGroup?.add(route_tube);\n\n  return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n  return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n  let distance = 0;\n\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n\n  for (let i = 1; i < routeNodes.length; i++) {\n    let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n    distance += link?.data.weight || 0;\n  };\n  return distance;\n}\n\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n  let canvas = document.createElement(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    ctx.canvas.width = distance;\n    ctx.canvas.height = 80;\n\n    ctx.fillStyle = \"#4ea5ff\";\n    ctx.fillRect(0, 0, distance, 80);\n\n    let grd_width = 0.1 * distance;\n    const min_grd_width = 60;\n    const max_grd_width = 120;\n    if (grd_width < min_grd_width) grd_width = min_grd_width;\n    if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n    let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n    grd.addColorStop(0, \"#4ea5ff\");\n    grd.addColorStop(0.4, \"white\");\n    grd.addColorStop(0.6, \"white\");\n    grd.addColorStop(1, \"#4ea5ff\");\n\n    ctx.fillStyle = grd;\n    ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n    floors[floor_index].route_texture = route_texture;\n\n    return route_texture;\n  } else {\n    return undefined;\n  }\n}\n\n//TODO\n\nexport function assign_route_nodes_to_stores(\n  floor_index: number,\n  floors: IFloorData[],\n  allIndexedMapObjects: Record<string, MapObj>,\n  allIndexedRetailers: Record<string, IRetailer>,\n  allNodesFloor: Record<string, number>,\n  escalator_nodes: string[],\n  find_store_node_raycaster: Raycaster,\n  role: string, //config.ROLE\n) {\n  const result = new Map();\n  const currentFloor = floors[floor_index];\n  if (currentFloor && currentFloor.route_points) {\n    currentFloor.route_points.forEach(point => {\n      let origin_point = new Vector3(point.node.x, point.node.y, -10);\n      let target_direction = new Vector3(0, 0, 1);\n      find_store_node_raycaster.set(origin_point, target_direction);\n      //@ts-ignore\n      var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n      if (storeIntersects.length) {\n        //@ts-ignore\n        storeIntersects[0].object.route_node_id = point.name;\n        //@ts-ignore\n        result.set(storeIntersects[0].object.object_id, point.name);\n        if (false && role !== 'PORTAL') {\n          //@ts-ignore\n          var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n          if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n            // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n          }\n        }\n      }\n\n      var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n      if (escalatorIntersects.length) {\n        const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n        let escalator_obj_id = obj.object_id;\n        const escalatorNodes = floors[floor_index].escalatorsNodes;\n        if (escalatorNodes) {\n          escalatorNodes[escalator_obj_id as string] = point.name;\n          allNodesFloor[point.name] = floor_index;\n          escalator_nodes.push(point.name);\n        }\n      }\n    });\n  }\n  return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n  // console.log('linkFloorEscalators', floors)\n  if (floors.length > 1) {\n    for (let i = 0; i < (floors.length - 1); i++) {\n      // console.log('floors[i]',i, floors[i])\n      const floor_escalators = floors[i].escalatorsNodes;\n      // console.log('floor_escalators', floor_escalators);\n      Object.keys(floor_escalators as object).forEach(escalator => {\n        if (floors[i].escalatorsNodes?.[escalator] != null && floors[i + 1].escalatorsNodes?.[escalator] != null) {\n          // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n          const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n          const nodeIdTo = floors[i + 1].escalatorsNodes?.[escalator];\n          if (nodeIdFrom && nodeIdTo) {\n            pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n            pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n          }\n        } else {\n          // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n        }\n      })\n    }\n  }\n}\n\nexport function make_amenity_route(allNodesFloor: Record<string, number>, kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string): Mesh[] {\n  let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n  // if (!kiosk_obj) return [];\n  let kiosk_node_name = kiosk_obj ? kiosk_obj.route_node_id : '';\n\n  var to_obj_name = null;\n\n  var shortest_distance = 9999;\n  // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n  const map_objs: string[] = [];\n  for (let key in allIndexedMapObjects) {\n    const mapObject = allIndexedMapObjects[key];\n    if (\n      mapObject.layer_type === 'amenity'\n      && mapObject.obj_type === 'special'\n      && mapObject.value === amenity_type\n    ) {\n      map_objs.push(key);\n    }\n  }\n  map_objs.forEach((amenity_obj_name: string) => {\n    let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n      distance: function (fromNode, toNode, link) {\n        if (link.data) return link.data.weight;\n        return false;\n      },\n      //@ts-ignore\n      debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n      var amenity_node_name = amenity_obj.route_node_id;\n      try {\n        var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n        if (route_distance && route_distance < shortest_distance) {\n          shortest_distance = route_distance;\n          to_obj_name = amenity_obj_name;\n        }\n      } catch (e: any) {\n        console.warn(`Amenity Path: ${e.message}`);\n      }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n      to_obj_name = amenity_node_name;\n    }\n  });\n  return create_route(allNodesFloor, kiosk_obj_name, to_obj_name ?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import { getMeshParams } from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport { IConfig, IFloorData, IMeshValues, TRoles } from \"src/types\";\n// import {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport { getMaterialAndGeometry } from \"./getMaterialAndGeometry\";\nimport { Raycaster } from \"three\";\nimport { assign_route_nodes_to_stores, linkFloorEscalators } from \"src/helpers/route.helpers\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { Graph } from \"ngraph.graph\";\nimport { EventedType } from \"ngraph.events\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, allMapObjects: string[], allNodesFloor: Record<string, number>, pathFinderGraph: Graph<any, any> & EventedType, floors: IFloorData[], config: IConfig, results: SVGResult[], role?: TRoles) {\n  const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n  const escalator_nodes: string[] = [];\n  results.forEach((result, floor_index) => {\n    if (result.paths && result.paths.length) {\n      const pathIds = [];\n      for (let i = 0; i < result.paths.length; i++) {\n        pathIds.push(result.paths[i]?.userData?.node.id);\n      }\n      const paths = result.paths;\n      for (let i = 0; i < paths.length; i++) {\n        const {\n          mesh_type,\n          layer_color,\n          extrude,\n          z_index,\n          mesh_visible,\n          mesh_draw,\n          mesh_transparent,\n          line_thickness,\n          path,\n          layer_name,\n        } = getMeshParams(\n          paths[i],\n          paths,\n          floors,\n          floor_index,\n          config,\n          ++node_count,\n          //@ts-ignore\n          allNodesFloor,\n          pathFinderGraph\n        );\n\n        if (mesh_draw) {\n          const meshParams = getMaterialAndGeometry(\n            allMapObjects,\n            config,\n            mesh_type,\n            layer_name,\n            layer_color,\n            mesh_transparent,\n            mesh_visible,\n            z_index,\n            extrude,\n            line_thickness,\n            floors,\n            floor_index,\n            allIndexedMapObjects,\n            allIndexedRetailers,\n            path,\n            role\n          );\n\n          if (layer_name.startsWith('kiosk-')) {\n            if (role === 'PORTAL') {\n              // meshParams.mesh.visible = false;\n              //@ts-ignore\n              // meshParams.mesh.material.visible = false;\n            }\n          }\n\n          if (!GeometriesAndMaterials[floor_index]) {\n            GeometriesAndMaterials[floor_index] = [];\n          }\n\n          GeometriesAndMaterials[floor_index].push(meshParams);\n        }\n      }\n      const findStoreNodeRaycaster = new Raycaster();\n      const routeNodeIds = assign_route_nodes_to_stores(\n        floor_index,\n        floors,\n        allIndexedMapObjects,\n        allIndexedRetailers,\n        allNodesFloor,\n        escalator_nodes,\n        findStoreNodeRaycaster,\n        config.ROLE\n      );\n\n      if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n        for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n          if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n            GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n          }\n        }\n      }\n\n      linkFloorEscalators(floors, pathFinderGraph);\n\n    }\n  })\n\n  return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes };\n}","import { IJsonConfig } from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n  ROLE: 'WEBSITE',\n  DEVICE: 'display_app',\n  CENTER_ID: '',\n  KIOSK: '',\n  STYLE: '3D',\n  DEFAULT_SELECTED_STORE: '',\n  DEBUG: '1',\n\n  MAP_BACKGROUND_COLOR: \"FFFFFF\",\n  ACCENT_COLOR: \"4EA5FF\",\n  STORE_DEFAULT_COLOR: \"E2E2E2\",\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n  WALL_THICKNESS: '0.6',\n  WALL_COLOR: \"888888\",\n  BOUNDARY_THICKNESS: '0.8',\n  BOUNDARY_COLOR: \"888888\",\n  BASE_COLOR: \"25292B\",\n  STORE_TEXT_COLOR: \"222222\",\n  OVERLAY_COLOR: \"FFFFFF\",\n  OVERLAY_OPACITY: '0.7',\n  // AMENITIES_NAV_BG_COLOR: \"000000\",\n  // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  }\n}\n\nexport const defaultVars: IJsonConfig = {\n  MAP_BACKGROUND_COLOR: '',\n  ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n  DEVICE: 'display_app',\n  KIOSK: '',\n  FLOORS: [],\n  KIOSKS: {},\n  CENTER_ID: null,\n  STATS: 'false',\n  STYLE: '3D', // 2D, 3D\n  DEBUG: '0',\n  ACCENT_COLOR: '4EA5FF',\n  STORE_DEFAULT_COLOR: 'E2E2E2',\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n  WALL_THICKNESS: '0.6',\n  BOUNDARY_THICKNESS: '0.8',\n  WALL_COLOR: '888888',\n  BOUNDARY_COLOR: '888888',\n  BASE_COLOR: '25292B',\n  BUILDING_BASE_COLOR: 'DADADA',\n  STORE_TEXT_COLOR: '222222',\n  OVERLAY_COLOR: 'FFFFFF',\n  OVERLAY_OPACITY: '0.7',\n  CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n  ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n  DEFAULT_CAMERA_POSITION: null, // custom default camera position\n  DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n  DEFAULT_SELECTED_STORE: null,\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  },\n  KIOSK_SIZE: '15',\n  ZOOM_STEP: '100',\n  SELECTED_ZOOM_LIMIT: '',\n};","// import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3 } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh } from \"../types\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { hex_to_color } from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n    addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n  }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  //@ts-ignore\n  let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n  if (mesh) {\n    //@ts-ignore\n    add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n  }\n}\n\n\n\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n  if (!Array.isArray(mesh)) {\n    mesh = [mesh];\n  }\n  const box = mesh.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    //@ts-ignore\n    box.union(obj.geometry.boundingBox);\n    return box;\n  }, new Box3());\n  return box;\n}\n\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n  let map_obj = allIndexedMapObjects[object_id];\n\n  if (!map_obj) {\n    map_obj = {\n      offsetX: \"0\",\n      offsetY: \"0\",\n      rotate: \"0\",\n    }\n  }\n\n  let offsetX = parseInt(map_obj.offsetX);\n  let offsetY = parseInt(map_obj.offsetY);\n\n  newMeshPos.z = -mesh_size.z;\n\n  //@ts-ignore\n  newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n  //@ts-ignore\n  newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n  newMesh.scale.y *= -1;\n\n  newMeshPos.x += offsetX;\n  newMeshPos.y += offsetY;\n\n  newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  if (map_obj.obj_type === 'retailer') {\n    if (retailer) {\n      img.src = retailer.logo;\n    } else {\n      console.error('retailer not found');\n      return null;\n    }\n  } else if (map_obj.obj_type === 'special') {\n\n    let svg_image_name = map_obj.value;\n    console.log('svg_image_name', svg_image_name);\n    if (map_obj.layer_type === 'kiosk') svg_image_name = 'kiosk';\n    if (map_obj.layer_type === 'escalator') svg_image_name = 'escalator';\n    if (svg_image_name) {\n      let svg_color = '222222';\n      if (map_obj.text_color != null) {\n        svg_color = map_obj.text_color;\n      }\n\n      const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n      if (!svg_block) {\n        console.error('svg_block not found', svg_image_name);\n        return null;\n      }\n      const svg_element = svg_block.querySelector(\"svg\");\n      if (!svg_element) {\n        console.error('svg_element not found', svg_image_name);\n        return null;\n      }\n\n      const svgColoredParts = svg_element.querySelectorAll('[fill]');\n      svgColoredParts.forEach((svgColoredPart) => {\n        svgColoredPart.setAttribute('fill', '#' + svg_color);\n      })\n\n      const svgData = (new XMLSerializer()).serializeToString(svg_element);\n      img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n    }\n\n  } else {\n    if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n      img.src = map_obj.custom_image;\n    } else {\n      return null;\n    }\n  }\n\n  return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n  img.onload = function () {\n    const c = document.createElement(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n\n    c.width = img.width;\n    c.height = img.height;\n\n    ctx?.drawImage(img, 0, 0);\n\n    let texture = new CanvasTexture(c);\n    texture.colorSpace = 'srgb'\n\n    const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n    const material = new MeshBasicMaterial({\n      map: texture,\n      transparent: true,\n      side: DoubleSide,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    if (map_obj.layer_type === 'kiosk') {\n      material.visible = false;\n    }\n\n    afterOnload(geometry, material);\n  };\n}\n\nfunction getImageLogo(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry, object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: { storeLogo: Object3D }) => void): void {\n  const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n  if (img === null) return;\n\n  processImage(img, map_obj, (geometry, material) => {\n    const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n    // @ts-ignore\n    const floor_index = mesh.floor_index;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n    logoMesh.object_id = new_object_id;\n    logoMesh.floor_index = floor_index;\n    logoMesh.renderOrder = getRenderOrder('layer-image');\n    floors[floor_index]?.objsGroup.add(logoMesh);\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    logoMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    //@ts-ignore\n    BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    \n    handleAsync({storeLogo: BoundingSphereMesh});\n    */\n    handleAsync({ storeLogo: logoMesh });\n  })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id: string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): { textMesh: IExtMesh } | null | false {\n  const new_object_id = textLogoNamePrefix + object_id;\n  // deleteMeshByObjectID(new_object_id, scene, floors);\n  let result = null;\n\n  if (!geometry.boundingBox) {\n    geometry.computeBoundingBox();\n  }\n  if (!geometry.boundingBox) {\n    return null;\n  }\n\n  const boundingBox = geometry.boundingBox;\n\n  const mesh_center_point = new Vector3();\n  boundingBox.getCenter(mesh_center_point);\n\n  const mesh_size = new Vector3();\n  boundingBox.getSize(mesh_size);\n\n  //@ts-ignore\n  let map_obj: MapObj = allIndexedMapObjects[object_id] ? allIndexedMapObjects[object_id] : { layer_type: object_id.startsWith('escalator') ? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8 };\n\n  if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n    let text = '';\n    if (map_obj.layer_type === 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n      text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n      text = map_obj.custom_text;\n    } else {\n      text = '';\n    }\n\n    let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n    if (map_obj.text_color) {\n      text_color = hex_to_color(map_obj.text_color);\n    }\n\n    const material_settings = {\n      color: text_color,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false,\n      depthTest: false,\n    };\n    let text_material = new MeshPhongMaterial(material_settings);\n    let text_geometry = new TextGeometry(text, {\n      font: myFont,\n      size: parseInt(map_obj.size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n\n    const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n    textMesh.userData.font = myFont;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n    textMesh.object_id = new_object_id;\n    textMesh.floor_index = floor_index;\n    textMesh.renderOrder = getRenderOrder('layer-text');\n    if (map_obj.layer_type === 'retail_name') {\n      textMesh.userData.retail_name = text;\n    }\n\n    floors[floor_index].objsGroup.add(textMesh);\n\n    //scene.add(textMesh);\n    //console.debug({UpdateTexts: scene});\n\n    // Show bounding sphere\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    textMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    @ts-ignore\n    BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    scene.add(BoundingSphereMesh);\n    */\n    result = { textMesh };\n  }\n\n  else if (\n    map_obj.layer_type === 'retail_logo' ||\n    map_obj.layer_type === 'custom_image' ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id != null) ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    || (map_obj.layer_type === 'escalator')\n  ) {\n    getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n  }\n  return result;\n}","import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport type { Mesh } from \"three\";\nimport path from \"ngraph.path\";\nimport { EventedType } from \"ngraph.events\";\nimport { IFloorData } from \"src/types\";\n\n\ntype MapBoxContextType = {\n  meshByObjectId: Map<string, Mesh>;\n  setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>> | Function;\n  allMapObjects: Array<string>;\n  setAllMapObjects: Dispatch<SetStateAction<Array<string>>> | Function;\n  allIndexedMapObjects: Record<string, MapObj>;\n  setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObj>>> | Function;\n  allIndexedRetailers: Record<string, IRetailer>;\n  setAllIndexedRetailers: Dispatch<SetStateAction<Record<string, IRetailer>>> | Function;\n  allNodesFloor: Record<string, number>;\n  setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>> | Function;\n  pathFinderGraph: Graph<any, any> & EventedType\n  setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>> | Function;\n  ngraphPath: typeof path;\n  setNgraphPath: Dispatch<SetStateAction<typeof path>> | Function;\n  floorsData: IFloorData[];\n}\nconst MapBoxContext = createContext<MapBoxContextType>({\n  meshByObjectId: new Map<string, Mesh>(),\n  setMeshByObjectId: () => null,\n  allMapObjects: [],\n  setAllMapObjects: () => null,\n  allIndexedMapObjects: {},\n  setAllIndexedMapObjects: () => null,\n  allIndexedRetailers: {},\n  setAllIndexedRetailers: () => null,\n  allNodesFloor: {},\n  setAllNodesFloor: () => null,\n  pathFinderGraph: createGraph(),\n  setPathFinderGraph: () => null,\n  ngraphPath: path,\n  setNgraphPath: () => null,\n  floorsData: []\n})\n\nconst MapBoxContextProvider = ({ children }: { children: ReactNode }) => {\n\n  const [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string, Mesh>());\n  const [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\n  const [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\n  const [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\n  const [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n  //<{ x:number, y:number }, { weight: number }>\n  const [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\n  const [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n  const [floorsData] = useState<MapBoxContextType['floorsData']>([]);\n\n  return (\n    <MapBoxContext.Provider value={{\n      meshByObjectId,\n      setMeshByObjectId,\n      allMapObjects,\n      setAllMapObjects,\n      allIndexedMapObjects,\n      setAllIndexedMapObjects,\n      allIndexedRetailers,\n      setAllIndexedRetailers,\n      allNodesFloor,\n      setAllNodesFloor,\n      pathFinderGraph,\n      setPathFinderGraph,\n      ngraphPath,\n      setNgraphPath,\n      floorsData\n    }}\n    >\n      {children}\n    </MapBoxContext.Provider>\n  )\n\n}\n\nexport function useMapBoxContext() {\n  const context = useContext(MapBoxContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n  }\n\n  return context;\n}\n\nexport default MapBoxContextProvider;\n","import {\n  Group,\n  Mesh,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { loadFloors } from \"./loadFloors\";\nimport type { IConfig, IExtMesh, IFloorData, IMeshValues, TRoles } from \"../../types\";\nimport { defaultVars, mapit2DefaultVars } from \"../../defaults\";\n// import {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport { get_store_name_logo_geo } from \"src/helpers/draw.logo.helpers\";\nimport { IJsonConfig, IMeshParamsTmp } from \"../../types\";\nimport { hex_to_color } from \"src/helpers/misc\";\nimport { Kiosk, MapIt2Response, MapObj, IRetailer } from \"../../mapitApiTypes\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars }\n\nconst defaultMapObjValues = {\n  id: null,\n  center_id: config.CENTER_ID,\n  retailer_id: null,\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: 8,\n  rotate: 0,\n  offsetX: 0,\n  offsetY: 0,\n} as Record<string, string | number | null | undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\n\n// const floorsData:IFloorData[] = [];\nlet MEDIA_STORAGE_URI: string = '';\n\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n  for (let key in obj) {\n    delete obj[key];\n  }\n}\n\nfunction makeIndexedMapObjects(allIndexedMapObjects: Record<string, MapObj>, map_objs: MapObj[]) {\n  clearObject(allIndexedMapObjects);\n\n  allNonIndexedMapObjects = map_objs;\n\n  for (let i = 0; i < map_objs.length; i++) {\n    const obj = map_objs[i];\n    allIndexedMapObjects[obj.map_obj_name] = obj;\n    for (let key in defaultMapObjValues) {\n      const value = defaultMapObjValues[key];\n      //@ts-ignore\n      if (value != null && obj[key] == null) {\n        //@ts-ignore\n        allIndexedMapObjects[obj.map_obj_name][key] = value;\n      }\n    }\n  }\n}\n\nconst init = (allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: IJsonConfig, floors: IFloorData[], response: MapIt2Response) => {\n  const KIOSKS: Record<string, Kiosk> = {};\n  response.kiosks.forEach((kiosk) => {\n    const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n    if (mapObj) {\n      kiosk.map_obj_name = mapObj.map_obj_name;\n    }\n    KIOSKS[kiosk.id] = kiosk;\n  });\n\n\n  for (let index in response.retailers) {\n    const retailer = response.retailers[index];\n    allIndexedRetailers[retailer.id] = retailer;\n    allIndexedRetailers[retailer.id].index = index;\n  }\n\n  // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n  // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n  makeIndexedMapObjects(allIndexedMapObjects, response.map_objs);\n\n  floors.length = 0;\n  response.floors.forEach((value: IFloorData, index: number) => {\n    const objsGroup = new Group();\n    objsGroup.scale.y *= -1;\n    objsGroup.lookAt(0, 1, 0);\n\n    floors.push({\n      id: value.id,\n      // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n      svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n      title: value.title,\n      objsGroup: objsGroup,\n      interactiveObjs: [],\n      escalatorsObjs: [],\n      escalatorsNodes: {},\n      escalatorMeshes: [],\n      route_points: [],\n      route_tube: undefined,\n      route_texture: null,\n      routeMeshes: [],\n      route_active: false,\n    });\n  });\n  const DEFAULT_CAMERA_FOV = 75;\n  const DEFAULT_CAMERA_FAR = 10000;\n  config.CAMERA.far = DEFAULT_CAMERA_FAR;\n  config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n  const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n  config.CAMERA.maxDistance *= fovCorrection;\n  config.CAMERA.far *= fovCorrection;\n\n  const processedConfig: IConfig = {\n    ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n    BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n    BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n    BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n    BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n    BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n    CAMERA: {\n      ...config.CAMERA,\n      minZoom: parseInt(response.settings.MIN_ZOOM) ? parseInt(response.settings.MIN_ZOOM) : config.CAMERA.minZoom,\n      maxZoom: parseInt(response.settings.MAX_ZOOM) ? parseInt(response.settings.MAX_ZOOM) : config.CAMERA.maxZoom,\n      minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n      maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE) ? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n    },\n    CAMERA_CONTROLS_STATES: (() => {\n      const canvasWidth = window.screen.width;\n      if (config.CAMERA_CONTROLS_STATES) {\n        console.debug('config', { ...config.CAMERA_CONTROLS_STATES })\n        return { ...config.CAMERA_CONTROLS_STATES };\n      } else {\n\n        const roles: TRoles[] = [\"PORTAL\", \"PORTAL_RESPONSIVE\"]\n\n        if (!roles.includes(config.ROLE) && canvasWidth) {\n          if (canvasWidth <= 600) {\n            return response.camera_controls_states.mobile;\n          } else if (canvasWidth <= 1024) {\n            return response.camera_controls_states.tablet;\n          }\n        }\n        return response.camera_controls_states[config.DEVICE];\n      }\n    })(),\n    // CAMERA_CONTROLS_STATES: config.CAMERA_CONTROLS_STATES ? config.CAMERA_CONTROLS_STATES : response.camera_controls_states[config.DEVICE],\n    CENTER_ID: config.CENTER_ID,\n    CONTROLS: null,\n    DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n    DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n    DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n    DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n    DEVICE: config.DEVICE,\n    KIOSK: config.KIOSK ? config.KIOSK : '',\n    KIOSKS: KIOSKS,\n    MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n    ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n    OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n    OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n    ROLE: config.ROLE,\n    SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n    STATS: config.STATS === 'true' || config.STATS === '1',\n    STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n    STORE_HEIGHT: response.settings.STORE_HEIGHT ? response.settings.STORE_HEIGHT : config.STORE_HEIGHT ? config.STORE_HEIGHT : '8',\n    STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n    STYLE: response.settings.STYLE ? response.settings.STYLE : config.STYLE ? config.STYLE : '3D',\n    WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n    WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n    FLOORS: response.floors,\n    AMENITIES: response.amenities,\n    RETAILERS: response.retailers,\n    AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n    AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n    KIOSK_SIZE: response.settings.KIOSK_SIZE ? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    ZOOM_STEP: response.settings.ZOOM_STEP ? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n    SELECTED_ZOOM_LIMIT: config.SELECTED_ZOOM_LIMIT ? config.SELECTED_ZOOM_LIMIT : response.settings.SELECTED_ZOOM_LIMIT ? response.settings.SELECTED_ZOOM_LIMIT : '4800',\n    SELECTED_ZOOM_LIMIT_DISTANCE: parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) ? parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) : parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n  };\n\n  // AMENITIES_NAV_BG_COLOR: string;\n  // AMENITIES_NAV_ICON_COLOR: string;\n\n  return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response | null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n  const { floorsData } = useMapBoxContext();\n  const { allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph } = useMapBoxContext();\n  const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n  const [textParams, setTextParams] = useState<Array<{ textMesh: IExtMesh }[]>>([]);\n  const [storeLogos, setStoreLogos] = useState<{ storeLogo: Mesh }[][]>([]);\n  // const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n  const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n  const [urls, setUrls] = useState<string[]>([]);\n  const [processedConfig, setProcessedConfig] = useState<IConfig | null>(null);\n  let result = useLoader(SVGLoader, urls);\n\n  MEDIA_STORAGE_URI = useMemo(() => {\n    const r = /\\/$/;\n    if (mediaStorageURI) {\n      return mediaStorageURI?.replace(r, '');\n    }\n\n    return '';\n\n  }, [mediaStorageURI])\n\n  // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n  const myFont = useFont(fontData as unknown as FontData);\n\n  // const getWallShape = (...params: any): Shape | Shape[] => {\n  //     return []\n  // }\n\n\n  const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: { storeLogo: Mesh }) => {\n    setStoreLogos((prevLogos) => {\n      // console.debug({floorIndex});\n      if (prevLogos[floorIndex]) {\n        prevLogos[floorIndex].push({ ...meshLogo });\n      } else {\n        prevLogos[floorIndex] = [{ ...meshLogo }];\n      }\n      // console.debug({prevLogos});\n      return [...prevLogos];\n    });\n  }), [])\n\n  const mergedConfig = useMemo(() => {\n    let result = config;\n\n    if (jsonConfig) {\n      result = {\n        ...config,\n        ...jsonConfig,\n      }\n\n      if (jsonConfig.CAMERA) {\n        result.CAMERA = {\n          ...config.CAMERA,\n          ...jsonConfig.CAMERA,\n        }\n      }\n    }\n    if (!jsonConfig?.DEVICE && result.ROLE === 'WP_SITE') {\n      result.DEVICE = 'desktop';\n    }\n    return result;\n\n  }, [jsonConfig])\n\n  useEffect(() => {\n    if (!data) return;\n\n\n    // console.log('useMeshFloors[data]', {data})\n\n    const processedConfig = init(allIndexedMapObjects, allIndexedRetailers, mergedConfig, floorsData, data as MapIt2Response);\n    const values: string[] = [];\n    processedConfig.FLOORS.forEach((value) => {\n      // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n      //@ts-ignore\n      values.push(`${value.svg}`);\n    });\n\n    setProcessedConfig(processedConfig);\n    setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n  }, [data, allIndexedMapObjects, allIndexedRetailers, floorsData, jsonConfig, mergedConfig]);\n\n  const clearScene = useCallback(() => {\n    if (meshParams) {\n      meshParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.mesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (textParams) {\n      textParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.textMesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (storeLogos) {\n      storeLogos.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.storeLogo.removeFromParent();\n          })\n        }\n      })\n    }\n\n    setMeshParams([]);\n    setTextParams([]);\n    setStoreLogos([]);\n  }, [meshParams, textParams, storeLogos])\n\n  useEffect(() => {\n    return () => {\n      clearScene();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!processedConfig || !urls.length || !myFont || !result) return;\n\n    const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, processedConfig, result, role);\n    const TextsAndLogos: Array<{ textMesh: IExtMesh }[]> = [];\n    allNonIndexedMapObjects.forEach((params) => {\n      let values: IMeshValues | undefined;\n      for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n        //@ts-ignore\n        values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n        if (values !== undefined) {\n          break;\n        }\n      }\n      if (!values) return null;\n      const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n      if (textParams) {\n        if (!TextsAndLogos[values.floor_index]) {\n          TextsAndLogos[values.floor_index] = [];\n        }\n        TextsAndLogos[values.floor_index].push(textParams);\n      }\n    })\n    const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n      return (acc + item.length);\n    }, 0);\n    const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n    if (countNonIndexedObjs !== 0) {\n      const mapObjNames = new Set<string>();\n      allNonIndexedMapObjects.forEach((item) => {\n        mapObjNames.add(item.map_obj_name);\n      });\n      GeometriesAndMaterials.forEach((items) => {\n        items.forEach(item => {\n          if (!mapObjNames.has(item.object_id)) {\n            const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n            if (textParams) {\n              if (!TextsAndLogos[item.floor_index]) {\n                TextsAndLogos[item.floor_index] = [];\n              }\n              TextsAndLogos[item.floor_index].push(textParams);\n            }\n          }\n        })\n      });\n    }\n    setMeshParams([...GeometriesAndMaterials]);\n    setTextParams(TextsAndLogos);\n    setPathFinderGraph(graph);\n    setEscalatorNodes([...escalator_nodes]);\n\n  }, [processedConfig, urls, result, myFont, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, role, setPathFinderGraph, handleAsyncStoreLogos]);\n\n  return useMemo(() => {\n    return {\n      config: processedConfig,\n      meshParams: meshParams,\n      textParams,\n      storeLogos,\n      floors: floorsData,\n      pathFinderGraph,\n      escalator_nodes: escalatorNodes,\n    }\n  }, [processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useState } from \"react\"\nimport { IConfig, IExtMesh } from \"src/types\";\n\n\nexport type TMeshObjectContext = {\n  MeshObject: IExtMesh[] | null;\n  SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n  cameraLength: number | undefined,\n  setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n  config: IConfig | undefined,\n  setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n  MeshObject: null,\n  SetMeshObject: () => null,\n  cameraLength: undefined,\n  setCameraLength: () => null,\n  config: undefined,\n  setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({ children }: { children: React.ReactNode }) {\n  const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n  const [config, setConfig] = useState<IConfig | undefined>();\n  const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n  return (\n    <MeshObjectContext.Provider\n      value={{\n        MeshObject,\n        SetMeshObject,\n        cameraLength,\n        setCameraLength,\n        config,\n        setConfig\n      }}\n    >\n      {children}\n    </MeshObjectContext.Provider>\n  )\n}\n\nexport function useMeshObjectContext() {\n  const context = useContext(MeshObjectContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n  }\n\n  return context;\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { IConfig } from \"src/types\";\nimport { SpriteMaterial, Texture } from \"three\";\nimport styles from '../../MapBox.module.scss';\nimport { Html } from \"@react-three/drei\";\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, config }: { size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined }) => {\n  const [, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && config !== undefined && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n    }\n  }, [lockSize, config, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize, depthTest: false, depthWrite: false, color: \"black\" });\n    return material;\n  }, [lockSize, texture])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const svgData = (new XMLSerializer()).serializeToString(svgOrigin);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n    }\n  }, []);\n\n  if (material) {\n    // console.log('RENDER SPRITE')\n    return (\n      <group>\n        <sprite scale={scale} material={material}>\n        </sprite>\n        {blink && <Html><div className={styles.mapCenterMarker}></div></Html>}\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, IMeshParams, IMeshValues } from \"../../types\";\nimport { ThreeEvent } from \"@react-three/fiber\";\nimport React, { } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from '../../MapBox.module.scss';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: IMeshParams;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, currentFloorIndex: number, params?: IMeshValues }) {\n  const [, setUpdate] = React.useState(false);\n  const { type, mesh, currentFloorIndex } = props;\n  React.useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      // setUpdate((value) => !value);\n    };\n    return () => mesh.userData.triggerUpdate = undefined\n  }, [mesh.userData, setUpdate]);\n\n  const { config, cameraLength } = useMeshObjectContext();\n\n  // console.warn({update});\n\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </primitive>\n      } else {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </>\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n\n  const { config, meshParams, textParams, storeLogos } = meshFloors;\n  const floor = meshFloors.floors[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            // @ts-ignore\n            const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n            //console.log('Map', {baseColor, active, hovered})\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n      {escalatorMeshes?.map((params) => {\n        //@ts-ignore\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div id={styles.escalator_elems}\n              style={{ display: visible ? 'block' : 'none' }}\n              onClick={(e) => {\n                e.stopPropagation()\n                handleChangeFloor(params.goToFloor?.index || 0)\n                return false\n              }}\n              onPointerMove={(e) => e.stopPropagation()}>\n              <div className={styles.element} id={params.object_id as string}>\n                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? meshFloors.floors.length - params.goToFloor.index : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type { Mesh } from \"three\";\nimport { Box3, Vector3 } from \"three\";\n\nexport function get_camera_focus_object(objs: Mesh[], fov: number, aspectRatio: number, style: string) {\n  // config.STYLE\n  // config.CAMERA.fov\n\n  if (!Array.isArray(objs)) {\n    objs = [objs];\n  }\n  if (!objs.length) {\n    console.warn('get_camera_focus_object: no objects passed');\n    return { position: new Vector3(), target: new Vector3() };\n  }\n\n  const objsBoundingBox = objs.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    if (obj.geometry.boundingBox) {\n      box.union(obj.geometry.boundingBox);\n    }\n    return box;\n  }, new Box3());\n\n  const obj_size = new Vector3();\n  objsBoundingBox.getSize(obj_size);\n\n  const center = new Vector3();\n  objsBoundingBox.getCenter(center);\n\n  objs[0].localToWorld(center);\n\n  // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n  // var padding = max_length * 0.2;\n  // if (padding > 50) padding = 50;\n  // max_length += padding;\n  // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n  let tanFOV = Math.tan(Math.PI * fov / 360);\n  let padding = 1.1;\n  let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n  let new_height = (obj_size.y * padding) / 2 / tanFOV;\n  let new_y = Math.max(new_width, new_height);\n  let new_z = getCameraTiltPosition(new_y, style);\n\n  const target = new Vector3(center.x, 0, center.z);\n  const position = new Vector3(center.x, new_y, center.z + new_z);\n\n  // createjs.Ticker.framerate = 60;\n  // createjs.Tween.get(config.CONTROLS.target)\n  //     .to({ x: center.x, z: center.z }, 400);\n  // createjs.Tween.get(config.CAMERA.position)\n  //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n  return { position, target };\n}\n\nfunction getCameraTiltPosition(y: number, style: string): number {\n  let angle = 60;\n  if (style === '2D') angle = 89.9;\n  return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IMeshParams } from \"../../types\";\nimport { Map } from \"./Map\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\n// import { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { defaultVars } from \"src/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\n// import { allNodesFloor } from \"src/globals\";\n\ninterface IFloorsMapProps {\n  meshFloors: IMeshParams;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  onCameraMove?: (e: any) => void;\n  currKioskObj: Mesh;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: IZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  config: IConfig;\n  cameraPos?: { x: number, y: number, z: number } | undefined | null;\n  controlPos?: { x: number, y: number, z: number } | undefined | null;\n  handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n  isSelectedRetailerSlug: boolean;\n  setIsCameraInit: Function;\n  retailers: IRetailer[],\n  mapObjs: MapObj[],\n  handleObjectClick: (object: IExtMesh, targetId: string, softClick?: boolean) => void,\n  triggerClick: boolean,\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n  const { allIndexedMapObjects, allNodesFloor } = useMapBoxContext();\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const { meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    config,\n    handleCameraAndControlsChange,\n    activeObjectId,\n    isSelectedRetailerSlug,\n    setIsCameraInit,\n    retailers,\n    mapObjs,\n    handleObjectClick,\n    triggerClick, } = params;\n  const { floors } = meshFloors;\n  const [cameraLimits, SetCameraLimits] = useState({ min: config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: 0, needsUpdate: true })\n  const { setCameraLength } = useMeshObjectContext();\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = meshFloors.config.STYLE;\n  const accentColor = meshFloors.config.ACCENT_COLOR;\n  const pathFinderGraph = meshFloors.pathFinderGraph;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n  const isUseDefaultsLimits = config.ROLE === \"PORTAL\" && routeTargetId;\n\n  const resetCamera = useCallback((fullReset: boolean = false) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n\n\n    let isZeroCCS = true;\n\n    if (config.CAMERA_CONTROLS_STATES) {\n      let cameraV3 = config.CAMERA_CONTROLS_STATES.camera;\n      if (!(cameraV3 instanceof Vector3)) {\n        cameraV3 = new Vector3(cameraV3.x, cameraV3.y, cameraV3.z);\n      }\n      isZeroCCS = (cameraV3 as Vector3).length() === 0;\n    }\n\n    if (!fullReset && config.CAMERA_CONTROLS_STATES && !isZeroCCS && !['PORTAL'].includes(config.ROLE)) {\n      focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n      focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n    }\n\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && cameraLimits.needsUpdate === false && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => ({\n        ...cl,\n        min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance,\n        max: config.CAMERA.maxDistance,\n      }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [camera, cameraLimits.needsUpdate, config.CAMERA.animSpeed, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA_CONTROLS_STATES, config.ROLE, currKioskFloorIndex, meshFloors.meshParams, style]);\n\n  const focusDistance = cameraFocus.current ? cameraFocus.current.position.distanceTo(cameraFocus.current.target) : 0;\n\n  useEffect(() => {\n\n    if (focusDistance > 0 && cameraLimits.needsUpdate) {\n      SetCameraLimits({ min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: focusDistance, needsUpdate: false })\n      setIsCameraInit(true);\n    }\n\n  }, [focusDistance, cameraLimits.needsUpdate, config.CAMERA])\n\n  useEffect(() => {\n\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && routeTargetId && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => {\n        const minDistance = Number(config.SELECTED_ZOOM_LIMIT_DISTANCE) < config.CAMERA.minDistance ? config.CAMERA.minDistance : Number(config.SELECTED_ZOOM_LIMIT_DISTANCE)\n        return {\n          ...cl,\n          needsUpdate: false,\n          min: minDistance < 0.1 ? 0.1 : minDistance,\n          max: config.CAMERA.maxDistance,\n        }\n      });\n    }\n  }, [config.CAMERA.maxZoom, config.CAMERA.minZoom, config.SELECTED_ZOOM_LIMIT, routeTargetId, cameraLimits.initialDistance])\n\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length, resetCamera])\n\n  useEffect(() => {\n    if (!amenityTargetType || config.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(allNodesFloor, from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n    setRouteTubes(route);\n\n    if (currKioskObj && config.ROLE === \"DISPLAY_APP\") {\n      handleChangeFloor(currKioskFloorIndex);\n    }\n\n  }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from, config.ROLE, allNodesFloor, allIndexedMapObjects])\n\n  const clearEscalators = useCallback(() => {\n    meshFloors.floors.flat().forEach((item) => item.escalatorMeshes = []);\n  }, [meshFloors])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n      if (config.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          clearEscalators();\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        clearEscalators();\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floors.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n    // console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE, allNodesFloor, triggerClick]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && (config.ROLE === 'PORTAL' || isSelectedRetailerSlug)) {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max,\n      Math.max(\n        isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed, floors, activeObjectId, amenityTargetType, isSelectedRetailerSlug]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n      const zoomStep = config.ZOOM_STEP ? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= zoomStep;\n      } else {\n        cameraDistance += zoomStep;\n      }\n\n      cameraDistance = Math.min(\n        cameraLimits.max,\n        Math.max(\n          cameraLimits.min,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoom])\n\n  // console.log('CameraLimits', cameraLimits)\n\n  const getInitialDistance = () => {\n    return cameraLimits.initialDistance\n  }\n\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange) {\n        handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n      }\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const createRouteToStore = useCallback((retailerSlug: string) => {\n    if (retailerSlug.length) {\n      const retailer = retailers.find(item => item.slug === retailerSlug);\n      if (retailer) {\n        const mapObj = mapObjs.find(item => item.retailer_id === retailer.id);\n        if (mapObj) {\n          const obj = scene.getObjectByProperty('object_id', mapObj.map_obj_name);\n          if (obj) {\n            handleObjectClick(obj as IExtMesh, mapObj.map_obj_name, true);\n          }\n        }\n      }\n    }\n  }, [handleObjectClick, mapObjs, retailers, scene]);\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n    createRouteToStore,\n    getInitialDistance,\n  }))\n\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min}\n        maxDistance={isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max}\n        enableZoom={config.ROLE === \"PORTAL\" || config.ROLE === \"DISPLAY_APP\"}\n        enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floors && floors.map((value: IFloorData, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { IRetailer } from 'src/mapitApiTypes';\n\nexport const retailersApi = createApi({\n  reducerPath: 'retailersApi',\n  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\n  endpoints: (builder) => ({\n    getRetailers: builder.query<{ count: number, items: IRetailer[] }, { baseQuery: string, center_id: string, limit: number, page?: number }>({\n      query: ({ baseQuery, center_id, limit, page = 1 }) => ({\n        url: `${baseQuery}/v1/retailers?limit=${limit}&page=${page}`,\n        headers: {\n          center_id,\n        },\n      }),\n    })\n  })\n})\n\nexport const { useGetRetailersQuery, useLazyGetRetailersQuery } = retailersApi;","import { retailersApi, useGetRetailersQuery, useLazyGetRetailersQuery } from \"src/services/retailersApi\"\nimport { fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\nconst useAllRetailers = (baseUrl: string, center_id: string, limit: number) => {\n  const [retailers, setRetailers] = useState<{ count: number, items: IRetailer[] }>({ count: 0, items: [] })\n  const baseQuery = baseUrl?.lastIndexOf('/') === baseUrl.length - 1 ? baseUrl.slice(0, -1) : baseUrl;\n\n  const [getRetailers] = useLazyGetRetailersQuery()\n\n  const fetchAllRetailers = useCallback(async (page: number, totalPages: number) => {\n    const requests = [];\n    const result: { count: number, items: IRetailer[] } = { count: 0, items: [] };\n    if (totalPages >= page) {\n      for (let currentPage = page; currentPage <= totalPages; currentPage++) {\n        requests.push(getRetailers({ baseQuery, center_id, limit, page: currentPage }, true));\n      }\n      if (requests.length) {\n        const data = await Promise.all(requests);\n        data.forEach(item => {\n          if (item && item.data && item.data.items.length) {\n            const { count, items } = item.data;\n            result.count = count;\n            result.items = [\n              ...result.items as IRetailer[],\n              ...items as IRetailer[],\n            ]\n          }\n        })\n        if (result) {\n          setRetailers(ret => ({\n            count: result.count,\n            items: [...ret.items, ...result.items],\n          }))\n        }\n        return { ...result };\n      }\n    } else {\n      return { ...result };\n    }\n  }, [baseQuery, center_id, getRetailers, limit])\n\n  const getAll = useCallback(() => new Promise<{ count: number, items: IRetailer[] }>((resolve, reject) => {\n    let result: { count: number, items: IRetailer[] } = { count: 0, items: [] };\n    getRetailers({ baseQuery, center_id, limit, page: 1 }, true).then(data => {\n      if (data.status === 'rejected') {\n        reject(data.error);\n      }\n      if (data.data) {\n        result = { ...data.data };\n        const totalPages = Math.round(result.count / limit);\n        if (totalPages > 1) {\n          console.debug({ totalPages })\n          fetchAllRetailers(2, totalPages).then(data => {\n            if (data) {\n              resolve({\n                count: result.count,\n                items: [...result.items, ...(data.items ?? [])],\n              })\n            } else {\n              resolve({ ...result });\n            }\n          });\n        } else {\n          resolve({ ...result })\n        }\n      } else {\n        resolve({ ...result });\n      }\n    });\n  }), [baseQuery, center_id, fetchAllRetailers, getRetailers, limit])\n\n  return { retailers, getAll }\n}\n\nexport default useAllRetailers;","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.scss';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\nimport \"../../../public/icomoon/style.css\";\n\nconst UIComponent = ({\n  floors,\n  accentColor,\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  role,\n  mapObjs,\n  onExtractedAmenities,\n}: IFloorSelectorProps & {\n  amenitiesList: IAmenitiesInteractiveList[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: (fullReset?: boolean) => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  role?: TRoles,\n  mapObjs?: MapObj[],\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      if (role === 'PORTAL_RESPONSIVE' || role === 'PORTAL') {\n        reset(true)\n      }\n      else {\n        reset();\n      }\n    }\n  }\n\n  const extractValues = useMemo<AmenityID[]>(() => {\n\n    if (!mapObjs) {\n      return [];\n    }\n\n    return mapObjs\n      .filter(obj => obj.layer_type === \"amenity\")\n      .map(obj => obj.value as AmenityID);\n  }, [mapObjs])\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [mapObjs, onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floors.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              {floors.length > 1 && (\n                <div className=\"floors btn_group\">\n                  {floors.map((floor: any, index: number) => (\n                    <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                      handleFloorChange(index)\n                    }}>{floor.title}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(role as string) &&\n          <div className={`amenities ${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                  <span className={`${styles.icon} icon icon-amenity-${amenity.icon}`}></span>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { useCallback, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, MeshPhongMaterial, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IMeshParamsTmp } from \"src/types\";\nimport textFontInterface from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useRetailersOptions, { RetailerOption } from \"./hooks/useRetailersOptions\";\n\n\ninterface IMapboxForm {\n  floorIndex: number;\n  meshFloors: IMeshParamsTmp;\n  config: IConfig;\n  data: any;\n  setData: (index: number, data: MapObj) => void;\n  selectedId: string;\n  centerId: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  apiURI?: string;\n  onResetData?: (data: MapObj) => void;\n  triggerSceneUpdate: Function;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n  [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n  id: '',\n  center_id: centerId,\n  retailer_id: '',\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: '8',\n  lock_size: '0',\n  rotate: '0',\n  offsetX: '0',\n  offsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj, floorIndex: Number) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData, floorIndex) => {\n  const kioskConfig = obj.userData.kioskConfig;\n  if (kioskConfig) {\n    //TODO use 'value' until api with lock_size will be working\n    obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n    obj.userData.kioskConfig = {\n      ...kioskConfig,\n      lockSize: formData.value === '1',\n      blink: kioskConfig.blink,\n      size: Number(formData.size),\n      floorIndex: floorIndex\n    }\n    // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n    obj.userData.triggerUpdate?.();\n  }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n  const { data, setData, selectedId, centerId, config, floorIndex, onResetData, triggerSceneUpdate } = params;\n\n  const textFont = useFont(textFontInterface as unknown as FontData);\n  const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n  const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n  const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n  const [formData, setFormData] = useState<MapObj | null>(null);\n  const [rotation] = useState<number | undefined>(undefined);\n  const context = useMeshObjectContext();\n  const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [, startTransition] = useTransition();\n  const intervalRefs = useRef<TIncDecInterval>({});\n\n  const { isLoading: isLoadingRetailers, loadOptions: loadRetailersOptions, retailers } = useRetailersOptions(centerId, params.apiURI ?? '');\n\n  const [selectedKiosksId, setSelectedKiosksId] = useState<number[]>([]);\n\n  const recheckSelectedKiosksId = useCallback((mapObjs: any[]) => {\n    if (mapObjs) {\n      const ids = (mapObjs as { kiosk_id: number }[]).reduce<number[]>((prev, cur) => {\n        if (cur.kiosk_id !== null) {\n          return [...prev, cur.kiosk_id];\n        }\n        return prev;\n      }, [])\n      setSelectedKiosksId([...ids]);\n    }\n  }, [])\n\n  useEffect(() => {\n    recheckSelectedKiosksId(data.map_objs);\n  }, [data.map_objs, recheckSelectedKiosksId])\n\n  const loadKiosksOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    // console.debug({ inputValue })\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.filter((item: any) => {\n        if (inputValue) {\n          return (item.title as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    callback(result);\n  }, [data.kiosks, selectedKiosksId])\n\n  const loadAmenitiesOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    let result: any[] = [];\n    if (Object.keys(data.amenities).length) {\n      result = Object.keys(data.amenities).filter((item: string) => {\n        if (inputValue) {\n          return (data.amenities[item].name as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: string) => {\n        return {\n          value: item,\n          label: data.amenities[item].name,\n        }\n      })\n    }\n    callback(result);\n  }, [data.amenities])\n\n  const getDefaultKioksOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    return result;\n  }, [data.kiosks, selectedKiosksId])\n\n  const getDefaultAmenitiesOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data.amenities.length > 0) {\n      result = data.amenities.map((item: any) => {\n        return {\n          value: item.type,\n          label: item.name,\n        }\n      })\n    }\n    return result;\n  }, [data.amenities])\n\n  const makeImage = useCallback((formData: MapObj, obj: IExtMesh) => {\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let img = null;\n    if (formData.layer_type === 'retail_logo') {\n      const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n      if (retailIndex !== -1) {\n        img = getImage(formData, data.retailers[retailIndex]);\n      }\n    } else {\n      img = getImage(formData);\n    }\n    if (img instanceof HTMLImageElement) {\n      processImage(img, formData, (geometry, material) => {\n        obj.geometry = geometry;\n        obj.material = material;\n\n        const boundingBox = geometry.boundingBox;\n\n        const mesh_center_point = new Vector3();\n        if (boundingBox) {\n          boundingBox.getCenter(mesh_center_point);\n\n          const mesh_size = new Vector3();\n          boundingBox.getSize(mesh_size);\n          if (obj.object_id) {\n            layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n          }\n        }\n      });\n    }\n  }, [data.retailers, oldMapObjName])\n\n  const makeTextGeometry = useCallback((obj: IExtMesh, text: string, size: string) => {\n    if (!obj) return;\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let text_geometry = new TextGeometry(text, {\n      font: (obj.userData && obj.userData.font) ? obj.userData.font : textFont,\n      size: parseInt(size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n    if (obj.geometry) {\n      obj.geometry.dispose();\n    }\n    obj.geometry = text_geometry;\n  }, [formData?.map_obj_name, textFont, oldMapObjName])\n\n  const updateData = useCallback((formData: MapObj) => {\n    const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n    if (index !== -1) {\n      data.map_objs[index] = { ...formData };\n      setData(index, { ...formData });\n      recheckSelectedKiosksId(data.map_objs);\n    }\n  }, [data.map_objs, setData, recheckSelectedKiosksId])\n\n\n  const handleChangeTab = useCallback((k: any | null) => {\n\n    if (!formData) return;\n    const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n    if (key !== null) {\n      if (isTMainTabsKey(key)) {\n        setMainTabKey(key);\n        if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n          formData.obj_type = key;\n          if (key === 'retailer') {\n            formData.layer_type = 'retail_name';\n            clearKioskConfig(context, params.meshFloors);\n          } else if (key === 'special') {\n            formData.layer_type = 'kiosk';\n            formData.retailer_id = '';\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              if (obj) {\n                if (!obj.userData) {\n                  obj.userData = {};\n                }\n                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                obj.userData.kioskConfig = {\n                  lockSize: formData.value === '1',\n                  blink: false,\n                  size: Number(formData.size)\n\n                }\n                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n              }\n            }\n          } else if (key === 'custom') {\n            formData.layer_type = 'custom_text';\n            formData.retailer_id = '';\n            clearKioskConfig(context, params.meshFloors);\n          }\n          setMainTabKey('');\n          setRetailerTabsKey('');\n          setSpecialTabsKey('');\n          setFormData({ ...formData });\n          updateData({\n            ...formData,\n          });\n        }\n      } else if (isTRetailerTabsKey(key)) {\n        setRetailerTabsKey(key);\n        clearKioskConfig(context, params.meshFloors);\n        if (formData.id && retailerTabsKey && key) {\n          formData.layer_type = key;\n          if (formData.layer_type !== key) {\n            setFormData({ ...formData });\n          }\n          updateData({\n            ...formData,\n          })\n          if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n            let text = '';\n            switch (key) {\n              case 'retail_name':\n\n                if (!formData.retailer_id) {\n                  break;\n                }\n\n                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n\n                if (retailIndex !== -1) {\n                  text = data.retailers[retailIndex].retail_name;\n\n                }\n                break;\n              case 'retail_text':\n              case 'custom_text':\n                text = formData.custom_text;\n                break;\n            }\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              makeTextGeometry(obj, text, formData.size);\n            }\n          }\n\n          if (['retail_logo', 'custom_image'].includes(key)) {\n            context?.MeshObject?.forEach((obj, index) => {\n              if (index === 0) return;\n\n              makeImage(formData, obj);\n            })\n          }\n        }\n      } else if (isTSpecialTabsKey(key)) {\n        setSpecialTabsKey(key);\n        formData.layer_type = key;\n        if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n          if (key !== 'kiosk') {\n            clearKioskConfig(context, params.meshFloors);\n          }\n          formData.layer_type = key;\n          formData.kiosk_id = '';\n          formData.retailer_id = '';\n          formData.value = '';\n          setFormData({ ...formData });\n          updateData({ ...formData });\n        }\n      }\n    }\n  }, [context, data.retailers, formData, mainTabKey, makeImage, makeTextGeometry, retailerTabsKey, specialTabsKey, updateData])\n\n\n  useEffect(() => {\n    switch (mainTabKey) {\n      case 'retailer':\n        handleChangeTab(retailerTabsKey);\n        break;\n    }\n  }, [formData, mainTabKey, retailerTabsKey])\n\n\n  const handleReset = () => {\n    if (!formData) return;\n    const defaultValues = getDefaultMapOjbValues(formData.center_id);\n    if (onResetData) {\n      onResetData({\n        ...formData,\n      })\n    }\n    setFormData({\n      ...defaultValues,\n      id: formData.id,\n    });\n    updateData({\n      ...defaultValues,\n      id: formData.id,\n    });\n  }\n\n  const handleChangeRetailer = (value: number | undefined) => {\n    if (value && formData) {\n      formData.retailer_id = value.toString();\n      formData.kiosk_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n    }\n  }\n\n  const handleChangeKiosk = ({ value }: { value: string }) => {\n    if (value && formData) {\n      formData.kiosk_id = value;\n      formData.retailer_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        updateMapCenterMarkerFor(obj, formData, floorIndex);\n        triggerSceneUpdate();\n      })\n    }\n  }\n\n  const handleChangeAmenity = (newValue: any) => {\n    console.log('newValue', newValue);\n    const { value } = newValue;\n    if (value && formData) {\n      formData.value = value as string;\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        makeImage(formData, obj);\n      })\n    }\n  }\n\n  const changeValue = (name: string, value: string) => {\n    if (!formData) return;\n    // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n    //     formData.custom_image = value;\n    //     setFormData({...formData});\n    //     updateData({...formData});\n    // }\n\n    context?.MeshObject?.forEach((obj, index) => {\n      if (!obj.userData) {\n        obj.userData = {};\n      }\n      if (!obj.userData.position) {\n        obj.userData.position = new Vector3();\n        if (obj.position) {\n          obj.userData.position.copy(obj.position);\n        }\n      }\n      const position = new Vector3();\n      if (obj.userData.position) {\n        position.copy(obj.userData.position);\n      }\n      switch (name) {\n        case 'custom_text':\n          if (index === 0) break;\n          formData.custom_text = value;\n          if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n            makeTextGeometry(obj, formData.custom_text, formData.size);\n          }\n          break;\n        case 'custom_image':\n          if (index === 0) break;\n          formData.custom_image = value;\n          makeImage(formData, obj);\n          updateData({\n            ...formData,\n          })\n          break;\n        case 'size':\n          if (index === 0) break;\n          formData.size = value;\n          if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n            let text = '';\n            if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n              const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n              if (retailIndex !== -1) {\n                text = data.retailers[retailIndex].retail_name;\n              }\n            } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n              text = formData.custom_text;\n            }\n            makeTextGeometry(obj, text, formData.size);\n          } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n            makeImage(formData, obj);\n            if (timeoutRef.current) {\n              clearInterval(timeoutRef.current);\n            }\n            timeoutRef.current = setTimeout(() => {\n              updateData({ ...formData });\n            }, 300);\n          } else if (['amenity'].includes(formData.layer_type)) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              setFormData({ ...formData });\n              updateData({ ...formData });\n            })\n          } else if (['kiosk'].includes(formData.layer_type)) {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'lock_size':\n          formData.lock_size = value;\n          //TODO use 'value' until api with lock_size will be working\n          formData.value = value;\n          if (formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'rotate':\n          if (index === 0) break;\n          formData.rotate = value;\n          obj.rotation.set(\n            obj.rotation.x,\n            obj.rotation.y,\n            parseFloat(formData.rotate) * Math.PI / 180\n          );\n          break;\n\n        case 'offsetX':\n          if (index === 0) break;\n          position.x += parseFloat(value);\n          obj.position.setX(position.x);\n          formData.offsetX = value;\n          break;\n\n        case 'offsetY':\n          if (index === 0) break;\n          position.y += parseFloat(value);\n          obj.position.setY(position.y);\n          formData.offsetY = value;\n          break;\n\n        case 'text_color':\n          if (index === 0) break;\n          formData.text_color = value;\n          if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n            const material_settings = {\n              // color: hex_to_color(formData.text_color),\n              color: formData.text_color,\n              transparent: true,\n              side: DoubleSide,\n              depthWrite: false,\n              depthTest: false,\n            };\n            let text_material = new MeshPhongMaterial(material_settings);\n            obj.material = text_material;\n          } else if (\n            formData.layer_type === 'retail_logo' ||\n            formData.layer_type === 'custom_image' ||\n            (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n            (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              updateData({\n                ...formData,\n                text_color: formData.text_color.replace('#', ''),\n              });\n            })\n          }\n          break;\n\n        case 'bg_color':\n          if (index !== 0) break;\n          formData.bg_color = value;\n          let meshType: MeshType = 'store';\n          if (obj.object_id?.startsWith('big-store')) {\n            meshType = 'big-store';\n          }\n          obj.material = getMaterial(\n            config,\n            meshType,\n            formData.map_obj_name,\n            formData.bg_color,\n            formData.transparent === \"1\" ? true : false,\n            { [formData.map_obj_name]: { ...formData } }\n          );\n          // updateData({...formData});\n          break;\n\n        default:\n          break;\n      }\n      startTransition(() => {\n        setFormData({ ...formData })\n        updateData({ ...formData });\n      });\n\n    })\n  }\n  const handleChange = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value;\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  const handleChangeLock = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value === '0' ? '1' : '0';\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  useEffect(() => {\n    if (data && data.map_objs && selectedId) {\n      const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n      if (index !== -1) {\n        setFormData({ ...data.map_objs[index] });\n      } else {\n        setFormData({\n          ...getDefaultMapOjbValues(centerId),\n          id: 'new-' + (new Date()).getTime(),\n        });\n      }\n    }\n    return () => {\n      setRetailerTabsKey('');\n    }\n  }, [centerId, data, selectedId])\n\n  useEffect(() => {\n    if (!formData) return;\n\n    if (formData.obj_type) {\n      handleChangeTab(formData.obj_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n    if (formData.layer_type) {\n      handleChangeTab(formData.layer_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n  }, [formData])\n\n  const decrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value -= 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const incrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const rotateByFixedAngle = (key: TIncDecKey, angle: number) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += angle;\n      if (value > 360) {\n        value = angle;\n      } else if (value === 360) {\n        value = 0;\n      }\n\n      changeValue(key, value.toString());\n    }\n  }\n\n  const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      rotateByFixedAngle(key, angle);\n    }, 200);\n  }\n\n  const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      decrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        decrementValue(key);\n      }, 50);\n    }, 200);\n  }\n\n  const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      incrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        incrementValue(key);\n      }, 50)\n    }, 200);\n  }\n\n  const stopIntervals = () => {\n    let key: TIncDecKey;\n    for (key in intervalRefs.current) {\n      if (intervalRefs.current[key])\n        clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = null;\n    }\n  }\n\n  const handleOnSubmit = () => {\n    if (params.onSubmit && context && context.MeshObject && formData) {\n      formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n      const kioskId = formData.kiosk_id !== null ? parseInt(formData.kiosk_id) : null;\n      params.onSubmit({ ...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId });\n    }\n  }\n\n  if (!formData) return null;\n\n  return (\n    <>\n      <Tab.Container activeKey={mainTabKey}>\n        <Col>\n          <Row>\n            <Col sm=\"9\">\n              <Nav\n                variant=\"tabs\"\n                className=\"flex-row\"\n                // activeKey={mainTabKey}\n                onSelect={handleChangeTab}\n              >\n                <Nav.Item>\n                  <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm=\"3\" className=\"px-0\">\n              {/* \n                //@ts-ignore */}\n              <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\">\n              <Tab.Content>\n                <Tab.Pane eventKey={\"retailer\"}>\n                  <AsyncSelect\n                    className=\"mb-3\"\n                    aria-label=\"Choose a Retailer\"\n                    loadOptions={loadRetailersOptions}\n                    isLoading={isLoadingRetailers}\n                    loadingMessage={() => <div>loading retailers...</div>}\n                    noOptionsMessage={() => 'Retailers not found'}\n                    placeholder=\"Choose a Retailer...\"\n                    value={retailers.filter((item: RetailerOption) => item.value === Number(formData.retailer_id))?.map((item: RetailerOption) => ({\n                      value: item.value,\n                      label: item.label,\n                    }))}\n                    defaultOptions={retailers.map((item: RetailerOption) => ({ value: item.value, label: item.label }))}\n                    onChange={(item) => handleChangeRetailer(item?.value)}\n                  />\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"retail-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                    <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                    <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              as=\"textarea\"\n                              name=\"custom_text\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"special\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"special-tab-form\"\n                    activeKey={specialTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose a Kiosk\"\n                        loadOptions={loadKiosksOptions}\n                        noOptionsMessage={() => 'Kiosks not found'}\n                        placeholder=\"Choose a Kiosk...\"\n                        value={data.kiosks?.filter((item: any) => formData.kiosk_id === item.id)?.map((item: any) => ({\n                          value: item.id,\n                          label: item.title,\n                        }))}\n                        defaultOptions={getDefaultKioksOptions()}\n                        onChange={handleChangeKiosk}\n\n                      />\n                    </Tab>\n                    <Tab eventKey=\"amenity\" title=\"Amenity\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose Amenity\"\n                        loadOptions={loadAmenitiesOptions}\n                        noOptionsMessage={() => 'Amenity not found'}\n                        placeholder=\"Choose Amenity...\"\n                        value={data.amenities.filter((item: any) => formData.value === item.type).map((item: any) => ({\n                          value: item.type,\n                          label: item.name,\n                        }))}\n                        defaultOptions={getDefaultAmenitiesOptions()}\n                        onChange={handleChangeAmenity}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"custom\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"custom-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"custom_text\" title=\"Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              name=\"custom_text\"\n                              as=\"textarea\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                    <Tab eventKey=\"custom_image\" title=\"Image\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              type=\"string\"\n                              name=\"custom_image\"\n                              value={formData.custom_image}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Col>\n      </Tab.Container>\n      <Form.Group className=\"mb-3 mt-3\">\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Size</Form.Label>\n          </Col>\n          <Col>\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('size')}\n                  onMouseDown={handleDecrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"size\"\n                  type=\"text\"\n                  value={formData.size}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('size')}\n                  onMouseDown={handleIncrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                <Row>\n                  <Col sm=\"4\">\n                    <Form.Check\n                      name=\"lock_size\"\n                      id=\"lock_size\"\n                      type=\"checkbox\"\n                      //TODO use 'value' until api with lock_size will be working\n                      value={formData.value}\n                      checked={formData.value === '1'}\n                      onChange={handleChangeLock}\n                    />\n                  </Col>\n                  <Col sm=\"8\" className=\"p-0\">\n                    <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Rotate</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('rotate')}\n                  onMouseDown={handleDecrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"rotate\"\n                  type=\"number\"\n                  value={rotation ?? formData.rotate}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('rotate')}\n                  onMouseDown={handleIncrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div style={{ maxWidth: 50, height: 50 }}>\n                <Button\n                  onClick={() => rotateByFixedAngle('rotate', 45)}\n                  onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >\n                  <ArrowClockwise size={'1rem'} />\n                </Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset X</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetX')}\n                  onMouseDown={handleDecrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n\n                <Form.Control\n                  name=\"offsetX\"\n                  type=\"number\"\n                  value={formData.offsetX}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetX')}\n                  onMouseDown={handleIncrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetY')}\n                  onMouseDown={handleDecrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"offsetY\"\n                  type=\"number\"\n                  value={formData.offsetY}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetY')}\n                  onMouseDown={handleIncrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"3\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">BG Color</Form.Label>\n          </Col>\n          <Col sm=\"3\" className=\"p-0\">\n            <Form.Control\n              name=\"bg_color\"\n              type=\"string\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"2\">\n            <Form.Control\n              type=\"color\"\n              name=\"bg_color\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Row>\n              <Col sm=\"3\">\n                <input\n                  name=\"transparent\"\n                  id=\"transparent\"\n                  type=\"checkbox\"\n                  value={formData.transparent}\n                  onChange={handleChange}\n                ></input>\n              </Col>\n              <Col sm=\"9\" className=\"p-0\">\n                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"4\" className=\"d-flex justify-content-start\">\n              <Form.Label className=\"mb-0\">Text Color</Form.Label>\n            </Col>\n            <Col sm=\"5\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                name=\"text_color\"\n                type=\"color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        {['kiosk', 'amenity'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"3\">\n              <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n            </Col>\n            <Col sm=\"6\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                type=\"color\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        <Row className=\"justify-content-center px-5 py-5\">\n          <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-') ? 'Save' : 'Update'}</button>\n        </Row>\n      </Form.Group>\n    </>\n  );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext, meshFloors: IMeshParamsTmp) {\n  if (context && context.MeshObject) {\n    const obj = context.MeshObject[1];\n    if (obj && obj.userData && obj.userData.kioskConfig) {\n      obj.userData.kioskConfig = null;\n      obj.userData?.triggerUpdate();\n      meshFloors.storeLogos.flat().filter(item => item !== undefined).forEach(item => {\n        if (item.storeLogo.object_id === obj.object_id && item.storeLogo.userData.kioskConfig !== undefined) {\n          item.storeLogo.userData.kioskConfig = null;\n          item.storeLogo.userData?.triggerUpdate();\n        }\n      });\n    }\n  }\n}\n\n","import { useCallback, useEffect, useState } from \"react\"\nimport useGetRetailers, { Data } from \"../useGetRetailersBySearch\";\nexport type RetailerOption = {\n  value: number,\n  label: string,\n  isDisabled?: boolean,\n  isFixed?: boolean,\n}\ntype UseRetailersOptions = (centerId: string, apiURI: string) => {\n  isLoading: boolean,\n  loadOptions: (inputValue: string, callback: (options: RetailerOption[]) => void) => void,\n  retailers: RetailerOption[],\n};\nconst useRetailersOptions: UseRetailersOptions = (centerId, apiURI) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [retailers, setRetailers] = useState<any[]>([]);\n  const [limit] = useState<number>(100);\n  const fetchRetailers = useGetRetailers({ centerId, apiURI });\n\n  const processData = useCallback((data: Data, isLoadingMore?: boolean) => {\n    setIsLoading(false);\n    let result: any = [];\n    if (!data) return result;\n    if (!data.isError) {\n      result = data.items.map((item: any) => {\n        return {\n          value: item.id,\n          label: `${item.name}${item.location && item.location.length > 1 ? ', ' + item.location : ''}`,\n        }\n      })\n    } else {\n      console.error(`Fetch Retailers error: ${data.error}`)\n    }\n    return result;\n  }, []);\n\n  const loadOptions = useCallback((inputValue: string, callback: (options: RetailerOption[]) => void) => {\n    callback(retailers.filter(item => (item.label as string).toLowerCase().includes(inputValue)));\n  }, [retailers])\n\n  useEffect(() => {\n    setIsLoading(true);\n    const retailersData = fetchRetailers('', limit);\n    retailersData.then(data => {\n      const result = processData(data);\n      setRetailers([...result]);\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchRetailers, limit, processData])\n\n  return {\n    isLoading,\n    loadOptions,\n    retailers,\n  }\n}\n\nexport default useRetailersOptions;","import { useCallback, useState } from \"react\";\nimport useAllRetailers from \"src/Hooks/useAllRetailers\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype GetRetailersParams = {\n  centerId: string | number,\n  apiURI?: string,\n}\n\nexport type Data = {\n  isError: boolean,\n  error: string | null,\n  items: IRetailer[],\n  count: number,\n}\n\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n  const { centerId, apiURI } = params;\n\n  const { getAll } = useAllRetailers(apiURI ?? '', centerId.toString(), 100);\n\n  const fetchRetailers = useCallback((search: string, limit?: number): Promise<Data> => {\n\n    const fetchAll = (): Promise<Data> => new Promise((resolve, reject) => {\n\n      getAll().then(data => {\n        resolve({\n          isError: false,\n          error: null,\n          items: data.items,\n          count: data.count,\n        });\n      }).catch((e: any) => {\n        reject(e.message ? e.message : 'useGetRetailer: something went wrong!');\n      });\n\n    });\n\n    return fetchAll();\n\n  }\n    , [getAll]);\n\n  return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n  centerId: string,\n  slug: string,\n  webApiURI: string,\n}\n\nexport type RetailerData = {\n  data: IRetailer | null,\n  isLoading: boolean,\n  isError: boolean,\n  error: string | null,\n}\n\nconst defaultData: RetailerData = {\n  data: null,\n  isLoading: false,\n  isError: false,\n  error: null,\n}\nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n  const { centerId, slug, webApiURI } = props;\n  const [data, setData] = useState<RetailerData>(defaultData);\n\n  useMemo(() => {\n    if (!slug || !centerId) {\n      setData({ ...defaultData });\n      return false;\n    }\n\n    let apiURI = webApiURI;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      setData({\n        isLoading: true,\n        data: null,\n        isError: false,\n        error: null,\n      })\n      fetch(`${apiURI}/v1/retailers/${slug}`, {\n        headers: {\n          center_id: centerId,\n        }\n      }).then(\n        (response) => response.json()\n      ).then(data => {\n        setData({\n          isLoading: false,\n          isError: false,\n          error: null,\n          data: {\n            id: data.id,\n            retail_name: data.name,\n            slug: data.slug,\n            location: data.location && data.location !== '-' ? data.location : '',\n            retailer_phone: data.retailer_phone,\n            retailer_description: data.global_retailer.description,\n            logo: data.media.url,\n            map_obj_name: '',\n          }\n        });\n      }).catch((e: any) => {\n        setData({\n          data: null,\n          isLoading: false,\n          isError: true,\n          error: `Error fetch retaler data: ${e.message}`,\n        })\n      })\n    } else {\n      setData({\n        isLoading: false,\n        isError: true,\n        error: 'webApiURI not provided!',\n        data: null,\n      })\n    }\n\n  }, [centerId, slug, webApiURI]);\n\n  return data;\n\n}\n\nexport default useRetailerData;\n","import { Form, FormGroup, Modal, Placeholder, Spinner } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n  amenity: string,\n  show: boolean,\n  onHide: () => void,\n  centerId: string,\n  retailers?: IRetailer[],\n  mapObjs?: MapObj[],\n  mapObjectName?: string,\n  webApiURI: string,\n  onClick?: (id: string, amenityType?: string) => void,\n  kioskId: string,\n}\n\nconst RetailerInfoList = ({ retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId }: { retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string }) => {\n  const [retailerId, setRetailerId] = useState<string>('');\n\n  const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    if (onClick) {\n      onClick(retailerId);\n    }\n  }\n\n  const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setRetailerId(e.target.value);\n  }\n\n  const filterRetailers = (retailers: IRetailer[], arrayObjects: MapObj[]) => {\n    return retailers.filter(retailer =>\n      arrayObjects.some(obj => obj.retailer_id === retailer.id)\n    );\n  }\n\n  if (!isAmenity && (isLoading || !retailer)) {\n    return (\n      <div>\n        <div className={styles['retailer-info-spinner']} >\n          <Spinner animation=\"border\" role=\"status\" variant=\"secondary\" />\n        </div>\n        <div className={styles['retailer-info-content']} >\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={5} /> <Placeholder bg=\"secondary\" xs={3} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={7} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {!!retailer && (\n        <>\n          <div className={styles['retailer-logo']}>\n            <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n          </div>\n          <div className={styles['retailer-info-content']} >\n            <div>\n              <b>Retailer:</b> {retailer.retail_name}\n            </div>\n            {retailer.location &&\n              <div>\n                <b>Location:</b> {retailer.location}\n              </div>\n            }\n            {retailer.retailer_phone &&\n              <div>\n                <b>Phone:</b> {retailer.retailer_phone}\n              </div>\n            }\n            {retailer.retailer_description &&\n              <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n            }\n          </div>\n        </>\n      )}\n      <Form className={styles['get-directions-from']}>\n        <FormGroup>\n          <div className=\"d-flex align-items-center gap-3\">\n            {!kioskId.length ?\n              <>\n                <Form.Select\n                  name=\"retailer\"\n                  onChange={onChange}\n                  value={retailerId}\n                >\n                  <option value={''} disabled>Get direction from ...</option>\n                  {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                    if (retailer && item.id === retailer.id) return null;\n                    return (\n                      <option key={index} value={item.id}>{item.retail_name}</option>\n                    )\n                  }\n                  )}\n                </Form.Select>\n                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n              </>\n              : null\n            }\n          </div>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n  const {\n    amenity,\n    show,\n    onHide,\n    centerId,\n    retailers,\n    mapObjs,\n    mapObjectName,\n    webApiURI,\n    onClick,\n    kioskId,\n  } = props;\n  const slug = useMemo(() => {\n    if (centerId && mapObjs && retailers && mapObjectName) {\n      const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n      if (mapObj && mapObj.retailer_id) {\n        const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n        if (retailer) {\n          return retailer.slug;\n        }\n      }\n    }\n    return '';\n  }, [centerId, mapObjectName, mapObjs, retailers]);\n  const data = useRetailerData({ centerId, slug, webApiURI });\n  const handleOnClick = (retailerId: string) => {\n    if (!onClick) return;\n    let mapObj = null;\n    if (kioskId) {\n      mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id ?? '') === parseInt(kioskId));\n    } else {\n      mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n    }\n\n    let mapObjectName = '';\n\n\n    if (mapObj) {\n      mapObjectName = mapObj.map_obj_name;\n    }\n\n    if (amenity) {\n      onClick(mapObjectName, amenity);\n    } else {\n      onClick(mapObjectName);\n    }\n  }\n\n  const isAmenity = (amenity !== '' || (mapObjectName ? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n  return (\n    <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n      <div className={styles['retailerInfoCloseBtn']}>\n        <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n      </div>\n      <Modal.Body className=\"p-3\">\n        <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState, useTransition } from \"react\";\nimport { Canvas, ThreeEvent, useThree } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { Mesh, Object3D } from \"three\";\nimport { IExtMesh, IJsonConfig, IMeshParams, IMeshValues } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.scss';\nimport { Alert } from 'react-bootstrap';\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { defaultVars } from \"src/defaults\";\nimport { AmenityID } from \"src/MapBox\";\n\ninterface ISceneComponentProps {\n  mapitData?: MapIt2Response;\n  config: Partial<IJsonConfig>;\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObj[]) => void;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n  handleClickOnRetailer?: (slug: string) => void;\n}\n\nexport interface IZoomData {\n  direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n  const { data, refreshData, removeMissingMapObjects } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n  const [triggerClick, setTriggerClick] = useState<boolean>(false);\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlState, setCameraControlState] = useState<any>(null);\n  const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition, handleClickOnRetailer } = params;\n  const [IsCameraInit, setIsCameraInit] = useState(false);\n\n  const [, startTransition] = useTransition();\n  const [disableClicks, setDisableClicks] = useState(false);\n\n  const [selectedRetailerSlug, setSelectedRetailerSlug] = useState<string>('');\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n  const [, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n  const cameraControlStateRef = useRef<any>(null);\n  cameraControlStateRef.current = cameraControlState;\n  const deviceTypeRef = useRef<string | undefined | null>(null);\n  deviceTypeRef.current = deviceType;\n  // console.log('DEVICE TYPE', deviceType);\n  const floorsMapRef = useRef<{\n    resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null,\n    createRouteToStore: (retailerSlug: string) => void | null,\n    getInitialDistance: () => number,\n  }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const handleFloorChange = (floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }\n\n  const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n\n  useEffect(() => {\n    if (data?.map_objs && data.map_objs.length > 0 && meshFloors.meshParams.length) {\n      const objectNames = meshFloors.meshParams.reduce<string[]>((prev, cur) => {\n        const curVal = cur.reduce<string[]>((subPrev, subCur) => {\n\n          return [...subPrev, subCur.object_id];\n        }, []);\n        return [...prev, ...curVal];\n      }, [])\n      if (objectNames) {\n        removeMissingMapObjects(objectNames);\n      }\n    }\n  }, [data?.map_objs, meshFloors.meshParams, removeMissingMapObjects])\n\n  const mapCenterMarkerRef = useRef(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const context = useMeshObjectContext();\n  const { SetMeshObject } = context;\n  const [, setSceneKey] = useState(0);\n\n  const updateKey = useCallback(() => {\n    setSceneKey((value) => value + 1)\n  }, [])\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n  const config = meshFloors.config;\n  const floors = meshFloors.floors;\n  const meshParams = meshFloors.meshParams;\n\n  const { setConfig: setCxtConfig } = context;\n\n  useEffect(() => {\n    if (context && meshFloors && meshFloors.config) {\n      setCxtConfig(meshFloors.config);\n    }\n  }, [context, meshFloors, setCxtConfig])\n\n  useImperativeHandle(ref, () => ({\n    refreshData,\n    createRouteToAmenity: handleAmenityClick,\n    createRouteToStore: floorsMapRef.current?.createRouteToStore,\n    getInitialDistance: floorsMapRef.current?.getInitialDistance,\n  }))\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      const resizeWidth = () => {\n        setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      }\n      window.addEventListener('resize', () => {\n        resizeWidth();\n        // Update your map or camera settings based on newWidth\n      });\n      resizeWidth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statsParentRef.current]);\n\n  const setCameraControlPos = useCallback((camera_controls_states: any) => {\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraPos(camera_controls_states.display_app.camera)\n      setControlPos(camera_controls_states.display_app.controls)\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n      if (canvasWidth > 1024) {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (canvasWidth > 600) {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      } else {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraPos(camera_controls_states.display_app.camera)\n        setControlPos(camera_controls_states.display_app.controls)\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      }\n    }\n  }, [canvasWidth, config?.ROLE])\n\n  useEffect(() => {\n    if (data && data.camera_controls_states) {\n      setCameraControlState(data.camera_controls_states);\n      setCameraControlPos(data.camera_controls_states);\n    }\n  }, [data, setCameraControlPos]);\n\n  useEffect(() => {\n    if (cameraControlStateRef.current) {\n      setCameraControlPos(cameraControlStateRef.current);\n    }\n  }, [deviceType, canvasWidth, setCameraControlPos])\n\n\n  const { onSettingsLoading } = params;\n  useEffect(() => {\n    if (data && meshFloors.config && onSettingsLoading) {\n      onSettingsLoading?.(\n        {\n          ...data,\n          settings: {\n            ...data.settings,\n            STYLE: meshFloors.config.STYLE,\n            ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n            AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n            AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n            BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n            BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n            BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n            BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n            MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n            OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n            OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n            STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n            STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n            WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n            WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n            KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n            STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n            MIN_ZOOM: meshFloors.config.CAMERA?.minZoom?.toString(),\n            MAX_ZOOM: meshFloors.config.CAMERA?.maxZoom?.toString(),\n            CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n            CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n            ZOOM_STEP: meshFloors.config.ZOOM_STEP ?? defaultVars.ZOOM_STEP ?? '100',\n            SELECTED_ZOOM_LIMIT: meshFloors.config.SELECTED_ZOOM_LIMIT ?? defaultVars.SELECTED_ZOOM_LIMIT ?? '400',\n            SELECTED_ZOOM_LIMIT_DISTANCE: meshFloors.config.SELECTED_ZOOM_LIMIT_DISTANCE?.toString()\n          }\n        });\n    }\n  }, [data, meshFloors, onSettingsLoading])\n\n  const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n    if (canvasWidthRef.current === 0) return;\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n      if (canvasWidthRef.current > 1024) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (canvasWidthRef.current > 600) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      } else {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      }\n    }\n  }, [config?.ROLE])\n\n  useEffect(() => {\n    if (cameraControlStateRef.current && setCameraControlPosition) {\n      setCameraControlPosition(cameraControlStateRef.current);\n    }\n  }, [cameraControlState, setCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapitData = useCallback((index: number, newData: MapObj) => {\n    setFormMapObjData((prev) => {\n      const itemIndex = prev.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n      if (itemIndex !== -1) {\n        prev[itemIndex] = { index, data: { ...newData } };\n      } else {\n        prev.push({ index, data: { ...newData } })\n      }\n\n      return [...prev];\n    });\n\n  }, [])\n\n  const getMapitData = useCallback((): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }, [data, formMapObjData])\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refreshData);\n    }\n  }\n\n  const floorsCount = data?.floors?.length ?? 0;\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    if (!config) {\n      return [null, 0, ''] // not an error - loading/initializing\n    }\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = floorsCount ? floorsCount - 1 : 0;\n    if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n      const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n      const currKioskMeshParams = meshParams?.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (config.ROLE === 'WEBSITE') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n      }\n      if (config.ROLE === 'WEBSITE') {\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [config, meshParams, floorsCount]);\n\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsCount ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = (fullReset: boolean = false) => {\n\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n    setSelectedRetailerSlug('');\n\n    if (floorsMapRef.current) {\n      if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n        let ccs = null;\n        if (deviceTypeRef.current === \"desktop\") {\n          ccs = { ...data.camera_controls_states.desktop }\n        } else if (deviceTypeRef.current === \"display_app\") {\n          ccs = { ...data.camera_controls_states.display_app }\n        } else if (deviceTypeRef.current === \"mobile\") {\n          ccs = { ...data.camera_controls_states.mobile }\n        } else if (deviceTypeRef.current === \"tablet\") {\n          ccs = { ...data.camera_controls_states.tablet }\n        }\n\n        if (ccs) {\n          floorsMapRef?.current?.resetCamera(fullReset, ccs);\n        }\n      } else {\n\n        floorsMapRef?.current?.resetCamera(fullReset);\n\n      }\n    }\n\n  }\n\n  const ccsInit = useRef<{ [key: string]: boolean }>({\n    display_app: false,\n    desktop: false,\n    tablet: false,\n    mobile: false,\n  })\n\n  useEffect(() => {\n\n    if (!config || !deviceType) {\n      return;\n    }\n\n\n    if (!params.config.CAMERA_CONTROLS_STATES) {\n      //@ts-ignore\n      config.CAMERA_CONTROLS_STATES = data.camera_controls_states[deviceType]\n    }\n\n    floorsMapRef?.current?.resetCamera();\n\n  }, [deviceType, config, data?.camera_controls_states])\n\n  useEffect(() => {\n    if (!config) {\n      return;\n    }\n\n    const kiosks: IMeshValues[] = [];\n    meshFloors.meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n    // console.log('kiosks', kiosks);\n\n    const mapObjectIdToKiosk = new Map();\n    const mapObjectIdToLogo = new Map();\n    kiosks.forEach(item => {\n      mapObjectIdToKiosk.set(item.object_id, item.mesh);\n    });\n    // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n    meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n    // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n    // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    const mapData = getMapitData();\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        //TODO use 'value' until api with lock_size will be working\n        // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n        if (logo.userData.kioskConfig !== null) {\n          logo.userData.kioskConfig = {\n            lockSize: mapObj?.value === '1',\n            blink: item.object_id === currKioskId,\n            size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE),\n            floorIndex: kiosk.floor_index,\n          }\n          // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n          logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n          logo.visible = true;\n        }\n        currKioskLogo.push(logo);\n      }\n    });\n\n    // return () => {\n    //     currKioskLogo?.forEach(mesh => {\n    //         mesh.userData.htmlContent = null;\n    //     });\n    // }\n  }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObj[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData, onMapDataUpdate])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (config?.SELECTED_RETAILER_SLUG && IsCameraInit) {\n      setSelectedRetailerSlug(config.SELECTED_RETAILER_SLUG);\n    }\n  }, [config?.SELECTED_RETAILER_SLUG, IsCameraInit])\n\n  useEffect(() => {\n    if (config && data && data.retailers && data.map_objs && selectedRetailerSlug !== '') {\n      const retailer = data.retailers.find(item => {\n        return item.slug === selectedRetailerSlug;\n      })\n      if (retailer) {\n        const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n        const meshParam = meshParams?.flat().find(item => item.object_id === mapObject?.map_obj_name);\n        if (meshParam) {\n          setSelectedFloorIndex(meshParam.floor_index);\n        }\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [config, data, setSelectedActiveObjectId, selectedRetailerSlug, meshParams])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const textParams = meshFloors.textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const logoParams = meshFloors.storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const result = [object as IExtMesh];\n\n    if (textParams) {\n      result.push(textParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    SetMeshObject([...result]);\n  }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n      const object = meshFloors.meshParams[currentFloorIndex]?.find((value) => value.object_id === selectedActiveObjectId);\n      if (object) {\n        //@ts-ignore\n        handleMeshObjectContext(object);\n      }\n      //@ts-ignore\n    }\n  }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [config, setSelectedActiveObjectId]);\n\n  const handleObjectClick = useCallback((object: IExtMesh, targetId: string, softClick?: boolean) => {\n\n    if (!softClick && config?.ROLE === 'DISPLAY_APP' && handleClickOnRetailer && object.mesh_type?.includes(\"store\")) {\n\n      const mapObj = data?.map_objs.find((item) => item.map_obj_name === object.object_id && item.obj_type === \"retailer\")\n      if (mapObj) {\n        const retailer = data?.retailers.find((item) => item.id === mapObj.retailer_id)\n        if (retailer) {\n          handleClickOnRetailer(retailer.slug)\n        }\n      }\n\n      return false;\n    }\n\n    if (config?.ROLE === 'DISPLAY_APP' && currKioskObj) {\n      handleFloorChange(currKioskFloorIndex);\n    }\n\n    startTransition(() => {\n      handleMeshObjectContext(object);\n      setSelectedActiveObjectId(targetId ?? '');\n      setTriggerClick(t => !t);\n      setSelectedRetailerSlug('');\n      setAmenityTargetType('');\n      setFromObjectId('');\n    })\n\n  }, [handleMeshObjectContext, setSelectedActiveObjectId])\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    if (disableClicks) {\n      setDisableClicks(false);\n      return false;\n    }\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value);\n      if (config && config.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleObjectClick(e.object as IExtMesh, targetId ?? '');\n      if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext, disableClicks, handleObjectClick]);\n\n  const onCameraMove = useCallback((e: any) => {\n    if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n      return\n    }\n  }, []);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    // console.log('onPointerEnter', e.object)\n    if (e.object.userData.storeName === '') {\n      // console.warn('onPointerEnter no storeName', e.object);\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerLeave', e.object)\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const startMousePos = useRef<{ x: number | null, y: number | null, distance: number }>({ x: null, y: null, distance: -Infinity });\n\n  const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    if (e.buttons > 0) {\n      if (startMousePos.current.x === null) {\n        startMousePos.current.x = e.clientX;\n      }\n      if (startMousePos.current.y === null) {\n        startMousePos.current.y = e.clientY;\n      }\n      if (startMousePos.current.x !== null && startMousePos.current.y !== null) {\n        let newDistance = Math.sqrt(Math.pow(startMousePos.current.x - e.clientX, 2) + Math.pow(startMousePos.current.y - e.clientY, 2));\n        if (newDistance > startMousePos.current.distance) {\n          startMousePos.current.distance = newDistance;\n        }\n      }\n\n      startTransition(() => {\n        // Disable dragging if the user accidentally moved the map within 15 pixels by clicking on the store\n        if (startMousePos.current.distance > 15) {\n          setDisableClicks(true);\n        }\n      });\n    } else {\n      startMousePos.current.x = startMousePos.current.y = null;\n      startMousePos.current.distance = -Infinity;\n    }\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n  }\n\n  if (data && (!data.floors || data.floors.length <= 0)) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!config || !meshFloors.meshParams.length) {\n    console.warn('LOADING MAP')\n    if (config?.ROLE === 'WP_SITE') {\n      return <div className=\"messageStyle\" style={messageStyle}>No Map for Center</div>\n    }\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div className=\"messageStyle\" style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && config.ROLE === 'WEBSITE') {\n    console.error('NO KIOSK OBJECT FOUND');\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      // setSelectedActiveObjectId(retailerId);\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }\n\n  return (\n    <>\n      {config.ROLE === 'PORTAL' &&\n        <div className={styles['mapbox-admin-form']}>\n          {!selectedActiveObjectId ?\n            <Alert variant=\"info\">Select a store to customize.</Alert>\n            :\n            <MapboxForm\n              floorIndex={currentFloorIndex}\n              meshFloors={meshFloors}\n              config={config}\n              data={getMapitData()}\n              setData={handleChangeMapitData}\n              selectedId={selectedActiveObjectId}\n              centerId={params.config.CENTER_ID as string}\n              onSubmit={handleOnSubmit}\n              apiURI={params.webApiURI}\n              onResetData={params.onResetData}\n              triggerSceneUpdate={updateKey}\n            />\n          }\n        </div>\n      }\n\n      <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n        <UIComponent\n          accentColor={config.ACCENT_COLOR.getStyle()}\n          floors={floors}\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          amenitiesList={amenitiesList}\n          handleAmenityClick={handleAmenityClick}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          role={config.ROLE}\n          mapObjs={data?.map_objs}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n          <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n          {/*<axesHelper args={[5000]} />*/}\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n\n          <FloorsMap\n            onCameraMove={onCameraMove}\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            // @ts-ignore\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            config={config}\n            ref={floorsMapRef}\n            cameraPos={cameraPos}\n            controlPos={controlPos}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n            isSelectedRetailerSlug={true}\n            setIsCameraInit={setIsCameraInit}\n            retailers={data?.retailers ?? []}\n            mapObjs={data?.map_objs ?? []}\n            handleObjectClick={handleObjectClick}\n            triggerClick={triggerClick}\n          />\n        </Canvas>\n\n        {config.ROLE !== 'DISPLAY_APP' && (\n          <div ref={labelRef}\n            className=\"store-name-placeholder\"\n            style={{\n              position: 'absolute',\n              padding: 10,\n              background: '#ffffff',\n              fontWeight: 600,\n              color: '#000000',\n              fontSize: 16,\n              display: currentHoveredObject ? 'block' : 'none',\n              top: 300,\n              left: 400,\n              opacity: .8,\n            }}\n          >{currentHoveredObject && currentHoveredObject.userData.storeName}</div>\n        )}\n      </div>\n      {\n        config.ROLE !== 'PORTAL' ?\n          <RetailerInfoModal\n            amenity={selectedAmenityType}\n            show={showRetailerInfo}\n            onHide={() => setShowRetailerInfo(false)}\n            centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n            mapObjectName={selectedActiveObjectId}\n            retailers={data?.retailers}\n            mapObjs={data?.map_objs}\n            webApiURI={params.webApiURI ?? ''}\n            onClick={handleRetailerInfoOnClick}\n            kioskId={config.KIOSK.toString()}\n          />\n          : null\n      }\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\nimport useAllRetailers from \"./Hooks/useAllRetailers\";\nimport { amenitiesList } from \"./helpers/amenities.helper\";\n\ninterface useMapIt2DataProps {\n  CENTER_ID: string;\n  mapitData?: MapIt2Response;\n  webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n  data: MapIt2Response | null,\n  refreshData: () => void,\n  removeMissingMapObjects: (objectNames: string[]) => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n  const [data, setData] = useState<MapIt2Response | null>(null);\n\n  if (!CENTER_ID && !mapitData) {\n    console.error('useMapit2Data requires either CENTER_ID or mapitData');\n  }\n\n  const { getAll } = useAllRetailers(webApiURI as string, CENTER_ID as string, 100);\n\n  const getData = useCallback(() => {\n    let apiURI = webApiURI || null;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n      const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n      const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n      const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n      const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n      const mapObjsPromise = fetch(mapObjsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const floorsPromise = fetch(floorsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      })\n        .then(data => {\n          if (!data\n            || !data.items\n            || (data.items && !data.items.length)) {\n            console.error('Empty floors data from server');\n          }\n          return data;\n        }).catch(e => { console.error(e) })\n\n      const kiosksPromise = fetch(kioskApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const settingsPromise = fetch(settingsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { console.error(e) })\n\n      const responsivePromise = fetch(responsiveApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { throw new Error(e) })\n\n      Promise.all<Array<any>>([\n        // retailersPromise,\n        // getAllRetailers(CENTER_ID, 1, 100, apiURI, 0),\n        getAll(),\n        mapObjsPromise,\n        floorsPromise,\n        kiosksPromise,\n        settingsPromise,\n        responsivePromise\n      ]).then(data => {\n        if (data.length >= 5) {\n          const responseData: Partial<MapIt2Response> = {};\n          responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n            id: item.id,\n            retail_name: item.name,\n            slug: item.slug,\n            location: item.location,\n            retailer_phone: '',\n            retailer_description: '',\n            logo: item.media.url,\n            map_obj_name: '',\n          }));\n          responseData.map_objs = [...data[1].items].map(item => ({\n            ...item,\n            offsetX: item.offset_x,\n            offsetY: item.offset_y,\n          }));\n          responseData.floors = [...data[2].items];\n          responseData.settings = {\n            ...demoData.settings as Settings,\n            KIOSK_SIZE: \"1\",\n          }\n          responseData.kiosks = [];\n          responseData.amenities = amenitiesList;\n          responseData.kiosks = [...data[3].items];\n          const settings: Settings = data[4]?.settings ? data[4].settings : {\n            \"STYLE\": \"3D\",\n            \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n            \"ACCENT_COLOR\": \"4EA5FF\",\n            \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n            \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n            \"WALL_THICKNESS\": \"0.6\",\n            \"WALL_COLOR\": \"888888\",\n            \"BOUNDARY_THICKNESS\": \"0.8\",\n            \"BOUNDARY_COLOR\": \"888888\",\n            \"BASE_COLOR\": \"25292B\",\n            \"STORE_TEXT_COLOR\": \"222222\",\n            \"OVERLAY_COLOR\": \"FFFFFF\",\n            \"OVERLAY_OPACITY\": \"0.7\",\n            \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n            \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n            \"ZOOM_STEP\": \"100\",\n          };\n          if (data[5]) {\n            responseData.camera_controls_states = data[5];\n          } else {\n            responseData.camera_controls_states = { ...demoData.camera_controls_states }\n          }\n          responseData.settings = settings;\n\n          setData({ ...responseData as MapIt2Response })\n        }\n      })\n    }\n  }, [CENTER_ID, getAll, webApiURI])\n\n  useEffect(() => {\n    if (mapitData) {\n      setData(mapitData);\n      return;\n    }\n\n    if (!CENTER_ID) {\n      return;\n    }\n\n    getData();\n\n  }, [CENTER_ID, mapitData, getData]);\n\n  const removeMissingMapObjects = useCallback((objectNames: string[]) => {\n    if (data?.map_objs) {\n      const mapObjects = data.map_objs.filter(item => {\n        return objectNames.includes(item.map_obj_name)\n      })\n      if (mapObjects.length < data.map_objs.length) {\n        setData({\n          ...data,\n          map_objs: [...mapObjects],\n        })\n      }\n    }\n  }, [data]);\n\n  const refreshData = () => getData();\n  return { data, refreshData, removeMissingMapObjects };\n}","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport { retailersApi } from './services/retailersApi'\n\nexport const store = configureStore({\n  reducer: {\n    [retailersApi.reducerPath]: retailersApi.reducer,\n  },\n  middleware: (getDefalultMiddleware) => getDefalultMiddleware().concat(retailersApi.middleware),\n})\n\nsetupListeners(store.dispatch);\n","import { MutableRefObject, forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport styles from './MapBox.module.scss';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport { isMapIt2Response, MapIt2Response, MapObj, MapObjToSave } from \"./mapitApiTypes\";\nimport { IJsonConfig } from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapBoxContextProvider from './contexts/MapBoxContextProvider';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n  createRouteToStore: (retailerSlug: string) => void;\n  getInitialDistance: () => number;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station';\n\nexport interface IAppProps {\n  mapitData?: unknown;\n  config: Partial<IJsonConfig>;\n  stats?: boolean;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n  handleClickOnRetailer?: (slug: string) => void;\n}\n\n\nconst MapBox = forwardRef(({\n  mapitData,\n  config,\n  onSettingsLoading,\n  webApiURI,\n  mediaStorageURI,\n  onSubmit,\n  refObj,\n  deviceType,\n  setCameraControlPosition,\n  onResetData,\n  onExtractedAmenities,\n  handleClickOnRetailer\n}: IAppProps, ref) => {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n  useImperativeHandle(ref, () => {\n    return {\n      getInitialDistance: refObj?.current?.getInitialDistance\n    }\n  });\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <MapBoxContextProvider>\n        <MeshObjectContextProvider>\n          <div className={`${styles['mapbox-component']} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n            <SceneComponent\n              ref={refObj}\n              setSelectedActiveObjectId={setSelectedActiveObjectId}\n              selectedActiveObjectId={selectedActiveObjectId}\n              mapitData={mapData}\n              config={config}\n              onSettingsLoading={onSettingsLoading}\n              webApiURI={webApiURI}\n              mediaStorageURI={mediaStorageURI}\n              onSubmit={handleOnSubmit}\n              onResetData={onResetData}\n              deviceType={deviceType}\n              setCameraControlPosition={setCameraControlPosition}\n              onExtractedAmenities={onExtractedAmenities}\n              handleClickOnRetailer={handleClickOnRetailer}\n            />\n            <div className={styles.hide}>\n              <div id=\"map-special-svg-kiosk\">\n                <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n                  <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-atm\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 577.8 577\">\n                  <path d=\"M388.7,314c-3.7-10.3-10.3-19.8-17.7-27.2c-7.4-7.4-17.7-14-29.5-19.1c-6.6-2.9-19.2-6.6-39.1-11.8V144.2 c13.3,2.2,22.8,8.1,30.2,16.2c7.4,8.1,11.8,19.9,14,35.3l39.8-5.9c-2.9-24.3-13.3-44.1-30.2-58.1c-13.3-11-31-17.7-53.8-19.8V93.4 h-24.3v18.4c-25.8,2.2-45,9.6-58.2,21.3c-19.9,17.7-29.5,39.7-29.5,67.6c0,15.5,3.7,29.4,10.3,41.9s16.2,22,28.7,28.7 c17,9.6,33.2,16.2,49.4,20.6v121.3c-14.8-1.5-28-8.8-39.1-22.8c-7.4-9.6-13.3-25-16.2-46.3l-39.1,7.4c1.5,20.6,6.6,37.5,15.5,51.5 s19.9,23.5,31.7,30.1c12.5,6.6,28,11,47.9,13.2v39v-0.1V483h22.1v-39c28-0.7,50.1-11,67.1-28.7c17-18.4,25.8-40.4,25.8-67.6 C394.6,336,392.4,324.3,388.7,314z M278.9,145.1v107.2c-17.7-5.2-30.2-11.8-37.6-20.6s-11.1-19.8-11.1-33.1c0-14,4.4-25.7,13.3-35.3 C252.2,153.9,263.7,147.4,278.9,145.1V145h0.7C279.3,145,279.1,145,278.9,145.1z M340,394.2c-9.6,11-22.1,18.4-37.6,19.8l0,0V297.9 c20.6,5.2,34.6,11.8,42,20.6c6.6,8.1,10.3,19.8,10.3,33.8C354.8,369.2,349.6,383.1,340,394.2z\" />\n                  <path d=\"M289.8,2.5c-158.7,0-288,128-288,287.2c0,158.3,129.3,287.2,288,287.2s288-128.9,288-287.2S448.6,2.5,289.8,2.5z M289.9,533.9C155,533.9,45.2,424.3,45.2,289.8C45.2,154.5,155,45.7,289.9,45.7s244.7,109.5,244.7,244.1S424.8,533.9,289.9,533.9z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-management\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 414.6\">\n                  <path d=\"M371.6,180.4c66.8,0,101,58.5,121.4,121.9l16.4,50.4c2.7,8.8-7.5,16.3-16.4,16.3h-56.6l-7.5-27.2 c-17.7-53.1-45-106.2-94.8-125.9c13-8.8,23.9-21.1,30.7-35.4C366.1,180.4,368.8,180.4,371.6,180.4z M441.2,145.7 c64.8,2,98.2,59.2,118.7,121.9l15.7,49.7c2.7,8.8-7.5,17.7-16.4,17.7h-35.5l-12.3-38.1c-16.4-53.1-44.3-106.2-94.8-125.9 C426.2,162.7,434.3,155.2,441.2,145.7z M51.6,334.3H16.8c-9.6,0-19.1-8.2-16.4-17.7l15.7-49.7C35.9,204.2,70.1,147.1,134.9,145 c6.1,9.5,15,18.4,24.6,24.5c-49.8,19.7-77.8,72.8-94.8,125.9L51.6,334.3L51.6,334.3z M437.7,0c35.5,0,64.8,28.6,64.8,64.7 c0,31.3-22.5,57.2-52.5,62.6c3.4-8.8,5.5-18.4,5.5-27.9c0-39.5-27.3-71.5-62.8-81C403.6,6.8,419.3,0,437.7,0L437.7,0z M137.6,0 c17.7,0,34.1,6.8,45,18.4c-35.5,9.5-62.8,41.5-62.8,81c0,9.5,2.1,19.1,5.5,27.9C96,121.9,72.8,96,72.8,64.7 C73.5,28.6,102.1,0,137.6,0L137.6,0z M287.7,0c19.8,0,37.5,8.8,49.8,22.5c-15.7,6.8-29.3,19.1-38.2,34l-3.4,5.5c-2.7,0-5.5,0-7.5,0 c-2,0-6.1,0-8.9,0l-3.4-5.5c-9.6-15-22.5-27.2-38.2-34C250.2,8.9,267.9,0,287.7,0L287.7,0z M287.7,226c66.8,0,101,58.5,122.1,121.9 l15.7,50.4c2.7,8.8-8.2,16.3-16.4,16.3H166.2c-9.6,0-19.8-8.2-16.4-16.3l15.7-50.4C186,284.6,220.8,226,287.7,226z M287.7,81 c35.5,0,64.8,28.6,64.8,64.7s-28.7,64.7-64.8,64.7c-35.5,0-64.8-28.6-64.8-64.7S252.2,81,287.7,81z M138.3,369H82.3 c-9.6,0-19.1-8.2-16.4-16.3l15.7-50.4c21.1-63.3,55.3-121.9,122.1-121.9c2.7,0,5.5,0,7.5,0c6.1,15,17.7,27.2,30.7,35.4 c-49.8,19.7-78.5,72.8-94.8,125.9C147.1,341.8,138.3,369,138.3,369z M203.8,34.7c23.9,0,44.3,12.9,55.9,31.3 c-32.1,12.2-55.9,42.9-55.9,79c0,6.1,0.7,12.2,2.1,18.4h-2.1c-35.5,0-64.8-28.6-64.8-64.7S168.3,34.7,203.8,34.7z M371.6,34.7 c35.5,0,64.8,28.6,64.8,64.7s-29.3,64-64.8,64h-2.7c2.1-6.1,2.7-12.2,2.7-18.4c0-36.8-23.9-66.7-55.9-79 C327.2,47.7,347,34.7,371.6,34.7z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-playarea\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 537.9\">\n                  <path d=\"M384.3,137c38,0,68.8-30.7,68.8-68.5S422.3,0,384.3,0s-68.8,30.7-68.8,68.5S346.4,137,384.3,137z\" />\n                  <path d=\"M283.3,96c20,26.3,35.9,53.3,67.6,64.4c31.2,11.1,60.5,11.1,83.5-5.3c22.9-16.4,34.7-46.8,54.1-87.2 c18.8-40.4,34.1-48,57-48c23.5,0,31.2,28.1,30.6,39.8s-10.6,31-40,52.7c-49.4,36.3-57.6,108.3-59.4,127.7 c-1.8,19.3-2.9,50.4,17.6,169.2c20.6,118.9-20,125.9-25.3,127.1c-5.3,0.6-21.2,8.2-31.1-16.4c-10-24.6-11.8-91.3-14.1-120 c-2.9-28.7-6.5-70.9-35.9-79c-30-8.2-40.6,39.8-51.7,76.1c-10.6,36.9-40,71.4-72.3,59.1s-29.4-50.4-10-78.5 c19.4-27.5,61.7-57.4,67.6-124.1c5.9-66.8-11.8-69.1-68.2-90.8c-55.8-22.3-60.5-33.4-67.6-48.6s7.6-46.8,31.1-52.7 C239.2,55.1,259.1,63.9,283.3,96L283.3,96z\" />\n                  <path d=\"M134.7,251.7c26.9,0,48.8-21.8,48.8-48.6s-21.8-48.6-48.8-48.6s-48.8,21.8-48.8,48.6S107.7,251.7,134.7,251.7z\" />\n                  <path d=\"M204,227.8c-15.3,17.6-28.2,35.7-51.1,41.6c-22.9,6.4-43.5,4.7-58.8-8.2c-15.3-12.9-21.7-35.1-32.9-64.4S40,161,23.5,159.8 C7.1,158.7,0,178,0,186.2c-0.6,8.2,5.9,22.3,25.3,39.2C58.2,253.5,60,305.1,60,318.5c0.6,13.5-0.6,35.7-21.7,118.3 s7.1,89.6,10.6,90.8s14.7,7,22.9-10s12.9-63.8,16.5-83.7c3.5-19.9,8.2-49.8,29.4-53.9s26.5,30.4,32.3,56.8 c5.9,26.3,24.7,52.7,47.6,45.7c22.9-7,23.5-34,11.2-54.4c-12.3-20.5-40-43.9-40.6-90.8c-0.6-47.4,12.3-48,52.9-60.3 c40.6-12.3,44.7-20.5,50.5-30.4c5.9-10-2.9-33.4-18.8-38.6C237.5,201.4,222.8,206.7,204,227.8L204,227.8z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-restroom\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 533.9\">\n                  <path d=\"M282.3,533.9h9.2V0h-9.2V533.9z\" />\n                  <path d=\"M118.2,97.1c25.4-4.6,41.6-30.1,34.7-55.5C146,16.2,122.9,2.3,97.4,6.9S58.1,39.3,62.8,62.4S95.1,104,118.2,97.1z\" />\n                  <path d=\"M159.8,145.6h4.6c0,0,2.3,0,2.3,2.3L183,270.4c2.3,9.2,9.2,16.2,18.5,16.2c11.6,0,18.5-9.2,18.5-20.8l-18.5-129.4 c-2.3-13.9-13.9-23.1-27.7-23.1H44.3c-13.9,0-25.4,9.2-27.7,23.1L0.4,265.8c-2.3,11.6,6.9,20.8,18.5,20.8c9.2,0,16.2-6.9,18.5-16.2 l16.2-122.5c0,0,0-2.3,2.3-2.3h4.6c0,0,2.3,0,2.3,2.3L30.4,390.6c0,0,0,2.3,2.3,2.3h37c0,0,2.3,0,2.3,2.3v117.9 c0,9.2,6.9,16.2,16.2,16.2s16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h11.6c0,0,2.3,0,2.3,2.3v117.9c0,9.2,6.9,16.2,16.2,16.2 c9.2,0,16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h30.1c0,0,2.3,0,2.3-2.3l-27.7-242.7l0,0l0,0L159.8,145.6z\" />\n                  <path d=\"M497.3,76.3c13.9-23.1,4.6-50.9-16.2-62.4s-50.9-6.9-64.7,16.2c-13.9,23.1-4.6,50.9,16.2,62.4 C455.7,106.3,483.5,99.4,497.3,76.3z\" />\n                  <path d=\"M545.9,113.3h-178c-13.9,0-25.4,9.2-27.7,23.1v129.4c0,11.6,9.2,20.8,20.8,20.8s18.5-9.2,18.5-20.8V159.5c0,0,0-2.3,2.3-2.3 h2.3c0,0,2.3,0,2.3,2.3l25.4,161.8v187.2c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V323.6c0,0,0-2.3,2.3-2.3h6.9 c0,0,2.3,0,2.3,2.3v184.9c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V321.3l25.4-161.8c0,0,0-2.3,2.3-2.3h-2.3 c0,0,2.3,0,2.3,2.3v106.3c0,11.6,9.2,20.8,20.8,20.8s20.8-9.2,20.8-20.8V136.4C571.4,122.5,559.8,113.3,545.9,113.3L545.9,113.3 L545.9,113.3z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-family-restroom\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 522.5\">\n                  <path d=\"M119.8,91.5c25-5.9,40.5-30.8,34.6-55.7c-5.9-24.9-30.9-40.4-55.9-34.5S58,32,63.9,56.9S94.8,97.3,119.8,91.5z\" />\n                  <path d=\"M160.6,139.1h4.5c0.6,0,1.3,0.6,1.3,1.3l15.3,123.1c1.3,8.9,8.9,15.9,17.8,15.9c10.8,0,19.1-9.5,17.8-20.3l-15.9-128.9 c-1.9-13.3-13.4-24.1-27.4-24.1H43.4c-14,0-25.5,10.2-27.4,24.1L0.1,259.1c-1.3,10.8,7,20.3,17.8,20.3c8.9,0,16.5-7,17.8-15.9 l15.3-123.8c0-0.6,0.6-1.3,1.3-1.3h4.5c0.6,0,1.3,0.6,1.3,1.3L29.4,384.1c0,0.6,0.6,1.3,1.3,1.3H67c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h36.3c0.6,0,1.3-0.6,1.3-1.3L158,140.3 C159.3,139.7,159.9,139.1,160.6,139.1L160.6,139.1z\" />\n                  <path d=\"M498.9,69.8c12.9-22.1,5.4-50.5-16.8-63.4c-22.2-12.9-50.6-5.4-63.6,16.7c-12.9,22.1-5.4,50.5,16.8,63.4 C457.5,99.4,486,91.9,498.9,69.8z\" />\n                  <path d=\"M547.9,106.1H369.6c-14,0-25.5,10.2-27.4,24.1v128.9c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7v-106 c0-0.6,0.6-1.3,1.3-1.3h2.5c0.6,0,1.3,0.6,1.3,1.3l25.5,162.5v187.3c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7v-186 c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v186c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7V315.6l25.5-162.5 c0-0.6,0.6-1.3,1.3-1.3h2.6c0.6,0,1.3,0.6,1.3,1.3v106c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7V130.2 C573.4,116.2,562,106.1,547.9,106.1L547.9,106.1z\" />\n                  <path d=\"M259.6,480l19.7-19.7L251.9,433L229,455.8c-7.6,7.6-5.7,20.3,1.3,27.3l32.5,33.6c12.7,12.7,29.3-5.1,17.2-17.1L259.6,480 L259.6,480z M288.9,347.9c19.1,0,34.4-15.2,34.4-34.3s-15.3-34.3-34.4-34.3s-34.4,15.2-34.4,34.3S269.7,347.9,288.9,347.9z  M369.7,405.7l-46.5-46.3c-3.8-3.8-8.3-6.3-14.7-6.3h-41.4c-6.4,0-10.8,2.5-14,6.3l-45.9,45.7c-12.7,12.7,4.5,28.6,17.2,15.9 l28-27.9v26h72.6v-26l28.6,28.6C364.6,433.6,381.8,417.1,369.7,405.7L369.7,405.7z M324.5,433l-27.4,27.3l19.7,19.7l-20.4,20.3 c-12.1,12.1,4.5,29.2,17.2,17.1l32.5-33.6c7-7,8.9-20.3,1.3-27.3C347.4,455.9,324.5,433,324.5,433z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-elevator\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 576\">\n                  <path d=\"M576,145.2v268.6c-0.1,1.6-0.3,3.1-0.3,4.7c-0.3,33.3-0.6,66.6-0.8,99.9c-0.1,21.1-9.7,37.2-26.7,49 c-7.7,5.4-15.9,9.3-25.9,8c-3.8-0.5-7.7-0.1-11.5-0.1c-115.3,0.1-230.6,0.2-345.9,0.3c-1.1,0-2.2,0.2-3.3,0.3h-16.9 c-1.2-0.1-2.4-0.3-3.6-0.3c-30.2-0.3-60.4-0.6-90.7-0.8c-11.1-0.1-20.7-4.1-29.1-11.2c-8.7-7.4-15.5-16.7-19.9-27.3l-0.2-0.5 c-0.7-1.6-1.1-3.4-1.2-5.4v0C0,492.8,0,455.1,0,417.4c0-124.1,0-248.1,0-372.2c0-0.2,0-0.3,0-0.5c0-1.5,0.3-2.9,0.7-4.2l0,0.1 C8.3,22.5,20.5,8.9,38.7,1c1.2-0.5,2.6-0.9,4-0.9h0c162.8,0,325.6,0,488.4,0c1.5,0,2.8,0.4,4.1,0.9l-0.1,0c3.4,1.4,6.1,2.7,8.8,4.2 l-0.4-0.2c19.7,11.2,30.9,27.8,31.3,50.8c0.4,28.2,0.6,56.3,0.8,84.5C575.7,141.8,575.8,143.5,576,145.2L576,145.2z M536.4,288.6 h0.3c0-56.7,0-113.4,0-170c0-18.2-0.4-36.4-0.7-54.6c-0.1-8-8.4-19.8-15.9-22.7c-1-0.4-2.1-0.6-3.2-0.7h0c-3.2-0.3-6.4-0.6-9.5-0.6 c-25.5-0.4-51-0.9-76.6-1c-96.4-0.2-192.7-0.4-289.1-0.4c-22.9,0-45.8,0.1-68.7,0.3c-3.4,0-6.8,0.1-10,0.9 c-9.9,2.3-17.1,8.3-21.7,17.3c-1,1.9-2,3.9-2.1,5.9c-0.1,149.8-0.1,299.6-0.1,449.4c0,0.9-0.1,2,0.3,2.7c2.7,4.2,5.1,8.6,8.3,12.3 c5.6,6.3,13.2,8.4,21.6,8.4c23.7,0.1,47.5,0.6,71.2,0.6c123.5,0,247,0,370.5,0c0.1,0,0.2,0,0.3,0c1.1,0,2.1-0.2,3-0.6l-0.1,0 c8.3-3.5,15.4-8.4,20.2-16.3c1.2-1.8,2-4.1,2-6.5l0,0C536.4,438.2,536.4,363.4,536.4,288.6L536.4,288.6z\" />\n                  <path d=\"M307,277.5l75.9,68.4l0.9-0.2V150.9h49.7v194.8l1,0.3l78.2-67.4c0.1,1,0.2,1.7,0.3,2.4c0.3,19.9,0.6,39.8,0.8,59.7 c0,0,0,0,0,0.1c0,1.4-0.5,2.6-1.4,3.6l0,0c-34.1,32.7-68.2,65.3-102.3,97.9c-0.3,0.3-0.6,0.5-1,0.9c-0.6-0.5-1.3-1-1.9-1.5 c-32.7-30.7-65.5-61.4-98.2-92c-1.4-1.2-2.3-3-2.3-5c0-0.1,0-0.3,0-0.4v0c0.2-20.9,0.3-41.9,0.4-62.8C307,280.5,307,279.4,307,277.5 L307,277.5z\" />\n                  <path d=\"M142.2,234.5L67,301.8c-0.1-1.2-0.3-1.9-0.3-2.7c-0.3-20.7-0.7-41.5-1-62.2c0-1.3,0.5-2.5,1.3-3.4l0,0 c33.3-31.4,66.7-62.8,100.1-94.1c0.3-0.3,0.6-0.5,1-0.8c5.9,5.7,11.8,11.3,17.7,16.9c28.1,26.9,56.2,53.9,84.3,80.9 c0.9,0.8,1.4,2,1.5,3.3v0c-0.5,20.2-1.1,40.3-1.6,60.5c0,0.3-0.1,0.7-0.2,1.7l-77.4-67.1l-0.9,0.1v193.9h-48.3v-194L142.2,234.5z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-security\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 597.6\">\n                  <path d=\"M554,80.7L298.5,1.5c-6.6-2-13.2-2-19.9,0L23.2,80.7C9.3,84.7,0,97.9,0,112.4c0,352.5,178.7,436.4,274,481.9 c4.6,2,9.3,3.3,13.9,3.3c4.6,0,9.9-1.3,13.9-3.3c96-45.5,274-129.4,274-481.9C577.2,97.9,567.9,85.3,554,80.7z M288.6,527.6 C197.2,484.1,73.5,411.4,66.2,136.2l222.4-68.6L511,136.8C503.7,412.1,379.3,484.1,288.6,527.6z\" />\n                  <path d=\"M278.7,152l-26.5,87.1l-90.7-2.6c-4.6,0-8.6,2.6-9.9,7.3c-1.3,4.6,0,9.2,4,11.9l74.8,51.5L200.6,393c-1.3,4.6,0,9.2,4,11.9 c4,2.6,8.6,2.6,12.6,0l72.1-54.8l72.1,54.8c4,2.6,8.6,2.6,12.6,0c4-2.6,5.3-7.3,4-11.9l-29.8-85.8l74.8-51.5c4-2.6,5.3-7.3,4-11.9 c-1.3-4.6-5.3-7.3-9.9-7.3l-90.7,2l-26.5-87.1c-1.3-4.6-5.3-7.3-9.9-7.3C283.9,144.1,280,147.4,278.7,152L278.7,152z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n        </MeshObjectContextProvider>\n      </MapBoxContextProvider>\n    </Provider>\n\n\n  );\n})\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\nimport { IAmenitiesInteractiveList } from \"./types\";\n\nexport type IRetailer = {\n  id: string;\n  index?: string;\n  retail_name: string;\n  slug: string;\n  location: string;\n  retailer_phone: string;\n  retailer_description: string;\n  logo: string;\n  map_obj_name: string;\n};\n\nexport type MapObj = {\n  id: string | number;\n  center_id: string;\n  retailer_id: string;\n  kiosk_id: string | null;\n  map_obj_name: string;\n  obj_type: string;\n  layer_type: string;\n  value: string;\n  custom_text: string;\n  custom_image: string;\n  hover_text: string;\n  bg_color: string;\n  transparent: string | number;\n  text_color: string;\n  size: string;\n  lock_size: string;\n  rotate: string;\n  offsetX: string;\n  offsetY: string;\n  goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & { kiosk_id: number | null };\n\nexport type Floor = {\n  id: string;\n  svg_map?: string;\n  objsGroup?: Group;\n  interactiveObjs?: any[];\n  escalatorsObjs?: any[];\n  escalatorsNodes?: Record<any, any>;\n  escalatorMeshes?: any[];\n  route_points?: IRoutePoint[];\n  route_tube?: any;\n  route_texture?: Texture | null | undefined;\n  routeMeshes?: any[];\n  route_active?: boolean;\n  center_id?: string;\n  title: string;\n  svg?: string;\n  status?: string;\n  created_at?: string;\n};\n\nexport type CameraControlsState = {\n  camera: { x: number, y: number, z: number };\n  controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n  STYLE: '2D' | '3D',\n  MAP_BACKGROUND_COLOR: string;\n  ACCENT_COLOR: string;\n  STORE_DEFAULT_COLOR: string;\n  BIG_STORE_DEFAULT_COLOR: string;\n  WALL_THICKNESS: string;\n  WALL_COLOR: string;\n  BOUNDARY_THICKNESS: string;\n  BOUNDARY_COLOR: string;\n  BASE_COLOR: string;\n  STORE_TEXT_COLOR: string;\n  STORE_HEIGHT: string;\n  OVERLAY_COLOR: string;\n  OVERLAY_OPACITY: string;\n  AMENITIES_NAV_BG_COLOR: string;\n  AMENITIES_NAV_ICON_COLOR: string;\n  KIOSK_SIZE: string;\n  MIN_ZOOM: string;\n  MAX_ZOOM: string;\n  CAMERA_MIN_DISTANCE: string;\n  CAMERA_MAX_DISTANCE: string;\n  ZOOM_STEP: string;\n  SELECTED_ZOOM_LIMIT: string;\n  SELECTED_ZOOM_LIMIT_DISTANCE: string;\n};\n\nexport type Kiosk = {\n  id: string;\n  title: string;\n  map_obj_name: string;\n};\n\nexport type Amenity = {\n  name: string;\n  image: string;\n};\n\nexport type MapIt2Response = {\n  retailers: IRetailer[];\n  map_objs: MapObj[];\n  floors: Floor[];\n  camera_controls_states: {\n    display_app: CameraControlsState;\n    desktop: CameraControlsState;\n    tablet: CameraControlsState;\n    mobile: CameraControlsState;\n  };\n  settings: Settings;\n  kiosks: Kiosk[];\n  amenities: IAmenitiesInteractiveList[];\n};\n\nexport type IRoutePoint = {\n  name: string;\n  node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n  if (typeof obj !== 'object' || obj === null) return false;\n\n  const response = obj as Record<string, unknown>;\n\n  return (\n    Array.isArray(response.retailers) &&\n    Array.isArray(response.map_objs) &&\n    Array.isArray(response.floors) &&\n    typeof response.camera_controls_states === 'object' &&\n    response.camera_controls_states !== null &&\n    typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n    typeof response.settings === 'object' &&\n    Array.isArray(response.kiosks) &&\n    typeof response.amenities === 'object'\n  );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","hex_to_color","hex_code","Color","getFormatedColor","replace","amenitiesList","type","icon","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","allMapObjects","allIndexedRetailers","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","item","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","escalator_clone","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minZoom","maxZoom","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","SELECTED_ZOOM_LIMIT","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","set","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","log","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","size","get_store_name_logo_geo","textLogoNamePrefix","myFont","handleAsync","new_object_id","result","boundingBox","computeBoundingBox","mesh_center_point","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","logoMesh","storeLogo","getImageLogo","MapBoxContext","createContext","meshByObjectId","Map","setMeshByObjectId","setAllMapObjects","setAllIndexedMapObjects","setAllIndexedRetailers","setAllNodesFloor","createGraph","setPathFinderGraph","setNgraphPath","floorsData","MapBoxContextProvider","children","useState","_jsx","jsx","Provider","useMapBoxContext","context","useContext","Error","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","meshParams","setMeshParams","textParams","setTextParams","storeLogos","setStoreLogos","escalatorNodes","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","mergedConfig","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","MIN_ZOOM","MAX_ZOOM","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","canvasWidth","screen","camera_controls_states","mobile","tablet","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","SELECTED_ZOOM_LIMIT_DISTANCE","values","clearScene","removeFromParent","GeometriesAndMaterials","graph","results","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","point","origin_point","target_direction","storeIntersects","intersectObjects","object","escalatorIntersects","assign_route_nodes_to_stores","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","loadFloors","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","useMeshObjectContext","MapCenterMarker","lockSize","blink","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","svgOrigin","svgBlob","Blob","svgUrl","URL","createObjectURL","svgTexture","Texture","needsUpdate","_jsxs","jsxs","Html","className","MapObject","setUpdate","React","currentFloorIndex","triggerUpdate","kioskConfig","htmlContent","pointerEvents","distanceFactor","uuid","_Fragment","Fragment","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","boundingSphere","display","stopPropagation","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","isSelectedRetailerSlug","setIsCameraInit","mapObjs","handleObjectClick","triggerClick","cameraLimits","SetCameraLimits","min","initialDistance","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","isUseDefaultsLimits","resetCamera","fullReset","selectedFloorMeshParams","meshes","focus","aspect","isZeroCCS","cameraV3","controls","cameraDistance","setLength","fromPosition","fromTarget","animationStartTime","duration","cl","focusDistance","Number","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","clearEscalators","flat","targetMesh","currentActiveObject","zoomStep","getInitialDistance","onCameraMove","vector","animationTime","animationProgress","lerpVectors","createRouteToStore","retailerSlug","slug","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","retailersApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getRetailers","query","limit","page","url","headers","useLazyGetRetailersQuery","useAllRetailers","setRetailers","lastIndexOf","slice","fetchAllRetailers","totalPages","requests","Promise","resolve","currentPage","all","then","ret","reject","getAll","status","round","UIComponent","selectedFloorIndex","handleFloorChange","zoomIn","zoomOut","reset","handleAmenityClick","onExtractedAmenities","extractValues","filter","preventDefault","Function","styles","backgroundColor","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","MapboxForm","setData","selectedId","onResetData","triggerSceneUpdate","textFont","textFontInterface","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","isLoadingRetailers","loadOptions","loadRetailersOptions","useRetailersOptions","apiURI","setIsLoading","fetchRetailers","toString","search","isError","catch","useGetRetailers","processData","isLoadingMore","label","location","inputValue","callback","toLowerCase","selectedKiosksId","setSelectedKiosksId","recheckSelectedKiosksId","ids","prev","cur","loadKiosksOptions","isDisabled","loadAmenitiesOptions","getDefaultKioksOptions","getDefaultAmenitiesOptions","makeImage","retailIndex","findIndex","HTMLImageElement","makeTextGeometry","updateData","handleChangeTab","k","clearKioskConfig","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadingMessage","noOptionsMessage","placeholder","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","handleChangeKiosk","newValue","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","kioskId","handleRotateByFixedAngle","defaultData","RetailerInfoList","isAmenity","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","Select","disabled","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","fetch","json","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","SceneComponent","refreshData","removeMissingMapObjects","mapitData","getData","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","mapObjsPromise","ok","statusText","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","responseData","offset_x","offset_y","demoData","objectNames","mapObjects","useMapit2Data","setTriggerClick","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","handleClickOnRetailer","IsCameraInit","disableClicks","setDisableClicks","selectedRetailerSlug","setSelectedRetailerSlug","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","subPrev","subCur","labelRef","currentHoveredObject","setCurrentHoveredObject","setSceneKey","updateKey","showRetailerInfo","setShowRetailerInfo","setCxtConfig","createRouteToAmenity","offsetWidth","resizeWidth","addEventListener","setCameraControlPos","display_app","desktop","onSettingsLoading","getHexString","camPos","ctrlTarget","activeFromObjectId","handleChangeMapitData","newData","itemIndex","getMapitData","floorsCount","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","meshParam","handleMeshObjectContext","logoParams","targetId","softClick","t","startMousePos","Infinity","messageStyle","top","left","transform","meshFloorsChecked","Alert","getStyle","resetHandle","ccs","Canvas","Stats","parent","intensity","buttons","clientX","clientY","newDistance","sqrt","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","configureStore","reducer","middleware","getDefalultMiddleware","concat","setupListeners","dispatch","MapBox","refObj","setMapData","isMapIt2Response","xmlns","viewBox","d","fill","version"],"mappings":"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"}