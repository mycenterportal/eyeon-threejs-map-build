{"version":3,"file":"index.modern.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/components/Amenities/ATM.tsx","../src/components/Amenities/Management.tsx","../src/components/Amenities/PlayArea.tsx","../src/components/Amenities/Restroom.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Amenities/Elevator.tsx","../src/components/Amenities/Security.tsx","../src/components/Icons/DogPoopStation.tsx","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/constants/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/contexts/MapBoxContextProvider.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/services/retailersApi.tsx","../src/Hooks/useAllRetailers.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/MapboxForm.tsx","../src/components/MapboxForm/hooks/useRetailersOptions.ts","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/services/map-api.service.ts","../src/store.ts","../src/components/map-box/MapBox.tsx","../src/interfaces/mapitApiTypes.ts"],"sourcesContent":["import type { Vector2 } from \"three\";\nimport { IFloorData } from \"../../interfaces/types\";\n\nexport function next_node_name(node_count: number) {\n  return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string, boolean] {\n  let exists = false;\n  let node_name: string = '-name-not-found-';\n  const currentFloor = floors[floor_index];\n  if (currentFloor.route_points !== undefined) {\n    for (let i = 0; i < currentFloor.route_points.length; i++) {\n      if (vertex.x === currentFloor.route_points[i].node.x && vertex.y === currentFloor.route_points[i].node.y) {\n        exists = true;\n        node_name = currentFloor.route_points[i].name;\n        break;\n      }\n    }\n    if (!exists) {\n      node_name = next_node_name(node_count);\n      // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n  }\n  return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport { Graph } from \"ngraph.graph\";\nimport { Color, Vector2, Vector3 } from \"three\";\nimport { get_node_name } from \"./nodesUtils\";\nimport { MeshType } from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../interfaces/types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n  const consolePrefix = 'MeshParams';\n  let mesh_type: MeshType = null;\n  var layer_color: Color | string = path.color.clone();\n  var extrude = 0;\n  var z_index = 0;\n  var mesh_visible = true;\n  var mesh_draw = true;\n  var mesh_transparent = false;\n  var line_thickness = config.WALL_THICKNESS;\n  var interactiveMesh = true;\n  var layer_name = path.userData?.node.id;\n  if (layer_name !== undefined) {\n    if (layer_name.startsWith('boundary')) {\n      mesh_type = 'boundary';\n      layer_color = config.BOUNDARY_COLOR;\n      line_thickness = config.BOUNDARY_THICKNESS;\n      if (config.STYLE === '3D') {\n        extrude = 9;\n      }\n    } else if (layer_name.startsWith('wall')) {\n      mesh_type = 'wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 8.5;\n      }\n    } else if (layer_name.startsWith('outer-wall')) {\n      mesh_type = 'outer-wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        mesh_draw = false;\n      }\n    } else if (layer_name.startsWith('building-base')) {\n      mesh_type = 'building-base';\n      layer_color = config.BUILDING_BASE_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 12;\n        z_index = -12;\n      }\n    } else if (layer_name.startsWith('base')) {\n      mesh_type = 'base';\n      layer_color = config.BASE_COLOR;\n    } else if (layer_name.startsWith('store')) {\n      mesh_type = 'store';\n      layer_color = config.STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = parseInt(config.STORE_HEIGHT);\n      }\n      if (layer_name.startsWith('store-underlay')) {\n        interactiveMesh = false;\n      }\n    } else if (layer_name.startsWith('big-store')) {\n      mesh_type = 'big-store';\n      layer_color = config.BIG_STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 16;\n      }\n    } else if (layer_name.startsWith('route-path')) {\n      mesh_type = 'route-path';\n      mesh_draw = false;\n      path.subPaths.forEach(subPath => {\n        if (subPath.curves.length === 0) {\n          console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n        }\n\n        subPath.curves.forEach(curve => {\n          //@ts-ignore\n          const v1: Vector2 = curve.v1;\n          //@ts-ignore\n          const v2: Vector2 = curve.v2;\n\n          const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n          if (!exists1) {\n            floors[floor_index].route_points?.push({\n              name: node1_name,\n              node: new Vector3(v1.x, v1.y, 1)\n            });\n            allNodesFloor[node1_name] = floor_index;\n          }\n          const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n          if (!exists2) {\n            floors[floor_index].route_points?.push({\n              name: node2_name,\n              node: new Vector3(v2.x, v2.y, 1)\n            });\n            allNodesFloor[node2_name] = floor_index;\n          }\n          pathFinderGraph.addNode(node1_name, { ...v1 });\n          pathFinderGraph.addNode(node2_name, { ...v2 });\n\n          // pathFinderGraph.addLink(node1_name, node2_name);\n          pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n          pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n        });\n      });\n    } else if (layer_name.startsWith('escalator-')) {\n      mesh_type = 'escalator';\n      mesh_visible = false;\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('kiosk-')) {\n      mesh_type = 'kiosk';\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('amenity-')) {\n      mesh_type = 'amenity';\n      mesh_transparent = true;\n      z_index = 1;\n    } else if (layer_name.startsWith('overlay')) {\n      mesh_type = 'overlay';\n    } else if (layer_name.startsWith('special-shape')) {\n      mesh_type = 'special-shape';\n    } else {\n      extrude = 1;\n    }\n  } else {\n    console.warn(consolePrefix + 'Layer name is undefined, path', path)\n  }\n\n\n  /*console.debug({\n      mesh_type,\n      layer_color,\n      extrude,\n      z_index,\n      mesh_visible,\n      mesh_draw,\n      mesh_transparent,\n      line_thickness,\n      interactiveMesh,\n      path,\n      layer_name,\n  })*/\n  return {\n    mesh_type,\n    layer_color,\n    extrude,\n    z_index,\n    mesh_visible,\n    mesh_draw,\n    mesh_transparent,\n    line_thickness,\n    interactiveMesh,\n    path,\n    layer_name,\n  }\n}","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import ATMIcon from \"src/components/Amenities/ATM\";\nimport ElevatorIcon from \"src/components/Amenities/Elevator\";\nimport ManagementIcon from \"src/components/Amenities/Management\";\nimport PlayAreaIcon from \"src/components/Amenities/PlayArea\";\nimport RestroomIcon from \"src/components/Amenities/Restroom\";\nimport SecurityIcon from \"src/components/Amenities/Security\";\nimport DogPoopStation from \"src/components/Icons/DogPoopStation\";\nimport FamilyRestroom from \"src/components/Icons/FamilyRestroom\";\nimport { IAmenitiesInteractiveList } from \"src/interfaces/types\";\n\nexport const amenitiesList: IAmenitiesInteractiveList[] = [\n  {\n    name: 'ATM',\n    type: 'atm',\n    icon: ATMIcon,\n  },\n  {\n    name: 'Management',\n    type: 'management',\n    icon: ManagementIcon,\n  },\n  {\n    name: 'Kids Area',\n    type: 'playarea',\n    icon: PlayAreaIcon,\n  },\n  {\n    name: 'Restroom',\n    type: 'restroom',\n    icon: RestroomIcon,\n  },\n  {\n    name: 'Family Restroom',\n    type: 'family-restroom',\n    icon: FamilyRestroom,\n  },\n  {\n    name: 'Elevator',\n    type: 'elevator',\n    icon: ElevatorIcon,\n  },\n  {\n    name: 'Security',\n    type: 'security',\n    icon: SecurityIcon,\n  },\n  {\n    name: 'Dog Poop Station',\n    type: 'dog-poop-station',\n    icon: DogPoopStation,\n  },\n]\n\n","const ATMIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ATMIcon;","\nconst ManagementIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default ManagementIcon;","\nconst PlayAreaIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default PlayAreaIcon;","\nconst RestroomIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default RestroomIcon;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst ElevatorIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ElevatorIcon;","\nconst SecurityIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default SecurityIcon;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","import { Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry } from \"three\";\nimport { getWallShape } from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\n// import {allMapObjects} from \"../../globals\";\nimport { IConfig, IExtMesh, IMeshValues } from \"../../interfaces/types\";\nimport { hex_to_color } from \"../../helpers/misc\";\n\nimport { IRetailer, MapObj } from \"../../interfaces/mapitApiTypes\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { MapRole } from \"src/constants/globals\";\n\n\nconst renderOrders = {\n  'route-path': 0,\n  'escalator': 0,\n  'underlay': 0,\n  'overlay': 1,\n  'building-base': 1,\n  'base': 2,\n  'store': 3,\n  'big-store': 4,\n  'kiosk': 5,\n  'wall': 6,\n  'outer-wall': 7,\n  'boundary': 8,\n  'amenity': 9,\n  'layer-image': 10,\n  'layer-text': 11,\n  'route-tube': 12,\n  'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n  if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n    return renderOrders[mesh_type];\n  }\n  // console.warn(`Unknown mesh type: ${mesh_type}`)\n  return 0;\n}\n\nexport const getMaterial = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  layer_color: Color | string,\n  mesh_transparent: boolean,\n  allIndexedMapObjects: Record<string, MapObj>,\n) => {\n  const material_settings = {\n    color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n    side: DoubleSide,\n    transparent: false,\n    depthWrite: true,\n    depthTest: true,\n    opacity: 1,\n  }\n  if (config.STYLE === '2D' || mesh_type === 'base' || mesh_type == null) {\n    if (mesh_type !== 'boundary') {\n      material_settings.depthWrite = false;\n      material_settings.depthTest = false;\n    }\n  }\n  if (mesh_type === 'overlay') {\n    material_settings.color = config.OVERLAY_COLOR;\n    material_settings.opacity = config.OVERLAY_OPACITY;\n  }\n  if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE !== 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent === 1) {\n    material_settings.opacity = 0;\n  }\n  var material = new MeshLambertMaterial(material_settings);\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    material.colorDefault = material.color;\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color !== '') {\n      material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n      //@ts-ignore\n      material.colorDefault = material.color;\n    }\n    //@ts-ignore\n    material.active = false;\n  }\n  if (config.ROLE !== 'PORTAL' && mesh_transparent) {\n    material.opacity = 0;\n    material.transparent = true;\n  }\n\n  material.transparent = material.opacity !== 1;\n\n  return material;\n}\n\nexport const getGeometry = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  extrude: number,\n  line_thickness: number,\n  path: any,\n) => {\n  const consolePrefix = 'MaterialAndGeometry';\n\n  let shapes = path.toShapes(true);\n\n  // shapes.forEach((shape, index) => {\n  let extrude_meshes;\n  if (config.STYLE === '2D') {\n    extrude_meshes = ['building-base'];\n  } else {\n    extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n  }\n\n  let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n  var geometry;\n  if (mesh_type && extrude_meshes.includes(mesh_type)) {\n    geometry = new ExtrudeGeometry(shapes, {\n      depth: -extrude,\n      bevelEnabled: false,\n    });\n  } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n    //@ts-ignore\n    let wall_geometries = [];\n    //@ts-ignore\n    path.subPaths.forEach(subPath => {\n      //@ts-ignore\n      subPath.curves.forEach(curve => {\n        if (curve.type === 'LineCurve') {\n          let shape_extend = 0;\n          if (mesh_type === 'boundary') {\n            shape_extend = 1;\n          } else if (mesh_type === 'wall') {\n            // shape_extend = 1 / 3;\n          }\n          let shape1 = getWallShape(curve, line_thickness, shape_extend);\n          let wall_geometry = new ExtrudeGeometry(shape1, {\n            depth: -extrude,\n            bevelEnabled: false,\n          });\n          wall_geometries.push(wall_geometry);\n        } else {\n          console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n        }\n      });\n    });\n\n    if (wall_geometries.length === 1) {\n      //@ts-ignore\n      geometry = wall_geometries[0];\n    } else if (wall_geometries.length > 1) {\n      //@ts-ignore\n      geometry = mergeGeometries(wall_geometries);\n    } else {\n      console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n    }\n  } else {\n    geometry = new ShapeGeometry(shapes);\n    try {\n      //@ts-ignore\n      if (geometry.attributes.position.count === 0) {\n        console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n      }\n    } catch (e: any) {\n      console.error(e.message);\n    }\n  }\n\n  return geometry;\n}\n\nexport const getMaterialAndGeometry = (allMapObjects: string[], config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: MapRole): IMeshValues => {\n\n  const material = getMaterial(\n    config,\n    mesh_type,\n    layer_name,\n    layer_color,\n    mesh_transparent,\n    allIndexedMapObjects\n  );\n\n  const geometry = getGeometry(\n    config,\n    mesh_type,\n    layer_name,\n    extrude,\n    line_thickness,\n    path\n  );\n\n  const mesh = new Mesh(geometry, material) as IExtMesh;\n  mesh.object_id = layer_name;\n  mesh.mesh_type = mesh_type;\n  mesh.floor_index = floor_index;\n  mesh.visible = mesh_visible;\n  mesh.position.z = z_index;\n  let storeName = '';\n  if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n    if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type === 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n      storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].custom_text;\n      if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n        storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n      }\n    } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].value;\n      if (storeName.length > 1) {\n        const amenity = amenitiesList.find(item => item.type === storeName)\n        if (amenity) {\n          storeName = amenity.name;\n        }\n      }\n    }\n  }\n  mesh.userData.storeName = storeName;\n  if (config.STYLE === '2D') {\n    mesh.renderOrder = getRenderOrder(mesh_type);\n    if (layer_name && layer_name.includes('underlay')) {\n      mesh.renderOrder = getRenderOrder('underlay');\n    }\n  }\n\n  floors[floor_index].objsGroup.add(mesh);\n\n  if (mesh_type === 'escalator') {\n    floors[floor_index].escalatorsNodes[layer_name] = null;\n    floors[floor_index].escalatorsObjs.push(mesh);\n    mesh.escalator_id = floor_index + '-' + layer_name;\n  }\n\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    mesh.route_node_id = null;\n\n    // add floor_index to the kiosks\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'kiosk') {\n      // var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n      /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n          ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n      }*/\n    }\n\n    if (config.ROLE === 'PORTAL') {\n      allMapObjects.push(layer_name);\n    }\n    if (\n      (config.ROLE !== 'PORTAL' && mesh_type === 'kiosk') ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'amenity' && allIndexedMapObjects[layer_name].value !== '') ||\n      (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n      (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type ?? ''))\n    ) {\n      // if (interactiveMesh) {\n      floors[floor_index].interactiveObjs.push(mesh);\n      // }\n    } else if (\n      (config.ROLE === 'PORTAL')\n    ) {\n      floors[floor_index].interactiveObjs.push(mesh);\n    }\n  }\n\n  // if (['store', 'big-store'].includes(mesh_type as string)) {\n  //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n  // }\n\n  return {\n    mesh,\n    geometry,\n    material,\n    object_id: layer_name,\n    mesh_type,\n    floor_index,\n    visible: mesh_visible,\n    renderOrder: mesh.renderOrder,\n  }\n  // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n  BufferGeometry,\n  CanvasTexture,\n  CurvePath,\n  DoubleSide,\n  LineCurve3,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Raycaster,\n  Scene,\n  TubeGeometry,\n  Vector3,\n} from \"three\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\n// import {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport { PathFinder } from \"ngraph.path\";\nimport { IRetailer, MapObj } from \"../interfaces/mapitApiTypes\";\nimport { IExtMesh, IFloorData } from \"../interfaces/types\";\nimport { Graph, Node } from \"ngraph.graph\";\n// import { allNodesFloor } from \"src/globals\";\n\nconst consolePrefix = 'ROUTE: ';\n\n\n\nexport function delete_route_path(floors: IFloorData[]) {\n  for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n    const floor = floors[floor_index];\n    floor.route_active = false;\n\n    if (floor.route_tube != null) {\n      floor.route_tube.geometry.dispose();\n      //@ts-ignore\n      floor.route_tube.material.dispose();\n      floor.objsGroup?.remove(floor.route_tube);\n    }\n\n    floor.route_tube = undefined;\n    floor.route_texture = null;\n    floor.escalatorMeshes = [];\n  }\n}\n\nexport function create_route(allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n  if (from_mesh_object_id === to_mesh_object_id) {\n    return [];\n  }\n  const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n  if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n  return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[], floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n  // TODO: remove scene dependency and scene.getObjectByProperty\n  const routePaths = [] as any[];\n  delete_route_path(floors);\n  let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n  let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n  let from_node_name = from_obj.route_node_id;\n  let to_node_name = to_obj.route_node_id;\n\n  // console.log({\n  //     from_mesh_object_id,\n  //     to_mesh_object_id,\n  //     from_obj,\n  //     to_obj,\n  //     from_node_name,\n  //     to_node_name,\n  // })\n\n  // from_node_name = 'node-147';\n  // to_node_name = 'node-221';\n\n  if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n  if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n  if (!from_node_name || !to_node_name) return routePaths;\n\n  const from_route_floor_index = from_obj.floor_index;\n  const to_route_floor_index = to_obj.floor_index;\n\n  const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n    distance: function (fromNode, toNode, link) {\n      if (link.data) return link.data.weight;\n      return false;\n    },\n    //@ts-ignore\n    debug: true,\n  });\n  const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n  const routeNodesEsclators = [];\n  if (!routeNodes) {\n    return [];\n  }\n  const floor_routes = [];\n\n  for (let index = 0; index < routeNodes.length; index++) {\n    const routeNode = routeNodes[index];\n    if (floor_routes[allNodesFloor[routeNode.id]]) {\n      floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n    } else {\n      floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n    }\n\n    if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n      // don't consider these middle escalators nodes\n    } else {\n      routeNodesEsclators.push(routeNode);\n    }\n  }\n  for (let index = 0; index < routeNodesEsclators.length; index++) {\n    const routeNode = routeNodesEsclators[index];\n    if (\n      allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n      && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n    ) {\n      const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n      const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n\n      let goToFloor = null;\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index + 1].id],\n          direction: 'Next',\n        };\n      }\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index - 1].id],\n          direction: 'Previous',\n        };\n      }\n\n\n      if (goToFloor && escalator_mesh) {\n        escalator_mesh.goToFloor = goToFloor;\n        const escalator_clone = escalator_mesh.clone();\n        escalator_clone.goToFloor = goToFloor;\n        //@ts-ignore\n        floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_clone);\n      }\n    }\n\n  }\n  for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n    const floor_route = floor_routes[floor_index];\n    if (floor_route && floor_route.length > 1) {\n      const routePath = create_route_path(floor_route, floor_index, floors, style);\n      routePaths[floor_index] = routePath;\n\n      floors[floor_index].route_active = true;\n      floors[floor_index].routeMeshes = [routePath];\n      if (floor_index === from_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(from_obj);\n      }\n      if (floor_index === to_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(to_obj);\n\n      }\n    }\n  }\n\n  // setTimeout(function () {\n  //     //TODO openFloorMap functionality\n  //     // openFloorMap(from_route_floor_index);\n  // });\n\n  return routePaths;\n}\n\nfunction create_route_path(\n  routeNodes: Node<any>[],\n  floor_index: number,\n  floors: IFloorData[],\n  style = '2D',// config.STYLE\n) {\n  let distance = 0;\n  let route_path = new CurvePath<Vector3>();\n  for (let i = 1; i < routeNodes.length; i++) {\n    let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n    let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n    route_path.add(new LineCurve3(from_node, to_node));\n    distance += from_node.distanceTo(to_node);\n  };\n  var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n  //@ts-ignore\n  geometry = new BufferGeometry().copy(geometry);\n  var material = new MeshBasicMaterial({\n    map: get_route_texture(distance, floor_index, floors),\n    transparent: true,\n    side: DoubleSide,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  let route_tube = new Mesh(geometry, material) as IExtMesh;\n  if (style === '2D') {\n    route_tube.position.z = -10;\n    route_tube.scale.z = 0.1;\n  }\n  route_tube.position.z = 0;\n  route_tube.renderOrder = getRenderOrder('route-tube');\n  route_tube.mesh_type = 'route-tube';\n  //@ts-ignore\n  route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n  // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n  floors[floor_index].route_tube = route_tube;\n  floors[floor_index].objsGroup?.add(route_tube);\n\n  return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n  return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n  let distance = 0;\n\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n\n  for (let i = 1; i < routeNodes.length; i++) {\n    let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n    distance += link?.data.weight || 0;\n  };\n  return distance;\n}\n\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n  let canvas = document.createElement(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    ctx.canvas.width = distance;\n    ctx.canvas.height = 80;\n\n    ctx.fillStyle = \"#4ea5ff\";\n    ctx.fillRect(0, 0, distance, 80);\n\n    let grd_width = 0.1 * distance;\n    const min_grd_width = 60;\n    const max_grd_width = 120;\n    if (grd_width < min_grd_width) grd_width = min_grd_width;\n    if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n    let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n    grd.addColorStop(0, \"#4ea5ff\");\n    grd.addColorStop(0.4, \"white\");\n    grd.addColorStop(0.6, \"white\");\n    grd.addColorStop(1, \"#4ea5ff\");\n\n    ctx.fillStyle = grd;\n    ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n    floors[floor_index].route_texture = route_texture;\n\n    return route_texture;\n  } else {\n    return undefined;\n  }\n}\n\n//TODO\n\nexport function assign_route_nodes_to_stores(\n  floor_index: number,\n  floors: IFloorData[],\n  allIndexedMapObjects: Record<string, MapObj>,\n  allIndexedRetailers: Record<string, IRetailer>,\n  allNodesFloor: Record<string, number>,\n  escalator_nodes: string[],\n  find_store_node_raycaster: Raycaster,\n  role: string, //config.ROLE\n) {\n  const result = new Map();\n  const currentFloor = floors[floor_index];\n  if (currentFloor && currentFloor.route_points) {\n    currentFloor.route_points.forEach(point => {\n      let origin_point = new Vector3(point.node.x, point.node.y, -10);\n      let target_direction = new Vector3(0, 0, 1);\n      find_store_node_raycaster.set(origin_point, target_direction);\n      //@ts-ignore\n      var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n      if (storeIntersects.length) {\n        //@ts-ignore\n        storeIntersects[0].object.route_node_id = point.name;\n        //@ts-ignore\n        result.set(storeIntersects[0].object.object_id, point.name);\n        if (false && role !== 'PORTAL') {\n          //@ts-ignore\n          var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n          if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n            // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n          }\n        }\n      }\n\n      var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n      if (escalatorIntersects.length) {\n        const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n        let escalator_obj_id = obj.object_id;\n        const escalatorNodes = floors[floor_index].escalatorsNodes;\n        if (escalatorNodes) {\n          escalatorNodes[escalator_obj_id as string] = point.name;\n          allNodesFloor[point.name] = floor_index;\n          escalator_nodes.push(point.name);\n        }\n      }\n    });\n  }\n  return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n  // console.log('linkFloorEscalators', floors)\n  if (floors.length > 1) {\n    for (let i = 0; i < (floors.length - 1); i++) {\n      // console.log('floors[i]',i, floors[i])\n      const floor_escalators = floors[i].escalatorsNodes;\n      // console.log('floor_escalators', floor_escalators);\n      Object.keys(floor_escalators as object).forEach(escalator => {\n        if (floors[i].escalatorsNodes?.[escalator] != null && floors[i + 1].escalatorsNodes?.[escalator] != null) {\n          // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n          const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n          const nodeIdTo = floors[i + 1].escalatorsNodes?.[escalator];\n          if (nodeIdFrom && nodeIdTo) {\n            pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n            pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n          }\n        } else {\n          // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n        }\n      })\n    }\n  }\n}\n\nexport function make_amenity_route(allNodesFloor: Record<string, number>, kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string): Mesh[] {\n  let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n  // if (!kiosk_obj) return [];\n  let kiosk_node_name = kiosk_obj ? kiosk_obj.route_node_id : '';\n\n  var to_obj_name = null;\n\n  var shortest_distance = 9999;\n  // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n  const map_objs: string[] = [];\n  for (let key in allIndexedMapObjects) {\n    const mapObject = allIndexedMapObjects[key];\n    if (\n      mapObject.layer_type === 'amenity'\n      && mapObject.obj_type === 'special'\n      && mapObject.value === amenity_type\n    ) {\n      map_objs.push(key);\n    }\n  }\n  map_objs.forEach((amenity_obj_name: string) => {\n    let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n      distance: function (fromNode, toNode, link) {\n        if (link.data) return link.data.weight;\n        return false;\n      },\n      //@ts-ignore\n      debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n      var amenity_node_name = amenity_obj.route_node_id;\n      try {\n        var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n        if (route_distance && route_distance < shortest_distance) {\n          shortest_distance = route_distance;\n          to_obj_name = amenity_obj_name;\n        }\n      } catch (e: any) {\n        console.warn(`Amenity Path: ${e.message}`);\n      }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n      to_obj_name = amenity_node_name;\n    }\n  });\n  return create_route(allNodesFloor, kiosk_obj_name, to_obj_name ?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import { getMeshParams } from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport { IConfig, IFloorData, IMeshValues } from \"src/interfaces/types\";\n// import {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport { getMaterialAndGeometry } from \"./getMaterialAndGeometry\";\nimport { Raycaster } from \"three\";\nimport { assign_route_nodes_to_stores, linkFloorEscalators } from \"src/helpers/route.helpers\";\nimport { IRetailer, MapObj } from \"src/interfaces/mapitApiTypes\";\nimport { Graph } from \"ngraph.graph\";\nimport { EventedType } from \"ngraph.events\";\nimport { MapRole } from \"src/constants/globals\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, allMapObjects: string[], allNodesFloor: Record<string, number>, pathFinderGraph: Graph<any, any> & EventedType, floors: IFloorData[], config: IConfig, results: SVGResult[], role?: MapRole) {\n  const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n  const escalator_nodes: string[] = [];\n  results.forEach((result, floor_index) => {\n    if (result.paths && result.paths.length) {\n      const pathIds = [];\n      for (let i = 0; i < result.paths.length; i++) {\n        pathIds.push(result.paths[i]?.userData?.node.id);\n      }\n      const paths = result.paths;\n      for (let i = 0; i < paths.length; i++) {\n        const {\n          mesh_type,\n          layer_color,\n          extrude,\n          z_index,\n          mesh_visible,\n          mesh_draw,\n          mesh_transparent,\n          line_thickness,\n          path,\n          layer_name,\n        } = getMeshParams(\n          paths[i],\n          paths,\n          floors,\n          floor_index,\n          config,\n          ++node_count,\n          //@ts-ignore\n          allNodesFloor,\n          pathFinderGraph\n        );\n\n        if (mesh_draw) {\n          const meshParams = getMaterialAndGeometry(\n            allMapObjects,\n            config,\n            mesh_type,\n            layer_name,\n            layer_color,\n            mesh_transparent,\n            mesh_visible,\n            z_index,\n            extrude,\n            line_thickness,\n            floors,\n            floor_index,\n            allIndexedMapObjects,\n            allIndexedRetailers,\n            path,\n            role\n          );\n\n          if (layer_name.startsWith('kiosk-')) {\n            if (role === 'PORTAL') {\n              // meshParams.mesh.visible = false;\n              //@ts-ignore\n              // meshParams.mesh.material.visible = false;\n            }\n          }\n\n          if (!GeometriesAndMaterials[floor_index]) {\n            GeometriesAndMaterials[floor_index] = [];\n          }\n\n          GeometriesAndMaterials[floor_index].push(meshParams);\n        }\n      }\n      const findStoreNodeRaycaster = new Raycaster();\n      const routeNodeIds = assign_route_nodes_to_stores(\n        floor_index,\n        floors,\n        allIndexedMapObjects,\n        allIndexedRetailers,\n        allNodesFloor,\n        escalator_nodes,\n        findStoreNodeRaycaster,\n        config.ROLE\n      );\n\n      if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n        for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n          if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n            GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n          }\n        }\n      }\n\n      linkFloorEscalators(floors, pathFinderGraph);\n\n    }\n  })\n\n  return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes };\n}","import { MapConfig } from \"../interfaces/types\";\n\nexport const mapit2DefaultVars: Partial<MapConfig> = {\n  ROLE: 'WEBSITE',\n  DEVICE: 'display_app',\n  CENTER_ID: 0,\n  KIOSK_ID: 0,\n  STYLE: '3D',\n  DEFAULT_SELECTED_STORE: '',\n  DEBUG: true,\n  MAP_BACKGROUND_COLOR: \"FFFFFF\",\n  ACCENT_COLOR: \"4EA5FF\",\n  STORE_DEFAULT_COLOR: \"E2E2E2\",\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n  WALL_THICKNESS: '0.6',\n  WALL_COLOR: \"888888\",\n  BOUNDARY_THICKNESS: '0.8',\n  BOUNDARY_COLOR: \"888888\",\n  BASE_COLOR: \"25292B\",\n  STORE_TEXT_COLOR: \"222222\",\n  OVERLAY_COLOR: \"FFFFFF\",\n  OVERLAY_OPACITY: '0.7',\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  }\n}\n\nexport const defaultVars: MapConfig = {\n  MAP_BACKGROUND_COLOR: '',\n  ROLE: 'WEBSITE',\n  DEVICE: 'display_app',\n  KIOSK_ID: 0,\n  FLOORS: [],\n  KIOSKS: {},\n  CENTER_ID: 0,\n  STATS: false,\n  DEBUG: false,\n  STYLE: '2D',\n  ACCENT_COLOR: '4EA5FF',\n  STORE_DEFAULT_COLOR: 'E2E2E2',\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n  WALL_THICKNESS: '0.6',\n  BOUNDARY_THICKNESS: '0.8',\n  WALL_COLOR: '888888',\n  BOUNDARY_COLOR: '888888',\n  BASE_COLOR: '25292B',\n  BUILDING_BASE_COLOR: 'DADADA',\n  STORE_TEXT_COLOR: '222222',\n  OVERLAY_COLOR: 'FFFFFF',\n  OVERLAY_OPACITY: '0.7',\n  CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n  ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n  DEFAULT_CAMERA_POSITION: null, // custom default camera position\n  DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n  DEFAULT_SELECTED_STORE: null,\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  },\n  KIOSK_SIZE: '15',\n  ZOOM_STEP: '100',\n  SELECTED_ZOOM_LIMIT: '',\n};","// import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3 } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh } from \"../interfaces/types\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { hex_to_color } from \"./misc\";\nimport { IRetailer, MapObj } from \"../interfaces/mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n    addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n  }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  //@ts-ignore\n  let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n  if (mesh) {\n    //@ts-ignore\n    add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n  }\n}\n\n\n\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n  if (!Array.isArray(mesh)) {\n    mesh = [mesh];\n  }\n  const box = mesh.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    //@ts-ignore\n    box.union(obj.geometry.boundingBox);\n    return box;\n  }, new Box3());\n  return box;\n}\n\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n  let map_obj = allIndexedMapObjects[object_id];\n\n  if (!map_obj) {\n    map_obj = {\n      offsetX: \"0\",\n      offsetY: \"0\",\n      rotate: \"0\",\n    }\n  }\n\n  let offsetX = parseInt(map_obj.offsetX);\n  let offsetY = parseInt(map_obj.offsetY);\n\n  newMeshPos.z = -mesh_size.z;\n\n  //@ts-ignore\n  newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n  //@ts-ignore\n  newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n  newMesh.scale.y *= -1;\n\n  newMeshPos.x += offsetX;\n  newMeshPos.y += offsetY;\n\n  newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  if (map_obj.obj_type === 'retailer') {\n    if (retailer) {\n      img.src = retailer.logo;\n    } else {\n      console.error('retailer not found');\n      return null;\n    }\n  } else if (map_obj.obj_type === 'special') {\n\n    let svg_image_name = map_obj.value;\n    if (map_obj.layer_type === 'kiosk') svg_image_name = 'kiosk';\n    if (map_obj.layer_type === 'escalator') svg_image_name = 'escalator';\n    if (svg_image_name) {\n      let svg_color = '222222';\n      if (map_obj.text_color != null) {\n        svg_color = map_obj.text_color;\n      }\n\n      const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n      if (!svg_block) {\n        console.error('svg_block not found', svg_image_name);\n        return null;\n      }\n      const svg_element = svg_block.querySelector(\"svg\");\n      if (!svg_element) {\n        console.error('svg_element not found', svg_image_name);\n        return null;\n      }\n\n      const svgColoredParts = svg_element.querySelectorAll('[fill]');\n      svgColoredParts.forEach((svgColoredPart) => {\n        svgColoredPart.setAttribute('fill', '#' + svg_color);\n      })\n\n      const svgData = (new XMLSerializer()).serializeToString(svg_element);\n      img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n    }\n\n  } else {\n    if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n      img.src = map_obj.custom_image;\n    } else {\n      return null;\n    }\n  }\n\n  return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n  img.onload = function () {\n    const c = document.createElement(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n\n    c.width = img.width;\n    c.height = img.height;\n\n    ctx?.drawImage(img, 0, 0);\n\n    let texture = new CanvasTexture(c);\n    texture.colorSpace = 'srgb'\n\n    const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n    const material = new MeshBasicMaterial({\n      map: texture,\n      transparent: true,\n      side: DoubleSide,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    if (map_obj.layer_type === 'kiosk') {\n      material.visible = false;\n    }\n\n    afterOnload(geometry, material);\n  };\n}\n\nfunction getImageLogo(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry, object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: { storeLogo: Object3D }) => void): void {\n  const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n  if (img === null) return;\n\n  processImage(img, map_obj, (geometry, material) => {\n    const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n    // @ts-ignore\n    const floor_index = mesh.floor_index;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n    logoMesh.object_id = new_object_id;\n    logoMesh.floor_index = floor_index;\n    logoMesh.renderOrder = getRenderOrder('layer-image');\n    floors[floor_index]?.objsGroup.add(logoMesh);\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    logoMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    //@ts-ignore\n    BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    \n    handleAsync({storeLogo: BoundingSphereMesh});\n    */\n    handleAsync({ storeLogo: logoMesh });\n  })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id: string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): { textMesh: IExtMesh } | null | false {\n  const new_object_id = textLogoNamePrefix + object_id;\n  // deleteMeshByObjectID(new_object_id, scene, floors);\n  let result = null;\n\n  if (!geometry.boundingBox) {\n    geometry.computeBoundingBox();\n  }\n  if (!geometry.boundingBox) {\n    return null;\n  }\n\n  const boundingBox = geometry.boundingBox;\n\n  const mesh_center_point = new Vector3();\n  boundingBox.getCenter(mesh_center_point);\n\n  const mesh_size = new Vector3();\n  boundingBox.getSize(mesh_size);\n\n  //@ts-ignore\n  let map_obj: MapObj = allIndexedMapObjects[object_id] ? allIndexedMapObjects[object_id] : { layer_type: object_id.startsWith('escalator') ? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8 };\n\n  if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n    let text = '';\n    if (map_obj.layer_type === 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n      text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n      text = map_obj.custom_text;\n    } else {\n      text = '';\n    }\n\n    let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n    if (map_obj.text_color) {\n      text_color = hex_to_color(map_obj.text_color);\n    }\n\n    const material_settings = {\n      color: text_color,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false,\n      depthTest: false,\n    };\n    let text_material = new MeshPhongMaterial(material_settings);\n    let text_geometry = new TextGeometry(text, {\n      font: myFont,\n      size: parseInt(map_obj.size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n\n    const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n    textMesh.userData.font = myFont;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n    textMesh.object_id = new_object_id;\n    textMesh.floor_index = floor_index;\n    textMesh.renderOrder = getRenderOrder('layer-text');\n    if (map_obj.layer_type === 'retail_name') {\n      textMesh.userData.retail_name = text;\n    }\n\n    floors[floor_index].objsGroup.add(textMesh);\n\n    //scene.add(textMesh);\n    //console.debug({UpdateTexts: scene});\n\n    // Show bounding sphere\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    textMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    @ts-ignore\n    BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    scene.add(BoundingSphereMesh);\n    */\n    result = { textMesh };\n  }\n\n  else if (\n    map_obj.layer_type === 'retail_logo' ||\n    map_obj.layer_type === 'custom_image' ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id != null) ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    || (map_obj.layer_type === 'escalator')\n  ) {\n    getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n  }\n  return result;\n}","import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { IRetailer, MapObj } from \"src/interfaces/mapitApiTypes\";\nimport type { Mesh } from \"three\";\nimport path from \"ngraph.path\";\nimport { EventedType } from \"ngraph.events\";\nimport { IFloorData } from \"src/interfaces/types\";\n\n\ntype MapBoxContextType = {\n  meshByObjectId: Map<string, Mesh>;\n  setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>> | Function;\n  allMapObjects: Array<string>;\n  setAllMapObjects: Dispatch<SetStateAction<Array<string>>> | Function;\n  allIndexedMapObjects: Record<string, MapObj>;\n  setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObj>>> | Function;\n  allIndexedRetailers: Record<string, IRetailer>;\n  setAllIndexedRetailers: Dispatch<SetStateAction<Record<string, IRetailer>>> | Function;\n  allNodesFloor: Record<string, number>;\n  setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>> | Function;\n  pathFinderGraph: Graph<any, any> & EventedType\n  setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>> | Function;\n  ngraphPath: typeof path;\n  setNgraphPath: Dispatch<SetStateAction<typeof path>> | Function;\n  floorsData: IFloorData[];\n}\nconst MapBoxContext = createContext<MapBoxContextType>({\n  meshByObjectId: new Map<string, Mesh>(),\n  setMeshByObjectId: () => null,\n  allMapObjects: [],\n  setAllMapObjects: () => null,\n  allIndexedMapObjects: {},\n  setAllIndexedMapObjects: () => null,\n  allIndexedRetailers: {},\n  setAllIndexedRetailers: () => null,\n  allNodesFloor: {},\n  setAllNodesFloor: () => null,\n  pathFinderGraph: createGraph(),\n  setPathFinderGraph: () => null,\n  ngraphPath: path,\n  setNgraphPath: () => null,\n  floorsData: []\n})\n\nconst MapBoxContextProvider = ({ children }: { children: ReactNode }) => {\n\n  const [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string, Mesh>());\n  const [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\n  const [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\n  const [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\n  const [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n  //<{ x:number, y:number }, { weight: number }>\n  const [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\n  const [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n  const [floorsData] = useState<MapBoxContextType['floorsData']>([]);\n\n  return (\n    <MapBoxContext.Provider value={{\n      meshByObjectId,\n      setMeshByObjectId,\n      allMapObjects,\n      setAllMapObjects,\n      allIndexedMapObjects,\n      setAllIndexedMapObjects,\n      allIndexedRetailers,\n      setAllIndexedRetailers,\n      allNodesFloor,\n      setAllNodesFloor,\n      pathFinderGraph,\n      setPathFinderGraph,\n      ngraphPath,\n      setNgraphPath,\n      floorsData\n    }}\n    >\n      {children}\n    </MapBoxContext.Provider>\n  )\n\n}\n\nexport function useMapBoxContext() {\n  const context = useContext(MapBoxContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n  }\n\n  return context;\n}\n\nexport default MapBoxContextProvider;\n","import {\n  Group,\n  Mesh,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { loadFloors } from \"./loadFloors\";\nimport type { IConfig, IExtMesh, IFloorData, IMeshValues } from \"../../interfaces/types\";\nimport { defaultVars, mapit2DefaultVars } from \"../../constants/defaults\";\n// import {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport { get_store_name_logo_geo } from \"src/helpers/draw.logo.helpers\";\nimport { MapConfig, IMeshParamsTmp } from \"../../interfaces/types\";\nimport { hex_to_color } from \"src/helpers/misc\";\nimport { Kiosk, MapIt2Response, MapObj, IRetailer } from \"../../interfaces/mapitApiTypes\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { MapRole } from \"src/constants/globals\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: MapConfig = { ...defaultVars, ...mapit2DefaultVars }\n\nconst defaultMapObjValues = {\n  id: null,\n  center_id: config.CENTER_ID,\n  retailer_id: null,\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: 8,\n  rotate: 0,\n  offsetX: 0,\n  offsetY: 0,\n} as Record<string, string | number | null | undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\n\n// const floorsData:IFloorData[] = [];\nlet MEDIA_STORAGE_URI: string = '';\n\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n  for (let key in obj) {\n    delete obj[key];\n  }\n}\n\nfunction makeIndexedMapObjects(allIndexedMapObjects: Record<string, MapObj>, map_objs: MapObj[]) {\n  clearObject(allIndexedMapObjects);\n\n  allNonIndexedMapObjects = map_objs;\n\n  for (let i = 0; i < map_objs.length; i++) {\n    const obj = map_objs[i];\n    allIndexedMapObjects[obj.map_obj_name] = obj;\n    for (let key in defaultMapObjValues) {\n      const value = defaultMapObjValues[key];\n      //@ts-ignore\n      if (value != null && obj[key] == null) {\n        //@ts-ignore\n        allIndexedMapObjects[obj.map_obj_name][key] = value;\n      }\n    }\n  }\n}\n\nconst init = (allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: MapConfig, floors: IFloorData[], response: MapIt2Response) => {\n  const KIOSKS: Record<string, Kiosk> = {};\n  response.kiosks.forEach((kiosk) => {\n    const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n    if (mapObj) {\n      kiosk.map_obj_name = mapObj.map_obj_name;\n    }\n    KIOSKS[kiosk.id] = kiosk;\n  });\n\n\n  for (let index in response.retailers) {\n    const retailer = response.retailers[index];\n    allIndexedRetailers[retailer.id] = retailer;\n    allIndexedRetailers[retailer.id].index = index;\n  }\n\n  // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n  // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n  makeIndexedMapObjects(allIndexedMapObjects, response.map_objs);\n\n  floors.length = 0;\n  response.floors.forEach((value: IFloorData, index: number) => {\n    const objsGroup = new Group();\n    objsGroup.scale.y *= -1;\n    objsGroup.lookAt(0, 1, 0);\n\n    floors.push({\n      id: value.id,\n      // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n      svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n      title: value.title,\n      objsGroup: objsGroup,\n      interactiveObjs: [],\n      escalatorsObjs: [],\n      escalatorsNodes: {},\n      escalatorMeshes: [],\n      route_points: [],\n      route_tube: undefined,\n      route_texture: null,\n      routeMeshes: [],\n      route_active: false,\n    });\n  });\n  const DEFAULT_CAMERA_FOV = 75;\n  const DEFAULT_CAMERA_FAR = 10000;\n  config.CAMERA.far = DEFAULT_CAMERA_FAR;\n  config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n  const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n  config.CAMERA.maxDistance *= fovCorrection;\n  config.CAMERA.far *= fovCorrection;\n\n  const processedConfig: IConfig = {\n    ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n    BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n    BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n    BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n    BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n    BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n    CAMERA: {\n      ...config.CAMERA,\n      minZoom: parseInt(response.settings.MIN_ZOOM) ? parseInt(response.settings.MIN_ZOOM) : config.CAMERA.minZoom,\n      maxZoom: parseInt(response.settings.MAX_ZOOM) ? parseInt(response.settings.MAX_ZOOM) : config.CAMERA.maxZoom,\n      minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n      maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE) ? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n    },\n    CAMERA_CONTROLS_STATES: (() => {\n      const canvasWidth = window.screen.width;\n      if (config.CAMERA_CONTROLS_STATES) {\n        console.debug('config', { ...config.CAMERA_CONTROLS_STATES })\n        return { ...config.CAMERA_CONTROLS_STATES };\n      } else {\n\n        const roles: MapRole[] = [\"PORTAL\", \"PORTAL_RESPONSIVE\"]\n\n        if (!roles.includes(config.ROLE) && canvasWidth) {\n          if (canvasWidth <= 600) {\n            return response.camera_controls_states.mobile;\n          } else if (canvasWidth <= 1024) {\n            return response.camera_controls_states.tablet;\n          }\n        }\n        return response.camera_controls_states[config.DEVICE];\n      }\n    })(),\n    // CAMERA_CONTROLS_STATES: config.CAMERA_CONTROLS_STATES ? config.CAMERA_CONTROLS_STATES : response.camera_controls_states[config.DEVICE],\n    CENTER_ID: config.CENTER_ID,\n    CONTROLS: null,\n    DEBUG: config.DEBUG,\n    DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n    DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n    DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n    DEVICE: config.DEVICE,\n    KIOSK_ID: config.KIOSK_ID || 0,\n    KIOSKS: KIOSKS,\n    MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n    ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n    OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n    OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n    ROLE: config.ROLE,\n    SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n    STATS: config.STATS === true,\n    STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n    STORE_HEIGHT: response.settings.STORE_HEIGHT ? response.settings.STORE_HEIGHT : config.STORE_HEIGHT ? config.STORE_HEIGHT : '8',\n    STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n    STYLE: response.settings.STYLE ? response.settings.STYLE : config.STYLE ? config.STYLE : '3D',\n    WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n    WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n    FLOORS: response.floors,\n    AMENITIES: response.amenities,\n    RETAILERS: response.retailers,\n    AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n    AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n    KIOSK_SIZE: response.settings.KIOSK_SIZE ? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    ZOOM_STEP: response.settings.ZOOM_STEP ? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n    SELECTED_ZOOM_LIMIT: config.SELECTED_ZOOM_LIMIT ? config.SELECTED_ZOOM_LIMIT : response.settings.SELECTED_ZOOM_LIMIT ? response.settings.SELECTED_ZOOM_LIMIT : '4800',\n    SELECTED_ZOOM_LIMIT_DISTANCE: parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) ? parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) : parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n  };\n\n  // AMENITIES_NAV_BG_COLOR: string;\n  // AMENITIES_NAV_ICON_COLOR: string;\n\n  return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response | null, jsonConfig?: Partial<MapConfig>, role?: MapRole, mediaStorageURI?: string): IMeshParamsTmp => {\n  const { floorsData } = useMapBoxContext();\n  const { allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph } = useMapBoxContext();\n  const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n  const [textParams, setTextParams] = useState<Array<{ textMesh: IExtMesh }[]>>([]);\n  const [storeLogos, setStoreLogos] = useState<{ storeLogo: Mesh }[][]>([]);\n  // const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n  const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n  const [urls, setUrls] = useState<string[]>([]);\n  const [processedConfig, setProcessedConfig] = useState<IConfig | null>(null);\n  let result = useLoader(SVGLoader, urls);\n\n  MEDIA_STORAGE_URI = useMemo(() => {\n    const r = /\\/$/;\n    if (mediaStorageURI) {\n      return mediaStorageURI?.replace(r, '');\n    }\n\n    return '';\n\n  }, [mediaStorageURI])\n\n  // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n  const myFont = useFont(fontData as unknown as FontData);\n\n  // const getWallShape = (...params: any): Shape | Shape[] => {\n  //     return []\n  // }\n\n\n  const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: { storeLogo: Mesh }) => {\n    setStoreLogos((prevLogos) => {\n      // console.debug({floorIndex});\n      if (prevLogos[floorIndex]) {\n        prevLogos[floorIndex].push({ ...meshLogo });\n      } else {\n        prevLogos[floorIndex] = [{ ...meshLogo }];\n      }\n      // console.debug({prevLogos});\n      return [...prevLogos];\n    });\n  }), [])\n\n  const mergedConfig = useMemo(() => {\n    let result = config;\n\n    if (jsonConfig) {\n      result = {\n        ...config,\n        ...jsonConfig,\n      }\n\n      if (jsonConfig.CAMERA) {\n        result.CAMERA = {\n          ...config.CAMERA,\n          ...jsonConfig.CAMERA,\n        }\n      }\n    }\n    if (!jsonConfig?.DEVICE && result.ROLE === 'WP_SITE') {\n      result.DEVICE = 'desktop';\n    }\n    return result;\n\n  }, [jsonConfig])\n\n  useEffect(() => {\n    if (!data) return;\n\n\n    // console.log('useMeshFloors[data]', {data})\n\n    const processedConfig = init(allIndexedMapObjects, allIndexedRetailers, mergedConfig, floorsData, data as MapIt2Response);\n    const values: string[] = [];\n    processedConfig.FLOORS.forEach((value) => {\n      // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n      //@ts-ignore\n      values.push(`${value.svg}`);\n    });\n\n    setProcessedConfig(processedConfig);\n    setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n  }, [data, allIndexedMapObjects, allIndexedRetailers, floorsData, jsonConfig, mergedConfig]);\n\n  const clearScene = useCallback(() => {\n    if (meshParams) {\n      meshParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.mesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (textParams) {\n      textParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.textMesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (storeLogos) {\n      storeLogos.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.storeLogo.removeFromParent();\n          })\n        }\n      })\n    }\n\n    setMeshParams([]);\n    setTextParams([]);\n    setStoreLogos([]);\n  }, [meshParams, textParams, storeLogos])\n\n  useEffect(() => {\n    return () => {\n      clearScene();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!processedConfig || !urls.length || !myFont || !result) return;\n\n    const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, processedConfig, result, role);\n    const TextsAndLogos: Array<{ textMesh: IExtMesh }[]> = [];\n    allNonIndexedMapObjects.forEach((params) => {\n      let values: IMeshValues | undefined;\n      for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n        //@ts-ignore\n        values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n        if (values !== undefined) {\n          break;\n        }\n      }\n      if (!values) return null;\n      const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n      if (textParams) {\n        if (!TextsAndLogos[values.floor_index]) {\n          TextsAndLogos[values.floor_index] = [];\n        }\n        TextsAndLogos[values.floor_index].push(textParams);\n      }\n    })\n    const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n      return (acc + item.length);\n    }, 0);\n    const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n    if (countNonIndexedObjs !== 0) {\n      const mapObjNames = new Set<string>();\n      allNonIndexedMapObjects.forEach((item) => {\n        mapObjNames.add(item.map_obj_name);\n      });\n      GeometriesAndMaterials.forEach((items) => {\n        items.forEach(item => {\n          if (!mapObjNames.has(item.object_id)) {\n            const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n            if (textParams) {\n              if (!TextsAndLogos[item.floor_index]) {\n                TextsAndLogos[item.floor_index] = [];\n              }\n              TextsAndLogos[item.floor_index].push(textParams);\n            }\n          }\n        })\n      });\n    }\n    setMeshParams([...GeometriesAndMaterials]);\n    setTextParams(TextsAndLogos);\n    setPathFinderGraph(graph);\n    setEscalatorNodes([...escalator_nodes]);\n\n  }, [processedConfig, urls, result, myFont, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, role, setPathFinderGraph, handleAsyncStoreLogos]);\n\n  return useMemo(() => {\n    return {\n      config: processedConfig,\n      meshParams: meshParams,\n      textParams,\n      storeLogos,\n      floors: floorsData,\n      pathFinderGraph,\n      escalator_nodes: escalatorNodes,\n    }\n  }, [processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import { useThree } from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/interfaces/types\";\nimport { PerspectiveCamera } from \"three\";\n\nexport const CameraProperties = (props: ICameraPropertiesProps) => {\n  const { camera } = useThree();\n\n  const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n  if (props.far) {\n    camera.far = props.far;\n  }\n  if (props.near) {\n    camera.near = props.near;\n  }\n\n  if (camera instanceof PerspectiveCamera) {\n    if (props.fov) {\n      camera.fov = props.fov;\n    }\n  }\n\n  if (cameraProjectionNeedsUpdate) {\n    camera.updateProjectionMatrix();\n  }\n\n  return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useState } from \"react\"\nimport { IConfig, IExtMesh } from \"src/interfaces/types\";\n\n\nexport type TMeshObjectContext = {\n  MeshObject: IExtMesh[] | null;\n  SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n  cameraLength: number | undefined,\n  setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n  config: IConfig | undefined,\n  setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n  MeshObject: null,\n  SetMeshObject: () => null,\n  cameraLength: undefined,\n  setCameraLength: () => null,\n  config: undefined,\n  setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({ children }: { children: React.ReactNode }) {\n  const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n  const [config, setConfig] = useState<IConfig | undefined>();\n  const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n  return (\n    <MeshObjectContext.Provider\n      value={{\n        MeshObject,\n        SetMeshObject,\n        cameraLength,\n        setCameraLength,\n        config,\n        setConfig\n      }}\n    >\n      {children}\n    </MeshObjectContext.Provider>\n  )\n}\n\nexport function useMeshObjectContext() {\n  const context = useContext(MeshObjectContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n  }\n\n  return context;\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { IConfig } from \"src/interfaces/types\";\nimport { SpriteMaterial, Texture } from \"three\";\nimport styles from './../map-box/MapBox.module.scss';\nimport { Html } from \"@react-three/drei\";\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, config }: { size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined }) => {\n  const [, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && config !== undefined && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n    }\n  }, [lockSize, config, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize, depthTest: false, depthWrite: false, color: \"black\" });\n    return material;\n  }, [lockSize, texture])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const svgData = (new XMLSerializer()).serializeToString(svgOrigin);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n\n    }\n  }, []);\n\n  if (material) {\n    // console.log('RENDER SPRITE')\n    return (\n      <group>\n        <sprite scale={scale} material={material}>\n        </sprite>\n        {blink && <Html><div className={styles.mapCenterMarker}></div></Html>}\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, IMeshParams, IMeshValues } from \"../../interfaces/types\";\nimport { ThreeEvent } from \"@react-three/fiber\";\nimport React, { } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from './../map-box/MapBox.module.scss';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: IMeshParams;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, currentFloorIndex: number, params?: IMeshValues }) {\n  const [, setUpdate] = React.useState(false);\n  const { type, mesh, currentFloorIndex } = props;\n  React.useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      // setUpdate((value) => !value);\n    };\n    return () => mesh.userData.triggerUpdate = undefined\n  }, [mesh.userData, setUpdate]);\n\n  const { config, cameraLength } = useMeshObjectContext();\n\n  // console.warn({update});\n\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </primitive>\n      } else {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </>\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n\n  const { config, meshParams, textParams, storeLogos } = meshFloors;\n  const floor = meshFloors.floors[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            // @ts-ignore\n            const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n            //console.log('Map', {baseColor, active, hovered})\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n      {escalatorMeshes?.map((params) => {\n        //@ts-ignore\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div onClick={() => handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n              <div className={styles.element} id={params.object_id as string}>\n                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? meshFloors.floors.length - params.goToFloor.index : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type { Mesh } from \"three\";\nimport { Box3, Vector3 } from \"three\";\n\nexport function get_camera_focus_object(objs: Mesh[], fov: number, aspectRatio: number, style: string) {\n  // config.STYLE\n  // config.CAMERA.fov\n\n  if (!Array.isArray(objs)) {\n    objs = [objs];\n  }\n  if (!objs.length) {\n    console.warn('get_camera_focus_object: no objects passed');\n    return { position: new Vector3(), target: new Vector3() };\n  }\n\n  const objsBoundingBox = objs.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    if (obj.geometry.boundingBox) {\n      box.union(obj.geometry.boundingBox);\n    }\n    return box;\n  }, new Box3());\n\n  const obj_size = new Vector3();\n  objsBoundingBox.getSize(obj_size);\n\n  const center = new Vector3();\n  objsBoundingBox.getCenter(center);\n\n  objs[0].localToWorld(center);\n\n  // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n  // var padding = max_length * 0.2;\n  // if (padding > 50) padding = 50;\n  // max_length += padding;\n  // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n  let tanFOV = Math.tan(Math.PI * fov / 360);\n  let padding = 1.1;\n  let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n  let new_height = (obj_size.y * padding) / 2 / tanFOV;\n  let new_y = Math.max(new_width, new_height);\n  let new_z = getCameraTiltPosition(new_y, style);\n\n  const target = new Vector3(center.x, 0, center.z);\n  const position = new Vector3(center.x, new_y, center.z + new_z);\n\n  // createjs.Ticker.framerate = 60;\n  // createjs.Tween.get(config.CONTROLS.target)\n  //     .to({ x: center.x, z: center.z }, 400);\n  // createjs.Tween.get(config.CAMERA.position)\n  //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n  return { position, target };\n}\n\nfunction getCameraTiltPosition(y: number, style: string): number {\n  let angle = 60;\n  if (style === '2D') angle = 89.9;\n  return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IMeshParams } from \"../../interfaces/types\";\nimport { Map } from \"./Map\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { defaultVars } from \"src/constants/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { IRetailer, MapObj } from \"src/interfaces/mapitApiTypes\";\n\ninterface IFloorsMapProps {\n  meshFloors: IMeshParams;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  onCameraMove?: (e: any) => void;\n  currKioskObj: Mesh;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: IZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  config: IConfig;\n  cameraPos?: { x: number, y: number, z: number } | undefined | null;\n  controlPos?: { x: number, y: number, z: number } | undefined | null;\n  handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n  isSelectedRetailerSlug: boolean;\n  setIsCameraInit: Function;\n  retailers: IRetailer[],\n  mapObjs: MapObj[],\n  handleObjectClick: (object: IExtMesh, targetId: string) => void,\n  triggerClick: boolean,\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n  const { allIndexedMapObjects, allNodesFloor } = useMapBoxContext();\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const { meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    config,\n    handleCameraAndControlsChange,\n    activeObjectId,\n    isSelectedRetailerSlug,\n    setIsCameraInit,\n    retailers,\n    mapObjs,\n    handleObjectClick,\n    triggerClick, } = params;\n  const { floors } = meshFloors;\n  const [cameraLimits, SetCameraLimits] = useState({ min: config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: 0, needsUpdate: true })\n  const { setCameraLength } = useMeshObjectContext();\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = meshFloors.config.STYLE;\n  const accentColor = meshFloors.config.ACCENT_COLOR;\n  const pathFinderGraph = meshFloors.pathFinderGraph;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n  const isUseDefaultsLimits = config.ROLE === \"PORTAL\" && routeTargetId;\n\n  const resetCamera = useCallback((fullReset: boolean = false) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n\n\n    let isZeroCCS = true;\n\n    if (config.CAMERA_CONTROLS_STATES) {\n      let cameraV3 = config.CAMERA_CONTROLS_STATES.camera;\n      if (!(cameraV3 instanceof Vector3)) {\n        cameraV3 = new Vector3(cameraV3.x, cameraV3.y, cameraV3.z);\n      }\n      isZeroCCS = (cameraV3 as Vector3).length() === 0;\n    }\n\n    if (!fullReset && config.CAMERA_CONTROLS_STATES && !isZeroCCS && !['PORTAL'].includes(config.ROLE)) {\n      focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n      focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n    }\n\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && cameraLimits.needsUpdate === false && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => ({\n        ...cl,\n        min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance,\n        max: config.CAMERA.maxDistance,\n      }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [camera, cameraLimits.needsUpdate, config.CAMERA.animSpeed, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA_CONTROLS_STATES, config.ROLE, currKioskFloorIndex, meshFloors.meshParams, style]);\n\n  const focusDistance = cameraFocus.current ? cameraFocus.current.position.distanceTo(cameraFocus.current.target) : 0;\n\n  useEffect(() => {\n\n    if (focusDistance > 0 && cameraLimits.needsUpdate) {\n      SetCameraLimits({ min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: focusDistance, needsUpdate: false })\n      setIsCameraInit(true);\n    }\n\n  }, [focusDistance, cameraLimits.needsUpdate, config.CAMERA, setIsCameraInit])\n\n  useEffect(() => {\n\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && routeTargetId && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => {\n        const minDistance = Number(config.SELECTED_ZOOM_LIMIT_DISTANCE) < config.CAMERA.minDistance ? config.CAMERA.minDistance : Number(config.SELECTED_ZOOM_LIMIT_DISTANCE)\n        return {\n          ...cl,\n          needsUpdate: false,\n          min: minDistance < 0.1 ? 0.1 : minDistance,\n          max: config.CAMERA.maxDistance,\n        }\n      });\n    }\n  }, [config.CAMERA.maxZoom, config.CAMERA.minZoom, config.SELECTED_ZOOM_LIMIT, routeTargetId, cameraLimits.initialDistance, config.ROLE, config.SELECTED_ZOOM_LIMIT_DISTANCE, config.CAMERA.minDistance, config.CAMERA.maxDistance])\n\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length, resetCamera])\n\n  useEffect(() => {\n    if (!amenityTargetType || config.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(allNodesFloor, from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n    setRouteTubes(route);\n\n    if (currKioskObj && config.ROLE === \"DISPLAY_APP\") {\n      handleChangeFloor(currKioskFloorIndex);\n    }\n\n  }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from, config.ROLE, allNodesFloor, allIndexedMapObjects, currKioskObj, handleChangeFloor, currKioskFloorIndex])\n\n  const clearEscalators = useCallback(() => {\n    meshFloors.floors.flat().forEach((item) => item.escalatorMeshes = []);\n  }, [meshFloors])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n      if (config.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          clearEscalators();\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        clearEscalators();\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floors.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n    // console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE, allNodesFloor, triggerClick, clearEscalators]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && (config.ROLE === 'PORTAL' || isSelectedRetailerSlug)) {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max,\n      Math.max(\n        isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed, floors, activeObjectId, amenityTargetType, isSelectedRetailerSlug, isUseDefaultsLimits, cameraLimits.max, cameraLimits.min]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n      const zoomStep = config.ZOOM_STEP ? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= zoomStep;\n      } else {\n        cameraDistance += zoomStep;\n      }\n\n      cameraDistance = Math.min(\n        cameraLimits.max,\n        Math.max(\n          cameraLimits.min,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoom])\n\n  // console.log('CameraLimits', cameraLimits)\n\n  const getInitialDistance = () => {\n    return cameraLimits.initialDistance\n  }\n\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange) {\n        handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n      }\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const createRouteToStore = useCallback((retailerSlug: string) => {\n    if (retailerSlug.length) {\n      const retailer = retailers.find(item => item.slug === retailerSlug);\n      if (retailer) {\n        const mapObj = mapObjs.find(item => item.retailer_id === retailer.id);\n        if (mapObj) {\n          const obj = scene.getObjectByProperty('object_id', mapObj.map_obj_name);\n          if (obj) {\n            handleObjectClick(obj as IExtMesh, mapObj.map_obj_name);\n          }\n        }\n      }\n    }\n  }, [handleObjectClick, mapObjs, retailers, scene]);\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n    createRouteToStore,\n    getInitialDistance,\n  }))\n\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min}\n        maxDistance={isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max}\n        enableZoom={config.ROLE === \"PORTAL\" || config.ROLE === \"DISPLAY_APP\"}\n        enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floors && floors.map((value: IFloorData, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { IRetailer } from './../interfaces/mapitApiTypes';\n\nexport const retailersApi = createApi({\n  reducerPath: 'retailersApi',\n  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\n  endpoints: (builder) => ({\n    getRetailers: builder.query<{ count: number, items: IRetailer[] }, { baseQuery: string, center_id: number, limit: number, page?: number }>({\n      query: ({ baseQuery, center_id, limit, page = 1 }) => ({\n        url: `${baseQuery}/v1/retailers?limit=${limit}&page=${page}`,\n        headers: {\n          center_id: center_id ? center_id.toString() : '',\n        },\n      }),\n    })\n  })\n})\n\nexport const { useGetRetailersQuery, useLazyGetRetailersQuery } = retailersApi;","import { useLazyGetRetailersQuery } from \"src/services/retailersApi\"\nimport { useCallback, useState } from \"react\";\nimport { IRetailer } from \"./../interfaces/mapitApiTypes\";\n\nconst useAllRetailers = (baseUrl: string, center_id: number, limit: number) => {\n  const [retailers, setRetailers] = useState<{ count: number, items: IRetailer[] }>({ count: 0, items: [] })\n  const baseQuery = baseUrl?.lastIndexOf('/') === baseUrl.length - 1 ? baseUrl.slice(0, -1) : baseUrl;\n\n  const [getRetailers] = useLazyGetRetailersQuery()\n\n  const fetchAllRetailers = useCallback(async (page: number, totalPages: number) => {\n    const requests = [];\n    const result: { count: number, items: IRetailer[] } = { count: 0, items: [] };\n    if (totalPages >= page) {\n      for (let currentPage = page; currentPage <= totalPages; currentPage++) {\n        requests.push(getRetailers({ baseQuery, center_id, limit, page: currentPage }, true));\n      }\n      if (requests.length) {\n        const data = await Promise.all(requests);\n        data.forEach(item => {\n          if (item && item.data && item.data.items.length) {\n            const { count, items } = item.data;\n            result.count = count;\n            result.items = [\n              ...result.items as IRetailer[],\n              ...items as IRetailer[],\n            ]\n          }\n        })\n        if (result) {\n          setRetailers(ret => ({\n            count: result.count,\n            items: [...ret.items, ...result.items],\n          }))\n        }\n        return { ...result };\n      }\n    } else {\n      return { ...result };\n    }\n  }, [baseQuery, center_id, getRetailers, limit])\n\n  const getAll = useCallback(() => new Promise<{ count: number, items: IRetailer[] }>((resolve, reject) => {\n    let result: { count: number, items: IRetailer[] } = { count: 0, items: [] };\n    getRetailers({ baseQuery, center_id, limit, page: 1 }, true).then(data => {\n      if (data.status === 'rejected') {\n        reject(data.error);\n      }\n      if (data.data) {\n        result = { ...data.data };\n        const totalPages = Math.round(result.count / limit);\n        if (totalPages > 1) {\n          console.debug({ totalPages })\n          fetchAllRetailers(2, totalPages).then(data => {\n            if (data) {\n              resolve({\n                count: result.count,\n                items: [...result.items, ...(data.items ?? [])],\n              })\n            } else {\n              resolve({ ...result });\n            }\n          });\n        } else {\n          resolve({ ...result })\n        }\n      } else {\n        resolve({ ...result });\n      }\n    });\n  }), [baseQuery, center_id, fetchAllRetailers, getRetailers, limit])\n\n  return { retailers, getAll }\n}\n\nexport default useAllRetailers;","import { IAmenitiesInteractiveList, IFloorSelectorProps } from \"src/interfaces/types\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from './../map-box/MapBox.module.scss';\nimport { MapObj } from \"src/interfaces/mapitApiTypes\";\nimport { AmenityID } from \"src/components/map-box/MapBox\";\nimport { MapRole } from \"src/constants/globals\";\n\nconst UIComponent = ({\n  floors,\n  accentColor,\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  role,\n  mapObjs,\n  onExtractedAmenities,\n}: IFloorSelectorProps & {\n  amenitiesList: IAmenitiesInteractiveList[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: (fullReset?: boolean) => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  role?: MapRole,\n  mapObjs?: MapObj[],\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      if (role === 'PORTAL_RESPONSIVE' || role === 'PORTAL') {\n        reset(true)\n      }\n      else {\n        reset();\n      }\n    }\n  }\n\n  const extractValues = useMemo<AmenityID[]>(() => {\n\n    if (!mapObjs) {\n      return [];\n    }\n\n    return mapObjs\n      .filter(obj => obj.layer_type === \"amenity\")\n      .map(obj => obj.value as AmenityID);\n  }, [mapObjs])\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [mapObjs, onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floors.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              {floors.length > 1 && (\n                <div className=\"floors btn_group\">\n                  {floors.map((floor: any, index: number) => (\n                    <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                      handleFloorChange(index)\n                    }}>{floor.title}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(role as string) &&\n          <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                  <div className={styles.img}>\n                    {/* <img src={amenity.icon} alt={amenity.name} /> */}\n                    <amenity.icon />\n                  </div>\n                  <div className={`${styles.name}`}>{amenity.name}</div>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/interfaces/mapitApiTypes\";\nimport { useCallback, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, MeshPhongMaterial, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IMeshParamsTmp } from \"src/interfaces/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useRetailersOptions, { RetailerOption } from \"./hooks/useRetailersOptions\";\n\n\ninterface IMapboxForm {\n  floorIndex: number;\n  meshFloors: IMeshParamsTmp;\n  config: IConfig;\n  data: any;\n  setData: (index: number, data: MapObj) => void;\n  selectedId: string;\n  centerId: number;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  apiURI?: string;\n  onResetData?: (data: MapObj) => void;\n  triggerSceneUpdate: Function;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n  [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: number): MapObj => ({\n  id: 0,\n  center_id: centerId,\n  retailer_id: 0,\n  kiosk_id: 0,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: '8',\n  lock_size: '0',\n  rotate: '0',\n  offsetX: '0',\n  offsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj, floorIndex: Number) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData, floorIndex) => {\n  const kioskConfig = obj.userData.kioskConfig;\n  if (kioskConfig) {\n    //TODO use 'value' until api with lock_size will be working\n    obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n    obj.userData.kioskConfig = {\n      ...kioskConfig,\n      lockSize: formData.value === '1',\n      blink: kioskConfig.blink,\n      size: Number(formData.size),\n      floorIndex: floorIndex\n    }\n    // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n    obj.userData.triggerUpdate?.();\n  }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n  const { data, setData, selectedId, centerId, config, floorIndex, onResetData, triggerSceneUpdate } = params;\n\n  const myFont = useFont(fontData as unknown as FontData);\n  const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n  const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n  const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n  const [formData, setFormData] = useState<MapObj | null>(null);\n  const [rotation] = useState<number | undefined>(undefined);\n  const context = useMeshObjectContext();\n  const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [, startTransition] = useTransition();\n  const intervalRefs = useRef<TIncDecInterval>({});\n\n  const { isLoading: isLoadingRetailers, loadOptions: loadRetailersOptions, retailers } = useRetailersOptions(centerId, params.apiURI ?? '');\n\n  const [selectedKiosksId, setSelectedKiosksId] = useState<number[]>([]);\n\n  const recheckSelectedKiosksId = useCallback((mapObjs: any[]) => {\n    if (mapObjs) {\n      const ids = (mapObjs as { kiosk_id: number }[]).reduce<number[]>((prev, cur) => {\n        if (cur.kiosk_id !== null) {\n          return [...prev, cur.kiosk_id];\n        }\n        return prev;\n      }, [])\n      setSelectedKiosksId([...ids]);\n    }\n  }, [])\n\n  useEffect(() => {\n    recheckSelectedKiosksId(data.map_objs);\n  }, [data.map_objs, recheckSelectedKiosksId])\n\n  const loadKiosksOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    // console.debug({ inputValue })\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.filter((item: any) => {\n        if (inputValue) {\n          return (item.title as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    callback(result);\n  }, [data.kiosks, selectedKiosksId])\n\n  const loadAmenitiesOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    let result: any[] = [];\n    if (Object.keys(data.amenities).length) {\n      result = Object.keys(data.amenities).filter((item: string) => {\n        if (inputValue) {\n          return (data.amenities[item].name as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: string) => {\n        return {\n          value: item,\n          label: data.amenities[item].name,\n        }\n      })\n    }\n    callback(result);\n  }, [data.amenities])\n\n  const getDefaultKioksOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    return result;\n  }, [data.kiosks, selectedKiosksId])\n\n  const getDefaultAmenitiesOptions = useCallback(() => {\n    let result: any[] = [];\n    if (Object.keys(data.amenities)?.length) {\n      result = Object.keys(data.amenities).map((item: any) => {\n        return {\n          value: item,\n          label: data.amenities[item].name,\n        }\n      })\n    }\n    return result;\n  }, [data.amenities])\n\n  const makeImage = useCallback((formData: MapObj, obj: IExtMesh) => {\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let img = null;\n    if (formData.layer_type === 'retail_logo') {\n      const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n      if (retailIndex !== -1) {\n        img = getImage(formData, data.retailers[retailIndex]);\n      }\n    } else {\n      img = getImage(formData);\n    }\n    if (img instanceof HTMLImageElement) {\n      processImage(img, formData, (geometry, material) => {\n        obj.geometry = geometry;\n        obj.material = material;\n\n        const boundingBox = geometry.boundingBox;\n\n        const mesh_center_point = new Vector3();\n        if (boundingBox) {\n          boundingBox.getCenter(mesh_center_point);\n\n          const mesh_size = new Vector3();\n          boundingBox.getSize(mesh_size);\n          if (obj.object_id) {\n            layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n          }\n        }\n      });\n    }\n  }, [data.retailers, oldMapObjName])\n\n  const makeTextGeometry = useCallback((obj: IExtMesh, text: string, size: string) => {\n    if (!obj) return;\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let text_geometry = new TextGeometry(text, {\n      font: (obj.userData && obj.userData.font) ? obj.userData.font : myFont,\n      size: parseInt(size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n    if (obj.geometry) {\n      obj.geometry.dispose();\n    }\n    obj.geometry = text_geometry;\n  }, [formData?.map_obj_name, myFont, oldMapObjName])\n\n  const updateData = useCallback((formData: MapObj) => {\n    const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n    if (index !== -1) {\n      data.map_objs[index] = { ...formData };\n      setData(index, { ...formData });\n      recheckSelectedKiosksId(data.map_objs);\n    }\n  }, [data.map_objs, setData, recheckSelectedKiosksId])\n\n\n  const handleChangeTab = useCallback((k: any | null) => {\n    if (!formData) return;\n    const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n    if (key !== null) {\n      if (isTMainTabsKey(key)) {\n        setMainTabKey(key);\n        if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n          formData.obj_type = key;\n          if (key === 'retailer') {\n            formData.layer_type = 'retail_name';\n            clearKioskConfig(context, params.meshFloors);\n          } else if (key === 'special') {\n            formData.layer_type = 'kiosk';\n            formData.retailer_id = 0;\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              if (obj) {\n                if (!obj.userData) {\n                  obj.userData = {};\n                }\n                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                obj.userData.kioskConfig = {\n                  lockSize: formData.value === '1',\n                  blink: false,\n                  size: Number(formData.size)\n\n                }\n                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n              }\n            }\n          } else if (key === 'custom') {\n            formData.layer_type = 'custom_text';\n            formData.retailer_id = 0;\n            clearKioskConfig(context, params.meshFloors);\n          }\n          setMainTabKey('');\n          setRetailerTabsKey('');\n          setSpecialTabsKey('');\n          setFormData({ ...formData });\n          updateData({\n            ...formData,\n          });\n        }\n      } else if (isTRetailerTabsKey(key)) {\n        setRetailerTabsKey(key);\n        clearKioskConfig(context, params.meshFloors);\n        if (formData.id && retailerTabsKey && key) {\n          formData.layer_type = key;\n          if (formData.layer_type !== key) {\n            setFormData({ ...formData });\n          }\n          updateData({\n            ...formData,\n          })\n          if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n            let text = '';\n            switch (key) {\n              case 'retail_name':\n\n                if (!formData.retailer_id) {\n                  break;\n                }\n\n                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n\n                if (retailIndex !== -1) {\n                  text = data.retailers[retailIndex].retail_name;\n\n                }\n                break;\n              case 'retail_text':\n              case 'custom_text':\n                text = formData.custom_text;\n                break;\n            }\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              makeTextGeometry(obj, text, formData.size);\n            }\n          }\n\n          if (['retail_logo', 'custom_image'].includes(key)) {\n            context?.MeshObject?.forEach((obj, index) => {\n              if (index === 0) return;\n\n              makeImage(formData, obj);\n            })\n          }\n        }\n      } else if (isTSpecialTabsKey(key)) {\n        setSpecialTabsKey(key);\n        formData.layer_type = key;\n        if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n          if (key !== 'kiosk') {\n            clearKioskConfig(context, params.meshFloors);\n          }\n          formData.layer_type = key;\n          formData.kiosk_id = 0;\n          formData.retailer_id = 0;\n          formData.value = '';\n          setFormData({ ...formData });\n          updateData({ ...formData });\n        }\n      }\n    }\n  }, [context, data.retailers, formData, mainTabKey, makeImage, makeTextGeometry, params.meshFloors, retailerTabsKey, specialTabsKey, updateData])\n\n\n  useEffect(() => {\n    switch (mainTabKey) {\n      case 'retailer':\n        handleChangeTab(retailerTabsKey);\n        break;\n    }\n  }, [formData, handleChangeTab, mainTabKey, retailerTabsKey])\n\n\n  const handleReset = () => {\n    if (!formData) return;\n    const defaultValues = getDefaultMapOjbValues(formData.center_id);\n    if (onResetData) {\n      onResetData({\n        ...formData,\n      })\n    }\n    setFormData({\n      ...defaultValues,\n      id: formData.id,\n    });\n    updateData({\n      ...defaultValues,\n      id: formData.id,\n    });\n  }\n\n  const handleChangeRetailer = (value: number) => {\n    if (value && formData) {\n      formData.retailer_id = value;\n      formData.kiosk_id = 0;\n      setFormData({ ...formData });\n      updateData({ ...formData });\n    }\n  }\n\n  const handleChangeKiosk = ({ value }: { value: number }) => {\n    if (value && formData) {\n      formData.kiosk_id = value;\n      formData.retailer_id = 0;\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        updateMapCenterMarkerFor(obj, formData, floorIndex);\n        triggerSceneUpdate();\n      })\n    }\n  }\n\n  const handleChangeAmenity = (newValue: any) => {\n    const { value } = newValue;\n    if (value && formData) {\n      formData.value = value as string;\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        makeImage(formData, obj);\n      })\n    }\n  }\n\n  const changeValue = (name: string, value: string) => {\n    if (!formData) return;\n    // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n    //     formData.custom_image = value;\n    //     setFormData({...formData});\n    //     updateData({...formData});\n    // }\n\n    context?.MeshObject?.forEach((obj, index) => {\n      if (!obj.userData) {\n        obj.userData = {};\n      }\n      if (!obj.userData.position) {\n        obj.userData.position = new Vector3();\n        if (obj.position) {\n          obj.userData.position.copy(obj.position);\n        }\n      }\n      const position = new Vector3();\n      if (obj.userData.position) {\n        position.copy(obj.userData.position);\n      }\n      switch (name) {\n        case 'custom_text':\n          if (index === 0) break;\n          formData.custom_text = value;\n          if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n            makeTextGeometry(obj, formData.custom_text, formData.size);\n          }\n          break;\n        case 'custom_image':\n          if (index === 0) break;\n          formData.custom_image = value;\n          makeImage(formData, obj);\n          updateData({\n            ...formData,\n          })\n          break;\n        case 'size':\n          if (index === 0) break;\n          formData.size = value;\n          if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n            let text = '';\n            if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n              const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n              if (retailIndex !== -1) {\n                text = data.retailers[retailIndex].retail_name;\n              }\n            } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n              text = formData.custom_text;\n            }\n            makeTextGeometry(obj, text, formData.size);\n          } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n            makeImage(formData, obj);\n            if (timeoutRef.current) {\n              clearInterval(timeoutRef.current);\n            }\n            timeoutRef.current = setTimeout(() => {\n              updateData({ ...formData });\n            }, 300);\n          } else if (['amenity'].includes(formData.layer_type)) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              setFormData({ ...formData });\n              updateData({ ...formData });\n            })\n          } else if (['kiosk'].includes(formData.layer_type)) {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'lock_size':\n          formData.lock_size = value;\n          //TODO use 'value' until api with lock_size will be working\n          formData.value = value;\n          if (formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'rotate':\n          if (index === 0) break;\n          formData.rotate = value;\n          obj.rotation.set(\n            obj.rotation.x,\n            obj.rotation.y,\n            parseFloat(formData.rotate) * Math.PI / 180\n          );\n          break;\n\n        case 'offsetX':\n          if (index === 0) break;\n          position.x += parseFloat(value);\n          obj.position.setX(position.x);\n          formData.offsetX = value;\n          break;\n\n        case 'offsetY':\n          if (index === 0) break;\n          position.y += parseFloat(value);\n          obj.position.setY(position.y);\n          formData.offsetY = value;\n          break;\n\n        case 'text_color':\n          if (index === 0) break;\n          formData.text_color = value;\n          if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n            const material_settings = {\n              // color: hex_to_color(formData.text_color),\n              color: formData.text_color,\n              transparent: true,\n              side: DoubleSide,\n              depthWrite: false,\n              depthTest: false,\n            };\n            let text_material = new MeshPhongMaterial(material_settings);\n            obj.material = text_material;\n          } else if (\n            formData.layer_type === 'retail_logo' ||\n            formData.layer_type === 'custom_image' ||\n            (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n            (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              updateData({\n                ...formData,\n                text_color: formData.text_color.replace('#', ''),\n              });\n            })\n          }\n          break;\n\n        case 'bg_color':\n          if (index !== 0) break;\n          formData.bg_color = value;\n          let meshType: MeshType = 'store';\n          if (obj.object_id?.startsWith('big-store')) {\n            meshType = 'big-store';\n          }\n          obj.material = getMaterial(\n            config,\n            meshType,\n            formData.map_obj_name,\n            formData.bg_color,\n            formData.transparent === \"1\" ? true : false,\n            { [formData.map_obj_name]: { ...formData } }\n          );\n          // updateData({...formData});\n          break;\n\n        default:\n          break;\n      }\n      startTransition(() => {\n        setFormData({ ...formData })\n        updateData({ ...formData });\n      });\n\n    })\n  }\n  const handleChange = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value;\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  const handleChangeLock = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value === '0' ? '1' : '0';\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  useEffect(() => {\n    if (data && data.map_objs && selectedId) {\n      const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n      if (index !== -1) {\n        setFormData({ ...data.map_objs[index] });\n      } else {\n        setFormData({\n          ...getDefaultMapOjbValues(centerId),\n          id: (new Date()).getTime(),\n        });\n      }\n    }\n    return () => {\n      setRetailerTabsKey('');\n    }\n  }, [centerId, data, selectedId])\n\n  useEffect(() => {\n    if (!formData) return;\n    if (formData.obj_type) {\n      handleChangeTab(formData.obj_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n    if (formData.layer_type) {\n      handleChangeTab(formData.layer_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n  }, [formData, handleChangeTab])\n\n  const decrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value -= 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const incrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const rotateByFixedAngle = (key: TIncDecKey, angle: number) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += angle;\n      if (value > 360) {\n        value = angle;\n      } else if (value === 360) {\n        value = 0;\n      }\n\n      changeValue(key, value.toString());\n    }\n  }\n\n  const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      rotateByFixedAngle(key, angle);\n    }, 200);\n  }\n\n  const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      decrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        decrementValue(key);\n      }, 50);\n    }, 200);\n  }\n\n  const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      incrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        incrementValue(key);\n      }, 50)\n    }, 200);\n  }\n\n  const stopIntervals = () => {\n    let key: TIncDecKey;\n    for (key in intervalRefs.current) {\n      if (intervalRefs.current[key])\n        clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = null;\n    }\n  }\n\n  const handleOnSubmit = () => {\n    if (params.onSubmit && context && context.MeshObject && formData) {\n      formData.kiosk_id = formData.kiosk_id || 0;\n      const kioskId = formData.kiosk_id || 0;\n      params.onSubmit({ ...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId });\n    }\n  }\n\n  if (!formData) return null;\n\n  return (\n    <>\n      <Tab.Container activeKey={mainTabKey}>\n        <Col>\n          <Row>\n            <Col sm=\"9\">\n              <Nav\n                variant=\"tabs\"\n                className=\"flex-row\"\n                // activeKey={mainTabKey}\n                onSelect={handleChangeTab}\n              >\n                <Nav.Item>\n                  <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm=\"3\" className=\"px-0\">\n              {/* \n                //@ts-ignore */}\n              <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\">\n              <Tab.Content>\n                <Tab.Pane eventKey={\"retailer\"}>\n                  <AsyncSelect\n                    className=\"mb-3\"\n                    aria-label=\"Choose a Retailer\"\n                    loadOptions={loadRetailersOptions}\n                    isLoading={isLoadingRetailers}\n                    loadingMessage={() => <div>loading retailers...</div>}\n                    noOptionsMessage={() => 'Retailers not found'}\n                    placeholder=\"Choose a Retailer...\"\n                    value={retailers.filter((item: RetailerOption) => item.value === Number(formData.retailer_id))?.map((item: RetailerOption) => ({\n                      value: item.value,\n                      label: item.label,\n                    }))}\n                    defaultOptions={retailers.map((item: RetailerOption) => ({ value: item.value, label: item.label }))}\n                    onChange={(item) => handleChangeRetailer(item?.value || 0)}\n\n                  />\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"retail-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                    <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                    <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              as=\"textarea\"\n                              name=\"custom_text\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"special\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"special-tab-form\"\n                    activeKey={specialTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose a Kiosk\"\n                        loadOptions={loadKiosksOptions}\n                        noOptionsMessage={() => 'Kiosks not found'}\n                        placeholder=\"Choose a Kiosk...\"\n                        value={data.kiosks?.filter((item: any) => formData.kiosk_id === item.id)?.map((item: any) => ({\n                          value: item.id,\n                          label: item.title,\n                        }))}\n                        defaultOptions={getDefaultKioksOptions()}\n                        onChange={handleChangeKiosk}\n\n                      />\n                    </Tab>\n                    <Tab eventKey=\"amenity\" title=\"Amenity\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose Amenity\"\n                        loadOptions={loadAmenitiesOptions}\n                        noOptionsMessage={() => 'Amenity not found'}\n                        placeholder=\"Choose Amenity...\"\n                        value={Object.keys(data.amenities).filter((item: string) => formData.value === item).map((item: string) => ({\n                          value: item,\n                          label: data.amenities[item].name,\n                        }))}\n                        defaultOptions={getDefaultAmenitiesOptions()}\n                        onChange={handleChangeAmenity}\n\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"custom\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"custom-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"custom_text\" title=\"Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              name=\"custom_text\"\n                              as=\"textarea\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                    <Tab eventKey=\"custom_image\" title=\"Image\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              type=\"string\"\n                              name=\"custom_image\"\n                              value={formData.custom_image}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Col>\n      </Tab.Container>\n      <Form.Group className=\"mb-3 mt-3\">\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Size</Form.Label>\n          </Col>\n          <Col>\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('size')}\n                  onMouseDown={handleDecrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"size\"\n                  type=\"text\"\n                  value={formData.size}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('size')}\n                  onMouseDown={handleIncrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                <Row>\n                  <Col sm=\"4\">\n                    <Form.Check\n                      name=\"lock_size\"\n                      id=\"lock_size\"\n                      type=\"checkbox\"\n                      //TODO use 'value' until api with lock_size will be working\n                      value={formData.value}\n                      checked={formData.value === '1'}\n                      onChange={handleChangeLock}\n                    />\n                  </Col>\n                  <Col sm=\"8\" className=\"p-0\">\n                    <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Rotate</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('rotate')}\n                  onMouseDown={handleDecrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"rotate\"\n                  type=\"number\"\n                  value={rotation ?? formData.rotate}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('rotate')}\n                  onMouseDown={handleIncrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div style={{ maxWidth: 50, height: 50 }}>\n                <Button\n                  onClick={() => rotateByFixedAngle('rotate', 45)}\n                  onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >\n                  <ArrowClockwise size={'1rem'} />\n                </Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset X</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetX')}\n                  onMouseDown={handleDecrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n\n                <Form.Control\n                  name=\"offsetX\"\n                  type=\"number\"\n                  value={formData.offsetX}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetX')}\n                  onMouseDown={handleIncrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetY')}\n                  onMouseDown={handleDecrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"offsetY\"\n                  type=\"number\"\n                  value={formData.offsetY}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetY')}\n                  onMouseDown={handleIncrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"3\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">BG Color</Form.Label>\n          </Col>\n          <Col sm=\"3\" className=\"p-0\">\n            <Form.Control\n              name=\"bg_color\"\n              type=\"string\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"2\">\n            <Form.Control\n              type=\"color\"\n              name=\"bg_color\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Row>\n              <Col sm=\"3\">\n                <input\n                  name=\"transparent\"\n                  id=\"transparent\"\n                  type=\"checkbox\"\n                  value={formData.transparent}\n                  onChange={handleChange}\n                ></input>\n              </Col>\n              <Col sm=\"9\" className=\"p-0\">\n                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"4\" className=\"d-flex justify-content-start\">\n              <Form.Label className=\"mb-0\">Text Color</Form.Label>\n            </Col>\n            <Col sm=\"5\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                name=\"text_color\"\n                type=\"color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        {['kiosk', 'amenity'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"3\">\n              <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n            </Col>\n            <Col sm=\"6\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                type=\"color\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        <Row className=\"justify-content-center px-5 py-5\">\n          <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-') ? 'Save' : 'Update'}</button>\n        </Row>\n      </Form.Group>\n    </>\n  );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext, meshFloors: IMeshParamsTmp) {\n  if (context && context.MeshObject) {\n    const obj = context.MeshObject[1];\n    if (obj && obj.userData && obj.userData.kioskConfig) {\n      obj.userData.kioskConfig = null;\n      obj.userData?.triggerUpdate();\n      meshFloors.storeLogos.flat().filter(item => item !== undefined).forEach(item => {\n        if (item.storeLogo.object_id === obj.object_id && item.storeLogo.userData.kioskConfig !== undefined) {\n          item.storeLogo.userData.kioskConfig = null;\n          item.storeLogo.userData?.triggerUpdate();\n        }\n      });\n    }\n  }\n}\n\n","import { useCallback, useEffect, useState } from \"react\"\nimport useGetRetailers, { Data } from \"../useGetRetailersBySearch\";\nexport type RetailerOption = {\n  value: number,\n  label: string,\n  isDisabled?: boolean,\n  isFixed?: boolean,\n}\ntype UseRetailersOptions = (centerId: number, apiURI: string) => {\n  isLoading: boolean,\n  loadOptions: (inputValue: string, callback: (options: RetailerOption[]) => void) => void,\n  retailers: RetailerOption[],\n};\nconst useRetailersOptions: UseRetailersOptions = (centerId, apiURI) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [retailers, setRetailers] = useState<any[]>([]);\n  const [limit] = useState<number>(100);\n  const fetchRetailers = useGetRetailers({ centerId, apiURI });\n\n  const processData = useCallback((data: Data, isLoadingMore?: boolean) => {\n    setIsLoading(false);\n    let result: any = [];\n    if (!data) return result;\n    if (!data.isError) {\n      result = data.items.map((item: any) => {\n        return {\n          value: item.id,\n          label: `${item.name}${item.location && item.location.length > 1 ? item.location : ''}`,\n        }\n      })\n    } else {\n      console.error(`Fetch Retailers error: ${data.error}`)\n    }\n    return result;\n  }, []);\n\n  const loadOptions = useCallback((inputValue: string, callback: (options: RetailerOption[]) => void) => {\n    callback(retailers.filter(item => (item.label as string).toLowerCase().includes(inputValue)));\n  }, [retailers])\n\n  useEffect(() => {\n    setIsLoading(true);\n    const retailersData = fetchRetailers('', limit);\n    retailersData.then(data => {\n      const result = processData(data);\n      setRetailers([...result]);\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchRetailers, limit, processData])\n\n  return {\n    isLoading,\n    loadOptions,\n    retailers,\n  }\n}\n\nexport default useRetailersOptions;","import { useCallback } from \"react\";\nimport { IRetailer } from \"src/interfaces/mapitApiTypes\";\nimport useAllRetailers from \"src/Hooks/useAllRetailers\";\n\ntype GetRetailersParams = {\n  centerId: number,\n  apiURI?: string,\n}\n\nexport type Data = {\n  isError: boolean,\n  error: string | null,\n  items: IRetailer[],\n  count: number,\n}\n\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n  const { centerId, apiURI } = params;\n\n  const { getAll } = useAllRetailers(apiURI ?? '', centerId, 100);\n\n  const fetchRetailers = useCallback((search: string, limit?: number): Promise<Data> => {\n\n    const fetchAll = (): Promise<Data> => new Promise((resolve, reject) => {\n\n      getAll().then(data => {\n        resolve({\n          isError: false,\n          error: null,\n          items: data.items,\n          count: data.count,\n        });\n      }).catch((e: any) => {\n        reject(e.message ? e.message : 'useGetRetailer: something went wrong!');\n      });\n\n    });\n\n    return fetchAll();\n\n  }\n    , [getAll]);\n\n  return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/interfaces/mapitApiTypes\";\n\ntype RetailerDataProps = {\n  centerId: number,\n  slug: string,\n  webApiURI: string,\n}\n\nexport type RetailerData = {\n  data: IRetailer | null,\n  isLoading: boolean,\n  isError: boolean,\n  error: string | null,\n}\n\nconst defaultData: RetailerData = {\n  data: null,\n  isLoading: false,\n  isError: false,\n  error: null,\n}\nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n  const { centerId, slug, webApiURI } = props;\n  const [data, setData] = useState<RetailerData>(defaultData);\n\n  useMemo(() => {\n    if (!slug || !centerId) {\n      setData({ ...defaultData });\n      return false;\n    }\n\n    let apiURI = webApiURI;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      setData({\n        isLoading: true,\n        data: null,\n        isError: false,\n        error: null,\n      })\n      fetch(`${apiURI}/v1/retailers/${slug}`, {\n        headers: {\n          center_id: centerId ? centerId.toString() : '',\n        }\n      }).then(\n        (response) => response.json()\n      ).then(data => {\n        setData({\n          isLoading: false,\n          isError: false,\n          error: null,\n          data: {\n            id: data.id,\n            retail_name: data.name,\n            slug: data.slug,\n            location: data.location && data.location !== '-' ? data.location : '',\n            retailer_phone: data.retailer_phone,\n            retailer_description: data.global_retailer.description,\n            logo: data.media.url,\n            map_obj_name: '',\n          }\n        });\n      }).catch((e: any) => {\n        setData({\n          data: null,\n          isLoading: false,\n          isError: true,\n          error: `Error fetch retaler data: ${e.message}`,\n        })\n      })\n    } else {\n      setData({\n        isLoading: false,\n        isError: true,\n        error: 'webApiURI not provided!',\n        data: null,\n      })\n    }\n\n  }, [centerId, slug, webApiURI]);\n\n  return data;\n\n}\n\nexport default useRetailerData;\n","import { Form, FormGroup, Modal, Placeholder, Spinner } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { IRetailer, MapObj } from \"src/interfaces/mapitApiTypes\";\nimport { ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n  amenity: string,\n  show: boolean,\n  onHide: () => void,\n  centerId: number,\n  kioskId: number,\n  retailers?: IRetailer[],\n  mapObjs?: MapObj[],\n  mapObjectName?: string,\n  webApiURI: string,\n  onClick?: (id: string, amenityType?: string) => void,\n}\n\nconst RetailerInfoList = ({ retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId }: { retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: number) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: number }) => {\n  const [retailerId, setRetailerId] = useState<number>(0);\n\n  const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    if (onClick) {\n      onClick(retailerId);\n    }\n  }\n\n  const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setRetailerId(parseInt(e.target.value));\n  }\n\n  const filterRetailers = (retailers: IRetailer[], arrayObjects: MapObj[]) => {\n    return retailers.filter(retailer =>\n      arrayObjects.some(obj => obj.retailer_id === retailer.id)\n    );\n  }\n\n  if (!isAmenity && (isLoading || !retailer)) {\n    return (\n      <div>\n        <div className={styles['retailer-info-spinner']} >\n          <Spinner animation=\"border\" role=\"status\" variant=\"secondary\" />\n        </div>\n        <div className={styles['retailer-info-content']} >\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={5} /> <Placeholder bg=\"secondary\" xs={3} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={7} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {!!retailer && (\n        <>\n          <div className={styles['retailer-logo']}>\n            <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n          </div>\n          <div className={styles['retailer-info-content']} >\n            <div>\n              <b>Retailer:</b> {retailer.retail_name}\n            </div>\n            {retailer.location &&\n              <div>\n                <b>Location:</b> {retailer.location}\n              </div>\n            }\n            {retailer.retailer_phone &&\n              <div>\n                <b>Phone:</b> {retailer.retailer_phone}\n              </div>\n            }\n            {retailer.retailer_description &&\n              <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n            }\n          </div>\n        </>\n      )}\n      <Form className={styles['get-directions-from']}>\n        <FormGroup>\n          <div className=\"d-flex align-items-center gap-3\">\n            {kioskId === 0 ? (\n              <>\n                <Form.Select\n                  name=\"retailer\"\n                  onChange={onChange}\n                  value={retailerId}\n                >\n                  <option value={''} disabled>Get direction from ...</option>\n                  {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                    if (retailer && item.id === retailer.id) return null;\n                    return (\n                      <option key={index} value={item.id}>{item.retail_name}</option>\n                    )\n                  }\n                  )}\n                </Form.Select>\n                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n              </>\n            ) : null}\n          </div>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n  const {\n    amenity,\n    show,\n    onHide,\n    centerId,\n    retailers,\n    mapObjs,\n    mapObjectName,\n    webApiURI,\n    onClick,\n    kioskId,\n  } = props;\n  const slug = useMemo(() => {\n    if (centerId && mapObjs && retailers && mapObjectName) {\n      const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n      if (mapObj && mapObj.retailer_id) {\n        const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n        if (retailer) {\n          return retailer.slug;\n        }\n      }\n    }\n    return '';\n  }, [centerId, mapObjectName, mapObjs, retailers]);\n  const data = useRetailerData({ centerId, slug, webApiURI });\n  const handleOnClick = (retailerId: number) => {\n    if (!onClick) return;\n    let mapObj = null;\n    if (kioskId) {\n      mapObj = mapObjs?.find(item => item.kiosk_id === kioskId);\n    } else {\n      mapObj = mapObjs?.find(item => item.retailer_id === retailerId);\n    }\n\n    let mapObjectName = '';\n\n\n    if (mapObj) {\n      mapObjectName = mapObj.map_obj_name;\n    }\n\n    if (amenity) {\n      onClick(mapObjectName, amenity);\n    } else {\n      onClick(mapObjectName);\n    }\n  }\n\n  const isAmenity = (amenity !== '' || (mapObjectName ? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n  return (\n    <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n      <div className={styles['retailerInfoCloseBtn']}>\n        <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n      </div>\n      <Modal.Body className=\"p-3\">\n        <RetailerInfoList\n          retailers={retailers}\n          retailer={data.data}\n          isLoading={data.isLoading}\n          onClick={handleOnClick}\n          isAmenity={isAmenity}\n          mapObjs={mapObjs}\n          kioskId={kioskId}\n        />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState, useTransition } from \"react\";\nimport { Canvas, ThreeEvent } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { Mesh, Object3D } from \"three\";\nimport { IExtMesh, MapConfig, IMeshParams, IMeshValues } from \"src/interfaces/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../services/map-api.service\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../interfaces/mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from './../map-box/MapBox.module.scss';\nimport { Alert } from 'react-bootstrap';\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { AmenityID } from \"src/components/map-box/MapBox\";\nimport { defaultVars } from \"src/constants/defaults\";\n\ninterface ISceneComponentProps {\n  mapitData?: MapIt2Response;\n  config: Partial<MapConfig>;\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObj[]) => void;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n}\n\nexport interface IZoomData {\n  direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n  const { data, refreshData, removeMissingMapObjects } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as number, webApiURI: params.webApiURI });\n  const [triggerClick, setTriggerClick] = useState<boolean>(false);\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlState, setCameraControlState] = useState<any>(null);\n  const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition } = params;\n  const [IsCameraInit, setIsCameraInit] = useState(false);\n\n  const [, startTransition] = useTransition();\n  const [disableClicks, setDisableClicks] = useState(false);\n\n  const [selectedRetailerSlug, setSelectedRetailerSlug] = useState<string>('');\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n  const [, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n  const cameraControlStateRef = useRef<any>(null);\n  cameraControlStateRef.current = cameraControlState;\n  const deviceTypeRef = useRef<string | undefined | null>(null);\n  deviceTypeRef.current = deviceType;\n  // console.log('DEVICE TYPE', deviceType);\n  const floorsMapRef = useRef<{\n    resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null,\n    createRouteToStore: (retailerSlug: string) => void | null,\n    getInitialDistance: () => number,\n  }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const handleFloorChange = (floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }\n\n  const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n\n  useEffect(() => {\n    if (data?.map_objs && data.map_objs.length > 0 && meshFloors.meshParams.length) {\n      const objectNames = meshFloors.meshParams.reduce<string[]>((prev, cur) => {\n        const curVal = cur.reduce<string[]>((subPrev, subCur) => {\n\n          return [...subPrev, subCur.object_id];\n        }, []);\n        return [...prev, ...curVal];\n      }, [])\n      if (objectNames) {\n        removeMissingMapObjects(objectNames);\n      }\n    }\n  }, [data?.map_objs, meshFloors.meshParams, removeMissingMapObjects])\n\n  const mapCenterMarkerRef = useRef(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const context = useMeshObjectContext();\n  const { SetMeshObject } = context;\n  const [, setSceneKey] = useState(0);\n\n  const updateKey = useCallback(() => {\n    setSceneKey((value) => value + 1)\n  }, [])\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n  const config = meshFloors.config;\n  const floors = meshFloors.floors;\n  const meshParams = meshFloors.meshParams;\n\n  const { setConfig: setCxtConfig } = context;\n\n  useEffect(() => {\n    if (context && meshFloors && meshFloors.config) {\n      setCxtConfig(meshFloors.config);\n    }\n  }, [context, meshFloors, setCxtConfig])\n\n  useImperativeHandle(ref, () => ({\n    refreshData,\n    createRouteToAmenity: handleAmenityClick,\n    createRouteToStore: floorsMapRef.current?.createRouteToStore,\n    getInitialDistance: floorsMapRef.current?.getInitialDistance,\n  }))\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      const resizeWidth = () => {\n        setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      }\n      window.addEventListener('resize', () => {\n        resizeWidth();\n        // Update your map or camera settings based on newWidth\n      });\n      resizeWidth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statsParentRef.current]);\n\n  const setCameraControlPos = useCallback((camera_controls_states: any) => {\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraPos(camera_controls_states.display_app.camera)\n      setControlPos(camera_controls_states.display_app.controls)\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n      if (canvasWidth > 1024) {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (canvasWidth > 600) {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      } else {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraPos(camera_controls_states.display_app.camera)\n        setControlPos(camera_controls_states.display_app.controls)\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      }\n    }\n  }, [canvasWidth, config?.ROLE])\n\n  useEffect(() => {\n    if (data && data.camera_controls_states) {\n      setCameraControlState(data.camera_controls_states);\n      setCameraControlPos(data.camera_controls_states);\n    }\n  }, [data, setCameraControlPos]);\n\n  useEffect(() => {\n    if (cameraControlStateRef.current) {\n      setCameraControlPos(cameraControlStateRef.current);\n    }\n  }, [deviceType, canvasWidth, setCameraControlPos])\n\n\n  const { onSettingsLoading } = params;\n  useEffect(() => {\n    if (data && meshFloors.config && onSettingsLoading) {\n      onSettingsLoading?.(\n        {\n          ...data,\n          settings: {\n            ...data.settings,\n            STYLE: meshFloors.config.STYLE,\n            ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n            AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n            AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n            BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n            BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n            BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n            BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n            MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n            OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n            OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n            STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n            STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n            WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n            WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n            KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n            STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n            MIN_ZOOM: meshFloors.config.CAMERA?.minZoom?.toString(),\n            MAX_ZOOM: meshFloors.config.CAMERA?.maxZoom?.toString(),\n            CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n            CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n            ZOOM_STEP: meshFloors.config.ZOOM_STEP ?? defaultVars.ZOOM_STEP ?? '100',\n            SELECTED_ZOOM_LIMIT: meshFloors.config.SELECTED_ZOOM_LIMIT ?? defaultVars.SELECTED_ZOOM_LIMIT ?? '400',\n            SELECTED_ZOOM_LIMIT_DISTANCE: meshFloors.config.SELECTED_ZOOM_LIMIT_DISTANCE?.toString()\n          }\n        });\n    }\n  }, [data, meshFloors, onSettingsLoading])\n\n  const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n    if (canvasWidthRef.current === 0) return;\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n      if (canvasWidthRef.current > 1024) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (canvasWidthRef.current > 600) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      } else {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      }\n    }\n  }, [config?.ROLE])\n\n  useEffect(() => {\n    if (cameraControlStateRef.current && setCameraControlPosition) {\n      setCameraControlPosition(cameraControlStateRef.current);\n    }\n  }, [cameraControlState, setCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapitData = useCallback((index: number, newData: MapObj) => {\n    setFormMapObjData((prev) => {\n      const itemIndex = prev.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n      if (itemIndex !== -1) {\n        prev[itemIndex] = { index, data: { ...newData } };\n      } else {\n        prev.push({ index, data: { ...newData } })\n      }\n\n      return [...prev];\n    });\n\n  }, [])\n\n  const getMapitData = useCallback((): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }, [data, formMapObjData])\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refreshData);\n    }\n  }\n\n  const floorsCount = data?.floors?.length ?? 0;\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    if (!config) {\n      return [null, 0, ''] // not an error - loading/initializing\n    }\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = floorsCount ? floorsCount - 1 : 0;\n    if (config.KIOSKS && config.KIOSKS[config.KIOSK_ID]) {\n      const kioskMapObjName = config.KIOSKS[config.KIOSK_ID].map_obj_name;\n      const currKioskMeshParams = meshParams?.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (config.ROLE === 'WEBSITE') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n      }\n      if (config.ROLE === 'WEBSITE') {\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [config, meshParams, floorsCount]);\n\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsCount ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = (fullReset: boolean = false) => {\n\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n    setSelectedRetailerSlug('');\n\n    if (floorsMapRef.current) {\n      if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n        let ccs = null;\n        if (deviceTypeRef.current === \"desktop\") {\n          ccs = { ...data.camera_controls_states.desktop }\n        } else if (deviceTypeRef.current === \"display_app\") {\n          ccs = { ...data.camera_controls_states.display_app }\n        } else if (deviceTypeRef.current === \"mobile\") {\n          ccs = { ...data.camera_controls_states.mobile }\n        } else if (deviceTypeRef.current === \"tablet\") {\n          ccs = { ...data.camera_controls_states.tablet }\n        }\n\n        if (ccs) {\n          floorsMapRef?.current?.resetCamera(fullReset, ccs);\n        }\n      } else {\n\n        floorsMapRef?.current?.resetCamera(fullReset);\n\n      }\n    }\n\n  }\n\n  useEffect(() => {\n\n    if (!config || !deviceType) {\n      return;\n    }\n\n\n    if (!params.config.CAMERA_CONTROLS_STATES) {\n      //@ts-ignore\n      config.CAMERA_CONTROLS_STATES = data.camera_controls_states[deviceType]\n    }\n\n    floorsMapRef?.current?.resetCamera();\n\n  }, [deviceType, config, data?.camera_controls_states, params.config.CAMERA_CONTROLS_STATES])\n\n  useEffect(() => {\n    if (!config) {\n      return;\n    }\n\n    const kiosks: IMeshValues[] = [];\n    meshFloors.meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n    // console.log('kiosks', kiosks);\n\n    const mapObjectIdToKiosk = new Map();\n    const mapObjectIdToLogo = new Map();\n    kiosks.forEach(item => {\n      mapObjectIdToKiosk.set(item.object_id, item.mesh);\n    });\n    // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n    meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n    // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n    // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    const mapData = getMapitData();\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        //TODO use 'value' until api with lock_size will be working\n        // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n        if (logo.userData.kioskConfig !== null) {\n          logo.userData.kioskConfig = {\n            lockSize: mapObj?.value === '1',\n            blink: item.object_id === currKioskId,\n            size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE),\n            floorIndex: kiosk.floor_index,\n          }\n          // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n          logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n          logo.visible = true;\n        }\n        currKioskLogo.push(logo);\n      }\n    });\n\n    // return () => {\n    //     currKioskLogo?.forEach(mesh => {\n    //         mesh.userData.htmlContent = null;\n    //     });\n    // }\n  }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObj[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData, onMapDataUpdate])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (config?.SELECTED_RETAILER_SLUG && IsCameraInit) {\n      setSelectedRetailerSlug(config.SELECTED_RETAILER_SLUG);\n    }\n  }, [config?.SELECTED_RETAILER_SLUG, IsCameraInit])\n\n  useEffect(() => {\n    if (config && data && data.retailers && data.map_objs && selectedRetailerSlug !== '') {\n      const retailer = data.retailers.find(item => {\n        return item.slug === selectedRetailerSlug;\n      })\n      if (retailer) {\n        const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n        const meshParam = meshParams?.flat().find(item => item.object_id === mapObject?.map_obj_name);\n        if (meshParam) {\n          setSelectedFloorIndex(meshParam.floor_index);\n        }\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [config, data, setSelectedActiveObjectId, selectedRetailerSlug, meshParams])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const textParams = meshFloors.textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const logoParams = meshFloors.storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const result = [object as IExtMesh];\n\n    if (textParams) {\n      result.push(textParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    SetMeshObject([...result]);\n  }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n      const object = meshFloors.meshParams[currentFloorIndex]?.find((value) => value.object_id === selectedActiveObjectId);\n      if (object) {\n        //@ts-ignore\n        handleMeshObjectContext(object);\n      }\n      //@ts-ignore\n    }\n  }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (config && config.ROLE !== 'PORTAL' && !config.KIOSK_ID) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [config, setSelectedActiveObjectId]);\n\n  const handleObjectClick = useCallback((object: IExtMesh, targetId: string) => {\n    if (config?.ROLE === 'DISPLAY_APP' && currKioskObj) {\n      handleFloorChange(currKioskFloorIndex);\n    }\n    startTransition(() => {\n      handleMeshObjectContext(object);\n      setSelectedActiveObjectId(targetId ?? '');\n      setTriggerClick(t => !t);\n      setSelectedRetailerSlug('');\n      setAmenityTargetType('');\n      setFromObjectId('');\n    })\n\n  }, [config?.ROLE, currKioskFloorIndex, currKioskObj, handleMeshObjectContext, setSelectedActiveObjectId])\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    // console.log('onClick', e.object)\n    if (disableClicks) {\n      setDisableClicks(false);\n      return false;\n    }\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value);\n      if (config && config.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleObjectClick(e.object as IExtMesh, targetId ?? '');\n      if (config && config.ROLE !== 'PORTAL' && !config.KIOSK_ID) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext, disableClicks, handleObjectClick]);\n\n  const onCameraMove = useCallback((e: any) => {\n    if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n      return\n    }\n  }, []);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    // console.log('onPointerEnter', e.object)\n    if (e.object.userData.storeName === '') {\n      // console.warn('onPointerEnter no storeName', e.object);\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerLeave', e.object)\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const startMousePos = useRef<{ x: number | null, y: number | null, distance: number }>({ x: null, y: null, distance: -Infinity });\n\n  const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    if (e.buttons > 0) {\n      if (startMousePos.current.x === null) {\n        startMousePos.current.x = e.clientX;\n      }\n      if (startMousePos.current.y === null) {\n        startMousePos.current.y = e.clientY;\n      }\n      if (startMousePos.current.x !== null && startMousePos.current.y !== null) {\n        let newDistance = Math.sqrt(Math.pow(startMousePos.current.x - e.clientX, 2) + Math.pow(startMousePos.current.y - e.clientY, 2));\n        if (newDistance > startMousePos.current.distance) {\n          startMousePos.current.distance = newDistance;\n        }\n      }\n\n      startTransition(() => {\n        // Disable dragging if the user accidentally moved the map within 15 pixels by clicking on the store\n        if (startMousePos.current.distance > 15) {\n          setDisableClicks(true);\n        }\n      });\n    } else {\n      startMousePos.current.x = startMousePos.current.y = null;\n      startMousePos.current.distance = -Infinity;\n    }\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n  }\n\n  if (data && (!data.floors || data.floors.length <= 0)) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!config || !meshFloors.meshParams.length) {\n    console.warn('LOADING MAP')\n    if (config?.ROLE === 'WP_SITE') {\n      return <div className=\"messageStyle\" style={messageStyle}>No Map for Center</div>\n    }\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div className=\"messageStyle\" style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && config.ROLE === 'WEBSITE') {\n    console.error('NO KIOSK OBJECT FOUND');\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      // setSelectedActiveObjectId(retailerId);\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }\n\n  return (\n    <>\n      {config.ROLE === 'PORTAL' &&\n        <div className={styles['mapbox-admin-form']}>\n          {!selectedActiveObjectId ?\n            <Alert variant=\"info\">Select a store to customize.</Alert>\n            :\n            <MapboxForm\n              floorIndex={currentFloorIndex}\n              meshFloors={meshFloors}\n              config={config}\n              data={getMapitData()}\n              setData={handleChangeMapitData}\n              selectedId={selectedActiveObjectId}\n              centerId={params.config.CENTER_ID || 0}\n              onSubmit={handleOnSubmit}\n              apiURI={params.webApiURI}\n              onResetData={params.onResetData}\n              triggerSceneUpdate={updateKey}\n            />\n          }\n        </div>\n      }\n\n      <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n        <UIComponent\n          accentColor={config.ACCENT_COLOR.getStyle()}\n          floors={floors}\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          amenitiesList={amenitiesList}\n          handleAmenityClick={handleAmenityClick}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          role={config.ROLE}\n          mapObjs={data?.map_objs}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n          <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n          {/*<axesHelper args={[5000]} />*/}\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n\n          <FloorsMap\n            onCameraMove={onCameraMove}\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            // @ts-ignore\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            config={config}\n            ref={floorsMapRef}\n            cameraPos={cameraPos}\n            controlPos={controlPos}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n            isSelectedRetailerSlug={true}\n            setIsCameraInit={setIsCameraInit}\n            retailers={data?.retailers ?? []}\n            mapObjs={data?.map_objs ?? []}\n            handleObjectClick={handleObjectClick}\n            triggerClick={triggerClick}\n          />\n        </Canvas>\n\n        {config.ROLE !== 'DISPLAY_APP' && (\n          <div ref={labelRef}\n            className=\"store-name-placeholder\"\n            style={{\n              position: 'absolute',\n              padding: 10,\n              background: '#ffffff',\n              fontWeight: 600,\n              color: '#000000',\n              fontSize: 16,\n              display: currentHoveredObject ? 'block' : 'none',\n              top: 300,\n              left: 400,\n              opacity: .8,\n            }}\n          >{currentHoveredObject && currentHoveredObject.userData.storeName}</div>\n        )}\n      </div>\n      {\n        config.ROLE !== 'PORTAL' ?\n          <RetailerInfoModal\n            amenity={selectedAmenityType}\n            show={showRetailerInfo}\n            onHide={() => setShowRetailerInfo(false)}\n            centerId={config.CENTER_ID}\n            mapObjectName={selectedActiveObjectId}\n            retailers={data?.retailers}\n            mapObjs={data?.map_objs}\n            webApiURI={params.webApiURI ?? ''}\n            onClick={handleRetailerInfoOnClick}\n            kioskId={config.KIOSK_ID}\n          />\n          : null\n      }\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, PortalMapSettings } from \"../interfaces/mapitApiTypes\";\nimport demoData from '../demo/data.json';\nimport useAllRetailers from \"./../Hooks/useAllRetailers\";\n\ninterface useMapIt2DataProps {\n  CENTER_ID: number;\n  mapitData?: MapIt2Response;\n  webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n  data: MapIt2Response | null,\n  refreshData: () => void,\n  removeMissingMapObjects: (objectNames: string[]) => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n  const [data, setData] = useState<MapIt2Response | null>(null);\n\n  if (!CENTER_ID && !mapitData) {\n    console.error('useMapit2Data requires either CENTER_ID or mapitData');\n  }\n\n  const { getAll } = useAllRetailers(webApiURI as string, CENTER_ID, 100);\n\n  const getData = useCallback(() => {\n    let apiURI = webApiURI || null;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n      const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n      const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n      const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n      const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n      const fetchRequestOptions = {\n        headers: {\n          center_id: CENTER_ID ? CENTER_ID.toString() : '',\n        },\n      };\n\n      const mapObjsPromise = fetch(mapObjsApiUri, fetchRequestOptions).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const floorsPromise = fetch(floorsApiUri, fetchRequestOptions).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      })\n        .then(data => {\n          if (!data\n            || !data.items\n            || (data.items && !data.items.length)) {\n            console.error('Empty floors data from server');\n          }\n          return data;\n        }).catch(e => { console.error(e) })\n\n      const kiosksPromise = fetch(kioskApiUri, fetchRequestOptions).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const settingsPromise = fetch(settingsApiUri, {\n        headers: {\n          center_id: CENTER_ID ? CENTER_ID.toString() : '',\n        }\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { console.error(e) })\n\n      const responsivePromise = fetch(responsiveApiUri, fetchRequestOptions).then(response => {\n        if (!response.ok) {\n          throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { throw new Error(e) })\n\n      Promise.all<Array<any>>([\n        getAll(),\n        mapObjsPromise,\n        floorsPromise,\n        kiosksPromise,\n        settingsPromise,\n        responsivePromise\n      ]).then(([retailers, mapObjects, floors, kiosks, mapSettings, responsiveSettings]) => {\n        const responseData: Partial<MapIt2Response> = {};\n        responseData.retailers = retailers.items.map((item: any): IRetailer => ({\n          id: item.id,\n          retail_name: item.name,\n          slug: item.slug,\n          location: item.location,\n          retailer_phone: '',\n          retailer_description: '',\n          logo: item.media.url,\n          map_obj_name: '',\n        }));\n        responseData.map_objs = [...mapObjects.items].map(item => ({\n          ...item,\n          offsetX: item.offset_x,\n          offsetY: item.offset_y,\n        }));\n        responseData.floors = [...floors.items];\n        responseData.kiosks = [];\n        responseData.amenities = { ...demoData.amenities };\n        responseData.kiosks = [...kiosks.items];\n\n        const settings: PortalMapSettings = mapSettings?.settings ? mapSettings.settings : {\n          \"STYLE\": \"3D\",\n          \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n          \"ACCENT_COLOR\": \"4EA5FF\",\n          \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n          \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n          \"WALL_THICKNESS\": \"0.6\",\n          \"WALL_COLOR\": \"888888\",\n          \"BOUNDARY_THICKNESS\": \"0.8\",\n          \"BOUNDARY_COLOR\": \"888888\",\n          \"BASE_COLOR\": \"25292B\",\n          \"STORE_TEXT_COLOR\": \"222222\",\n          \"OVERLAY_COLOR\": \"FFFFFF\",\n          \"OVERLAY_OPACITY\": \"0.7\",\n          \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n          \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n          \"ZOOM_STEP\": \"100\",\n        };\n        if (responsiveSettings) {\n          responseData.camera_controls_states = responsiveSettings;\n        } else {\n          responseData.camera_controls_states = { ...demoData.camera_controls_states }\n        }\n        responseData.settings = settings;\n\n        setData({ ...responseData as MapIt2Response })\n      })\n    }\n  }, [CENTER_ID, getAll, webApiURI])\n\n  useEffect(() => {\n    if (mapitData) {\n      setData(mapitData);\n      return;\n    }\n\n    if (!CENTER_ID) {\n      return;\n    }\n\n    getData();\n\n  }, [CENTER_ID, mapitData, getData]);\n\n  const removeMissingMapObjects = useCallback((objectNames: string[]) => {\n    if (data?.map_objs) {\n      const mapObjects = data.map_objs.filter(item => {\n        return objectNames.includes(item.map_obj_name)\n      })\n      if (mapObjects.length < data.map_objs.length) {\n        setData({\n          ...data,\n          map_objs: [...mapObjects],\n        })\n      }\n    }\n  }, [data]);\n\n  const refreshData = () => getData();\n  return { data, refreshData, removeMissingMapObjects };\n}","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport { retailersApi } from './services/retailersApi'\n\nexport const store = configureStore({\n  reducer: {\n    [retailersApi.reducerPath]: retailersApi.reducer,\n  },\n  middleware: (getDefalultMiddleware) => getDefalultMiddleware().concat(retailersApi.middleware),\n})\n\nsetupListeners(store.dispatch);\n","import { MutableRefObject, forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport styles from './MapBox.module.scss';\nimport SceneComponent from '../SceneComponent/SceneComponent';\nimport { isMapIt2Response, MapIt2Response, MapObj, MapObjToSave } from \"../../interfaces/mapitApiTypes\";\nimport { MapConfig } from \"../../interfaces/types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapBoxContextProvider from './../../contexts/MapBoxContextProvider';\nimport { Provider } from 'react-redux';\nimport { store } from './../../store';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n  createRouteToStore: (retailerSlug: string) => void;\n  getInitialDistance: () => number;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station';\n\nexport interface IAppProps {\n  mapitData?: unknown;\n  config: Partial<MapConfig>;\n  stats?: boolean;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n\n\nconst MapBox = forwardRef(({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, deviceType, setCameraControlPosition, onResetData, onExtractedAmenities }: IAppProps, ref) => {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n  useImperativeHandle(ref, () => {\n    return {\n      getInitialDistance: refObj?.current?.getInitialDistance\n    }\n  });\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <MapBoxContextProvider>\n        <MeshObjectContextProvider>\n          <div className={`${styles['mapbox-component']} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n            <SceneComponent\n              ref={refObj}\n              setSelectedActiveObjectId={setSelectedActiveObjectId}\n              selectedActiveObjectId={selectedActiveObjectId}\n              mapitData={mapData}\n              config={config}\n              onSettingsLoading={onSettingsLoading}\n              webApiURI={webApiURI}\n              mediaStorageURI={mediaStorageURI}\n              onSubmit={handleOnSubmit}\n              onResetData={onResetData}\n              deviceType={deviceType}\n              setCameraControlPosition={setCameraControlPosition}\n              onExtractedAmenities={onExtractedAmenities}\n            />\n            <div className={styles.hide}>\n              <div id=\"map-special-svg-kiosk\">\n                <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n                  <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-atm\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n                  <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n                  <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-management\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n                  <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n                  <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-playarea\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n                  <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                  <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                  <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-restroom\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n                  <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-family-restroom\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n                  <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                  <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                  <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                  <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                  <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-elevator\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n                  <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                  <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                  <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-security\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n                  <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-dog-poop-station\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n                  <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n                  <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n                  <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n                  <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n                  <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n                </svg>\n              </div>\n              <div id=\"map-special-svg-escalator\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"398\" viewBox=\"0 0 512 398\">\n                  <g fillRule=\"evenodd\">\n                    <path fill=\"#FFF\" d=\"M217.01,68.67 C235.674,68.677 250.846,53.503 250.85,34.83 C250.846,16.072 235.674,0.9 217.01,0.87 C198.243,0.9 183.071,16.072 183.05,34.83 C183.071,53.503 198.243,68.677 217.01,68.67\"></path>\n                    <path fill=\"#FFF\" d=\"M250.49,129.63 L250.49,108.27 C250.507,62.826 183.412,63.326 183.41,108.27 L183.41,195.39 L183.53,195.39 L120.17,258.87 C114.172,264.805 113.443,265.065 101.69,265.11 C101.691,265.075 62.93,265.11 62.93,265.11 C23.943,265.065 0.557,300.113 0.53,329.79 C0.557,359.539 23.943,397.1 66.41,397.11 C66.41,397.11 119.149,397.1 135.41,397.11 C151.738,397.1 171.491,390.871 187.73,375.51 L389.93,174.03 C394.237,170.175 396.633,168.978 404.09,168.99 C404.09,168.99 431.929,168.978 454.01,168.99 C478,168.978 512,141.75 511.97,102.51 C512,63.651 477.75,37.75 451.97,37.71 L373.25,37.71 C356.899,37.664 335.943,44.326 323.45,56.79 L250.49,129.63\"></path>\n                    <path fill=\"#FFF\" d=\"M377.93,71.19 L448.85,71.19 C466.144,71.211 477.75,90.498 477.77,102.03 C477.75,113.502 469.516,134.969 448.37,134.91 L405.77,134.91 C387.75,134.969 379.75,137.5 369.41,147.87 L165.65,351.63 C157.443,359.826 146.989,363.093 133.61,363.15 L66.41,363.15 C49.149,363.093 33.943,348.496 33.89,329.31 C33.943,310.156 48.443,299.415 63.41,299.43 L109.49,299.43 C122.943,299.415 131.775,295.581 139.49,287.91 L346.61,80.79 C355.083,72.276 363.502,71.211 377.93,71.19\"></path>\n                  </g>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </MeshObjectContextProvider>\n      </MapBoxContextProvider>\n    </Provider>\n\n\n  );\n})\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n  id: number;\n  index?: string;\n  retail_name: string;\n  slug: string;\n  location: string;\n  retailer_phone: string;\n  retailer_description: string;\n  logo: string;\n  map_obj_name: string;\n};\n\nexport type MapObj = {\n  id: number;\n  center_id: number;\n  retailer_id: number;\n  kiosk_id: number;\n  map_obj_name: string;\n  obj_type: string;\n  layer_type: string;\n  value: string;\n  custom_text: string;\n  custom_image: string;\n  hover_text: string;\n  bg_color: string;\n  transparent: string | number;\n  text_color: string;\n  size: string;\n  lock_size: string;\n  rotate: string;\n  offsetX: string;\n  offsetY: string;\n  goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & { kiosk_id: number | null };\n\nexport type Floor = {\n  id: string;\n  svg_map?: string;\n  objsGroup?: Group;\n  interactiveObjs?: any[];\n  escalatorsObjs?: any[];\n  escalatorsNodes?: Record<any, any>;\n  escalatorMeshes?: any[];\n  route_points?: IRoutePoint[];\n  route_tube?: any;\n  route_texture?: Texture | null | undefined;\n  routeMeshes?: any[];\n  route_active?: boolean;\n  center_id?: string;\n  title: string;\n  svg?: string;\n  status?: string;\n  created_at?: string;\n};\n\nexport type CameraControlsState = {\n  camera: { x: number, y: number, z: number };\n  controls: { x: number, y: number, z: number };\n};\n\nexport type PortalMapSettings = {\n  STYLE: '2D' | '3D',\n  MAP_BACKGROUND_COLOR: string;\n  ACCENT_COLOR: string;\n  STORE_DEFAULT_COLOR: string;\n  BIG_STORE_DEFAULT_COLOR: string;\n  WALL_THICKNESS: string;\n  WALL_COLOR: string;\n  BOUNDARY_THICKNESS: string;\n  BOUNDARY_COLOR: string;\n  BASE_COLOR: string;\n  STORE_TEXT_COLOR: string;\n  STORE_HEIGHT: string;\n  OVERLAY_COLOR: string;\n  OVERLAY_OPACITY: string;\n  AMENITIES_NAV_BG_COLOR: string;\n  AMENITIES_NAV_ICON_COLOR: string;\n  KIOSK_SIZE: string;\n  MIN_ZOOM: string;\n  MAX_ZOOM: string;\n  CAMERA_MIN_DISTANCE: string;\n  CAMERA_MAX_DISTANCE: string;\n  ZOOM_STEP: string;\n  SELECTED_ZOOM_LIMIT: string;\n  SELECTED_ZOOM_LIMIT_DISTANCE: string;\n};\n\nexport type Kiosk = {\n  id: number;\n  title: string;\n  map_obj_name: string;\n};\n\nexport type Amenity = {\n  name: string;\n  image: string;\n};\n\nexport type MapIt2Response = {\n  retailers: IRetailer[];\n  map_objs: MapObj[];\n  floors: Floor[];\n  camera_controls_states: {\n    display_app: CameraControlsState;\n    desktop: CameraControlsState;\n    tablet: CameraControlsState;\n    mobile: CameraControlsState;\n  };\n  settings: PortalMapSettings;\n  kiosks: Kiosk[];\n  amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n  name: string;\n  node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n  if (typeof obj !== 'object' || obj === null) return false;\n\n  const response = obj as Record<string, unknown>;\n\n  return (\n    Array.isArray(response.retailers) &&\n    Array.isArray(response.map_objs) &&\n    Array.isArray(response.floors) &&\n    typeof response.camera_controls_states === 'object' &&\n    response.camera_controls_states !== null &&\n    typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n    typeof response.settings === 'object' &&\n    Array.isArray(response.kiosks) &&\n    typeof response.amenities === 'object'\n  );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","_path$userData","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","_floors$floor_index$r","push","Vector3","node2_name","exists2","_floors$floor_index$r2","addNode","_extends","addLink","weight","distanceTo","hex_to_color","hex_code","Color","getFormatedColor","replace","amenitiesList","type","icon","ATMIcon","_jsxs","xmlns","viewBox","children","_jsx","d","transform","fill","ManagementIcon","PlayAreaIcon","RestroomIcon","FamilyRestroom","ElevatorIcon","SecurityIcon","DogPoopStation","cx","cy","rx","ry","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","allMapObjects","allIndexedRetailers","role","_allIndexedMapObjects","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","item","_mesh$mesh_type","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","_floor$objsGroup","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","_floors$allNodesFloor","escalator_mesh","goToFloor","direction","_floors$allNodesFloor2","escalator_clone","floor_route","routePath","create_route_path","_floors$floor_index","_floors$floor_index2","routeMeshes","create_route_paths","_floors$floor_index$o","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK_ID","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minZoom","maxZoom","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","SELECTED_ZOOM_LIMIT","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","set","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","_map_obj$custom_image","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","size","get_store_name_logo_geo","textLogoNamePrefix","myFont","handleAsync","new_object_id","result","boundingBox","computeBoundingBox","mesh_center_point","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","logoMesh","storeLogo","getImageLogo","MapBoxContext","createContext","meshByObjectId","Map","setMeshByObjectId","setAllMapObjects","setAllIndexedMapObjects","setAllIndexedRetailers","setAllNodesFloor","createGraph","setPathFinderGraph","setNgraphPath","floorsData","MapBoxContextProvider","useState","Provider","useMapBoxContext","context","useContext","Error","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","meshParams","setMeshParams","textParams","setTextParams","storeLogos","setStoreLogos","escalatorNodes","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","mergedConfig","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","MIN_ZOOM","MAX_ZOOM","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","canvasWidth","screen","camera_controls_states","mobile","tablet","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","SELECTED_ZOOM_LIMIT_DISTANCE","values","clearScene","removeFromParent","GeometriesAndMaterials","graph","results","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","point","origin_point","target_direction","storeIntersects","intersectObjects","object","escalatorIntersects","assign_route_nodes_to_stores","has","get","_floors$i$escalatorsN","_floors$escalatorsNod","_floors$i$escalatorsN2","_floors$escalatorsNod2","nodeIdFrom","nodeIdTo","linkFloorEscalators","loadFloors","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","_mesh$geometry$index","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","useMeshObjectContext","MapCenterMarker","lockSize","blink","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","_document$getElementB","svgOrigin","svgBlob","Blob","svgUrl","URL","createObjectURL","svgTexture","Texture","needsUpdate","Html","className","MapObject","setUpdate","React","currentFloorIndex","triggerUpdate","kioskConfig","htmlContent","pointerEvents","distanceFactor","uuid","_Fragment","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","Fragment","_params$geometry$boun","_params$goToFloor2","boundingSphere","_params$goToFloor","display","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","isSelectedRetailerSlug","setIsCameraInit","mapObjs","handleObjectClick","triggerClick","cameraLimits","SetCameraLimits","min","initialDistance","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","isUseDefaultsLimits","resetCamera","fullReset","selectedFloorMeshParams","meshes","focus","aspect","isZeroCCS","cameraV3","controls","cameraDistance","setLength","fromPosition","fromTarget","animationStartTime","duration","cl","focusDistance","Number","route","kiosk_obj_name","amenity_type","_to_obj_name","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","clearEscalators","flat","targetMesh","_floors$currentFloorI","currentActiveObject","zoomStep","getInitialDistance","onCameraMove","vector","_cameraFocus$current","_cameraFocus$current2","animationTime","animationProgress","lerpVectors","createRouteToStore","retailerSlug","slug","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","retailersApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getRetailers","query","limit","page","url","headers","toString","useLazyGetRetailersQuery","useAllRetailers","setRetailers","lastIndexOf","slice","fetchAllRetailers","async","totalPages","requests","currentPage","Promise","all","ret","getAll","resolve","reject","then","status","round","_data$items","UIComponent","selectedFloorIndex","handleFloorChange","zoomIn","zoomOut","reset","handleAmenityClick","onExtractedAmenities","extractValues","filter","preventDefault","Function","styles","backgroundColor","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","MapboxForm","_params$apiURI","_retailers$filter","_data$kiosks3","setData","selectedId","onResetData","triggerSceneUpdate","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","isLoadingRetailers","loadOptions","loadRetailersOptions","useRetailersOptions","apiURI","setIsLoading","fetchRetailers","search","isError","catch","useGetRetailers","processData","isLoadingMore","label","location","inputValue","callback","toLowerCase","selectedKiosksId","setSelectedKiosksId","recheckSelectedKiosksId","ids","prev","cur","loadKiosksOptions","_data$kiosks","isDisabled","loadAmenitiesOptions","getDefaultKioksOptions","_data$kiosks2","getDefaultAmenitiesOptions","_Object$keys","makeImage","retailIndex","findIndex","HTMLImageElement","makeTextGeometry","updateData","handleChangeTab","k","clearKioskConfig","_context$MeshObject","changeValue","_context$MeshObject4","_obj$object_id","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadingMessage","noOptionsMessage","placeholder","defaultOptions","Tabs","Form","Label","Control","as","rows","handleChangeKiosk","_context$MeshObject2","newValue","_context$MeshObject3","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","handleRotateByFixedAngle","_obj$userData","_item$storeLogo$userD","defaultData","RetailerInfoList","isAmenity","kioskId","_filterRetailers","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","Select","disabled","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","fetch","json","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","SceneComponent","_config$DEFAULT_SELEC","_data$floors$length","_data$floors","_data$retailers","_data$map_objs","_params$webApiURI","refreshData","removeMissingMapObjects","mapitData","getData","mapObjsApiUri","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","fetchRequestOptions","mapObjsPromise","ok","statusText","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","mapObjects","mapSettings","responsiveSettings","responseData","offset_x","offset_y","demoData","objectNames","useMapit2Data","setTriggerClick","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","IsCameraInit","disableClicks","setDisableClicks","selectedRetailerSlug","setSelectedRetailerSlug","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","subPrev","subCur","labelRef","currentHoveredObject","setCurrentHoveredObject","setSceneKey","updateKey","showRetailerInfo","setShowRetailerInfo","setCxtConfig","_floorsMapRef$current","_floorsMapRef$current2","createRouteToAmenity","_statsParentRef$curre","offsetWidth","resizeWidth","_statsParentRef$curre2","addEventListener","setCameraControlPos","display_app","desktop","onSettingsLoading","_meshFloors$config$CA","_meshFloors$config$CA2","_ref","_meshFloors$config$ZO","_ref2","_meshFloors$config$SE","_meshFloors$config$SE2","getHexString","camPos","ctrlTarget","activeFromObjectId","handleChangeMapitData","newData","itemIndex","getMapitData","floorsCount","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","_floorsMapRef$current5","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","exportData","meshParam","handleMeshObjectContext","_meshFloors$textParam","_meshFloors$storeLogo","logoParams","_meshFloors$meshParam","targetId","t","stopPropagation","startMousePos","Infinity","messageStyle","top","left","meshFloorsChecked","Alert","getStyle","resetHandle","ccs","_floorsMapRef$current3","_floorsMapRef$current4","Canvas","Stats","parent","intensity","buttons","clientX","clientY","newDistance","sqrt","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","configureStore","reducer","middleware","getDefalultMiddleware","concat","setupListeners","dispatch","MapBox","refObj","setMapData","_refObj$current","isMapIt2Response","fillRule"],"mappings":"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"}