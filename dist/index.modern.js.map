{"version":3,"file":"index.modern.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/contexts/MapBoxContextProvider.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/services/retailersApi.tsx","../src/Hooks/useAllRetailers.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/MapboxForm.tsx","../src/components/MapboxForm/hooks/useRetailersOptions.ts","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/store.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type { Vector2 } from \"three\";\nimport { IFloorData } from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n  return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string, boolean] {\n  let exists = false;\n  let node_name: string = '-name-not-found-';\n  const currentFloor = floors[floor_index];\n  if (currentFloor.route_points !== undefined) {\n    for (let i = 0; i < currentFloor.route_points.length; i++) {\n      if (vertex.x === currentFloor.route_points[i].node.x && vertex.y === currentFloor.route_points[i].node.y) {\n        exists = true;\n        node_name = currentFloor.route_points[i].name;\n        break;\n      }\n    }\n    if (!exists) {\n      node_name = next_node_name(node_count);\n      // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n  }\n  return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport { Graph } from \"ngraph.graph\";\nimport { Color, Vector2, Vector3 } from \"three\";\nimport { get_node_name } from \"./nodesUtils\";\nimport { MeshType } from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n  const consolePrefix = 'MeshParams';\n  let mesh_type: MeshType = null;\n  var layer_color: Color | string = path.color.clone();\n  var extrude = 0;\n  var z_index = 0;\n  var mesh_visible = true;\n  var mesh_draw = true;\n  var mesh_transparent = false;\n  var line_thickness = config.WALL_THICKNESS;\n  var interactiveMesh = true;\n  var layer_name = path.userData?.node.id;\n  if (layer_name !== undefined) {\n    if (layer_name.startsWith('boundary')) {\n      mesh_type = 'boundary';\n      layer_color = config.BOUNDARY_COLOR;\n      line_thickness = config.BOUNDARY_THICKNESS;\n      if (config.STYLE === '3D') {\n        extrude = 9;\n      }\n    } else if (layer_name.startsWith('wall')) {\n      mesh_type = 'wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 8.5;\n      }\n    } else if (layer_name.startsWith('outer-wall')) {\n      mesh_type = 'outer-wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        mesh_draw = false;\n      }\n    } else if (layer_name.startsWith('building-base')) {\n      mesh_type = 'building-base';\n      layer_color = config.BUILDING_BASE_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 12;\n        z_index = -12;\n      }\n    } else if (layer_name.startsWith('base')) {\n      mesh_type = 'base';\n      layer_color = config.BASE_COLOR;\n    } else if (layer_name.startsWith('store')) {\n      mesh_type = 'store';\n      layer_color = config.STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = parseInt(config.STORE_HEIGHT);\n      }\n      if (layer_name.startsWith('store-underlay')) {\n        interactiveMesh = false;\n      }\n    } else if (layer_name.startsWith('big-store')) {\n      mesh_type = 'big-store';\n      layer_color = config.BIG_STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 16;\n      }\n    } else if (layer_name.startsWith('route-path')) {\n      mesh_type = 'route-path';\n      mesh_draw = false;\n      path.subPaths.forEach(subPath => {\n        if (subPath.curves.length === 0) {\n          console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n        }\n\n        subPath.curves.forEach(curve => {\n          //@ts-ignore\n          const v1: Vector2 = curve.v1;\n          //@ts-ignore\n          const v2: Vector2 = curve.v2;\n\n          const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n          if (!exists1) {\n            floors[floor_index].route_points?.push({\n              name: node1_name,\n              node: new Vector3(v1.x, v1.y, 1)\n            });\n            allNodesFloor[node1_name] = floor_index;\n          }\n          const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n          if (!exists2) {\n            floors[floor_index].route_points?.push({\n              name: node2_name,\n              node: new Vector3(v2.x, v2.y, 1)\n            });\n            allNodesFloor[node2_name] = floor_index;\n          }\n          pathFinderGraph.addNode(node1_name, { ...v1 });\n          pathFinderGraph.addNode(node2_name, { ...v2 });\n\n          // pathFinderGraph.addLink(node1_name, node2_name);\n          pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n          pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n        });\n      });\n    } else if (layer_name.startsWith('escalator-')) {\n      mesh_type = 'escalator';\n      mesh_visible = false;\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('kiosk-')) {\n      mesh_type = 'kiosk';\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('amenity-')) {\n      mesh_type = 'amenity';\n      mesh_transparent = true;\n      z_index = 1;\n    } else if (layer_name.startsWith('overlay')) {\n      mesh_type = 'overlay';\n    } else if (layer_name.startsWith('special-shape')) {\n      mesh_type = 'special-shape';\n    } else {\n      extrude = 1;\n    }\n  } else {\n    console.warn(consolePrefix + 'Layer name is undefined, path', path)\n  }\n\n\n  /*console.debug({\n      mesh_type,\n      layer_color,\n      extrude,\n      z_index,\n      mesh_visible,\n      mesh_draw,\n      mesh_transparent,\n      line_thickness,\n      interactiveMesh,\n      path,\n      layer_name,\n  })*/\n  return {\n    mesh_type,\n    layer_color,\n    extrude,\n    z_index,\n    mesh_visible,\n    mesh_draw,\n    mesh_transparent,\n    line_thickness,\n    interactiveMesh,\n    path,\n    layer_name,\n  }\n}","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import { IAmenitiesInteractiveList } from \"src/types\";\n\nconst amenities: IAmenitiesInteractiveList[] = [\n  {\n    name: \"ATM\",\n    type: \"atm\",\n  },\n  {\n    name: \"Management\",\n    type: \"management\",\n  },\n  {\n    name: \"Kids Area\",\n    type: \"playarea\",\n  },\n  {\n    name: \"Restroom\",\n    type: \"restroom\",\n  },\n  {\n    name: \"Family Restroom\",\n    type: \"family-restroom\",\n  },\n  {\n    name: \"Elevator\",\n    type: \"elevator\",\n  },\n  {\n    name: \"Security\",\n    type: \"security\",\n  },\n];\n\nexport const getAllAmenities = () => {\n  const amenitiesWithSvg = amenities.map((item) => {\n    let svg;\n    const svg_block = document.getElementById(`map-special-svg-${item.type}`);\n    if (svg_block) {\n      const svg_element = svg_block.querySelector('svg');\n      if (svg_element) {\n        const svgColoredParts = svg_element.querySelectorAll('[fill]');\n        svgColoredParts.forEach((svgColoredPart) => {\n          svgColoredPart.setAttribute('fill', '#FFFFFF');\n        });\n        svg = (new XMLSerializer()).serializeToString(svg_element);\n      }\n    }\n    return {\n      ...item,\n      svg\n    };\n  });\n  return amenitiesWithSvg;\n}","import { Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry } from \"three\";\nimport { getWallShape } from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\n// import {allMapObjects} from \"../../globals\";\nimport { IConfig, IExtMesh, IMeshValues, TRoles } from \"../../types\";\nimport { hex_to_color } from \"../../helpers/misc\";\n\nimport { IRetailer, MapObj } from \"../../mapitApiTypes\";\nimport { getAllAmenities } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n  'route-path': 0,\n  'escalator': 0,\n  'underlay': 0,\n  'overlay': 1,\n  'building-base': 1,\n  'base': 2,\n  'store': 3,\n  'big-store': 4,\n  'kiosk': 5,\n  'wall': 6,\n  'outer-wall': 7,\n  'boundary': 8,\n  'amenity': 9,\n  'layer-image': 10,\n  'layer-text': 11,\n  'route-tube': 12,\n  'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n  if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n    return renderOrders[mesh_type];\n  }\n  // console.warn(`Unknown mesh type: ${mesh_type}`)\n  return 0;\n}\n\nexport const getMaterial = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  layer_color: Color | string,\n  mesh_transparent: boolean,\n  allIndexedMapObjects: Record<string, MapObj>,\n) => {\n  const material_settings = {\n    color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n    side: DoubleSide,\n    transparent: false,\n    depthWrite: true,\n    depthTest: true,\n    opacity: 1,\n  }\n  if (config.STYLE === '2D' || mesh_type === 'base' || mesh_type == null) {\n    if (mesh_type !== 'boundary') {\n      material_settings.depthWrite = false;\n      material_settings.depthTest = false;\n    }\n  }\n  if (mesh_type === 'overlay') {\n    material_settings.color = config.OVERLAY_COLOR;\n    material_settings.opacity = config.OVERLAY_OPACITY;\n  }\n  if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE !== 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent === 1) {\n    material_settings.opacity = 0;\n  }\n  var material = new MeshLambertMaterial(material_settings);\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    material.colorDefault = material.color;\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color !== '') {\n      material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n      //@ts-ignore\n      material.colorDefault = material.color;\n    }\n    //@ts-ignore\n    material.active = false;\n  }\n  if (config.ROLE !== 'PORTAL' && mesh_transparent) {\n    material.opacity = 0;\n    material.transparent = true;\n  }\n\n  material.transparent = material.opacity !== 1;\n\n  return material;\n}\n\nexport const getGeometry = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  extrude: number,\n  line_thickness: number,\n  path: any,\n) => {\n  const consolePrefix = 'MaterialAndGeometry';\n\n  let shapes = path.toShapes(true);\n\n  // shapes.forEach((shape, index) => {\n  let extrude_meshes;\n  if (config.STYLE === '2D') {\n    extrude_meshes = ['building-base'];\n  } else {\n    extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n  }\n\n  let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n  var geometry;\n  if (mesh_type && extrude_meshes.includes(mesh_type)) {\n    geometry = new ExtrudeGeometry(shapes, {\n      depth: -extrude,\n      bevelEnabled: false,\n    });\n  } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n    //@ts-ignore\n    let wall_geometries = [];\n    //@ts-ignore\n    path.subPaths.forEach(subPath => {\n      //@ts-ignore\n      subPath.curves.forEach(curve => {\n        if (curve.type === 'LineCurve') {\n          let shape_extend = 0;\n          if (mesh_type === 'boundary') {\n            shape_extend = 1;\n          } else if (mesh_type === 'wall') {\n            // shape_extend = 1 / 3;\n          }\n          let shape1 = getWallShape(curve, line_thickness, shape_extend);\n          let wall_geometry = new ExtrudeGeometry(shape1, {\n            depth: -extrude,\n            bevelEnabled: false,\n          });\n          wall_geometries.push(wall_geometry);\n        } else {\n          console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n        }\n      });\n    });\n\n    if (wall_geometries.length === 1) {\n      //@ts-ignore\n      geometry = wall_geometries[0];\n    } else if (wall_geometries.length > 1) {\n      //@ts-ignore\n      geometry = mergeGeometries(wall_geometries);\n    } else {\n      console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n    }\n  } else {\n    geometry = new ShapeGeometry(shapes);\n    try {\n      //@ts-ignore\n      if (geometry.attributes.position.count === 0) {\n        console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n      }\n    } catch (e: any) {\n      console.error(e.message);\n    }\n  }\n\n  return geometry;\n}\n\nexport const getMaterialAndGeometry = (allMapObjects: string[], config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n\n  const material = getMaterial(\n    config,\n    mesh_type,\n    layer_name,\n    layer_color,\n    mesh_transparent,\n    allIndexedMapObjects\n  );\n\n  const geometry = getGeometry(\n    config,\n    mesh_type,\n    layer_name,\n    extrude,\n    line_thickness,\n    path\n  );\n\n  const mesh = new Mesh(geometry, material) as IExtMesh;\n  mesh.object_id = layer_name;\n  mesh.mesh_type = mesh_type;\n  mesh.floor_index = floor_index;\n  mesh.visible = mesh_visible;\n  mesh.position.z = z_index;\n  let storeName = '';\n  if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n    if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type === 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n      storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].custom_text;\n      if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n        storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n      }\n    } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].value;\n      if (storeName.length > 1) {\n        const amenity = getAllAmenities().find(item => item.type === storeName)\n        if (amenity) {\n          storeName = amenity.name;\n        }\n      }\n    }\n  }\n  mesh.userData.storeName = storeName;\n  if (config.STYLE === '2D') {\n    mesh.renderOrder = getRenderOrder(mesh_type);\n    if (layer_name && layer_name.includes('underlay')) {\n      mesh.renderOrder = getRenderOrder('underlay');\n    }\n  }\n\n  floors[floor_index].objsGroup.add(mesh);\n\n  if (mesh_type === 'escalator') {\n    floors[floor_index].escalatorsNodes[layer_name] = null;\n    floors[floor_index].escalatorsObjs.push(mesh);\n    mesh.escalator_id = floor_index + '-' + layer_name;\n  }\n\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    mesh.route_node_id = null;\n\n    // add floor_index to the kiosks\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'kiosk') {\n      // var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n      /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n          ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n      }*/\n    }\n\n    if (config.ROLE === 'PORTAL') {\n      allMapObjects.push(layer_name);\n    }\n    if (\n      (config.ROLE !== 'PORTAL' && mesh_type === 'kiosk') ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'amenity' && allIndexedMapObjects[layer_name].value !== '') ||\n      (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n      (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type ?? ''))\n    ) {\n      // if (interactiveMesh) {\n      floors[floor_index].interactiveObjs.push(mesh);\n      // }\n    } else if (\n      (config.ROLE === 'PORTAL')\n    ) {\n      floors[floor_index].interactiveObjs.push(mesh);\n    }\n  }\n\n  // if (['store', 'big-store'].includes(mesh_type as string)) {\n  //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n  // }\n\n  return {\n    mesh,\n    geometry,\n    material,\n    object_id: layer_name,\n    mesh_type,\n    floor_index,\n    visible: mesh_visible,\n    renderOrder: mesh.renderOrder,\n  }\n  // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n  BufferGeometry,\n  CanvasTexture,\n  CurvePath,\n  DoubleSide,\n  LineCurve3,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Raycaster,\n  Scene,\n  TubeGeometry,\n  Vector3,\n} from \"three\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\n// import {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport { PathFinder } from \"ngraph.path\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\nimport { IExtMesh, IFloorData } from \"../types\";\nimport { Graph, Node } from \"ngraph.graph\";\n// import { allNodesFloor } from \"src/globals\";\n\nconst consolePrefix = 'ROUTE: ';\n\n\n\nexport function delete_route_path(floors: IFloorData[]) {\n  for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n    const floor = floors[floor_index];\n    floor.route_active = false;\n\n    if (floor.route_tube != null) {\n      floor.route_tube.geometry.dispose();\n      //@ts-ignore\n      floor.route_tube.material.dispose();\n      floor.objsGroup?.remove(floor.route_tube);\n    }\n\n    floor.route_tube = undefined;\n    floor.route_texture = null;\n    floor.escalatorMeshes = [];\n  }\n}\n\nexport function create_route(allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n  if (from_mesh_object_id === to_mesh_object_id) {\n    return [];\n  }\n  const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n  if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n  return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[], floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n  // TODO: remove scene dependency and scene.getObjectByProperty\n  const routePaths = [] as any[];\n  delete_route_path(floors);\n  let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n  let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n  let from_node_name = from_obj.route_node_id;\n  let to_node_name = to_obj.route_node_id;\n\n  // console.log({\n  //     from_mesh_object_id,\n  //     to_mesh_object_id,\n  //     from_obj,\n  //     to_obj,\n  //     from_node_name,\n  //     to_node_name,\n  // })\n\n  // from_node_name = 'node-147';\n  // to_node_name = 'node-221';\n\n  if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n  if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n  if (!from_node_name || !to_node_name) return routePaths;\n\n  const from_route_floor_index = from_obj.floor_index;\n  const to_route_floor_index = to_obj.floor_index;\n\n  const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n    distance: function (fromNode, toNode, link) {\n      if (link.data) return link.data.weight;\n      return false;\n    },\n    //@ts-ignore\n    debug: true,\n  });\n  const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n  const routeNodesEsclators = [];\n  if (!routeNodes) {\n    return [];\n  }\n  const floor_routes = [];\n\n  for (let index = 0; index < routeNodes.length; index++) {\n    const routeNode = routeNodes[index];\n    if (floor_routes[allNodesFloor[routeNode.id]]) {\n      floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n    } else {\n      floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n    }\n\n    if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n      // don't consider these middle escalators nodes\n    } else {\n      routeNodesEsclators.push(routeNode);\n    }\n  }\n  for (let index = 0; index < routeNodesEsclators.length; index++) {\n    const routeNode = routeNodesEsclators[index];\n    if (\n      allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n      && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n    ) {\n      const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n      const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n\n      let goToFloor = null;\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index + 1].id],\n          direction: 'Next',\n        };\n      }\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index - 1].id],\n          direction: 'Previous',\n        };\n      }\n\n\n      if (goToFloor && escalator_mesh) {\n        escalator_mesh.goToFloor = goToFloor;\n        const escalator_clone = escalator_mesh.clone();\n        escalator_clone.goToFloor = goToFloor;\n        //@ts-ignore\n        floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_clone);\n      }\n    }\n\n  }\n  for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n    const floor_route = floor_routes[floor_index];\n    if (floor_route && floor_route.length > 1) {\n      const routePath = create_route_path(floor_route, floor_index, floors, style);\n      routePaths[floor_index] = routePath;\n\n      floors[floor_index].route_active = true;\n      floors[floor_index].routeMeshes = [routePath];\n      if (floor_index === from_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(from_obj);\n      }\n      if (floor_index === to_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(to_obj);\n\n      }\n    }\n  }\n\n  // setTimeout(function () {\n  //     //TODO openFloorMap functionality\n  //     // openFloorMap(from_route_floor_index);\n  // });\n\n  return routePaths;\n}\n\nfunction create_route_path(\n  routeNodes: Node<any>[],\n  floor_index: number,\n  floors: IFloorData[],\n  style = '2D',// config.STYLE\n) {\n  let distance = 0;\n  let route_path = new CurvePath<Vector3>();\n  for (let i = 1; i < routeNodes.length; i++) {\n    let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n    let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n    route_path.add(new LineCurve3(from_node, to_node));\n    distance += from_node.distanceTo(to_node);\n  };\n  var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n  //@ts-ignore\n  geometry = new BufferGeometry().copy(geometry);\n  var material = new MeshBasicMaterial({\n    map: get_route_texture(distance, floor_index, floors),\n    transparent: true,\n    side: DoubleSide,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  let route_tube = new Mesh(geometry, material) as IExtMesh;\n  if (style === '2D') {\n    route_tube.position.z = -10;\n    route_tube.scale.z = 0.1;\n  }\n  route_tube.position.z = 0;\n  route_tube.renderOrder = getRenderOrder('route-tube');\n  route_tube.mesh_type = 'route-tube';\n  //@ts-ignore\n  route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n  // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n  floors[floor_index].route_tube = route_tube;\n  floors[floor_index].objsGroup?.add(route_tube);\n\n  return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n  return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n  let distance = 0;\n\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n\n  for (let i = 1; i < routeNodes.length; i++) {\n    let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n    distance += link?.data.weight || 0;\n  };\n  return distance;\n}\n\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n  let canvas = document.createElement(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    ctx.canvas.width = distance;\n    ctx.canvas.height = 80;\n\n    ctx.fillStyle = \"#4ea5ff\";\n    ctx.fillRect(0, 0, distance, 80);\n\n    let grd_width = 0.1 * distance;\n    const min_grd_width = 60;\n    const max_grd_width = 120;\n    if (grd_width < min_grd_width) grd_width = min_grd_width;\n    if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n    let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n    grd.addColorStop(0, \"#4ea5ff\");\n    grd.addColorStop(0.4, \"white\");\n    grd.addColorStop(0.6, \"white\");\n    grd.addColorStop(1, \"#4ea5ff\");\n\n    ctx.fillStyle = grd;\n    ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n    floors[floor_index].route_texture = route_texture;\n\n    return route_texture;\n  } else {\n    return undefined;\n  }\n}\n\n//TODO\n\nexport function assign_route_nodes_to_stores(\n  floor_index: number,\n  floors: IFloorData[],\n  allIndexedMapObjects: Record<string, MapObj>,\n  allIndexedRetailers: Record<string, IRetailer>,\n  allNodesFloor: Record<string, number>,\n  escalator_nodes: string[],\n  find_store_node_raycaster: Raycaster,\n  role: string, //config.ROLE\n) {\n  const result = new Map();\n  const currentFloor = floors[floor_index];\n  if (currentFloor && currentFloor.route_points) {\n    currentFloor.route_points.forEach(point => {\n      let origin_point = new Vector3(point.node.x, point.node.y, -10);\n      let target_direction = new Vector3(0, 0, 1);\n      find_store_node_raycaster.set(origin_point, target_direction);\n      //@ts-ignore\n      var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n      if (storeIntersects.length) {\n        //@ts-ignore\n        storeIntersects[0].object.route_node_id = point.name;\n        //@ts-ignore\n        result.set(storeIntersects[0].object.object_id, point.name);\n        if (false && role !== 'PORTAL') {\n          //@ts-ignore\n          var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n          if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n            // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n          }\n        }\n      }\n\n      var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n      if (escalatorIntersects.length) {\n        const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n        let escalator_obj_id = obj.object_id;\n        const escalatorNodes = floors[floor_index].escalatorsNodes;\n        if (escalatorNodes) {\n          escalatorNodes[escalator_obj_id as string] = point.name;\n          allNodesFloor[point.name] = floor_index;\n          escalator_nodes.push(point.name);\n        }\n      }\n    });\n  }\n  return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n  // console.log('linkFloorEscalators', floors)\n  if (floors.length > 1) {\n    for (let i = 0; i < (floors.length - 1); i++) {\n      // console.log('floors[i]',i, floors[i])\n      const floor_escalators = floors[i].escalatorsNodes;\n      // console.log('floor_escalators', floor_escalators);\n      Object.keys(floor_escalators as object).forEach(escalator => {\n        if (floors[i].escalatorsNodes?.[escalator] != null && floors[i + 1].escalatorsNodes?.[escalator] != null) {\n          // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n          const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n          const nodeIdTo = floors[i + 1].escalatorsNodes?.[escalator];\n          if (nodeIdFrom && nodeIdTo) {\n            pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n            pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n          }\n        } else {\n          // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n        }\n      })\n    }\n  }\n}\n\nexport function make_amenity_route(allNodesFloor: Record<string, number>, kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string): Mesh[] {\n  let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n  // if (!kiosk_obj) return [];\n  let kiosk_node_name = kiosk_obj ? kiosk_obj.route_node_id : '';\n\n  var to_obj_name = null;\n\n  var shortest_distance = 9999;\n  // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n  const map_objs: string[] = [];\n  for (let key in allIndexedMapObjects) {\n    const mapObject = allIndexedMapObjects[key];\n    if (\n      mapObject.layer_type === 'amenity'\n      && mapObject.obj_type === 'special'\n      && mapObject.value === amenity_type\n    ) {\n      map_objs.push(key);\n    }\n  }\n  map_objs.forEach((amenity_obj_name: string) => {\n    let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n      distance: function (fromNode, toNode, link) {\n        if (link.data) return link.data.weight;\n        return false;\n      },\n      //@ts-ignore\n      debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n      var amenity_node_name = amenity_obj.route_node_id;\n      try {\n        var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n        if (route_distance && route_distance < shortest_distance) {\n          shortest_distance = route_distance;\n          to_obj_name = amenity_obj_name;\n        }\n      } catch (e: any) {\n        console.warn(`Amenity Path: ${e.message}`);\n      }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n      to_obj_name = amenity_node_name;\n    }\n  });\n  return create_route(allNodesFloor, kiosk_obj_name, to_obj_name ?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import { getMeshParams } from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport { IConfig, IFloorData, IMeshValues, TRoles } from \"src/types\";\n// import {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport { getMaterialAndGeometry } from \"./getMaterialAndGeometry\";\nimport { Raycaster } from \"three\";\nimport { assign_route_nodes_to_stores, linkFloorEscalators } from \"src/helpers/route.helpers\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { Graph } from \"ngraph.graph\";\nimport { EventedType } from \"ngraph.events\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, allMapObjects: string[], allNodesFloor: Record<string, number>, pathFinderGraph: Graph<any, any> & EventedType, floors: IFloorData[], config: IConfig, results: SVGResult[], role?: TRoles) {\n  const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n  const escalator_nodes: string[] = [];\n  results.forEach((result, floor_index) => {\n    if (result.paths && result.paths.length) {\n      const pathIds = [];\n      for (let i = 0; i < result.paths.length; i++) {\n        pathIds.push(result.paths[i]?.userData?.node.id);\n      }\n      const paths = result.paths;\n      for (let i = 0; i < paths.length; i++) {\n        const {\n          mesh_type,\n          layer_color,\n          extrude,\n          z_index,\n          mesh_visible,\n          mesh_draw,\n          mesh_transparent,\n          line_thickness,\n          path,\n          layer_name,\n        } = getMeshParams(\n          paths[i],\n          paths,\n          floors,\n          floor_index,\n          config,\n          ++node_count,\n          //@ts-ignore\n          allNodesFloor,\n          pathFinderGraph\n        );\n\n        if (mesh_draw) {\n          const meshParams = getMaterialAndGeometry(\n            allMapObjects,\n            config,\n            mesh_type,\n            layer_name,\n            layer_color,\n            mesh_transparent,\n            mesh_visible,\n            z_index,\n            extrude,\n            line_thickness,\n            floors,\n            floor_index,\n            allIndexedMapObjects,\n            allIndexedRetailers,\n            path,\n            role\n          );\n\n          if (layer_name.startsWith('kiosk-')) {\n            if (role === 'PORTAL') {\n              // meshParams.mesh.visible = false;\n              //@ts-ignore\n              // meshParams.mesh.material.visible = false;\n            }\n          }\n\n          if (!GeometriesAndMaterials[floor_index]) {\n            GeometriesAndMaterials[floor_index] = [];\n          }\n\n          GeometriesAndMaterials[floor_index].push(meshParams);\n        }\n      }\n      const findStoreNodeRaycaster = new Raycaster();\n      const routeNodeIds = assign_route_nodes_to_stores(\n        floor_index,\n        floors,\n        allIndexedMapObjects,\n        allIndexedRetailers,\n        allNodesFloor,\n        escalator_nodes,\n        findStoreNodeRaycaster,\n        config.ROLE\n      );\n\n      if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n        for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n          if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n            GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n          }\n        }\n      }\n\n      linkFloorEscalators(floors, pathFinderGraph);\n\n    }\n  })\n\n  return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes };\n}","import { IJsonConfig } from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n  ROLE: 'WEBSITE',\n  DEVICE: 'display_app',\n  CENTER_ID: '',\n  KIOSK: '',\n  STYLE: '3D',\n  DEFAULT_SELECTED_STORE: '',\n  DEBUG: '1',\n\n  MAP_BACKGROUND_COLOR: \"FFFFFF\",\n  ACCENT_COLOR: \"4EA5FF\",\n  STORE_DEFAULT_COLOR: \"E2E2E2\",\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n  WALL_THICKNESS: '0.6',\n  WALL_COLOR: \"888888\",\n  BOUNDARY_THICKNESS: '0.8',\n  BOUNDARY_COLOR: \"888888\",\n  BASE_COLOR: \"25292B\",\n  STORE_TEXT_COLOR: \"222222\",\n  OVERLAY_COLOR: \"FFFFFF\",\n  OVERLAY_OPACITY: '0.7',\n  // AMENITIES_NAV_BG_COLOR: \"000000\",\n  // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  }\n}\n\nexport const defaultVars: IJsonConfig = {\n  MAP_BACKGROUND_COLOR: '',\n  ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n  DEVICE: 'display_app',\n  KIOSK: '',\n  FLOORS: [],\n  KIOSKS: {},\n  CENTER_ID: null,\n  STATS: 'false',\n  STYLE: '3D', // 2D, 3D\n  DEBUG: '0',\n  ACCENT_COLOR: '4EA5FF',\n  STORE_DEFAULT_COLOR: 'E2E2E2',\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n  WALL_THICKNESS: '0.6',\n  BOUNDARY_THICKNESS: '0.8',\n  WALL_COLOR: '888888',\n  BOUNDARY_COLOR: '888888',\n  BASE_COLOR: '25292B',\n  BUILDING_BASE_COLOR: 'DADADA',\n  STORE_TEXT_COLOR: '222222',\n  OVERLAY_COLOR: 'FFFFFF',\n  OVERLAY_OPACITY: '0.7',\n  CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n  ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n  DEFAULT_CAMERA_POSITION: null, // custom default camera position\n  DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n  DEFAULT_SELECTED_STORE: null,\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  },\n  KIOSK_SIZE: '15',\n  ZOOM_STEP: '100',\n  SELECTED_ZOOM_LIMIT: '',\n};","// import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3 } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh } from \"../types\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { hex_to_color } from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n    addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n  }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  //@ts-ignore\n  let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n  if (mesh) {\n    //@ts-ignore\n    add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n  }\n}\n\n\n\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n  if (!Array.isArray(mesh)) {\n    mesh = [mesh];\n  }\n  const box = mesh.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    //@ts-ignore\n    box.union(obj.geometry.boundingBox);\n    return box;\n  }, new Box3());\n  return box;\n}\n\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n  let map_obj = allIndexedMapObjects[object_id];\n\n  if (!map_obj) {\n    map_obj = {\n      offsetX: \"0\",\n      offsetY: \"0\",\n      rotate: \"0\",\n    }\n  }\n\n  let offsetX = parseInt(map_obj.offsetX);\n  let offsetY = parseInt(map_obj.offsetY);\n\n  newMeshPos.z = -mesh_size.z;\n\n  //@ts-ignore\n  newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n  //@ts-ignore\n  newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n  newMesh.scale.y *= -1;\n\n  newMeshPos.x += offsetX;\n  newMeshPos.y += offsetY;\n\n  newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  if (map_obj.obj_type === 'retailer') {\n    if (retailer) {\n      img.src = retailer.logo;\n    } else {\n      console.error('retailer not found');\n      return null;\n    }\n  } else if (map_obj.obj_type === 'special') {\n\n    let svg_image_name = map_obj.value;\n    console.log('svg_image_name', svg_image_name);\n    if (map_obj.layer_type === 'kiosk') svg_image_name = 'kiosk';\n    if (map_obj.layer_type === 'escalator') svg_image_name = 'escalator';\n    if (svg_image_name) {\n      let svg_color = '222222';\n      if (map_obj.text_color != null) {\n        svg_color = map_obj.text_color;\n      }\n\n      const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n      if (!svg_block) {\n        console.error('svg_block not found', svg_image_name);\n        return null;\n      }\n      const svg_element = svg_block.querySelector(\"svg\");\n      if (!svg_element) {\n        console.error('svg_element not found', svg_image_name);\n        return null;\n      }\n\n      const svgColoredParts = svg_element.querySelectorAll('[fill]');\n      svgColoredParts.forEach((svgColoredPart) => {\n        svgColoredPart.setAttribute('fill', '#' + svg_color);\n      })\n\n      const svgData = (new XMLSerializer()).serializeToString(svg_element);\n      img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n    }\n\n  } else {\n    if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n      img.src = map_obj.custom_image;\n    } else {\n      return null;\n    }\n  }\n\n  return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n  img.onload = function () {\n    const c = document.createElement(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n\n    c.width = img.width;\n    c.height = img.height;\n\n    ctx?.drawImage(img, 0, 0);\n\n    let texture = new CanvasTexture(c);\n    texture.colorSpace = 'srgb'\n\n    const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n    const material = new MeshBasicMaterial({\n      map: texture,\n      transparent: true,\n      side: DoubleSide,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    if (map_obj.layer_type === 'kiosk') {\n      material.visible = false;\n    }\n\n    afterOnload(geometry, material);\n  };\n}\n\nfunction getImageLogo(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry, object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: { storeLogo: Object3D }) => void): void {\n  const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n  if (img === null) return;\n\n  processImage(img, map_obj, (geometry, material) => {\n    const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n    // @ts-ignore\n    const floor_index = mesh.floor_index;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n    logoMesh.object_id = new_object_id;\n    logoMesh.floor_index = floor_index;\n    logoMesh.renderOrder = getRenderOrder('layer-image');\n    floors[floor_index]?.objsGroup.add(logoMesh);\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    logoMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    //@ts-ignore\n    BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    \n    handleAsync({storeLogo: BoundingSphereMesh});\n    */\n    handleAsync({ storeLogo: logoMesh });\n  })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id: string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): { textMesh: IExtMesh } | null | false {\n  const new_object_id = textLogoNamePrefix + object_id;\n  // deleteMeshByObjectID(new_object_id, scene, floors);\n  let result = null;\n\n  if (!geometry.boundingBox) {\n    geometry.computeBoundingBox();\n  }\n  if (!geometry.boundingBox) {\n    return null;\n  }\n\n  const boundingBox = geometry.boundingBox;\n\n  const mesh_center_point = new Vector3();\n  boundingBox.getCenter(mesh_center_point);\n\n  const mesh_size = new Vector3();\n  boundingBox.getSize(mesh_size);\n\n  //@ts-ignore\n  let map_obj: MapObj = allIndexedMapObjects[object_id] ? allIndexedMapObjects[object_id] : { layer_type: object_id.startsWith('escalator') ? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8 };\n\n  if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n    let text = '';\n    if (map_obj.layer_type === 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n      text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n      text = map_obj.custom_text;\n    } else {\n      text = '';\n    }\n\n    let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n    if (map_obj.text_color) {\n      text_color = hex_to_color(map_obj.text_color);\n    }\n\n    const material_settings = {\n      color: text_color,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false,\n      depthTest: false,\n    };\n    let text_material = new MeshPhongMaterial(material_settings);\n    let text_geometry = new TextGeometry(text, {\n      font: myFont,\n      size: parseInt(map_obj.size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n\n    const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n    textMesh.userData.font = myFont;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n    textMesh.object_id = new_object_id;\n    textMesh.floor_index = floor_index;\n    textMesh.renderOrder = getRenderOrder('layer-text');\n    if (map_obj.layer_type === 'retail_name') {\n      textMesh.userData.retail_name = text;\n    }\n\n    floors[floor_index].objsGroup.add(textMesh);\n\n    //scene.add(textMesh);\n    //console.debug({UpdateTexts: scene});\n\n    // Show bounding sphere\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    textMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    @ts-ignore\n    BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    scene.add(BoundingSphereMesh);\n    */\n    result = { textMesh };\n  }\n\n  else if (\n    map_obj.layer_type === 'retail_logo' ||\n    map_obj.layer_type === 'custom_image' ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id != null) ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    || (map_obj.layer_type === 'escalator')\n  ) {\n    getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n  }\n  return result;\n}","import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport type { Mesh } from \"three\";\nimport path from \"ngraph.path\";\nimport { EventedType } from \"ngraph.events\";\nimport { IFloorData } from \"src/types\";\n\n\ntype MapBoxContextType = {\n  meshByObjectId: Map<string, Mesh>;\n  setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>> | Function;\n  allMapObjects: Array<string>;\n  setAllMapObjects: Dispatch<SetStateAction<Array<string>>> | Function;\n  allIndexedMapObjects: Record<string, MapObj>;\n  setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObj>>> | Function;\n  allIndexedRetailers: Record<string, IRetailer>;\n  setAllIndexedRetailers: Dispatch<SetStateAction<Record<string, IRetailer>>> | Function;\n  allNodesFloor: Record<string, number>;\n  setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>> | Function;\n  pathFinderGraph: Graph<any, any> & EventedType\n  setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>> | Function;\n  ngraphPath: typeof path;\n  setNgraphPath: Dispatch<SetStateAction<typeof path>> | Function;\n  floorsData: IFloorData[];\n}\nconst MapBoxContext = createContext<MapBoxContextType>({\n  meshByObjectId: new Map<string, Mesh>(),\n  setMeshByObjectId: () => null,\n  allMapObjects: [],\n  setAllMapObjects: () => null,\n  allIndexedMapObjects: {},\n  setAllIndexedMapObjects: () => null,\n  allIndexedRetailers: {},\n  setAllIndexedRetailers: () => null,\n  allNodesFloor: {},\n  setAllNodesFloor: () => null,\n  pathFinderGraph: createGraph(),\n  setPathFinderGraph: () => null,\n  ngraphPath: path,\n  setNgraphPath: () => null,\n  floorsData: []\n})\n\nconst MapBoxContextProvider = ({ children }: { children: ReactNode }) => {\n\n  const [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string, Mesh>());\n  const [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\n  const [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\n  const [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\n  const [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n  //<{ x:number, y:number }, { weight: number }>\n  const [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\n  const [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n  const [floorsData] = useState<MapBoxContextType['floorsData']>([]);\n\n  return (\n    <MapBoxContext.Provider value={{\n      meshByObjectId,\n      setMeshByObjectId,\n      allMapObjects,\n      setAllMapObjects,\n      allIndexedMapObjects,\n      setAllIndexedMapObjects,\n      allIndexedRetailers,\n      setAllIndexedRetailers,\n      allNodesFloor,\n      setAllNodesFloor,\n      pathFinderGraph,\n      setPathFinderGraph,\n      ngraphPath,\n      setNgraphPath,\n      floorsData\n    }}\n    >\n      {children}\n    </MapBoxContext.Provider>\n  )\n\n}\n\nexport function useMapBoxContext() {\n  const context = useContext(MapBoxContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n  }\n\n  return context;\n}\n\nexport default MapBoxContextProvider;\n","import {\n  Group,\n  Mesh,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { loadFloors } from \"./loadFloors\";\nimport type { IConfig, IExtMesh, IFloorData, IMeshValues, TRoles } from \"../../types\";\nimport { defaultVars, mapit2DefaultVars } from \"../../defaults\";\n// import {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport { get_store_name_logo_geo } from \"src/helpers/draw.logo.helpers\";\nimport { IJsonConfig, IMeshParamsTmp } from \"../../types\";\nimport { hex_to_color } from \"src/helpers/misc\";\nimport { Kiosk, MapIt2Response, MapObj, IRetailer } from \"../../mapitApiTypes\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars }\n\nconst defaultMapObjValues = {\n  id: null,\n  center_id: config.CENTER_ID,\n  retailer_id: null,\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: 8,\n  rotate: 0,\n  offsetX: 0,\n  offsetY: 0,\n} as Record<string, string | number | null | undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\n\n// const floorsData:IFloorData[] = [];\nlet MEDIA_STORAGE_URI: string = '';\n\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n  for (let key in obj) {\n    delete obj[key];\n  }\n}\n\nfunction makeIndexedMapObjects(allIndexedMapObjects: Record<string, MapObj>, map_objs: MapObj[]) {\n  clearObject(allIndexedMapObjects);\n\n  allNonIndexedMapObjects = map_objs;\n\n  for (let i = 0; i < map_objs.length; i++) {\n    const obj = map_objs[i];\n    allIndexedMapObjects[obj.map_obj_name] = obj;\n    for (let key in defaultMapObjValues) {\n      const value = defaultMapObjValues[key];\n      //@ts-ignore\n      if (value != null && obj[key] == null) {\n        //@ts-ignore\n        allIndexedMapObjects[obj.map_obj_name][key] = value;\n      }\n    }\n  }\n}\n\nconst init = (allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: IJsonConfig, floors: IFloorData[], response: MapIt2Response) => {\n  const KIOSKS: Record<string, Kiosk> = {};\n  response.kiosks.forEach((kiosk) => {\n    const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n    if (mapObj) {\n      kiosk.map_obj_name = mapObj.map_obj_name;\n    }\n    KIOSKS[kiosk.id] = kiosk;\n  });\n\n\n  for (let index in response.retailers) {\n    const retailer = response.retailers[index];\n    allIndexedRetailers[retailer.id] = retailer;\n    allIndexedRetailers[retailer.id].index = index;\n  }\n\n  // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n  // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n  makeIndexedMapObjects(allIndexedMapObjects, response.map_objs);\n\n  floors.length = 0;\n  response.floors.forEach((value: IFloorData, index: number) => {\n    const objsGroup = new Group();\n    objsGroup.scale.y *= -1;\n    objsGroup.lookAt(0, 1, 0);\n\n    floors.push({\n      id: value.id,\n      // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n      svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n      title: value.title,\n      objsGroup: objsGroup,\n      interactiveObjs: [],\n      escalatorsObjs: [],\n      escalatorsNodes: {},\n      escalatorMeshes: [],\n      route_points: [],\n      route_tube: undefined,\n      route_texture: null,\n      routeMeshes: [],\n      route_active: false,\n    });\n  });\n  const DEFAULT_CAMERA_FOV = 75;\n  const DEFAULT_CAMERA_FAR = 10000;\n  config.CAMERA.far = DEFAULT_CAMERA_FAR;\n  config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n  const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n  config.CAMERA.maxDistance *= fovCorrection;\n  config.CAMERA.far *= fovCorrection;\n\n  const processedConfig: IConfig = {\n    ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n    BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n    BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n    BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n    BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n    BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n    CAMERA: {\n      ...config.CAMERA,\n      minZoom: parseInt(response.settings.MIN_ZOOM) ? parseInt(response.settings.MIN_ZOOM) : config.CAMERA.minZoom,\n      maxZoom: parseInt(response.settings.MAX_ZOOM) ? parseInt(response.settings.MAX_ZOOM) : config.CAMERA.maxZoom,\n      minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n      maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE) ? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n    },\n    CAMERA_CONTROLS_STATES: (() => {\n      const canvasWidth = window.screen.width;\n      if (config.CAMERA_CONTROLS_STATES) {\n        console.debug('config', { ...config.CAMERA_CONTROLS_STATES })\n        return { ...config.CAMERA_CONTROLS_STATES };\n      } else {\n\n        const roles: TRoles[] = [\"PORTAL\", \"PORTAL_RESPONSIVE\"]\n\n        if (!roles.includes(config.ROLE) && canvasWidth) {\n          if (canvasWidth <= 600) {\n            return response.camera_controls_states.mobile;\n          } else if (canvasWidth <= 1024) {\n            return response.camera_controls_states.tablet;\n          }\n        }\n        return response.camera_controls_states[config.DEVICE];\n      }\n    })(),\n    // CAMERA_CONTROLS_STATES: config.CAMERA_CONTROLS_STATES ? config.CAMERA_CONTROLS_STATES : response.camera_controls_states[config.DEVICE],\n    CENTER_ID: config.CENTER_ID,\n    CONTROLS: null,\n    DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n    DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n    DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n    DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n    DEVICE: config.DEVICE,\n    KIOSK: config.KIOSK ? config.KIOSK : '',\n    KIOSKS: KIOSKS,\n    MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n    ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n    OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n    OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n    ROLE: config.ROLE,\n    SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n    STATS: config.STATS === 'true' || config.STATS === '1',\n    STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n    STORE_HEIGHT: response.settings.STORE_HEIGHT ? response.settings.STORE_HEIGHT : config.STORE_HEIGHT ? config.STORE_HEIGHT : '8',\n    STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n    STYLE: response.settings.STYLE ? response.settings.STYLE : config.STYLE ? config.STYLE : '3D',\n    WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n    WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n    FLOORS: response.floors,\n    AMENITIES: response.amenities,\n    RETAILERS: response.retailers,\n    AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n    AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n    KIOSK_SIZE: response.settings.KIOSK_SIZE ? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    ZOOM_STEP: response.settings.ZOOM_STEP ? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n    SELECTED_ZOOM_LIMIT: config.SELECTED_ZOOM_LIMIT ? config.SELECTED_ZOOM_LIMIT : response.settings.SELECTED_ZOOM_LIMIT ? response.settings.SELECTED_ZOOM_LIMIT : '4800',\n    SELECTED_ZOOM_LIMIT_DISTANCE: parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) ? parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) : parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n  };\n\n  // AMENITIES_NAV_BG_COLOR: string;\n  // AMENITIES_NAV_ICON_COLOR: string;\n\n  return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response | null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n  const { floorsData } = useMapBoxContext();\n  const { allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph } = useMapBoxContext();\n  const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n  const [textParams, setTextParams] = useState<Array<{ textMesh: IExtMesh }[]>>([]);\n  const [storeLogos, setStoreLogos] = useState<{ storeLogo: Mesh }[][]>([]);\n  // const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n  const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n  const [urls, setUrls] = useState<string[]>([]);\n  const [processedConfig, setProcessedConfig] = useState<IConfig | null>(null);\n  let result = useLoader(SVGLoader, urls);\n\n  MEDIA_STORAGE_URI = useMemo(() => {\n    const r = /\\/$/;\n    if (mediaStorageURI) {\n      return mediaStorageURI?.replace(r, '');\n    }\n\n    return '';\n\n  }, [mediaStorageURI])\n\n  // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n  const myFont = useFont(fontData as unknown as FontData);\n\n  // const getWallShape = (...params: any): Shape | Shape[] => {\n  //     return []\n  // }\n\n\n  const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: { storeLogo: Mesh }) => {\n    setStoreLogos((prevLogos) => {\n      // console.debug({floorIndex});\n      if (prevLogos[floorIndex]) {\n        prevLogos[floorIndex].push({ ...meshLogo });\n      } else {\n        prevLogos[floorIndex] = [{ ...meshLogo }];\n      }\n      // console.debug({prevLogos});\n      return [...prevLogos];\n    });\n  }), [])\n\n  const mergedConfig = useMemo(() => {\n    let result = config;\n\n    if (jsonConfig) {\n      result = {\n        ...config,\n        ...jsonConfig,\n      }\n\n      if (jsonConfig.CAMERA) {\n        result.CAMERA = {\n          ...config.CAMERA,\n          ...jsonConfig.CAMERA,\n        }\n      }\n    }\n    if (!jsonConfig?.DEVICE && result.ROLE === 'WP_SITE') {\n      result.DEVICE = 'desktop';\n    }\n    return result;\n\n  }, [jsonConfig])\n\n  useEffect(() => {\n    if (!data) return;\n\n\n    // console.log('useMeshFloors[data]', {data})\n\n    const processedConfig = init(allIndexedMapObjects, allIndexedRetailers, mergedConfig, floorsData, data as MapIt2Response);\n    const values: string[] = [];\n    processedConfig.FLOORS.forEach((value) => {\n      // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n      //@ts-ignore\n      values.push(`${value.svg}`);\n    });\n\n    setProcessedConfig(processedConfig);\n    setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n  }, [data, allIndexedMapObjects, allIndexedRetailers, floorsData, jsonConfig, mergedConfig]);\n\n  const clearScene = useCallback(() => {\n    if (meshParams) {\n      meshParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.mesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (textParams) {\n      textParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.textMesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (storeLogos) {\n      storeLogos.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.storeLogo.removeFromParent();\n          })\n        }\n      })\n    }\n\n    setMeshParams([]);\n    setTextParams([]);\n    setStoreLogos([]);\n  }, [meshParams, textParams, storeLogos])\n\n  useEffect(() => {\n    return () => {\n      clearScene();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!processedConfig || !urls.length || !myFont || !result) return;\n\n    const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, processedConfig, result, role);\n    const TextsAndLogos: Array<{ textMesh: IExtMesh }[]> = [];\n    allNonIndexedMapObjects.forEach((params) => {\n      let values: IMeshValues | undefined;\n      for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n        //@ts-ignore\n        values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n        if (values !== undefined) {\n          break;\n        }\n      }\n      if (!values) return null;\n      const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n      if (textParams) {\n        if (!TextsAndLogos[values.floor_index]) {\n          TextsAndLogos[values.floor_index] = [];\n        }\n        TextsAndLogos[values.floor_index].push(textParams);\n      }\n    })\n    const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n      return (acc + item.length);\n    }, 0);\n    const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n    if (countNonIndexedObjs !== 0) {\n      const mapObjNames = new Set<string>();\n      allNonIndexedMapObjects.forEach((item) => {\n        mapObjNames.add(item.map_obj_name);\n      });\n      GeometriesAndMaterials.forEach((items) => {\n        items.forEach(item => {\n          if (!mapObjNames.has(item.object_id)) {\n            const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n            if (textParams) {\n              if (!TextsAndLogos[item.floor_index]) {\n                TextsAndLogos[item.floor_index] = [];\n              }\n              TextsAndLogos[item.floor_index].push(textParams);\n            }\n          }\n        })\n      });\n    }\n    setMeshParams([...GeometriesAndMaterials]);\n    setTextParams(TextsAndLogos);\n    setPathFinderGraph(graph);\n    setEscalatorNodes([...escalator_nodes]);\n\n  }, [processedConfig, urls, result, myFont, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, role, setPathFinderGraph, handleAsyncStoreLogos]);\n\n  return useMemo(() => {\n    return {\n      config: processedConfig,\n      meshParams: meshParams,\n      textParams,\n      storeLogos,\n      floors: floorsData,\n      pathFinderGraph,\n      escalator_nodes: escalatorNodes,\n    }\n  }, [processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useState } from \"react\"\nimport { IConfig, IExtMesh } from \"src/types\";\n\n\nexport type TMeshObjectContext = {\n  MeshObject: IExtMesh[] | null;\n  SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n  cameraLength: number | undefined,\n  setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n  config: IConfig | undefined,\n  setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n  MeshObject: null,\n  SetMeshObject: () => null,\n  cameraLength: undefined,\n  setCameraLength: () => null,\n  config: undefined,\n  setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({ children }: { children: React.ReactNode }) {\n  const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n  const [config, setConfig] = useState<IConfig | undefined>();\n  const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n  return (\n    <MeshObjectContext.Provider\n      value={{\n        MeshObject,\n        SetMeshObject,\n        cameraLength,\n        setCameraLength,\n        config,\n        setConfig\n      }}\n    >\n      {children}\n    </MeshObjectContext.Provider>\n  )\n}\n\nexport function useMeshObjectContext() {\n  const context = useContext(MeshObjectContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n  }\n\n  return context;\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { IConfig } from \"src/types\";\nimport { SpriteMaterial, Texture } from \"three\";\nimport styles from '../../MapBox.module.scss';\nimport { Html } from \"@react-three/drei\";\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, config }: { size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined }) => {\n  const [, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && config !== undefined && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n    }\n  }, [lockSize, config, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize, depthTest: false, depthWrite: false, color: \"black\" });\n    return material;\n  }, [lockSize, texture])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const svgData = (new XMLSerializer()).serializeToString(svgOrigin);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n    }\n  }, []);\n\n  if (material) {\n    // console.log('RENDER SPRITE')\n    return (\n      <group>\n        <sprite scale={scale} material={material}>\n        </sprite>\n        {blink && <Html><div className={styles.mapCenterMarker}></div></Html>}\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, IMeshParams, IMeshValues } from \"../../types\";\nimport { ThreeEvent } from \"@react-three/fiber\";\nimport React, { } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from '../../MapBox.module.scss';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: IMeshParams;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, currentFloorIndex: number, params?: IMeshValues }) {\n  const [, setUpdate] = React.useState(false);\n  const { type, mesh, currentFloorIndex } = props;\n  React.useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      // setUpdate((value) => !value);\n    };\n    return () => mesh.userData.triggerUpdate = undefined\n  }, [mesh.userData, setUpdate]);\n\n  const { config, cameraLength } = useMeshObjectContext();\n\n  // console.warn({update});\n\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </primitive>\n      } else {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </>\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n\n  const { config, meshParams, textParams, storeLogos } = meshFloors;\n  const floor = meshFloors.floors[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            // @ts-ignore\n            const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n            //console.log('Map', {baseColor, active, hovered})\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n      {escalatorMeshes?.map((params) => {\n        //@ts-ignore\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div id={styles.escalator_elems}\n              style={{ display: visible ? 'block' : 'none' }}\n              onClick={(e) => {\n                e.stopPropagation()\n                handleChangeFloor(params.goToFloor?.index || 0)\n                return false\n              }}\n              onPointerMove={(e) => e.stopPropagation()}>\n              <div className={styles.element} id={params.object_id as string}>\n                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? meshFloors.floors.length - params.goToFloor.index : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type { Mesh } from \"three\";\nimport { Box3, Vector3 } from \"three\";\n\nexport function get_camera_focus_object(objs: Mesh[], fov: number, aspectRatio: number, style: string) {\n  // config.STYLE\n  // config.CAMERA.fov\n\n  if (!Array.isArray(objs)) {\n    objs = [objs];\n  }\n  if (!objs.length) {\n    console.warn('get_camera_focus_object: no objects passed');\n    return { position: new Vector3(), target: new Vector3() };\n  }\n\n  const objsBoundingBox = objs.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    if (obj.geometry.boundingBox) {\n      box.union(obj.geometry.boundingBox);\n    }\n    return box;\n  }, new Box3());\n\n  const obj_size = new Vector3();\n  objsBoundingBox.getSize(obj_size);\n\n  const center = new Vector3();\n  objsBoundingBox.getCenter(center);\n\n  objs[0].localToWorld(center);\n\n  // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n  // var padding = max_length * 0.2;\n  // if (padding > 50) padding = 50;\n  // max_length += padding;\n  // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n  let tanFOV = Math.tan(Math.PI * fov / 360);\n  let padding = 1.1;\n  let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n  let new_height = (obj_size.y * padding) / 2 / tanFOV;\n  let new_y = Math.max(new_width, new_height);\n  let new_z = getCameraTiltPosition(new_y, style);\n\n  const target = new Vector3(center.x, 0, center.z);\n  const position = new Vector3(center.x, new_y, center.z + new_z);\n\n  // createjs.Ticker.framerate = 60;\n  // createjs.Tween.get(config.CONTROLS.target)\n  //     .to({ x: center.x, z: center.z }, 400);\n  // createjs.Tween.get(config.CAMERA.position)\n  //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n  return { position, target };\n}\n\nfunction getCameraTiltPosition(y: number, style: string): number {\n  let angle = 60;\n  if (style === '2D') angle = 89.9;\n  return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IMeshParams } from \"../../types\";\nimport { Map } from \"./Map\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\n// import { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { defaultVars } from \"src/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\n// import { allNodesFloor } from \"src/globals\";\n\ninterface IFloorsMapProps {\n  meshFloors: IMeshParams;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  onCameraMove?: (e: any) => void;\n  currKioskObj: Mesh;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: IZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  config: IConfig;\n  cameraPos?: { x: number, y: number, z: number } | undefined | null;\n  controlPos?: { x: number, y: number, z: number } | undefined | null;\n  handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n  isSelectedRetailerSlug: boolean;\n  setIsCameraInit: Function;\n  retailers: IRetailer[],\n  mapObjs: MapObj[],\n  handleObjectClick: (object: IExtMesh, targetId: string, softClick?: boolean) => void,\n  triggerClick: boolean,\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n  const { allIndexedMapObjects, allNodesFloor } = useMapBoxContext();\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const { meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    config,\n    handleCameraAndControlsChange,\n    activeObjectId,\n    isSelectedRetailerSlug,\n    setIsCameraInit,\n    retailers,\n    mapObjs,\n    handleObjectClick,\n    triggerClick, } = params;\n  const { floors } = meshFloors;\n  const [cameraLimits, SetCameraLimits] = useState({ min: config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: 0, needsUpdate: true })\n  const { setCameraLength } = useMeshObjectContext();\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = meshFloors.config.STYLE;\n  const accentColor = meshFloors.config.ACCENT_COLOR;\n  const pathFinderGraph = meshFloors.pathFinderGraph;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n  const isUseDefaultsLimits = config.ROLE === \"PORTAL\" && routeTargetId;\n\n  const resetCamera = useCallback((fullReset: boolean = false) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n\n\n    let isZeroCCS = true;\n\n    if (config.CAMERA_CONTROLS_STATES) {\n      let cameraV3 = config.CAMERA_CONTROLS_STATES.camera;\n      if (!(cameraV3 instanceof Vector3)) {\n        cameraV3 = new Vector3(cameraV3.x, cameraV3.y, cameraV3.z);\n      }\n      isZeroCCS = (cameraV3 as Vector3).length() === 0;\n    }\n\n    if (!fullReset && config.CAMERA_CONTROLS_STATES && !isZeroCCS && !['PORTAL'].includes(config.ROLE)) {\n      focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n      focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n    }\n\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && cameraLimits.needsUpdate === false && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => ({\n        ...cl,\n        min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance,\n        max: config.CAMERA.maxDistance,\n      }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [camera, cameraLimits.needsUpdate, config.CAMERA.animSpeed, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA_CONTROLS_STATES, config.ROLE, currKioskFloorIndex, meshFloors.meshParams, style]);\n\n  const focusDistance = cameraFocus.current ? cameraFocus.current.position.distanceTo(cameraFocus.current.target) : 0;\n\n  useEffect(() => {\n\n    if (focusDistance > 0 && cameraLimits.needsUpdate) {\n      SetCameraLimits({ min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: focusDistance, needsUpdate: false })\n      setIsCameraInit(true);\n    }\n\n  }, [focusDistance, cameraLimits.needsUpdate, config.CAMERA])\n\n  useEffect(() => {\n\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && routeTargetId && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => {\n        const minDistance = Number(config.SELECTED_ZOOM_LIMIT_DISTANCE) < config.CAMERA.minDistance ? config.CAMERA.minDistance : Number(config.SELECTED_ZOOM_LIMIT_DISTANCE)\n        return {\n          ...cl,\n          needsUpdate: false,\n          min: minDistance < 0.1 ? 0.1 : minDistance,\n          max: config.CAMERA.maxDistance,\n        }\n      });\n    }\n  }, [config.CAMERA.maxZoom, config.CAMERA.minZoom, config.SELECTED_ZOOM_LIMIT, routeTargetId, cameraLimits.initialDistance])\n\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length, resetCamera])\n\n  useEffect(() => {\n    if (!amenityTargetType || config.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(allNodesFloor, from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n    setRouteTubes(route);\n\n    if (currKioskObj && config.ROLE === \"DISPLAY_APP\") {\n      handleChangeFloor(currKioskFloorIndex);\n    }\n\n  }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from, config.ROLE, allNodesFloor, allIndexedMapObjects])\n\n  const clearEscalators = useCallback(() => {\n    meshFloors.floors.flat().forEach((item) => item.escalatorMeshes = []);\n  }, [meshFloors])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n      if (config.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          clearEscalators();\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        clearEscalators();\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floors.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n    // console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE, allNodesFloor, triggerClick]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && (config.ROLE === 'PORTAL' || isSelectedRetailerSlug)) {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max,\n      Math.max(\n        isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed, floors, activeObjectId, amenityTargetType, isSelectedRetailerSlug]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n      const zoomStep = config.ZOOM_STEP ? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= zoomStep;\n      } else {\n        cameraDistance += zoomStep;\n      }\n\n      cameraDistance = Math.min(\n        cameraLimits.max,\n        Math.max(\n          cameraLimits.min,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoom])\n\n  // console.log('CameraLimits', cameraLimits)\n\n  const getInitialDistance = () => {\n    return cameraLimits.initialDistance\n  }\n\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange) {\n        handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n      }\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const createRouteToStore = useCallback((retailerSlug: string) => {\n    if (retailerSlug.length) {\n      const retailer = retailers.find(item => item.slug === retailerSlug);\n      if (retailer) {\n        const mapObj = mapObjs.find(item => item.retailer_id === retailer.id);\n        if (mapObj) {\n          const obj = scene.getObjectByProperty('object_id', mapObj.map_obj_name);\n          if (obj) {\n            handleObjectClick(obj as IExtMesh, mapObj.map_obj_name, true);\n          }\n        }\n      }\n    }\n  }, [handleObjectClick, mapObjs, retailers, scene]);\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n    createRouteToStore,\n    getInitialDistance,\n  }))\n\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min}\n        maxDistance={isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max}\n        enableZoom={config.ROLE === \"PORTAL\" || config.ROLE === \"DISPLAY_APP\"}\n        enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floors && floors.map((value: IFloorData, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { IRetailer } from 'src/mapitApiTypes';\n\nexport const retailersApi = createApi({\n  reducerPath: 'retailersApi',\n  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\n  endpoints: (builder) => ({\n    getRetailers: builder.query<{ count: number, items: IRetailer[] }, { baseQuery: string, center_id: string, limit: number, page?: number }>({\n      query: ({ baseQuery, center_id, limit, page = 1 }) => ({\n        url: `${baseQuery}/v1/retailers?limit=${limit}&page=${page}`,\n        headers: {\n          center_id,\n        },\n      }),\n    })\n  })\n})\n\nexport const { useGetRetailersQuery, useLazyGetRetailersQuery } = retailersApi;","import { retailersApi, useGetRetailersQuery, useLazyGetRetailersQuery } from \"src/services/retailersApi\"\nimport { fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\nconst useAllRetailers = (baseUrl: string, center_id: string, limit: number) => {\n  const [retailers, setRetailers] = useState<{ count: number, items: IRetailer[] }>({ count: 0, items: [] })\n  const baseQuery = baseUrl?.lastIndexOf('/') === baseUrl.length - 1 ? baseUrl.slice(0, -1) : baseUrl;\n\n  const [getRetailers] = useLazyGetRetailersQuery()\n\n  const fetchAllRetailers = useCallback(async (page: number, totalPages: number) => {\n    const requests = [];\n    const result: { count: number, items: IRetailer[] } = { count: 0, items: [] };\n    if (totalPages >= page) {\n      for (let currentPage = page; currentPage <= totalPages; currentPage++) {\n        requests.push(getRetailers({ baseQuery, center_id, limit, page: currentPage }, true));\n      }\n      if (requests.length) {\n        const data = await Promise.all(requests);\n        data.forEach(item => {\n          if (item && item.data && item.data.items.length) {\n            const { count, items } = item.data;\n            result.count = count;\n            result.items = [\n              ...result.items as IRetailer[],\n              ...items as IRetailer[],\n            ]\n          }\n        })\n        if (result) {\n          setRetailers(ret => ({\n            count: result.count,\n            items: [...ret.items, ...result.items],\n          }))\n        }\n        return { ...result };\n      }\n    } else {\n      return { ...result };\n    }\n  }, [baseQuery, center_id, getRetailers, limit])\n\n  const getAll = useCallback(() => new Promise<{ count: number, items: IRetailer[] }>((resolve, reject) => {\n    let result: { count: number, items: IRetailer[] } = { count: 0, items: [] };\n    getRetailers({ baseQuery, center_id, limit, page: 1 }, true).then(data => {\n      if (data.status === 'rejected') {\n        reject(data.error);\n      }\n      if (data.data) {\n        result = { ...data.data };\n        const totalPages = Math.round(result.count / limit);\n        if (totalPages > 1) {\n          console.debug({ totalPages })\n          fetchAllRetailers(2, totalPages).then(data => {\n            if (data) {\n              resolve({\n                count: result.count,\n                items: [...result.items, ...(data.items ?? [])],\n              })\n            } else {\n              resolve({ ...result });\n            }\n          });\n        } else {\n          resolve({ ...result })\n        }\n      } else {\n        resolve({ ...result });\n      }\n    });\n  }), [baseQuery, center_id, fetchAllRetailers, getRetailers, limit])\n\n  return { retailers, getAll }\n}\n\nexport default useAllRetailers;","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.scss';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\nimport \"./../../index.css\";\nimport { getAllAmenities } from \"src/helpers/amenities.helper\";\n\nconst UIComponent = ({\n  floors,\n  accentColor,\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  role,\n  mapObjs,\n  onExtractedAmenities,\n}: IFloorSelectorProps & {\n  amenitiesList: IAmenitiesInteractiveList[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: (fullReset?: boolean) => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  role?: TRoles,\n  mapObjs?: MapObj[],\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      if (role === 'PORTAL_RESPONSIVE' || role === 'PORTAL') {\n        reset(true)\n      }\n      else {\n        reset();\n      }\n    }\n  }\n\n  const extractValues = useMemo<AmenityID[]>(() => {\n\n    if (!mapObjs) {\n      return [];\n    }\n\n    return mapObjs\n      .filter(obj => obj.layer_type === \"amenity\")\n      .map(obj => obj.value as AmenityID);\n  }, [mapObjs])\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [mapObjs, onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floors.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              {floors.length > 1 && (\n                <div className=\"floors btn_group\">\n                  {floors.map((floor: any, index: number) => (\n                    <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                      handleFloorChange(index)\n                    }}>{floor.title}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(role as string) &&\n          <div className={`amenities ${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`}\n                  className={`${styles.amenity}`}\n                  onClick={() => handleAmenityClick(amenity.type)}\n                  dangerouslySetInnerHTML={{ __html: amenity.svg as string }}>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { useCallback, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, MeshPhongMaterial, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IMeshParamsTmp } from \"src/types\";\nimport textFontInterface from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useRetailersOptions, { RetailerOption } from \"./hooks/useRetailersOptions\";\n\n\ninterface IMapboxForm {\n  floorIndex: number;\n  meshFloors: IMeshParamsTmp;\n  config: IConfig;\n  data: any;\n  setData: (index: number, data: MapObj) => void;\n  selectedId: string;\n  centerId: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  apiURI?: string;\n  onResetData?: (data: MapObj) => void;\n  triggerSceneUpdate: Function;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n  [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n  id: '',\n  center_id: centerId,\n  retailer_id: '',\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: '8',\n  lock_size: '0',\n  rotate: '0',\n  offsetX: '0',\n  offsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj, floorIndex: Number) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData, floorIndex) => {\n  const kioskConfig = obj.userData.kioskConfig;\n  if (kioskConfig) {\n    //TODO use 'value' until api with lock_size will be working\n    obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n    obj.userData.kioskConfig = {\n      ...kioskConfig,\n      lockSize: formData.value === '1',\n      blink: kioskConfig.blink,\n      size: Number(formData.size),\n      floorIndex: floorIndex\n    }\n    // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n    obj.userData.triggerUpdate?.();\n  }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n  const { data, setData, selectedId, centerId, config, floorIndex, onResetData, triggerSceneUpdate } = params;\n\n  const textFont = useFont(textFontInterface as unknown as FontData);\n  const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n  const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n  const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n  const [formData, setFormData] = useState<MapObj | null>(null);\n  const [rotation] = useState<number | undefined>(undefined);\n  const context = useMeshObjectContext();\n  const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [, startTransition] = useTransition();\n  const intervalRefs = useRef<TIncDecInterval>({});\n\n  const { isLoading: isLoadingRetailers, loadOptions: loadRetailersOptions, retailers } = useRetailersOptions(centerId, params.apiURI ?? '');\n\n  const [selectedKiosksId, setSelectedKiosksId] = useState<number[]>([]);\n\n  const recheckSelectedKiosksId = useCallback((mapObjs: any[]) => {\n    if (mapObjs) {\n      const ids = (mapObjs as { kiosk_id: number }[]).reduce<number[]>((prev, cur) => {\n        if (cur.kiosk_id !== null) {\n          return [...prev, cur.kiosk_id];\n        }\n        return prev;\n      }, [])\n      setSelectedKiosksId([...ids]);\n    }\n  }, [])\n\n  useEffect(() => {\n    recheckSelectedKiosksId(data.map_objs);\n  }, [data.map_objs, recheckSelectedKiosksId])\n\n  const loadKiosksOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    // console.debug({ inputValue })\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.filter((item: any) => {\n        if (inputValue) {\n          return (item.title as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    callback(result);\n  }, [data.kiosks, selectedKiosksId])\n\n  const loadAmenitiesOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    let result: any[] = [];\n    if (Object.keys(data.amenities).length) {\n      result = Object.keys(data.amenities).filter((item: string) => {\n        if (inputValue) {\n          return (data.amenities[item].name as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: string) => {\n        return {\n          value: item,\n          label: data.amenities[item].name,\n        }\n      })\n    }\n    callback(result);\n  }, [data.amenities])\n\n  const getDefaultKioksOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    return result;\n  }, [data.kiosks, selectedKiosksId])\n\n  const getDefaultAmenitiesOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data.amenities.length > 0) {\n      result = data.amenities.map((item: any) => {\n        return {\n          value: item.type,\n          label: item.name,\n        }\n      })\n    }\n    return result;\n  }, [data.amenities])\n\n  const makeImage = useCallback((formData: MapObj, obj: IExtMesh) => {\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let img = null;\n    if (formData.layer_type === 'retail_logo') {\n      const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n      if (retailIndex !== -1) {\n        img = getImage(formData, data.retailers[retailIndex]);\n      }\n    } else {\n      img = getImage(formData);\n    }\n    if (img instanceof HTMLImageElement) {\n      processImage(img, formData, (geometry, material) => {\n        obj.geometry = geometry;\n        obj.material = material;\n\n        const boundingBox = geometry.boundingBox;\n\n        const mesh_center_point = new Vector3();\n        if (boundingBox) {\n          boundingBox.getCenter(mesh_center_point);\n\n          const mesh_size = new Vector3();\n          boundingBox.getSize(mesh_size);\n          if (obj.object_id) {\n            layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n          }\n        }\n      });\n    }\n  }, [data.retailers, oldMapObjName])\n\n  const makeTextGeometry = useCallback((obj: IExtMesh, text: string, size: string) => {\n    if (!obj) return;\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let text_geometry = new TextGeometry(text, {\n      font: (obj.userData && obj.userData.font) ? obj.userData.font : textFont,\n      size: parseInt(size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n    if (obj.geometry) {\n      obj.geometry.dispose();\n    }\n    obj.geometry = text_geometry;\n  }, [formData?.map_obj_name, textFont, oldMapObjName])\n\n  const updateData = useCallback((formData: MapObj) => {\n    const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n    if (index !== -1) {\n      data.map_objs[index] = { ...formData };\n      setData(index, { ...formData });\n      recheckSelectedKiosksId(data.map_objs);\n    }\n  }, [data.map_objs, setData, recheckSelectedKiosksId])\n\n\n  const handleChangeTab = useCallback((k: any | null) => {\n\n    if (!formData) return;\n    const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n    if (key !== null) {\n      if (isTMainTabsKey(key)) {\n        setMainTabKey(key);\n        if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n          formData.obj_type = key;\n          if (key === 'retailer') {\n            formData.layer_type = 'retail_name';\n            clearKioskConfig(context, params.meshFloors);\n          } else if (key === 'special') {\n            formData.layer_type = 'kiosk';\n            formData.retailer_id = '';\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              if (obj) {\n                if (!obj.userData) {\n                  obj.userData = {};\n                }\n                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                obj.userData.kioskConfig = {\n                  lockSize: formData.value === '1',\n                  blink: false,\n                  size: Number(formData.size)\n\n                }\n                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n              }\n            }\n          } else if (key === 'custom') {\n            formData.layer_type = 'custom_text';\n            formData.retailer_id = '';\n            clearKioskConfig(context, params.meshFloors);\n          }\n          setMainTabKey('');\n          setRetailerTabsKey('');\n          setSpecialTabsKey('');\n          setFormData({ ...formData });\n          updateData({\n            ...formData,\n          });\n        }\n      } else if (isTRetailerTabsKey(key)) {\n        setRetailerTabsKey(key);\n        clearKioskConfig(context, params.meshFloors);\n        if (formData.id && retailerTabsKey && key) {\n          formData.layer_type = key;\n          if (formData.layer_type !== key) {\n            setFormData({ ...formData });\n          }\n          updateData({\n            ...formData,\n          })\n          if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n            let text = '';\n            switch (key) {\n              case 'retail_name':\n\n                if (!formData.retailer_id) {\n                  break;\n                }\n\n                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n\n                if (retailIndex !== -1) {\n                  text = data.retailers[retailIndex].retail_name;\n\n                }\n                break;\n              case 'retail_text':\n              case 'custom_text':\n                text = formData.custom_text;\n                break;\n            }\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              makeTextGeometry(obj, text, formData.size);\n            }\n          }\n\n          if (['retail_logo', 'custom_image'].includes(key)) {\n            context?.MeshObject?.forEach((obj, index) => {\n              if (index === 0) return;\n\n              makeImage(formData, obj);\n            })\n          }\n        }\n      } else if (isTSpecialTabsKey(key)) {\n        setSpecialTabsKey(key);\n        formData.layer_type = key;\n        if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n          if (key !== 'kiosk') {\n            clearKioskConfig(context, params.meshFloors);\n          }\n          formData.layer_type = key;\n          formData.kiosk_id = '';\n          formData.retailer_id = '';\n          formData.value = '';\n          setFormData({ ...formData });\n          updateData({ ...formData });\n        }\n      }\n    }\n  }, [context, data.retailers, formData, mainTabKey, makeImage, makeTextGeometry, retailerTabsKey, specialTabsKey, updateData])\n\n\n  useEffect(() => {\n    switch (mainTabKey) {\n      case 'retailer':\n        handleChangeTab(retailerTabsKey);\n        break;\n    }\n  }, [formData, mainTabKey, retailerTabsKey])\n\n\n  const handleReset = () => {\n    if (!formData) return;\n    const defaultValues = getDefaultMapOjbValues(formData.center_id);\n    if (onResetData) {\n      onResetData({\n        ...formData,\n      })\n    }\n    setFormData({\n      ...defaultValues,\n      id: formData.id,\n    });\n    updateData({\n      ...defaultValues,\n      id: formData.id,\n    });\n  }\n\n  const handleChangeRetailer = (value: number | undefined) => {\n    if (value && formData) {\n      formData.retailer_id = value.toString();\n      formData.kiosk_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n    }\n  }\n\n  const handleChangeKiosk = ({ value }: { value: string }) => {\n    if (value && formData) {\n      formData.kiosk_id = value;\n      formData.retailer_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        updateMapCenterMarkerFor(obj, formData, floorIndex);\n        triggerSceneUpdate();\n      })\n    }\n  }\n\n  const handleChangeAmenity = (newValue: any) => {\n    console.log('newValue', newValue);\n    const { value } = newValue;\n    if (value && formData) {\n      formData.value = value as string;\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        makeImage(formData, obj);\n      })\n    }\n  }\n\n  const changeValue = (name: string, value: string) => {\n    if (!formData) return;\n    // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n    //     formData.custom_image = value;\n    //     setFormData({...formData});\n    //     updateData({...formData});\n    // }\n\n    context?.MeshObject?.forEach((obj, index) => {\n      if (!obj.userData) {\n        obj.userData = {};\n      }\n      if (!obj.userData.position) {\n        obj.userData.position = new Vector3();\n        if (obj.position) {\n          obj.userData.position.copy(obj.position);\n        }\n      }\n      const position = new Vector3();\n      if (obj.userData.position) {\n        position.copy(obj.userData.position);\n      }\n      switch (name) {\n        case 'custom_text':\n          if (index === 0) break;\n          formData.custom_text = value;\n          if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n            makeTextGeometry(obj, formData.custom_text, formData.size);\n          }\n          break;\n        case 'custom_image':\n          if (index === 0) break;\n          formData.custom_image = value;\n          makeImage(formData, obj);\n          updateData({\n            ...formData,\n          })\n          break;\n        case 'size':\n          if (index === 0) break;\n          formData.size = value;\n          if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n            let text = '';\n            if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n              const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n              if (retailIndex !== -1) {\n                text = data.retailers[retailIndex].retail_name;\n              }\n            } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n              text = formData.custom_text;\n            }\n            makeTextGeometry(obj, text, formData.size);\n          } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n            makeImage(formData, obj);\n            if (timeoutRef.current) {\n              clearInterval(timeoutRef.current);\n            }\n            timeoutRef.current = setTimeout(() => {\n              updateData({ ...formData });\n            }, 300);\n          } else if (['amenity'].includes(formData.layer_type)) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              setFormData({ ...formData });\n              updateData({ ...formData });\n            })\n          } else if (['kiosk'].includes(formData.layer_type)) {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'lock_size':\n          formData.lock_size = value;\n          //TODO use 'value' until api with lock_size will be working\n          formData.value = value;\n          if (formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'rotate':\n          if (index === 0) break;\n          formData.rotate = value;\n          obj.rotation.set(\n            obj.rotation.x,\n            obj.rotation.y,\n            parseFloat(formData.rotate) * Math.PI / 180\n          );\n          break;\n\n        case 'offsetX':\n          if (index === 0) break;\n          position.x += parseFloat(value);\n          obj.position.setX(position.x);\n          formData.offsetX = value;\n          break;\n\n        case 'offsetY':\n          if (index === 0) break;\n          position.y += parseFloat(value);\n          obj.position.setY(position.y);\n          formData.offsetY = value;\n          break;\n\n        case 'text_color':\n          if (index === 0) break;\n          formData.text_color = value;\n          if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n            const material_settings = {\n              // color: hex_to_color(formData.text_color),\n              color: formData.text_color,\n              transparent: true,\n              side: DoubleSide,\n              depthWrite: false,\n              depthTest: false,\n            };\n            let text_material = new MeshPhongMaterial(material_settings);\n            obj.material = text_material;\n          } else if (\n            formData.layer_type === 'retail_logo' ||\n            formData.layer_type === 'custom_image' ||\n            (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n            (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              updateData({\n                ...formData,\n                text_color: formData.text_color.replace('#', ''),\n              });\n            })\n          }\n          break;\n\n        case 'bg_color':\n          if (index !== 0) break;\n          formData.bg_color = value;\n          let meshType: MeshType = 'store';\n          if (obj.object_id?.startsWith('big-store')) {\n            meshType = 'big-store';\n          }\n          obj.material = getMaterial(\n            config,\n            meshType,\n            formData.map_obj_name,\n            formData.bg_color,\n            formData.transparent === \"1\" ? true : false,\n            { [formData.map_obj_name]: { ...formData } }\n          );\n          // updateData({...formData});\n          break;\n\n        default:\n          break;\n      }\n      startTransition(() => {\n        setFormData({ ...formData })\n        updateData({ ...formData });\n      });\n\n    })\n  }\n  const handleChange = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value;\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  const handleChangeLock = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value === '0' ? '1' : '0';\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  useEffect(() => {\n    if (data && data.map_objs && selectedId) {\n      const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n      if (index !== -1) {\n        setFormData({ ...data.map_objs[index] });\n      } else {\n        setFormData({\n          ...getDefaultMapOjbValues(centerId),\n          id: 'new-' + (new Date()).getTime(),\n        });\n      }\n    }\n    return () => {\n      setRetailerTabsKey('');\n    }\n  }, [centerId, data, selectedId])\n\n  useEffect(() => {\n    if (!formData) return;\n\n    if (formData.obj_type) {\n      handleChangeTab(formData.obj_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n    if (formData.layer_type) {\n      handleChangeTab(formData.layer_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n  }, [formData])\n\n  const decrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value -= 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const incrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const rotateByFixedAngle = (key: TIncDecKey, angle: number) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += angle;\n      if (value > 360) {\n        value = angle;\n      } else if (value === 360) {\n        value = 0;\n      }\n\n      changeValue(key, value.toString());\n    }\n  }\n\n  const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      rotateByFixedAngle(key, angle);\n    }, 200);\n  }\n\n  const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      decrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        decrementValue(key);\n      }, 50);\n    }, 200);\n  }\n\n  const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      incrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        incrementValue(key);\n      }, 50)\n    }, 200);\n  }\n\n  const stopIntervals = () => {\n    let key: TIncDecKey;\n    for (key in intervalRefs.current) {\n      if (intervalRefs.current[key])\n        clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = null;\n    }\n  }\n\n  const handleOnSubmit = () => {\n    if (params.onSubmit && context && context.MeshObject && formData) {\n      formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n      const kioskId = formData.kiosk_id !== null ? parseInt(formData.kiosk_id) : null;\n      params.onSubmit({ ...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId });\n    }\n  }\n\n  if (!formData) return null;\n\n  return (\n    <>\n      <Tab.Container activeKey={mainTabKey}>\n        <Col>\n          <Row>\n            <Col sm=\"9\">\n              <Nav\n                variant=\"tabs\"\n                className=\"flex-row\"\n                // activeKey={mainTabKey}\n                onSelect={handleChangeTab}\n              >\n                <Nav.Item>\n                  <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm=\"3\" className=\"px-0\">\n              {/* \n                //@ts-ignore */}\n              <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\">\n              <Tab.Content>\n                <Tab.Pane eventKey={\"retailer\"}>\n                  <AsyncSelect\n                    className=\"mb-3\"\n                    aria-label=\"Choose a Retailer\"\n                    loadOptions={loadRetailersOptions}\n                    isLoading={isLoadingRetailers}\n                    loadingMessage={() => <div>loading retailers...</div>}\n                    noOptionsMessage={() => 'Retailers not found'}\n                    placeholder=\"Choose a Retailer...\"\n                    value={retailers.filter((item: RetailerOption) => item.value === Number(formData.retailer_id))?.map((item: RetailerOption) => ({\n                      value: item.value,\n                      label: item.label,\n                    }))}\n                    defaultOptions={retailers.map((item: RetailerOption) => ({ value: item.value, label: item.label }))}\n                    onChange={(item) => handleChangeRetailer(item?.value)}\n                  />\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"retail-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                    <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                    <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              as=\"textarea\"\n                              name=\"custom_text\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"special\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"special-tab-form\"\n                    activeKey={specialTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose a Kiosk\"\n                        loadOptions={loadKiosksOptions}\n                        noOptionsMessage={() => 'Kiosks not found'}\n                        placeholder=\"Choose a Kiosk...\"\n                        value={data.kiosks?.filter((item: any) => formData.kiosk_id === item.id)?.map((item: any) => ({\n                          value: item.id,\n                          label: item.title,\n                        }))}\n                        defaultOptions={getDefaultKioksOptions()}\n                        onChange={handleChangeKiosk}\n\n                      />\n                    </Tab>\n                    <Tab eventKey=\"amenity\" title=\"Amenity\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose Amenity\"\n                        loadOptions={loadAmenitiesOptions}\n                        noOptionsMessage={() => 'Amenity not found'}\n                        placeholder=\"Choose Amenity...\"\n                        value={data.amenities.filter((item: any) => formData.value === item.type).map((item: any) => ({\n                          value: item.type,\n                          label: item.name,\n                        }))}\n                        defaultOptions={getDefaultAmenitiesOptions()}\n                        onChange={handleChangeAmenity}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"custom\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"custom-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"custom_text\" title=\"Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              name=\"custom_text\"\n                              as=\"textarea\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                    <Tab eventKey=\"custom_image\" title=\"Image\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              type=\"string\"\n                              name=\"custom_image\"\n                              value={formData.custom_image}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Col>\n      </Tab.Container>\n      <Form.Group className=\"mb-3 mt-3\">\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Size</Form.Label>\n          </Col>\n          <Col>\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('size')}\n                  onMouseDown={handleDecrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"size\"\n                  type=\"text\"\n                  value={formData.size}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('size')}\n                  onMouseDown={handleIncrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                <Row>\n                  <Col sm=\"4\">\n                    <Form.Check\n                      name=\"lock_size\"\n                      id=\"lock_size\"\n                      type=\"checkbox\"\n                      //TODO use 'value' until api with lock_size will be working\n                      value={formData.value}\n                      checked={formData.value === '1'}\n                      onChange={handleChangeLock}\n                    />\n                  </Col>\n                  <Col sm=\"8\" className=\"p-0\">\n                    <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Rotate</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('rotate')}\n                  onMouseDown={handleDecrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"rotate\"\n                  type=\"number\"\n                  value={rotation ?? formData.rotate}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('rotate')}\n                  onMouseDown={handleIncrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div style={{ maxWidth: 50, height: 50 }}>\n                <Button\n                  onClick={() => rotateByFixedAngle('rotate', 45)}\n                  onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >\n                  <ArrowClockwise size={'1rem'} />\n                </Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset X</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetX')}\n                  onMouseDown={handleDecrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n\n                <Form.Control\n                  name=\"offsetX\"\n                  type=\"number\"\n                  value={formData.offsetX}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetX')}\n                  onMouseDown={handleIncrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetY')}\n                  onMouseDown={handleDecrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"offsetY\"\n                  type=\"number\"\n                  value={formData.offsetY}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetY')}\n                  onMouseDown={handleIncrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"3\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">BG Color</Form.Label>\n          </Col>\n          <Col sm=\"3\" className=\"p-0\">\n            <Form.Control\n              name=\"bg_color\"\n              type=\"string\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"2\">\n            <Form.Control\n              type=\"color\"\n              name=\"bg_color\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Row>\n              <Col sm=\"3\">\n                <input\n                  name=\"transparent\"\n                  id=\"transparent\"\n                  type=\"checkbox\"\n                  value={formData.transparent}\n                  onChange={handleChange}\n                ></input>\n              </Col>\n              <Col sm=\"9\" className=\"p-0\">\n                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"4\" className=\"d-flex justify-content-start\">\n              <Form.Label className=\"mb-0\">Text Color</Form.Label>\n            </Col>\n            <Col sm=\"5\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                name=\"text_color\"\n                type=\"color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        {['kiosk', 'amenity'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"3\">\n              <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n            </Col>\n            <Col sm=\"6\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                type=\"color\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        <Row className=\"justify-content-center px-5 py-5\">\n          <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-') ? 'Save' : 'Update'}</button>\n        </Row>\n      </Form.Group>\n    </>\n  );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext, meshFloors: IMeshParamsTmp) {\n  if (context && context.MeshObject) {\n    const obj = context.MeshObject[1];\n    if (obj && obj.userData && obj.userData.kioskConfig) {\n      obj.userData.kioskConfig = null;\n      obj.userData?.triggerUpdate();\n      meshFloors.storeLogos.flat().filter(item => item !== undefined).forEach(item => {\n        if (item.storeLogo.object_id === obj.object_id && item.storeLogo.userData.kioskConfig !== undefined) {\n          item.storeLogo.userData.kioskConfig = null;\n          item.storeLogo.userData?.triggerUpdate();\n        }\n      });\n    }\n  }\n}\n\n","import { useCallback, useEffect, useState } from \"react\"\nimport useGetRetailers, { Data } from \"../useGetRetailersBySearch\";\nexport type RetailerOption = {\n  value: number,\n  label: string,\n  isDisabled?: boolean,\n  isFixed?: boolean,\n}\ntype UseRetailersOptions = (centerId: string, apiURI: string) => {\n  isLoading: boolean,\n  loadOptions: (inputValue: string, callback: (options: RetailerOption[]) => void) => void,\n  retailers: RetailerOption[],\n};\nconst useRetailersOptions: UseRetailersOptions = (centerId, apiURI) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [retailers, setRetailers] = useState<any[]>([]);\n  const [limit] = useState<number>(100);\n  const fetchRetailers = useGetRetailers({ centerId, apiURI });\n\n  const processData = useCallback((data: Data, isLoadingMore?: boolean) => {\n    setIsLoading(false);\n    let result: any = [];\n    if (!data) return result;\n    if (!data.isError) {\n      result = data.items.map((item: any) => {\n        return {\n          value: item.id,\n          label: `${item.name}${item.location && item.location.length > 1 ? ', ' + item.location : ''}`,\n        }\n      })\n    } else {\n      console.error(`Fetch Retailers error: ${data.error}`)\n    }\n    return result;\n  }, []);\n\n  const loadOptions = useCallback((inputValue: string, callback: (options: RetailerOption[]) => void) => {\n    callback(retailers.filter(item => (item.label as string).toLowerCase().includes(inputValue)));\n  }, [retailers])\n\n  useEffect(() => {\n    setIsLoading(true);\n    const retailersData = fetchRetailers('', limit);\n    retailersData.then(data => {\n      const result = processData(data);\n      setRetailers([...result]);\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchRetailers, limit, processData])\n\n  return {\n    isLoading,\n    loadOptions,\n    retailers,\n  }\n}\n\nexport default useRetailersOptions;","import { useCallback, useState } from \"react\";\nimport useAllRetailers from \"src/Hooks/useAllRetailers\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype GetRetailersParams = {\n  centerId: string | number,\n  apiURI?: string,\n}\n\nexport type Data = {\n  isError: boolean,\n  error: string | null,\n  items: IRetailer[],\n  count: number,\n}\n\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n  const { centerId, apiURI } = params;\n\n  const { getAll } = useAllRetailers(apiURI ?? '', centerId.toString(), 100);\n\n  const fetchRetailers = useCallback((search: string, limit?: number): Promise<Data> => {\n\n    const fetchAll = (): Promise<Data> => new Promise((resolve, reject) => {\n\n      getAll().then(data => {\n        resolve({\n          isError: false,\n          error: null,\n          items: data.items,\n          count: data.count,\n        });\n      }).catch((e: any) => {\n        reject(e.message ? e.message : 'useGetRetailer: something went wrong!');\n      });\n\n    });\n\n    return fetchAll();\n\n  }\n    , [getAll]);\n\n  return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n  centerId: string,\n  slug: string,\n  webApiURI: string,\n}\n\nexport type RetailerData = {\n  data: IRetailer | null,\n  isLoading: boolean,\n  isError: boolean,\n  error: string | null,\n}\n\nconst defaultData: RetailerData = {\n  data: null,\n  isLoading: false,\n  isError: false,\n  error: null,\n}\nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n  const { centerId, slug, webApiURI } = props;\n  const [data, setData] = useState<RetailerData>(defaultData);\n\n  useMemo(() => {\n    if (!slug || !centerId) {\n      setData({ ...defaultData });\n      return false;\n    }\n\n    let apiURI = webApiURI;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      setData({\n        isLoading: true,\n        data: null,\n        isError: false,\n        error: null,\n      })\n      fetch(`${apiURI}/v1/retailers/${slug}`, {\n        headers: {\n          center_id: centerId,\n        }\n      }).then(\n        (response) => response.json()\n      ).then(data => {\n        setData({\n          isLoading: false,\n          isError: false,\n          error: null,\n          data: {\n            id: data.id,\n            retail_name: data.name,\n            slug: data.slug,\n            location: data.location && data.location !== '-' ? data.location : '',\n            retailer_phone: data.retailer_phone,\n            retailer_description: data.global_retailer.description,\n            logo: data.media.url,\n            map_obj_name: '',\n          }\n        });\n      }).catch((e: any) => {\n        setData({\n          data: null,\n          isLoading: false,\n          isError: true,\n          error: `Error fetch retaler data: ${e.message}`,\n        })\n      })\n    } else {\n      setData({\n        isLoading: false,\n        isError: true,\n        error: 'webApiURI not provided!',\n        data: null,\n      })\n    }\n\n  }, [centerId, slug, webApiURI]);\n\n  return data;\n\n}\n\nexport default useRetailerData;\n","import { Form, FormGroup, Modal, Placeholder, Spinner } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n  amenity: string,\n  show: boolean,\n  onHide: () => void,\n  centerId: string,\n  retailers?: IRetailer[],\n  mapObjs?: MapObj[],\n  mapObjectName?: string,\n  webApiURI: string,\n  onClick?: (id: string, amenityType?: string) => void,\n  kioskId: string,\n}\n\nconst RetailerInfoList = ({ retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId }: { retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string }) => {\n  const [retailerId, setRetailerId] = useState<string>('');\n\n  const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    if (onClick) {\n      onClick(retailerId);\n    }\n  }\n\n  const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setRetailerId(e.target.value);\n  }\n\n  const filterRetailers = (retailers: IRetailer[], arrayObjects: MapObj[]) => {\n    return retailers.filter(retailer =>\n      arrayObjects.some(obj => obj.retailer_id === retailer.id)\n    );\n  }\n\n  if (!isAmenity && (isLoading || !retailer)) {\n    return (\n      <div>\n        <div className={styles['retailer-info-spinner']} >\n          <Spinner animation=\"border\" role=\"status\" variant=\"secondary\" />\n        </div>\n        <div className={styles['retailer-info-content']} >\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={5} /> <Placeholder bg=\"secondary\" xs={3} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={7} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {!!retailer && (\n        <>\n          <div className={styles['retailer-logo']}>\n            <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n          </div>\n          <div className={styles['retailer-info-content']} >\n            <div>\n              <b>Retailer:</b> {retailer.retail_name}\n            </div>\n            {retailer.location &&\n              <div>\n                <b>Location:</b> {retailer.location}\n              </div>\n            }\n            {retailer.retailer_phone &&\n              <div>\n                <b>Phone:</b> {retailer.retailer_phone}\n              </div>\n            }\n            {retailer.retailer_description &&\n              <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n            }\n          </div>\n        </>\n      )}\n      <Form className={styles['get-directions-from']}>\n        <FormGroup>\n          <div className=\"d-flex align-items-center gap-3\">\n            {!kioskId.length ?\n              <>\n                <Form.Select\n                  name=\"retailer\"\n                  onChange={onChange}\n                  value={retailerId}\n                >\n                  <option value={''} disabled>Get direction from ...</option>\n                  {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                    if (retailer && item.id === retailer.id) return null;\n                    return (\n                      <option key={index} value={item.id}>{item.retail_name}</option>\n                    )\n                  }\n                  )}\n                </Form.Select>\n                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n              </>\n              : null\n            }\n          </div>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n  const {\n    amenity,\n    show,\n    onHide,\n    centerId,\n    retailers,\n    mapObjs,\n    mapObjectName,\n    webApiURI,\n    onClick,\n    kioskId,\n  } = props;\n  const slug = useMemo(() => {\n    if (centerId && mapObjs && retailers && mapObjectName) {\n      const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n      if (mapObj && mapObj.retailer_id) {\n        const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n        if (retailer) {\n          return retailer.slug;\n        }\n      }\n    }\n    return '';\n  }, [centerId, mapObjectName, mapObjs, retailers]);\n  const data = useRetailerData({ centerId, slug, webApiURI });\n  const handleOnClick = (retailerId: string) => {\n    if (!onClick) return;\n    let mapObj = null;\n    if (kioskId) {\n      mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id ?? '') === parseInt(kioskId));\n    } else {\n      mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n    }\n\n    let mapObjectName = '';\n\n\n    if (mapObj) {\n      mapObjectName = mapObj.map_obj_name;\n    }\n\n    if (amenity) {\n      onClick(mapObjectName, amenity);\n    } else {\n      onClick(mapObjectName);\n    }\n  }\n\n  const isAmenity = (amenity !== '' || (mapObjectName ? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n  return (\n    <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n      <div className={styles['retailerInfoCloseBtn']}>\n        <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n      </div>\n      <Modal.Body className=\"p-3\">\n        <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState, useTransition } from \"react\";\nimport { Canvas, ThreeEvent, useThree } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { Mesh, Object3D } from \"three\";\nimport { IExtMesh, IJsonConfig, IMeshParams, IMeshValues } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.scss';\nimport { Alert } from 'react-bootstrap';\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { getAllAmenities } from \"src/helpers/amenities.helper\";\nimport { defaultVars } from \"src/defaults\";\nimport { AmenityID } from \"src/MapBox\";\n\ninterface ISceneComponentProps {\n  mapitData?: MapIt2Response;\n  config: Partial<IJsonConfig>;\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObj[]) => void;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n  handleClickOnRetailer?: (slug: string) => void;\n}\n\nexport interface IZoomData {\n  direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n  const { data, refreshData, removeMissingMapObjects } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n  const [triggerClick, setTriggerClick] = useState<boolean>(false);\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlState, setCameraControlState] = useState<any>(null);\n  const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition, handleClickOnRetailer } = params;\n  const [IsCameraInit, setIsCameraInit] = useState(false);\n\n  const [, startTransition] = useTransition();\n  const [disableClicks, setDisableClicks] = useState(false);\n\n  const [selectedRetailerSlug, setSelectedRetailerSlug] = useState<string>('');\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n  const [, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n  const cameraControlStateRef = useRef<any>(null);\n  cameraControlStateRef.current = cameraControlState;\n  const deviceTypeRef = useRef<string | undefined | null>(null);\n  deviceTypeRef.current = deviceType;\n  // console.log('DEVICE TYPE', deviceType);\n  const floorsMapRef = useRef<{\n    resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null,\n    createRouteToStore: (retailerSlug: string) => void | null,\n    getInitialDistance: () => number,\n  }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const handleFloorChange = (floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }\n\n  const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n\n  useEffect(() => {\n    if (data?.map_objs && data.map_objs.length > 0 && meshFloors.meshParams.length) {\n      const objectNames = meshFloors.meshParams.reduce<string[]>((prev, cur) => {\n        const curVal = cur.reduce<string[]>((subPrev, subCur) => {\n\n          return [...subPrev, subCur.object_id];\n        }, []);\n        return [...prev, ...curVal];\n      }, [])\n      if (objectNames) {\n        removeMissingMapObjects(objectNames);\n      }\n    }\n  }, [data?.map_objs, meshFloors.meshParams, removeMissingMapObjects])\n\n  const mapCenterMarkerRef = useRef(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const context = useMeshObjectContext();\n  const { SetMeshObject } = context;\n  const [, setSceneKey] = useState(0);\n\n  const updateKey = useCallback(() => {\n    setSceneKey((value) => value + 1)\n  }, [])\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n  const config = meshFloors.config;\n  const floors = meshFloors.floors;\n  const meshParams = meshFloors.meshParams;\n\n  const { setConfig: setCxtConfig } = context;\n\n  useEffect(() => {\n    if (context && meshFloors && meshFloors.config) {\n      setCxtConfig(meshFloors.config);\n    }\n  }, [context, meshFloors, setCxtConfig])\n\n  useImperativeHandle(ref, () => ({\n    refreshData,\n    createRouteToAmenity: handleAmenityClick,\n    createRouteToStore: floorsMapRef.current?.createRouteToStore,\n    getInitialDistance: floorsMapRef.current?.getInitialDistance,\n  }))\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      const resizeWidth = () => {\n        setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      }\n      window.addEventListener('resize', () => {\n        resizeWidth();\n        // Update your map or camera settings based on newWidth\n      });\n      resizeWidth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statsParentRef.current]);\n\n  const setCameraControlPos = useCallback((camera_controls_states: any) => {\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraPos(camera_controls_states.display_app.camera)\n      setControlPos(camera_controls_states.display_app.controls)\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n      if (canvasWidth > 1024) {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (canvasWidth > 600) {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      } else {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraPos(camera_controls_states.display_app.camera)\n        setControlPos(camera_controls_states.display_app.controls)\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      }\n    }\n  }, [canvasWidth, config?.ROLE])\n\n  useEffect(() => {\n    if (data && data.camera_controls_states) {\n      setCameraControlState(data.camera_controls_states);\n      setCameraControlPos(data.camera_controls_states);\n    }\n  }, [data, setCameraControlPos]);\n\n  useEffect(() => {\n    if (cameraControlStateRef.current) {\n      setCameraControlPos(cameraControlStateRef.current);\n    }\n  }, [deviceType, canvasWidth, setCameraControlPos])\n\n\n  const { onSettingsLoading } = params;\n  useEffect(() => {\n    if (data && meshFloors.config && onSettingsLoading) {\n      onSettingsLoading?.(\n        {\n          ...data,\n          settings: {\n            ...data.settings,\n            STYLE: meshFloors.config.STYLE,\n            ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n            AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n            AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n            BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n            BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n            BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n            BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n            MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n            OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n            OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n            STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n            STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n            WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n            WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n            KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n            STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n            MIN_ZOOM: meshFloors.config.CAMERA?.minZoom?.toString(),\n            MAX_ZOOM: meshFloors.config.CAMERA?.maxZoom?.toString(),\n            CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n            CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n            ZOOM_STEP: meshFloors.config.ZOOM_STEP ?? defaultVars.ZOOM_STEP ?? '100',\n            SELECTED_ZOOM_LIMIT: meshFloors.config.SELECTED_ZOOM_LIMIT ?? defaultVars.SELECTED_ZOOM_LIMIT ?? '400',\n            SELECTED_ZOOM_LIMIT_DISTANCE: meshFloors.config.SELECTED_ZOOM_LIMIT_DISTANCE?.toString()\n          }\n        });\n    }\n  }, [data, meshFloors, onSettingsLoading])\n\n  const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n    if (canvasWidthRef.current === 0) return;\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n      if (canvasWidthRef.current > 1024) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (canvasWidthRef.current > 600) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      } else {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      }\n    }\n  }, [config?.ROLE])\n\n  useEffect(() => {\n    if (cameraControlStateRef.current && setCameraControlPosition) {\n      setCameraControlPosition(cameraControlStateRef.current);\n    }\n  }, [cameraControlState, setCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapitData = useCallback((index: number, newData: MapObj) => {\n    setFormMapObjData((prev) => {\n      const itemIndex = prev.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n      if (itemIndex !== -1) {\n        prev[itemIndex] = { index, data: { ...newData } };\n      } else {\n        prev.push({ index, data: { ...newData } })\n      }\n\n      return [...prev];\n    });\n\n  }, [])\n\n  const getMapitData = useCallback((): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }, [data, formMapObjData])\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refreshData);\n    }\n  }\n\n  const floorsCount = data?.floors?.length ?? 0;\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    if (!config) {\n      return [null, 0, ''] // not an error - loading/initializing\n    }\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = floorsCount ? floorsCount - 1 : 0;\n    if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n      const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n      const currKioskMeshParams = meshParams?.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (config.ROLE === 'WEBSITE') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n      }\n      if (config.ROLE === 'WEBSITE') {\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [config, meshParams, floorsCount]);\n\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsCount ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = (fullReset: boolean = false) => {\n\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n    setSelectedRetailerSlug('');\n\n    if (floorsMapRef.current) {\n      if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n        let ccs = null;\n        if (deviceTypeRef.current === \"desktop\") {\n          ccs = { ...data.camera_controls_states.desktop }\n        } else if (deviceTypeRef.current === \"display_app\") {\n          ccs = { ...data.camera_controls_states.display_app }\n        } else if (deviceTypeRef.current === \"mobile\") {\n          ccs = { ...data.camera_controls_states.mobile }\n        } else if (deviceTypeRef.current === \"tablet\") {\n          ccs = { ...data.camera_controls_states.tablet }\n        }\n\n        if (ccs) {\n          floorsMapRef?.current?.resetCamera(fullReset, ccs);\n        }\n      } else {\n\n        floorsMapRef?.current?.resetCamera(fullReset);\n\n      }\n    }\n\n  }\n\n  const ccsInit = useRef<{ [key: string]: boolean }>({\n    display_app: false,\n    desktop: false,\n    tablet: false,\n    mobile: false,\n  })\n\n  useEffect(() => {\n\n    if (!config || !deviceType) {\n      return;\n    }\n\n\n    if (!params.config.CAMERA_CONTROLS_STATES) {\n      //@ts-ignore\n      config.CAMERA_CONTROLS_STATES = data.camera_controls_states[deviceType]\n    }\n\n    floorsMapRef?.current?.resetCamera();\n\n  }, [deviceType, config, data?.camera_controls_states])\n\n  useEffect(() => {\n    if (!config) {\n      return;\n    }\n\n    const kiosks: IMeshValues[] = [];\n    meshFloors.meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n    // console.log('kiosks', kiosks);\n\n    const mapObjectIdToKiosk = new Map();\n    const mapObjectIdToLogo = new Map();\n    kiosks.forEach(item => {\n      mapObjectIdToKiosk.set(item.object_id, item.mesh);\n    });\n    // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n    meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n    // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n    // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    const mapData = getMapitData();\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        //TODO use 'value' until api with lock_size will be working\n        // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n        if (logo.userData.kioskConfig !== null) {\n          logo.userData.kioskConfig = {\n            lockSize: mapObj?.value === '1',\n            blink: item.object_id === currKioskId,\n            size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE),\n            floorIndex: kiosk.floor_index,\n          }\n          // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n          logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n          logo.visible = true;\n        }\n        currKioskLogo.push(logo);\n      }\n    });\n\n    // return () => {\n    //     currKioskLogo?.forEach(mesh => {\n    //         mesh.userData.htmlContent = null;\n    //     });\n    // }\n  }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObj[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData, onMapDataUpdate])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (config?.SELECTED_RETAILER_SLUG && IsCameraInit) {\n      setSelectedRetailerSlug(config.SELECTED_RETAILER_SLUG);\n    }\n  }, [config?.SELECTED_RETAILER_SLUG, IsCameraInit])\n\n  useEffect(() => {\n    if (config && data && data.retailers && data.map_objs && selectedRetailerSlug !== '') {\n      const retailer = data.retailers.find(item => {\n        return item.slug === selectedRetailerSlug;\n      })\n      if (retailer) {\n        const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n        const meshParam = meshParams?.flat().find(item => item.object_id === mapObject?.map_obj_name);\n        if (meshParam) {\n          setSelectedFloorIndex(meshParam.floor_index);\n        }\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [config, data, setSelectedActiveObjectId, selectedRetailerSlug, meshParams])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const textParams = meshFloors.textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const logoParams = meshFloors.storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const result = [object as IExtMesh];\n\n    if (textParams) {\n      result.push(textParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    SetMeshObject([...result]);\n  }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n      const object = meshFloors.meshParams[currentFloorIndex]?.find((value) => value.object_id === selectedActiveObjectId);\n      if (object) {\n        //@ts-ignore\n        handleMeshObjectContext(object);\n      }\n      //@ts-ignore\n    }\n  }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [config, setSelectedActiveObjectId]);\n\n  const handleObjectClick = useCallback((object: IExtMesh, targetId: string, softClick?: boolean) => {\n\n    if (!softClick && config?.ROLE === 'DISPLAY_APP' && handleClickOnRetailer && object.mesh_type?.includes(\"store\")) {\n\n      const mapObj = data?.map_objs.find((item) => item.map_obj_name === object.object_id && item.obj_type === \"retailer\")\n      if (mapObj) {\n        const retailer = data?.retailers.find((item) => item.id === mapObj.retailer_id)\n        if (retailer) {\n          handleClickOnRetailer(retailer.slug)\n        }\n      }\n\n      return false;\n    }\n\n    if (config?.ROLE === 'DISPLAY_APP' && currKioskObj) {\n      handleFloorChange(currKioskFloorIndex);\n    }\n\n    startTransition(() => {\n      handleMeshObjectContext(object);\n      setSelectedActiveObjectId(targetId ?? '');\n      setTriggerClick(t => !t);\n      setSelectedRetailerSlug('');\n      setAmenityTargetType('');\n      setFromObjectId('');\n    })\n\n  }, [handleMeshObjectContext, setSelectedActiveObjectId])\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    if (disableClicks) {\n      setDisableClicks(false);\n      return false;\n    }\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value);\n      if (config && config.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleObjectClick(e.object as IExtMesh, targetId ?? '');\n      if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext, disableClicks, handleObjectClick]);\n\n  const onCameraMove = useCallback((e: any) => {\n    if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n      return\n    }\n  }, []);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    // console.log('onPointerEnter', e.object)\n    if (e.object.userData.storeName === '') {\n      // console.warn('onPointerEnter no storeName', e.object);\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerLeave', e.object)\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const startMousePos = useRef<{ x: number | null, y: number | null, distance: number }>({ x: null, y: null, distance: -Infinity });\n\n  const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    if (e.buttons > 0) {\n      if (startMousePos.current.x === null) {\n        startMousePos.current.x = e.clientX;\n      }\n      if (startMousePos.current.y === null) {\n        startMousePos.current.y = e.clientY;\n      }\n      if (startMousePos.current.x !== null && startMousePos.current.y !== null) {\n        let newDistance = Math.sqrt(Math.pow(startMousePos.current.x - e.clientX, 2) + Math.pow(startMousePos.current.y - e.clientY, 2));\n        if (newDistance > startMousePos.current.distance) {\n          startMousePos.current.distance = newDistance;\n        }\n      }\n\n      startTransition(() => {\n        // Disable dragging if the user accidentally moved the map within 15 pixels by clicking on the store\n        if (startMousePos.current.distance > 15) {\n          setDisableClicks(true);\n        }\n      });\n    } else {\n      startMousePos.current.x = startMousePos.current.y = null;\n      startMousePos.current.distance = -Infinity;\n    }\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n  }\n\n  if (data && (!data.floors || data.floors.length <= 0)) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!config || !meshFloors.meshParams.length) {\n    console.warn('LOADING MAP')\n    if (config?.ROLE === 'WP_SITE') {\n      return <div className=\"messageStyle\" style={messageStyle}>No Map for Center</div>\n    }\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div className=\"messageStyle\" style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && config.ROLE === 'WEBSITE') {\n    console.error('NO KIOSK OBJECT FOUND');\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      // setSelectedActiveObjectId(retailerId);\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }\n\n  return (\n    <>\n      {config.ROLE === 'PORTAL' &&\n        <div className={styles['mapbox-admin-form']}>\n          {!selectedActiveObjectId ?\n            <Alert variant=\"info\">Select a store to customize.</Alert>\n            :\n            <MapboxForm\n              floorIndex={currentFloorIndex}\n              meshFloors={meshFloors}\n              config={config}\n              data={getMapitData()}\n              setData={handleChangeMapitData}\n              selectedId={selectedActiveObjectId}\n              centerId={params.config.CENTER_ID as string}\n              onSubmit={handleOnSubmit}\n              apiURI={params.webApiURI}\n              onResetData={params.onResetData}\n              triggerSceneUpdate={updateKey}\n            />\n          }\n        </div>\n      }\n\n      <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n        <UIComponent\n          accentColor={config.ACCENT_COLOR.getStyle()}\n          floors={floors}\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          amenitiesList={getAllAmenities()}\n          handleAmenityClick={handleAmenityClick}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          role={config.ROLE}\n          mapObjs={data?.map_objs}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n          <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n          {/*<axesHelper args={[5000]} />*/}\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n\n          <FloorsMap\n            onCameraMove={onCameraMove}\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            // @ts-ignore\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            config={config}\n            ref={floorsMapRef}\n            cameraPos={cameraPos}\n            controlPos={controlPos}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n            isSelectedRetailerSlug={true}\n            setIsCameraInit={setIsCameraInit}\n            retailers={data?.retailers ?? []}\n            mapObjs={data?.map_objs ?? []}\n            handleObjectClick={handleObjectClick}\n            triggerClick={triggerClick}\n          />\n        </Canvas>\n\n        {config.ROLE !== 'DISPLAY_APP' && (\n          <div ref={labelRef}\n            className=\"store-name-placeholder\"\n            style={{\n              position: 'absolute',\n              padding: 10,\n              background: '#ffffff',\n              fontWeight: 600,\n              color: '#000000',\n              fontSize: 16,\n              display: currentHoveredObject ? 'block' : 'none',\n              top: 300,\n              left: 400,\n              opacity: .8,\n            }}\n          >{currentHoveredObject && currentHoveredObject.userData.storeName}</div>\n        )}\n      </div>\n      {\n        config.ROLE !== 'PORTAL' ?\n          <RetailerInfoModal\n            amenity={selectedAmenityType}\n            show={showRetailerInfo}\n            onHide={() => setShowRetailerInfo(false)}\n            centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n            mapObjectName={selectedActiveObjectId}\n            retailers={data?.retailers}\n            mapObjs={data?.map_objs}\n            webApiURI={params.webApiURI ?? ''}\n            onClick={handleRetailerInfoOnClick}\n            kioskId={config.KIOSK.toString()}\n          />\n          : null\n      }\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\nimport useAllRetailers from \"./Hooks/useAllRetailers\";\nimport { getAllAmenities } from \"./helpers/amenities.helper\";\n\ninterface useMapIt2DataProps {\n  CENTER_ID: string;\n  mapitData?: MapIt2Response;\n  webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n  data: MapIt2Response | null,\n  refreshData: () => void,\n  removeMissingMapObjects: (objectNames: string[]) => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n  const [data, setData] = useState<MapIt2Response | null>(null);\n\n  if (!CENTER_ID && !mapitData) {\n    console.error('useMapit2Data requires either CENTER_ID or mapitData');\n  }\n\n  const { getAll } = useAllRetailers(webApiURI as string, CENTER_ID as string, 100);\n\n  const getData = useCallback(() => {\n    let apiURI = webApiURI || null;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n      const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n      const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n      const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n      const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n      const mapObjsPromise = fetch(mapObjsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const floorsPromise = fetch(floorsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      })\n        .then(data => {\n          if (!data\n            || !data.items\n            || (data.items && !data.items.length)) {\n            console.error('Empty floors data from server');\n          }\n          return data;\n        }).catch(e => { console.error(e) })\n\n      const kiosksPromise = fetch(kioskApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const settingsPromise = fetch(settingsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { console.error(e) })\n\n      const responsivePromise = fetch(responsiveApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { throw new Error(e) })\n\n      Promise.all<Array<any>>([\n        // retailersPromise,\n        // getAllRetailers(CENTER_ID, 1, 100, apiURI, 0),\n        getAll(),\n        mapObjsPromise,\n        floorsPromise,\n        kiosksPromise,\n        settingsPromise,\n        responsivePromise\n      ]).then(data => {\n        if (data.length >= 5) {\n          const responseData: Partial<MapIt2Response> = {};\n          responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n            id: item.id,\n            retail_name: item.name,\n            slug: item.slug,\n            location: item.location,\n            retailer_phone: '',\n            retailer_description: '',\n            logo: item.media.url,\n            map_obj_name: '',\n          }));\n          responseData.map_objs = [...data[1].items].map(item => ({\n            ...item,\n            offsetX: item.offset_x,\n            offsetY: item.offset_y,\n          }));\n          responseData.floors = [...data[2].items];\n          responseData.settings = {\n            ...demoData.settings as Settings,\n            KIOSK_SIZE: \"1\",\n          }\n          responseData.kiosks = [];\n          responseData.amenities = getAllAmenities();\n          responseData.kiosks = [...data[3].items];\n          const settings: Settings = data[4]?.settings ? data[4].settings : {\n            \"STYLE\": \"3D\",\n            \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n            \"ACCENT_COLOR\": \"4EA5FF\",\n            \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n            \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n            \"WALL_THICKNESS\": \"0.6\",\n            \"WALL_COLOR\": \"888888\",\n            \"BOUNDARY_THICKNESS\": \"0.8\",\n            \"BOUNDARY_COLOR\": \"888888\",\n            \"BASE_COLOR\": \"25292B\",\n            \"STORE_TEXT_COLOR\": \"222222\",\n            \"OVERLAY_COLOR\": \"FFFFFF\",\n            \"OVERLAY_OPACITY\": \"0.7\",\n            \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n            \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n            \"ZOOM_STEP\": \"100\",\n          };\n          if (data[5]) {\n            responseData.camera_controls_states = data[5];\n          } else {\n            responseData.camera_controls_states = { ...demoData.camera_controls_states }\n          }\n          responseData.settings = settings;\n\n          setData({ ...responseData as MapIt2Response })\n        }\n      })\n    }\n  }, [CENTER_ID, getAll, webApiURI])\n\n  useEffect(() => {\n    if (mapitData) {\n      setData(mapitData);\n      return;\n    }\n\n    if (!CENTER_ID) {\n      return;\n    }\n\n    getData();\n\n  }, [CENTER_ID, mapitData, getData]);\n\n  const removeMissingMapObjects = useCallback((objectNames: string[]) => {\n    if (data?.map_objs) {\n      const mapObjects = data.map_objs.filter(item => {\n        return objectNames.includes(item.map_obj_name)\n      })\n      if (mapObjects.length < data.map_objs.length) {\n        setData({\n          ...data,\n          map_objs: [...mapObjects],\n        })\n      }\n    }\n  }, [data]);\n\n  const refreshData = () => getData();\n  return { data, refreshData, removeMissingMapObjects };\n}","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport { retailersApi } from './services/retailersApi'\n\nexport const store = configureStore({\n  reducer: {\n    [retailersApi.reducerPath]: retailersApi.reducer,\n  },\n  middleware: (getDefalultMiddleware) => getDefalultMiddleware().concat(retailersApi.middleware),\n})\n\nsetupListeners(store.dispatch);\n","import { MutableRefObject, forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport styles from './MapBox.module.scss';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport { isMapIt2Response, MapIt2Response, MapObj, MapObjToSave } from \"./mapitApiTypes\";\nimport { IJsonConfig } from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapBoxContextProvider from './contexts/MapBoxContextProvider';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n  createRouteToStore: (retailerSlug: string) => void;\n  getInitialDistance: () => number;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station';\n\nexport interface IAppProps {\n  mapitData?: unknown;\n  config: Partial<IJsonConfig>;\n  stats?: boolean;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n  handleClickOnRetailer?: (slug: string) => void;\n}\n\n\nconst MapBox = forwardRef(({\n  mapitData,\n  config,\n  onSettingsLoading,\n  webApiURI,\n  mediaStorageURI,\n  onSubmit,\n  refObj,\n  deviceType,\n  setCameraControlPosition,\n  onResetData,\n  onExtractedAmenities,\n  handleClickOnRetailer\n}: IAppProps, ref) => {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n  useImperativeHandle(ref, () => {\n    return {\n      getInitialDistance: refObj?.current?.getInitialDistance\n    }\n  });\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <MapBoxContextProvider>\n        <MeshObjectContextProvider>\n          <div className={`${styles['mapbox-component']} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n            <SceneComponent\n              ref={refObj}\n              setSelectedActiveObjectId={setSelectedActiveObjectId}\n              selectedActiveObjectId={selectedActiveObjectId}\n              mapitData={mapData}\n              config={config}\n              onSettingsLoading={onSettingsLoading}\n              webApiURI={webApiURI}\n              mediaStorageURI={mediaStorageURI}\n              onSubmit={handleOnSubmit}\n              onResetData={onResetData}\n              deviceType={deviceType}\n              setCameraControlPosition={setCameraControlPosition}\n              onExtractedAmenities={onExtractedAmenities}\n              handleClickOnRetailer={handleClickOnRetailer}\n            />\n            <div className={styles.hide}>\n              <div id=\"map-special-svg-kiosk\">\n                <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n                  <path fill=\"#444444\" d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-atm\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 577.8 577\">\n                  <path fill=\"#444444\" d=\"M388.7,314c-3.7-10.3-10.3-19.8-17.7-27.2c-7.4-7.4-17.7-14-29.5-19.1c-6.6-2.9-19.2-6.6-39.1-11.8V144.2 c13.3,2.2,22.8,8.1,30.2,16.2c7.4,8.1,11.8,19.9,14,35.3l39.8-5.9c-2.9-24.3-13.3-44.1-30.2-58.1c-13.3-11-31-17.7-53.8-19.8V93.4 h-24.3v18.4c-25.8,2.2-45,9.6-58.2,21.3c-19.9,17.7-29.5,39.7-29.5,67.6c0,15.5,3.7,29.4,10.3,41.9s16.2,22,28.7,28.7 c17,9.6,33.2,16.2,49.4,20.6v121.3c-14.8-1.5-28-8.8-39.1-22.8c-7.4-9.6-13.3-25-16.2-46.3l-39.1,7.4c1.5,20.6,6.6,37.5,15.5,51.5 s19.9,23.5,31.7,30.1c12.5,6.6,28,11,47.9,13.2v39v-0.1V483h22.1v-39c28-0.7,50.1-11,67.1-28.7c17-18.4,25.8-40.4,25.8-67.6 C394.6,336,392.4,324.3,388.7,314z M278.9,145.1v107.2c-17.7-5.2-30.2-11.8-37.6-20.6s-11.1-19.8-11.1-33.1c0-14,4.4-25.7,13.3-35.3 C252.2,153.9,263.7,147.4,278.9,145.1V145h0.7C279.3,145,279.1,145,278.9,145.1z M340,394.2c-9.6,11-22.1,18.4-37.6,19.8l0,0V297.9 c20.6,5.2,34.6,11.8,42,20.6c6.6,8.1,10.3,19.8,10.3,33.8C354.8,369.2,349.6,383.1,340,394.2z\" />\n                  <path fill=\"#444444\" d=\"M289.8,2.5c-158.7,0-288,128-288,287.2c0,158.3,129.3,287.2,288,287.2s288-128.9,288-287.2S448.6,2.5,289.8,2.5z M289.9,533.9C155,533.9,45.2,424.3,45.2,289.8C45.2,154.5,155,45.7,289.9,45.7s244.7,109.5,244.7,244.1S424.8,533.9,289.9,533.9z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-management\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 414.6\">\n                  <path fill=\"#444444\" d=\"M371.6,180.4c66.8,0,101,58.5,121.4,121.9l16.4,50.4c2.7,8.8-7.5,16.3-16.4,16.3h-56.6l-7.5-27.2 c-17.7-53.1-45-106.2-94.8-125.9c13-8.8,23.9-21.1,30.7-35.4C366.1,180.4,368.8,180.4,371.6,180.4z M441.2,145.7 c64.8,2,98.2,59.2,118.7,121.9l15.7,49.7c2.7,8.8-7.5,17.7-16.4,17.7h-35.5l-12.3-38.1c-16.4-53.1-44.3-106.2-94.8-125.9 C426.2,162.7,434.3,155.2,441.2,145.7z M51.6,334.3H16.8c-9.6,0-19.1-8.2-16.4-17.7l15.7-49.7C35.9,204.2,70.1,147.1,134.9,145 c6.1,9.5,15,18.4,24.6,24.5c-49.8,19.7-77.8,72.8-94.8,125.9L51.6,334.3L51.6,334.3z M437.7,0c35.5,0,64.8,28.6,64.8,64.7 c0,31.3-22.5,57.2-52.5,62.6c3.4-8.8,5.5-18.4,5.5-27.9c0-39.5-27.3-71.5-62.8-81C403.6,6.8,419.3,0,437.7,0L437.7,0z M137.6,0 c17.7,0,34.1,6.8,45,18.4c-35.5,9.5-62.8,41.5-62.8,81c0,9.5,2.1,19.1,5.5,27.9C96,121.9,72.8,96,72.8,64.7 C73.5,28.6,102.1,0,137.6,0L137.6,0z M287.7,0c19.8,0,37.5,8.8,49.8,22.5c-15.7,6.8-29.3,19.1-38.2,34l-3.4,5.5c-2.7,0-5.5,0-7.5,0 c-2,0-6.1,0-8.9,0l-3.4-5.5c-9.6-15-22.5-27.2-38.2-34C250.2,8.9,267.9,0,287.7,0L287.7,0z M287.7,226c66.8,0,101,58.5,122.1,121.9 l15.7,50.4c2.7,8.8-8.2,16.3-16.4,16.3H166.2c-9.6,0-19.8-8.2-16.4-16.3l15.7-50.4C186,284.6,220.8,226,287.7,226z M287.7,81 c35.5,0,64.8,28.6,64.8,64.7s-28.7,64.7-64.8,64.7c-35.5,0-64.8-28.6-64.8-64.7S252.2,81,287.7,81z M138.3,369H82.3 c-9.6,0-19.1-8.2-16.4-16.3l15.7-50.4c21.1-63.3,55.3-121.9,122.1-121.9c2.7,0,5.5,0,7.5,0c6.1,15,17.7,27.2,30.7,35.4 c-49.8,19.7-78.5,72.8-94.8,125.9C147.1,341.8,138.3,369,138.3,369z M203.8,34.7c23.9,0,44.3,12.9,55.9,31.3 c-32.1,12.2-55.9,42.9-55.9,79c0,6.1,0.7,12.2,2.1,18.4h-2.1c-35.5,0-64.8-28.6-64.8-64.7S168.3,34.7,203.8,34.7z M371.6,34.7 c35.5,0,64.8,28.6,64.8,64.7s-29.3,64-64.8,64h-2.7c2.1-6.1,2.7-12.2,2.7-18.4c0-36.8-23.9-66.7-55.9-79 C327.2,47.7,347,34.7,371.6,34.7z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-playarea\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 537.9\">\n                  <path fill=\"#444444\" d=\"M384.3,137c38,0,68.8-30.7,68.8-68.5S422.3,0,384.3,0s-68.8,30.7-68.8,68.5S346.4,137,384.3,137z\" />\n                  <path fill=\"#444444\" d=\"M283.3,96c20,26.3,35.9,53.3,67.6,64.4c31.2,11.1,60.5,11.1,83.5-5.3c22.9-16.4,34.7-46.8,54.1-87.2 c18.8-40.4,34.1-48,57-48c23.5,0,31.2,28.1,30.6,39.8s-10.6,31-40,52.7c-49.4,36.3-57.6,108.3-59.4,127.7 c-1.8,19.3-2.9,50.4,17.6,169.2c20.6,118.9-20,125.9-25.3,127.1c-5.3,0.6-21.2,8.2-31.1-16.4c-10-24.6-11.8-91.3-14.1-120 c-2.9-28.7-6.5-70.9-35.9-79c-30-8.2-40.6,39.8-51.7,76.1c-10.6,36.9-40,71.4-72.3,59.1s-29.4-50.4-10-78.5 c19.4-27.5,61.7-57.4,67.6-124.1c5.9-66.8-11.8-69.1-68.2-90.8c-55.8-22.3-60.5-33.4-67.6-48.6s7.6-46.8,31.1-52.7 C239.2,55.1,259.1,63.9,283.3,96L283.3,96z\" />\n                  <path fill=\"#444444\" d=\"M134.7,251.7c26.9,0,48.8-21.8,48.8-48.6s-21.8-48.6-48.8-48.6s-48.8,21.8-48.8,48.6S107.7,251.7,134.7,251.7z\" />\n                  <path fill=\"#444444\" d=\"M204,227.8c-15.3,17.6-28.2,35.7-51.1,41.6c-22.9,6.4-43.5,4.7-58.8-8.2c-15.3-12.9-21.7-35.1-32.9-64.4S40,161,23.5,159.8 C7.1,158.7,0,178,0,186.2c-0.6,8.2,5.9,22.3,25.3,39.2C58.2,253.5,60,305.1,60,318.5c0.6,13.5-0.6,35.7-21.7,118.3 s7.1,89.6,10.6,90.8s14.7,7,22.9-10s12.9-63.8,16.5-83.7c3.5-19.9,8.2-49.8,29.4-53.9s26.5,30.4,32.3,56.8 c5.9,26.3,24.7,52.7,47.6,45.7c22.9-7,23.5-34,11.2-54.4c-12.3-20.5-40-43.9-40.6-90.8c-0.6-47.4,12.3-48,52.9-60.3 c40.6-12.3,44.7-20.5,50.5-30.4c5.9-10-2.9-33.4-18.8-38.6C237.5,201.4,222.8,206.7,204,227.8L204,227.8z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-restroom\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 533.9\">\n                  <path fill=\"#444444\" d=\"M282.3,533.9h9.2V0h-9.2V533.9z\" />\n                  <path fill=\"#444444\" d=\"M118.2,97.1c25.4-4.6,41.6-30.1,34.7-55.5C146,16.2,122.9,2.3,97.4,6.9S58.1,39.3,62.8,62.4S95.1,104,118.2,97.1z\" />\n                  <path fill=\"#444444\" d=\"M159.8,145.6h4.6c0,0,2.3,0,2.3,2.3L183,270.4c2.3,9.2,9.2,16.2,18.5,16.2c11.6,0,18.5-9.2,18.5-20.8l-18.5-129.4 c-2.3-13.9-13.9-23.1-27.7-23.1H44.3c-13.9,0-25.4,9.2-27.7,23.1L0.4,265.8c-2.3,11.6,6.9,20.8,18.5,20.8c9.2,0,16.2-6.9,18.5-16.2 l16.2-122.5c0,0,0-2.3,2.3-2.3h4.6c0,0,2.3,0,2.3,2.3L30.4,390.6c0,0,0,2.3,2.3,2.3h37c0,0,2.3,0,2.3,2.3v117.9 c0,9.2,6.9,16.2,16.2,16.2s16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h11.6c0,0,2.3,0,2.3,2.3v117.9c0,9.2,6.9,16.2,16.2,16.2 c9.2,0,16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h30.1c0,0,2.3,0,2.3-2.3l-27.7-242.7l0,0l0,0L159.8,145.6z\" />\n                  <path fill=\"#444444\" d=\"M497.3,76.3c13.9-23.1,4.6-50.9-16.2-62.4s-50.9-6.9-64.7,16.2c-13.9,23.1-4.6,50.9,16.2,62.4 C455.7,106.3,483.5,99.4,497.3,76.3z\" />\n                  <path fill=\"#444444\" d=\"M545.9,113.3h-178c-13.9,0-25.4,9.2-27.7,23.1v129.4c0,11.6,9.2,20.8,20.8,20.8s18.5-9.2,18.5-20.8V159.5c0,0,0-2.3,2.3-2.3 h2.3c0,0,2.3,0,2.3,2.3l25.4,161.8v187.2c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V323.6c0,0,0-2.3,2.3-2.3h6.9 c0,0,2.3,0,2.3,2.3v184.9c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V321.3l25.4-161.8c0,0,0-2.3,2.3-2.3h-2.3 c0,0,2.3,0,2.3,2.3v106.3c0,11.6,9.2,20.8,20.8,20.8s20.8-9.2,20.8-20.8V136.4C571.4,122.5,559.8,113.3,545.9,113.3L545.9,113.3 L545.9,113.3z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-family-restroom\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 522.5\">\n                  <path fill=\"#444444\" d=\"M119.8,91.5c25-5.9,40.5-30.8,34.6-55.7c-5.9-24.9-30.9-40.4-55.9-34.5S58,32,63.9,56.9S94.8,97.3,119.8,91.5z\" />\n                  <path fill=\"#444444\" d=\"M160.6,139.1h4.5c0.6,0,1.3,0.6,1.3,1.3l15.3,123.1c1.3,8.9,8.9,15.9,17.8,15.9c10.8,0,19.1-9.5,17.8-20.3l-15.9-128.9 c-1.9-13.3-13.4-24.1-27.4-24.1H43.4c-14,0-25.5,10.2-27.4,24.1L0.1,259.1c-1.3,10.8,7,20.3,17.8,20.3c8.9,0,16.5-7,17.8-15.9 l15.3-123.8c0-0.6,0.6-1.3,1.3-1.3h4.5c0.6,0,1.3,0.6,1.3,1.3L29.4,384.1c0,0.6,0.6,1.3,1.3,1.3H67c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h36.3c0.6,0,1.3-0.6,1.3-1.3L158,140.3 C159.3,139.7,159.9,139.1,160.6,139.1L160.6,139.1z\" />\n                  <path fill=\"#444444\" d=\"M498.9,69.8c12.9-22.1,5.4-50.5-16.8-63.4c-22.2-12.9-50.6-5.4-63.6,16.7c-12.9,22.1-5.4,50.5,16.8,63.4 C457.5,99.4,486,91.9,498.9,69.8z\" />\n                  <path fill=\"#444444\" d=\"M547.9,106.1H369.6c-14,0-25.5,10.2-27.4,24.1v128.9c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7v-106 c0-0.6,0.6-1.3,1.3-1.3h2.5c0.6,0,1.3,0.6,1.3,1.3l25.5,162.5v187.3c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7v-186 c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v186c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7V315.6l25.5-162.5 c0-0.6,0.6-1.3,1.3-1.3h2.6c0.6,0,1.3,0.6,1.3,1.3v106c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7V130.2 C573.4,116.2,562,106.1,547.9,106.1L547.9,106.1z\" />\n                  <path fill=\"#444444\" d=\"M259.6,480l19.7-19.7L251.9,433L229,455.8c-7.6,7.6-5.7,20.3,1.3,27.3l32.5,33.6c12.7,12.7,29.3-5.1,17.2-17.1L259.6,480 L259.6,480z M288.9,347.9c19.1,0,34.4-15.2,34.4-34.3s-15.3-34.3-34.4-34.3s-34.4,15.2-34.4,34.3S269.7,347.9,288.9,347.9z  M369.7,405.7l-46.5-46.3c-3.8-3.8-8.3-6.3-14.7-6.3h-41.4c-6.4,0-10.8,2.5-14,6.3l-45.9,45.7c-12.7,12.7,4.5,28.6,17.2,15.9 l28-27.9v26h72.6v-26l28.6,28.6C364.6,433.6,381.8,417.1,369.7,405.7L369.7,405.7z M324.5,433l-27.4,27.3l19.7,19.7l-20.4,20.3 c-12.1,12.1,4.5,29.2,17.2,17.1l32.5-33.6c7-7,8.9-20.3,1.3-27.3C347.4,455.9,324.5,433,324.5,433z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-elevator\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 576\">\n                  <path fill=\"#444444\" d=\"M576,145.2v268.6c-0.1,1.6-0.3,3.1-0.3,4.7c-0.3,33.3-0.6,66.6-0.8,99.9c-0.1,21.1-9.7,37.2-26.7,49 c-7.7,5.4-15.9,9.3-25.9,8c-3.8-0.5-7.7-0.1-11.5-0.1c-115.3,0.1-230.6,0.2-345.9,0.3c-1.1,0-2.2,0.2-3.3,0.3h-16.9 c-1.2-0.1-2.4-0.3-3.6-0.3c-30.2-0.3-60.4-0.6-90.7-0.8c-11.1-0.1-20.7-4.1-29.1-11.2c-8.7-7.4-15.5-16.7-19.9-27.3l-0.2-0.5 c-0.7-1.6-1.1-3.4-1.2-5.4v0C0,492.8,0,455.1,0,417.4c0-124.1,0-248.1,0-372.2c0-0.2,0-0.3,0-0.5c0-1.5,0.3-2.9,0.7-4.2l0,0.1 C8.3,22.5,20.5,8.9,38.7,1c1.2-0.5,2.6-0.9,4-0.9h0c162.8,0,325.6,0,488.4,0c1.5,0,2.8,0.4,4.1,0.9l-0.1,0c3.4,1.4,6.1,2.7,8.8,4.2 l-0.4-0.2c19.7,11.2,30.9,27.8,31.3,50.8c0.4,28.2,0.6,56.3,0.8,84.5C575.7,141.8,575.8,143.5,576,145.2L576,145.2z M536.4,288.6 h0.3c0-56.7,0-113.4,0-170c0-18.2-0.4-36.4-0.7-54.6c-0.1-8-8.4-19.8-15.9-22.7c-1-0.4-2.1-0.6-3.2-0.7h0c-3.2-0.3-6.4-0.6-9.5-0.6 c-25.5-0.4-51-0.9-76.6-1c-96.4-0.2-192.7-0.4-289.1-0.4c-22.9,0-45.8,0.1-68.7,0.3c-3.4,0-6.8,0.1-10,0.9 c-9.9,2.3-17.1,8.3-21.7,17.3c-1,1.9-2,3.9-2.1,5.9c-0.1,149.8-0.1,299.6-0.1,449.4c0,0.9-0.1,2,0.3,2.7c2.7,4.2,5.1,8.6,8.3,12.3 c5.6,6.3,13.2,8.4,21.6,8.4c23.7,0.1,47.5,0.6,71.2,0.6c123.5,0,247,0,370.5,0c0.1,0,0.2,0,0.3,0c1.1,0,2.1-0.2,3-0.6l-0.1,0 c8.3-3.5,15.4-8.4,20.2-16.3c1.2-1.8,2-4.1,2-6.5l0,0C536.4,438.2,536.4,363.4,536.4,288.6L536.4,288.6z\" />\n                  <path fill=\"#444444\" d=\"M307,277.5l75.9,68.4l0.9-0.2V150.9h49.7v194.8l1,0.3l78.2-67.4c0.1,1,0.2,1.7,0.3,2.4c0.3,19.9,0.6,39.8,0.8,59.7 c0,0,0,0,0,0.1c0,1.4-0.5,2.6-1.4,3.6l0,0c-34.1,32.7-68.2,65.3-102.3,97.9c-0.3,0.3-0.6,0.5-1,0.9c-0.6-0.5-1.3-1-1.9-1.5 c-32.7-30.7-65.5-61.4-98.2-92c-1.4-1.2-2.3-3-2.3-5c0-0.1,0-0.3,0-0.4v0c0.2-20.9,0.3-41.9,0.4-62.8C307,280.5,307,279.4,307,277.5 L307,277.5z\" />\n                  <path fill=\"#444444\" d=\"M142.2,234.5L67,301.8c-0.1-1.2-0.3-1.9-0.3-2.7c-0.3-20.7-0.7-41.5-1-62.2c0-1.3,0.5-2.5,1.3-3.4l0,0 c33.3-31.4,66.7-62.8,100.1-94.1c0.3-0.3,0.6-0.5,1-0.8c5.9,5.7,11.8,11.3,17.7,16.9c28.1,26.9,56.2,53.9,84.3,80.9 c0.9,0.8,1.4,2,1.5,3.3v0c-0.5,20.2-1.1,40.3-1.6,60.5c0,0.3-0.1,0.7-0.2,1.7l-77.4-67.1l-0.9,0.1v193.9h-48.3v-194L142.2,234.5z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-security\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 597.6\">\n                  <path fill=\"#444444\" d=\"M554,80.7L298.5,1.5c-6.6-2-13.2-2-19.9,0L23.2,80.7C9.3,84.7,0,97.9,0,112.4c0,352.5,178.7,436.4,274,481.9 c4.6,2,9.3,3.3,13.9,3.3c4.6,0,9.9-1.3,13.9-3.3c96-45.5,274-129.4,274-481.9C577.2,97.9,567.9,85.3,554,80.7z M288.6,527.6 C197.2,484.1,73.5,411.4,66.2,136.2l222.4-68.6L511,136.8C503.7,412.1,379.3,484.1,288.6,527.6z\" />\n                  <path fill=\"#444444\" d=\"M278.7,152l-26.5,87.1l-90.7-2.6c-4.6,0-8.6,2.6-9.9,7.3c-1.3,4.6,0,9.2,4,11.9l74.8,51.5L200.6,393c-1.3,4.6,0,9.2,4,11.9 c4,2.6,8.6,2.6,12.6,0l72.1-54.8l72.1,54.8c4,2.6,8.6,2.6,12.6,0c4-2.6,5.3-7.3,4-11.9l-29.8-85.8l74.8-51.5c4-2.6,5.3-7.3,4-11.9 c-1.3-4.6-5.3-7.3-9.9-7.3l-90.7,2l-26.5-87.1c-1.3-4.6-5.3-7.3-9.9-7.3C283.9,144.1,280,147.4,278.7,152L278.7,152z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n        </MeshObjectContextProvider>\n      </MapBoxContextProvider>\n    </Provider>\n\n\n  );\n})\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\nimport { IAmenitiesInteractiveList } from \"./types\";\n\nexport type IRetailer = {\n  id: string;\n  index?: string;\n  retail_name: string;\n  slug: string;\n  location: string;\n  retailer_phone: string;\n  retailer_description: string;\n  logo: string;\n  map_obj_name: string;\n};\n\nexport type MapObj = {\n  id: string | number;\n  center_id: string;\n  retailer_id: string;\n  kiosk_id: string | null;\n  map_obj_name: string;\n  obj_type: string;\n  layer_type: string;\n  value: string;\n  custom_text: string;\n  custom_image: string;\n  hover_text: string;\n  bg_color: string;\n  transparent: string | number;\n  text_color: string;\n  size: string;\n  lock_size: string;\n  rotate: string;\n  offsetX: string;\n  offsetY: string;\n  goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & { kiosk_id: number | null };\n\nexport type Floor = {\n  id: string;\n  svg_map?: string;\n  objsGroup?: Group;\n  interactiveObjs?: any[];\n  escalatorsObjs?: any[];\n  escalatorsNodes?: Record<any, any>;\n  escalatorMeshes?: any[];\n  route_points?: IRoutePoint[];\n  route_tube?: any;\n  route_texture?: Texture | null | undefined;\n  routeMeshes?: any[];\n  route_active?: boolean;\n  center_id?: string;\n  title: string;\n  svg?: string;\n  status?: string;\n  created_at?: string;\n};\n\nexport type CameraControlsState = {\n  camera: { x: number, y: number, z: number };\n  controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n  STYLE: '2D' | '3D',\n  MAP_BACKGROUND_COLOR: string;\n  ACCENT_COLOR: string;\n  STORE_DEFAULT_COLOR: string;\n  BIG_STORE_DEFAULT_COLOR: string;\n  WALL_THICKNESS: string;\n  WALL_COLOR: string;\n  BOUNDARY_THICKNESS: string;\n  BOUNDARY_COLOR: string;\n  BASE_COLOR: string;\n  STORE_TEXT_COLOR: string;\n  STORE_HEIGHT: string;\n  OVERLAY_COLOR: string;\n  OVERLAY_OPACITY: string;\n  AMENITIES_NAV_BG_COLOR: string;\n  AMENITIES_NAV_ICON_COLOR: string;\n  KIOSK_SIZE: string;\n  MIN_ZOOM: string;\n  MAX_ZOOM: string;\n  CAMERA_MIN_DISTANCE: string;\n  CAMERA_MAX_DISTANCE: string;\n  ZOOM_STEP: string;\n  SELECTED_ZOOM_LIMIT: string;\n  SELECTED_ZOOM_LIMIT_DISTANCE: string;\n};\n\nexport type Kiosk = {\n  id: string;\n  title: string;\n  map_obj_name: string;\n};\n\nexport type Amenity = {\n  name: string;\n  image: string;\n};\n\nexport type MapIt2Response = {\n  retailers: IRetailer[];\n  map_objs: MapObj[];\n  floors: Floor[];\n  camera_controls_states: {\n    display_app: CameraControlsState;\n    desktop: CameraControlsState;\n    tablet: CameraControlsState;\n    mobile: CameraControlsState;\n  };\n  settings: Settings;\n  kiosks: Kiosk[];\n  amenities: IAmenitiesInteractiveList[];\n};\n\nexport type IRoutePoint = {\n  name: string;\n  node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n  if (typeof obj !== 'object' || obj === null) return false;\n\n  const response = obj as Record<string, unknown>;\n\n  return (\n    Array.isArray(response.retailers) &&\n    Array.isArray(response.map_objs) &&\n    Array.isArray(response.floors) &&\n    typeof response.camera_controls_states === 'object' &&\n    response.camera_controls_states !== null &&\n    typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n    typeof response.settings === 'object' &&\n    Array.isArray(response.kiosks) &&\n    typeof response.amenities === 'object'\n  );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","_path$userData","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","_floors$floor_index$r","push","Vector3","node2_name","exists2","_floors$floor_index$r2","addNode","_extends","addLink","weight","distanceTo","hex_to_color","hex_code","Color","getFormatedColor","replace","amenities","type","getAllAmenities","map","item","svg","svg_block","document","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","XMLSerializer","serializeToString","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","allMapObjects","allIndexedRetailers","role","_allIndexedMapObjects","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","_mesh$mesh_type","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","_floor$objsGroup","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","_floors$allNodesFloor","escalator_mesh","goToFloor","direction","_floors$allNodesFloor2","escalator_clone","floor_route","routePath","create_route_path","_floors$floor_index","_floors$floor_index2","routeMeshes","create_route_paths","_floors$floor_index$o","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","get_route_texture","scale","setDrawRange","ctx","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minZoom","maxZoom","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","SELECTED_ZOOM_LIMIT","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","set","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","log","svg_color","text_color","svgData","window","btoa","unescape","encodeURIComponent","_map_obj$custom_image","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","size","get_store_name_logo_geo","textLogoNamePrefix","myFont","handleAsync","new_object_id","result","boundingBox","computeBoundingBox","mesh_center_point","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","logoMesh","storeLogo","getImageLogo","MapBoxContext","createContext","meshByObjectId","Map","setMeshByObjectId","setAllMapObjects","setAllIndexedMapObjects","setAllIndexedRetailers","setAllNodesFloor","createGraph","setPathFinderGraph","setNgraphPath","floorsData","MapBoxContextProvider","children","useState","_jsx","Provider","useMapBoxContext","context","useContext","Error","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","meshParams","setMeshParams","textParams","setTextParams","storeLogos","setStoreLogos","escalatorNodes","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","mergedConfig","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","title","far","fov","fovCorrection","settings","parseFloat","MIN_ZOOM","MAX_ZOOM","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","canvasWidth","screen","camera_controls_states","mobile","tablet","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","SELECTED_ZOOM_LIMIT_DISTANCE","values","clearScene","removeFromParent","GeometriesAndMaterials","graph","results","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","point","origin_point","target_direction","storeIntersects","intersectObjects","object","escalatorIntersects","assign_route_nodes_to_stores","has","get","_floors$i$escalatorsN","_floors$escalatorsNod","_floors$i$escalatorsN2","_floors$escalatorsNod2","nodeIdFrom","nodeIdTo","linkFloorEscalators","loadFloors","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","_mesh$geometry$index","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","useMeshObjectContext","MapCenterMarker","lockSize","blink","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","_document$getElementB","svgOrigin","svgBlob","Blob","svgUrl","URL","createObjectURL","svgTexture","Texture","needsUpdate","_jsxs","Html","className","MapObject","setUpdate","React","currentFloorIndex","triggerUpdate","kioskConfig","htmlContent","pointerEvents","distanceFactor","uuid","_Fragment","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","Fragment","_params$geometry$boun","_params$goToFloor2","boundingSphere","display","_params$goToFloor","stopPropagation","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","isSelectedRetailerSlug","setIsCameraInit","mapObjs","handleObjectClick","triggerClick","cameraLimits","SetCameraLimits","min","initialDistance","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","isUseDefaultsLimits","resetCamera","fullReset","selectedFloorMeshParams","meshes","focus","aspect","isZeroCCS","cameraV3","controls","cameraDistance","setLength","fromPosition","fromTarget","animationStartTime","duration","cl","focusDistance","Number","route","kiosk_obj_name","amenity_type","_to_obj_name","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","clearEscalators","flat","targetMesh","_floors$currentFloorI","currentActiveObject","zoomStep","getInitialDistance","onCameraMove","vector","_cameraFocus$current","_cameraFocus$current2","animationTime","animationProgress","lerpVectors","createRouteToStore","retailerSlug","slug","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","retailersApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getRetailers","query","limit","page","url","headers","useLazyGetRetailersQuery","useAllRetailers","setRetailers","lastIndexOf","slice","fetchAllRetailers","async","totalPages","requests","currentPage","Promise","all","ret","getAll","resolve","reject","then","status","round","_data$items","UIComponent","selectedFloorIndex","handleFloorChange","amenitiesList","zoomIn","zoomOut","reset","handleAmenityClick","onExtractedAmenities","extractValues","filter","preventDefault","Function","styles","dangerouslySetInnerHTML","__html","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","MapboxForm","_params$apiURI","_retailers$filter","_data$kiosks3","setData","selectedId","onResetData","triggerSceneUpdate","textFont","textFontInterface","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","isLoadingRetailers","loadOptions","loadRetailersOptions","useRetailersOptions","apiURI","setIsLoading","fetchRetailers","toString","search","isError","catch","useGetRetailers","processData","isLoadingMore","label","location","inputValue","callback","toLowerCase","selectedKiosksId","setSelectedKiosksId","recheckSelectedKiosksId","ids","prev","cur","loadKiosksOptions","_data$kiosks","isDisabled","loadAmenitiesOptions","getDefaultKioksOptions","_data$kiosks2","getDefaultAmenitiesOptions","makeImage","retailIndex","findIndex","HTMLImageElement","makeTextGeometry","updateData","handleChangeTab","k","clearKioskConfig","isTRetailerTabsKey","_context$MeshObject","changeValue","_context$MeshObject4","_obj$object_id","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadingMessage","noOptionsMessage","placeholder","defaultOptions","Tabs","Form","Label","Control","as","rows","handleChangeKiosk","_context$MeshObject2","newValue","_context$MeshObject3","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","kioskId","handleRotateByFixedAngle","_obj$userData","_item$storeLogo$userD","defaultData","RetailerInfoList","isAmenity","_filterRetailers","retailerId","setRetailerId","alt","retailer_phone","retailer_description","FormGroup","Select","disabled","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","fetch","json","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","_item$kiosk_id","SceneComponent","_config$DEFAULT_SELEC","_data$floors$length","_data$floors","_data$retailers","_data$map_objs","_params$webApiURI","refreshData","removeMissingMapObjects","mapitData","getData","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","mapObjsPromise","ok","statusText","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","_data$","responseData","offset_x","offset_y","demoData","objectNames","mapObjects","useMapit2Data","setTriggerClick","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","handleClickOnRetailer","IsCameraInit","disableClicks","setDisableClicks","selectedRetailerSlug","setSelectedRetailerSlug","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","subPrev","subCur","labelRef","currentHoveredObject","setCurrentHoveredObject","setSceneKey","updateKey","showRetailerInfo","setShowRetailerInfo","setCxtConfig","_floorsMapRef$current","_floorsMapRef$current2","createRouteToAmenity","_statsParentRef$curre","offsetWidth","resizeWidth","_statsParentRef$curre2","addEventListener","setCameraControlPos","display_app","desktop","onSettingsLoading","_meshFloors$config$CA","_meshFloors$config$CA2","_ref","_meshFloors$config$ZO","_ref2","_meshFloors$config$SE","_meshFloors$config$SE2","getHexString","camPos","ctrlTarget","activeFromObjectId","handleChangeMapitData","newData","itemIndex","getMapitData","floorsCount","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","_floorsMapRef$current5","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","exportData","meshParam","handleMeshObjectContext","_meshFloors$textParam","_meshFloors$storeLogo","logoParams","_meshFloors$meshParam","targetId","softClick","_object$mesh_type","t","startMousePos","Infinity","messageStyle","top","left","transform","meshFloorsChecked","Alert","getStyle","resetHandle","ccs","_floorsMapRef$current3","_floorsMapRef$current4","Canvas","Stats","parent","intensity","buttons","clientX","clientY","newDistance","sqrt","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","configureStore","reducer","middleware","getDefalultMiddleware","concat","setupListeners","dispatch","MapBox","refObj","setMapData","_refObj$current","isMapIt2Response","xmlns","viewBox","fill","d","version"],"mappings":"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"}