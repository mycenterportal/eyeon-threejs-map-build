{"version":3,"file":"index.modern.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/components/Amenities/ATM.tsx","../src/components/Amenities/Management.tsx","../src/components/Amenities/PlayArea.tsx","../src/components/Amenities/Restroom.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Amenities/Elevator.tsx","../src/components/Amenities/Security.tsx","../src/components/Icons/DogPoopStation.tsx","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/contexts/MapBoxContextProvider.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/components/MapboxForm/MapboxForm.tsx","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type {Vector2} from \"three\";\nimport {IFloorData} from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n    return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string , boolean] {\n    let exists = false;\n    let node_name:string = '-name-not-found-';\n    const currentFloor = floors[floor_index];\n    if (currentFloor.route_points !== undefined) {\n        for (let i = 0; i < currentFloor.route_points.length; i++) {\n            if (vertex.x == currentFloor.route_points[i].node.x && vertex.y == currentFloor.route_points[i].node.y) {\n                exists = true;\n                node_name = currentFloor.route_points[i].name;\n                break;\n            }\n        }\n        if (!exists) {\n            node_name = next_node_name(node_count);\n            // draw_points([{ x: vertex.x, y: vertex.y }]);\n        }\n    }\n    return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport {Graph} from \"ngraph.graph\";\nimport {Color, LineCurve, Vector2, Vector3} from \"three\";\nimport {get_node_name} from \"./nodesUtils\";\nimport {MeshType} from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n    const consolePrefix = 'MeshParams';\n    let mesh_type:MeshType = null;\n    var layer_color: Color | string = path.color.clone();\n    var extrude = 0;\n    var z_index = 0;\n    var mesh_visible = true;\n    var mesh_draw = true;\n    var mesh_transparent = false;\n    var line_thickness = config.WALL_THICKNESS;\n    var interactiveMesh = true;\n    var layer_name = path.userData?.node.id;\n    if (layer_name != undefined) {\n        if (layer_name.startsWith('boundary')) {\n            mesh_type = 'boundary';\n            layer_color = config.BOUNDARY_COLOR;\n            line_thickness = config.BOUNDARY_THICKNESS;\n            if (config.STYLE == '3D') {\n                extrude = 9;\n            }\n        } else if (layer_name.startsWith('wall')) {\n            mesh_type = 'wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 8.5;\n            }\n        } else if (layer_name.startsWith('outer-wall')) {\n            mesh_type = 'outer-wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                mesh_draw = false;\n            }\n        } else if (layer_name.startsWith('building-base')) {\n            mesh_type = 'building-base';\n            layer_color = config.BUILDING_BASE_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 12;\n                z_index = -12;\n            }\n        } else if (layer_name.startsWith('base')) {\n            mesh_type = 'base';\n            layer_color = config.BASE_COLOR;\n        } else if (layer_name.startsWith('store')) {\n            mesh_type = 'store';\n            layer_color = config.STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = parseInt(config.STORE_HEIGHT);\n            }\n            if (layer_name.startsWith('store-underlay')) {\n                interactiveMesh = false;\n            }\n        } else if (layer_name.startsWith('big-store')) {\n            mesh_type = 'big-store';\n            layer_color = config.BIG_STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 16;\n            }\n        } else if (layer_name.startsWith('route-path')) {\n            mesh_type = 'route-path';\n            mesh_draw = false;\n            path.subPaths.forEach(subPath => {\n                if (subPath.curves.length == 0) {\n                    console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n                }\n\n                subPath.curves.forEach(curve => {\n                    //@ts-ignore\n                    const v1:Vector2 = curve.v1;\n                    //@ts-ignore\n                    const v2:Vector2 = curve.v2;\n\n                    const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n                    if (!exists1) {\n                        floors[floor_index].route_points?.push({\n                            name: node1_name,\n                            node: new Vector3(v1.x, v1.y, 1)\n                        });\n                        allNodesFloor[node1_name] = floor_index;\n                    }\n                    const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n                    if (!exists2) {\n                        floors[floor_index].route_points?.push({\n                            name: node2_name,\n                            node: new Vector3(v2.x, v2.y, 1)\n                        });\n                        allNodesFloor[node2_name] = floor_index;\n                    }\n                    pathFinderGraph.addNode(node1_name, { ...v1 });\n                    pathFinderGraph.addNode(node2_name, { ...v2 });\n\n                    // pathFinderGraph.addLink(node1_name, node2_name);\n                    pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n                    pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n                });\n            });\n        } else if (layer_name.startsWith('escalator-')) {\n            mesh_type = 'escalator';\n            mesh_visible = false;\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('kiosk-')) {\n            mesh_type = 'kiosk';\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('amenity-')) {\n            mesh_type = 'amenity';\n            mesh_transparent = true;\n            z_index = 1;\n        } else if (layer_name.startsWith('overlay')) {\n            mesh_type = 'overlay';\n        } else if (layer_name.startsWith('special-shape')) {\n            mesh_type = 'special-shape';\n        } else {\n            extrude = 1;\n        }\n    } else {\n        console.warn(consolePrefix + 'Layer name is undefined, path', path)\n    }\n\n\n    /*console.debug({\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    })*/\n    return {\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    }\n}","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import ATMIcon from \"src/components/Amenities/ATM\";\nimport ElevatorIcon from \"src/components/Amenities/Elevator\";\nimport ManagementIcon from \"src/components/Amenities/Management\";\nimport PlayAreaIcon from \"src/components/Amenities/PlayArea\";\nimport RestroomIcon from \"src/components/Amenities/Restroom\";\nimport SecurityIcon from \"src/components/Amenities/Security\";\nimport DogPoopStation from \"src/components/Icons/DogPoopStation\";\nimport FamilyRestroom from \"src/components/Icons/FamilyRestroom\";\nimport { IAmenitiesInteractiveList } from \"src/types\";\n\nexport const amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        icon: ATMIcon,\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        icon: ManagementIcon,\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        icon: PlayAreaIcon,\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        icon: RestroomIcon,\n    },\n    {\n        name: 'Family Restroom',\n        type: 'family-restroom',\n        icon: FamilyRestroom,\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        icon: ElevatorIcon,\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        icon: SecurityIcon,\n    },\n    {\n        name: 'Dog Poop Station',\n        type: 'dog-poop-station',\n        icon: DogPoopStation,\n    },\n] \n\n","const ATMIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ATMIcon;","\nconst ManagementIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default ManagementIcon;","\nconst PlayAreaIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default PlayAreaIcon;","\nconst RestroomIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default RestroomIcon;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst ElevatorIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ElevatorIcon;","\nconst SecurityIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default SecurityIcon;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","import {BackSide, Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry, Vector3} from \"three\";\nimport {getWallShape} from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\n// import {allMapObjects} from \"../../globals\";\nimport {IConfig, IExtMesh, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {hex_to_color} from \"../../helpers/misc\";\n\nimport {IRetailer, MapObj} from \"../../mapitApiTypes\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n    'route-path': 0,\n    'escalator': 0,\n    'underlay': 0,\n    'overlay': 1,\n    'building-base': 1,\n    'base': 2,\n    'store': 3,\n    'big-store': 4,\n    'kiosk': 5,\n    'wall': 6,\n    'outer-wall': 7,\n    'boundary': 8,\n    'amenity': 9,\n    'layer-image': 10,\n    'layer-text': 11,\n    'route-tube': 12,\n    'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n        return renderOrders[mesh_type];\n    }\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\n    return 0;\n}\n\nexport const getMaterial = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    layer_color: Color | string,\n    mesh_transparent: boolean,\n    allIndexedMapObjects: Record<string, MapObj>,\n) => {\n    const material_settings = {\n        color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n        side: DoubleSide,\n        transparent: false,\n        depthWrite: true,\n        depthTest: true,\n        opacity: 1,\n    }\n    if (config.STYLE == '2D' || mesh_type == 'base' || mesh_type == null) {\n        if (mesh_type != 'boundary') {\n            material_settings.depthWrite = false;\n            material_settings.depthTest = false;\n        }\n    }\n    if (mesh_type == 'overlay') {\n        material_settings.color = config.OVERLAY_COLOR;\n        material_settings.opacity = config.OVERLAY_OPACITY;\n    }\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE != 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent == 1) {\n        material_settings.opacity = 0;\n    }\n    var material = new MeshLambertMaterial(material_settings);\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        material.colorDefault = material.color;\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color != '') {\n            material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n            //@ts-ignore\n            material.colorDefault = material.color;\n        }\n        //@ts-ignore\n        material.active = false;\n    }\n    if (config.ROLE != 'PORTAL' && mesh_transparent) {\n        material.opacity = 0;\n        material.transparent = true;\n    }\n\n    material.transparent = material.opacity !== 1;\n\n    return material;\n}\n\nexport const getGeometry = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    extrude: number,\n    line_thickness: number,\n    path: any,\n) => {\n    const consolePrefix = 'MaterialAndGeometry';\n\n    let shapes = path.toShapes(true);\n\n    // shapes.forEach((shape, index) => {\n    let extrude_meshes;\n    if (config.STYLE == '2D') {\n        extrude_meshes = ['building-base'];\n    } else {\n        extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n    }\n\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n    var geometry;\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\n        geometry = new ExtrudeGeometry(shapes, {\n            depth: -extrude,\n            bevelEnabled: false,\n        });\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n        //@ts-ignore\n        let wall_geometries = [];\n        //@ts-ignore\n        path.subPaths.forEach(subPath => {\n            //@ts-ignore\n            subPath.curves.forEach(curve => {\n                if (curve.type == 'LineCurve') {\n                    let shape_extend = 0;\n                    if (mesh_type == 'boundary') {\n                        shape_extend = 1;\n                    } else if (mesh_type == 'wall') {\n                        // shape_extend = 1 / 3;\n                    }\n                    let shape1 = getWallShape(curve, line_thickness, shape_extend);\n                    let wall_geometry = new ExtrudeGeometry(shape1, {\n                        depth: -extrude,\n                        bevelEnabled: false,\n                    });\n                    wall_geometries.push(wall_geometry);\n                } else {\n                    console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n                }\n            });\n        });\n\n        if (wall_geometries.length == 1) {\n            //@ts-ignore\n            geometry = wall_geometries[0];\n        } else if (wall_geometries.length > 1) {\n            //@ts-ignore\n            geometry = mergeGeometries(wall_geometries);\n        } else {\n            console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n        }\n    } else {\n        geometry = new ShapeGeometry(shapes);\n        try {\n            //@ts-ignore\n            if (geometry.attributes.position.count == 0) {\n                console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n            }\n        } catch (e: any) {\n            console.error(e.message);\n        }\n    }\n\n    return geometry;\n}\n\nexport const getMaterialAndGeometry = (allMapObjects: string[], config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n    \n    const material = getMaterial(\n        config,\n        mesh_type,\n        layer_name,\n        layer_color,\n        mesh_transparent,\n        allIndexedMapObjects\n    );\n\n    const geometry = getGeometry(\n        config,\n        mesh_type,\n        layer_name,\n        extrude,\n        line_thickness,\n        path\n    );\n\n    const mesh = new Mesh(geometry, material) as IExtMesh;\n    mesh.object_id = layer_name;\n    mesh.mesh_type = mesh_type;\n    mesh.floor_index = floor_index;\n    mesh.visible = mesh_visible;\n    mesh.position.z = z_index;\n    let storeName = '';\n    if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n        if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type == 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n            storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].custom_text;\n            if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n                storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n            }\n        } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].value;\n            if (storeName.length > 1) {\n                const amenity = amenitiesList.find(item => item.type === storeName)\n                if (amenity) {\n                    storeName = amenity.name;\n                }\n            }\n        }\n    }\n    mesh.userData.storeName = storeName;\n    if (config.STYLE == '2D') {\n        mesh.renderOrder = getRenderOrder(mesh_type);\n        if (layer_name && layer_name.includes('underlay')) {\n            mesh.renderOrder = getRenderOrder('underlay');\n        }\n    }\n\n    floors[floor_index].objsGroup.add(mesh);\n\n    if (mesh_type == 'escalator') {\n        floors[floor_index].escalatorsNodes[layer_name] = null;\n        floors[floor_index].escalatorsObjs.push(mesh);\n        mesh.escalator_id = floor_index + '-' + layer_name;\n    }\n\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        mesh.route_node_id = null;\n\n        // add floor_index to the kiosks\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'kiosk') {\n            var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n            /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n                ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n            }*/\n        }\n\n        if (config.ROLE === 'PORTAL') {\n            allMapObjects.push(layer_name);\n        }\n        if (\n            (config.ROLE !== 'PORTAL' && mesh_type == 'kiosk') ||\n            (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type == 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n            (config.ROLE !== 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'amenity' && allIndexedMapObjects[layer_name].value != '') ||\n            (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n            (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type?? ''))\n        ) {\n            // if (interactiveMesh) {\n            floors[floor_index].interactiveObjs.push(mesh);\n            // }\n        } else if (\n            (config.ROLE === 'PORTAL')\n        ) {\n            floors[floor_index].interactiveObjs.push(mesh);\n        }\n    }\n\n    // if (['store', 'big-store'].includes(mesh_type as string)) {\n    //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n    // }\n\n    return {\n        mesh,\n        geometry,\n        material,\n        object_id: layer_name,\n        mesh_type,\n        floor_index,\n        visible: mesh_visible,\n        renderOrder: mesh.renderOrder,\n    }\n    // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n    BufferGeometry,\n    CanvasTexture,\n    Color,\n    CurvePath,\n    DoubleSide,\n    LineCurve3,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    Raycaster,\n    Scene,\n    TubeGeometry,\n    Vector3,\n} from \"three\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\n// import {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport {PathFinder} from \"ngraph.path\";\nimport {IRetailer, MapObj} from \"../mapitApiTypes\";\nimport {IExtMesh, IFloorData} from \"../types\";\nimport {Graph, Node} from \"ngraph.graph\";\n// import { allNodesFloor } from \"src/globals\";\n\nconst consolePrefix = 'ROUTE: ';\nlet route_exists = null;\nlet activeMapObjectName: string | null = null;\n\nfunction makeObjectActive(object_id: string | null = null, accentColor: string | Color, scene: Scene) {\n    clearActiveEffect(scene);\n    if (object_id != null) activeMapObjectName = object_id;\n    let obj = scene.getObjectByProperty('object_id', activeMapObjectName as string) as IExtMesh;\n    // obj.material.color = config.ACCENT_COLOR;\n    //@ts-ignore\n    obj.material.color = new Color(`#${accentColor}`);\n    //@ts-ignore\n    obj.material.active = true;\n    return obj;\n}\n\nfunction clearActiveEffect(scene: Scene) {\n    if (activeMapObjectName) {\n        let obj = scene.getObjectByProperty('object_id', activeMapObjectName) as IExtMesh;\n        //@ts-ignore\n        obj.material.color = { ...obj.material.colorDefault };\n        //@ts-ignore\n        obj.material.active = false;\n        activeMapObjectName = null;\n    }\n}\n\nexport function delete_route_path(floors: IFloorData[]) {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n        const floor = floors[floor_index];\n        floor.route_active = false;\n\n        if (floor.route_tube != null) {\n            floor.route_tube.geometry.dispose();\n            //@ts-ignore\n            floor.route_tube.material.dispose();\n            floor.objsGroup?.remove(floor.route_tube);\n        }\n\n        floor.route_tube = undefined;\n        floor.route_texture = null;\n        floor.escalatorMeshes = [];\n    }\n}\n\nexport function create_route(allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n    if (from_mesh_object_id === to_mesh_object_id) {\n        return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[] , floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    // console.log({\n    //     from_mesh_object_id,\n    //     to_mesh_object_id,\n    //     from_obj,\n    //     to_obj,\n    //     from_node_name,\n    //     to_node_name,\n    // })\n\n    // from_node_name = 'node-147';\n    // to_node_name = 'node-221';\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n        return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n        const routeNode = routeNodes[index];\n        if (floor_routes[allNodesFloor[routeNode.id]]) {\n            floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n        } else {\n            floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n        }\n\n        if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n            // don't consider these middle escalators nodes\n        } else {\n            routeNodesEsclators.push(routeNode);\n        }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n        const routeNode = routeNodesEsclators[index];\n        if (\n            allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n            && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n        ) {\n            const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n            const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n            let goToFloor = null;\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index + 1].id],\n                    direction: 'Next',\n                };\n            }\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index - 1].id],\n                    direction: 'Previous',\n                };\n            }\n\n            if (goToFloor && escalator_mesh) {\n                escalator_mesh.goToFloor = goToFloor;\n                //@ts-ignore\n                floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n            }\n        }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n        const floor_route = floor_routes[floor_index];\n        if (floor_route && floor_route.length > 1) {\n            const routePath = create_route_path(floor_route, floor_index, floors, style);\n            routePaths[floor_index] = routePath;\n\n            floors[floor_index].route_active = true;\n            floors[floor_index].routeMeshes = [ routePath ];\n            if (floor_index === from_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(from_obj);\n            }\n            if (floor_index === to_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(to_obj);\n\n            }\n        }\n    }\n\n    // setTimeout(function () {\n    //     //TODO openFloorMap functionality\n    //     // openFloorMap(from_route_floor_index);\n    // });\n\n    return routePaths;\n}\n\nfunction create_route_path(\n    routeNodes: Node<any>[],\n    floor_index: number,\n    floors: IFloorData[],\n    style = '2D',// config.STYLE\n) {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n        let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n        let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n        route_path.add(new LineCurve3(from_node, to_node));\n        distance += from_node.distanceTo(to_node);\n    };\n    var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    //@ts-ignore\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n        map: get_route_texture(distance, floor_index, floors),\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style === '2D') {\n        route_tube.position.z = -10;\n        route_tube.scale.z = 0.1;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n    return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n        let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n        distance += link?.data.weight || 0;\n    };\n    return distance;\n}\n\nfunction draw_route_tube(route_tube: IExtMesh, total_faces: number) {\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, total_faces);\n    /*createjs.Ticker.framerate = 60;\n    createjs.Tween.get({ x: 0 },\n        {\n            onChange: function (event) {\n                route_tube.geometry.setDrawRange(0, event.target.target.x);\n            },\n            onComplete: function () {\n                animate_route_path(floors);\n            }\n        })\n        .to({ x: total_faces }, 1000, createjs.Ease.cubicInOut);\n    */\n}\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n        ctx.canvas.width = distance;\n        ctx.canvas.height = 80;\n\n        ctx.fillStyle = \"#4ea5ff\";\n        ctx.fillRect(0, 0, distance, 80);\n\n        let grd_width = 0.1 * distance;\n        const min_grd_width = 60;\n        const max_grd_width = 120;\n        if (grd_width < min_grd_width) grd_width = min_grd_width;\n        if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n        let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n        grd.addColorStop(0, \"#4ea5ff\");\n        grd.addColorStop(0.4, \"white\");\n        grd.addColorStop(0.6, \"white\");\n        grd.addColorStop(1, \"#4ea5ff\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n        floors[floor_index].route_texture = route_texture;\n\n        return route_texture;\n    } else {\n        return undefined;\n    }\n}\n\n//TODO\nfunction animate_route_path(floors: IFloorData[]) {\n    /*floors.forEach(floor => {\n        if (floor.route_texture != null) {\n            createjs.Ticker.framerate = 60;\n            createjs.Tween.get(floor.route_texture.offset, { loop: true })\n                .to({ x: -1 }, 2000, createjs.Ease.cubicInOut)\n        }\n    });*/\n}\n\nexport function assign_route_nodes_to_stores(\n    floor_index: number,\n     floors: IFloorData[],\n     allIndexedMapObjects: Record<string, MapObj>,\n     allIndexedRetailers: Record<string, IRetailer>,\n     allNodesFloor: Record<string, number>,\n     escalator_nodes: string[],\n     find_store_node_raycaster: Raycaster,\n     role: string, //config.ROLE\n     ) {\n    const result = new Map();\n    const currentFloor = floors[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n        currentFloor.route_points.forEach(point => {\n            let origin_point = new Vector3(point.node.x, point.node.y, -10);\n            let target_direction = new Vector3(0, 0, 1);\n            find_store_node_raycaster.set(origin_point, target_direction);\n            //@ts-ignore\n            var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n            if (storeIntersects.length) {\n                //@ts-ignore\n                storeIntersects[0].object.route_node_id = point.name;\n                //@ts-ignore\n                result.set(storeIntersects[0].object.object_id, point.name);\n                if (false && role != 'PORTAL') {\n                    //@ts-ignore\n                    var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n                    if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n                        var retailer_index = allIndexedRetailers[retailer_id].index;\n                        // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n                    }\n                }\n            }\n\n            var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n            if (escalatorIntersects.length) {\n                const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n                let escalator_obj_id = obj.object_id;\n                const escalatorNodes = floors[floor_index].escalatorsNodes;\n                if (escalatorNodes) {\n                    escalatorNodes[escalator_obj_id as string] = point.name;\n                    allNodesFloor[point.name] = floor_index;\n                    escalator_nodes.push(point.name);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n    // console.log('linkFloorEscalators', floors)\n    if (floors.length > 1) {\n        for(let i=0; i < (floors.length-1); i++) {\n            // console.log('floors[i]',i, floors[i])\n            const floor_escalators = floors[i].escalatorsNodes;\n            // console.log('floor_escalators', floor_escalators);\n            Object.keys(floor_escalators as object).forEach(escalator => {\n                if (floors[i].escalatorsNodes?.[escalator] != null && floors[i+1].escalatorsNodes?.[escalator] != null) {\n                    // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n                    const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n                    const nodeIdTo = floors[i+1].escalatorsNodes?.[escalator];\n                    if (nodeIdFrom && nodeIdTo) {\n                        pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                        pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n                    }\n                } else {\n                    // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n                }\n            })\n        }\n    }\n}\n\nexport function make_amenity_route(allNodesFloor: Record<string, number>, kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string ): Mesh[] {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    // if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj? kiosk_obj.route_node_id : '';\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for(let key in allIndexedMapObjects) {\n        const mapObject = allIndexedMapObjects[key];\n        if (\n            mapObject.layer_type === 'amenity'\n            && mapObject.obj_type === 'special'\n            && mapObject.value === amenity_type\n        ) {\n            map_objs.push(key);\n        }\n    }\n    map_objs.forEach((amenity_obj_name: string, index: number) => {\n        let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n            var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n            if (route_distance && route_distance < shortest_distance) {\n                shortest_distance = route_distance;\n                to_obj_name = amenity_obj_name;\n            }\n        } catch(e: any) {\n            console.warn(`Amenity Path: ${e.message}`);\n        }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n        to_obj_name = amenity_node_name;\n    }\n    });\n    return create_route(allNodesFloor, kiosk_obj_name, to_obj_name?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import {getMeshParams} from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport {IConfig, IFloorData, IMeshValues, TMapMode, TRoles} from \"src/types\";\n// import {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport {getMaterialAndGeometry} from \"./getMaterialAndGeometry\";\nimport {Raycaster} from \"three\";\nimport {assign_route_nodes_to_stores, linkFloorEscalators} from \"src/helpers/route.helpers\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { Graph } from \"ngraph.graph\";\nimport {EventedType} from \"ngraph.events\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, allMapObjects: string[], allNodesFloor: Record<string, number>, pathFinderGraph: Graph<any, any> & EventedType, floors:IFloorData[], config:IConfig, results:SVGResult[], role?: TRoles) {\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n    const escalator_nodes: string[] = [];\n    results.forEach((result, floor_index) => {\n        if (result.paths && result.paths.length) {\n            const pathIds = [];\n            for (let i = 0; i < result.paths.length; i++) {\n                pathIds.push(result.paths[i]?.userData?.node.id);\n            }\n            const paths = result.paths;\n            for (let i = 0; i < paths.length; i++) {\n                const {\n                    mesh_type,\n                    layer_color,\n                    extrude,\n                    z_index,\n                    mesh_visible,\n                    mesh_draw,\n                    mesh_transparent,\n                    line_thickness,\n                    interactiveMesh,\n                    path,\n                    layer_name,\n                } = getMeshParams(\n                    paths[i],\n                    paths,\n                    floors,\n                    floor_index,\n                    config,\n                    ++node_count,\n                    //@ts-ignore\n                    allNodesFloor,\n                    pathFinderGraph\n                );\n\n                if (mesh_draw) {\n                    const meshParams = getMaterialAndGeometry(\n                        allMapObjects,\n                        config,\n                        mesh_type,\n                        layer_name,\n                        layer_color,\n                        mesh_transparent,\n                        mesh_visible,\n                        z_index,\n                        extrude,\n                        line_thickness,\n                        floors,\n                        floor_index,\n                        allIndexedMapObjects,\n                        allIndexedRetailers,\n                        path,\n                        role\n                    );\n\n                    if (layer_name.startsWith('kiosk-')) {\n                        if (role === 'PORTAL') {\n                            // meshParams.mesh.visible = false;\n                            //@ts-ignore\n                            // meshParams.mesh.material.visible = false;\n                        }\n                    }\n\n                    if (!GeometriesAndMaterials[floor_index]) {\n                        GeometriesAndMaterials[floor_index] = [];\n                    }\n\n                    GeometriesAndMaterials[floor_index].push(meshParams);\n                }\n            }\n            const findStoreNodeRaycaster = new Raycaster();\n            const routeNodeIds = assign_route_nodes_to_stores(\n                floor_index,\n                floors,\n                allIndexedMapObjects,\n                allIndexedRetailers,\n                allNodesFloor,\n                escalator_nodes,\n                findStoreNodeRaycaster,\n                config.ROLE\n            );\n            \n            if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n                for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n                    if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n                        GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n                    }\n                }\n            }\n\n            linkFloorEscalators(floors, pathFinderGraph);\n\n        }\n    })\n\n    return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes};\n}","import {IJsonConfig} from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n    ROLE: 'WEBSITE',\n    DEVICE: 'display_app',\n    CENTER_ID: '',\n    KIOSK: '',\n    STYLE: '3D',\n    DEFAULT_SELECTED_STORE: '',\n    DEBUG: '1',\n\n    MAP_BACKGROUND_COLOR: \"FFFFFF\",\n    ACCENT_COLOR: \"4EA5FF\",\n    STORE_DEFAULT_COLOR: \"E2E2E2\",\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n    WALL_THICKNESS: '0.6',\n    WALL_COLOR: \"888888\",\n    BOUNDARY_THICKNESS: '0.8',\n    BOUNDARY_COLOR: \"888888\",\n    BASE_COLOR: \"25292B\",\n    STORE_TEXT_COLOR: \"222222\",\n    OVERLAY_COLOR: \"FFFFFF\",\n    OVERLAY_OPACITY: '0.7',\n    // AMENITIES_NAV_BG_COLOR: \"000000\",\n    // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    }\n}\n\nexport const defaultVars: IJsonConfig = {\n    MAP_BACKGROUND_COLOR: '',\n    ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n    DEVICE: 'display_app',\n    KIOSK: '',\n    FLOORS: [],\n    KIOSKS: {},\n    CENTER_ID: null,\n    STATS: 'false',\n    STYLE: '3D', // 2D, 3D\n    DEBUG: '0',\n    ACCENT_COLOR: '4EA5FF',\n    STORE_DEFAULT_COLOR: 'E2E2E2',\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n    WALL_THICKNESS: '0.6',\n    BOUNDARY_THICKNESS: '0.8',\n    WALL_COLOR: '888888',\n    BOUNDARY_COLOR: '888888',\n    BASE_COLOR: '25292B',\n    BUILDING_BASE_COLOR: 'DADADA',\n    STORE_TEXT_COLOR: '222222',\n    OVERLAY_COLOR: 'FFFFFF',\n    OVERLAY_OPACITY: '0.7',\n    CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n    ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n    DEFAULT_CAMERA_POSITION: null, // custom default camera position\n    DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n    DEFAULT_SELECTED_STORE: null,\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    },\n    KIOSK_SIZE: '15',\n    ZOOM_STEP: '100',\n};","// import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3, Color, SphereGeometry } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport {IExtMesh} from \"../types\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {hex_to_color} from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n        addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n        //@ts-ignore\n        add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n}\n\nfunction deleteMeshByObjectID(object_id: string, scene: Scene, floors: Record<any, any>) {\n    if (object_id) {\n        let mesh = scene.getObjectByProperty('object_id', object_id);\n        if (mesh) {\n            //@ts-ignore\n            mesh.geometry.dispose();\n            //@ts-ignore\n            mesh.material.dispose();\n            //@ts-ignore\n            floors[mesh.floor_index].objsGroup.remove(mesh);\n        }\n    }\n}\n\nfunction getCenterPoint(mesh: Mesh) {\n    var mesh_center_point = new Vector3();\n    getMeshGroupBoundingBox(mesh).getCenter(mesh_center_point);\n    return mesh_center_point;\n}\n\nfunction getMeshSize(mesh: Mesh) {\n    var point = new Vector3();\n    //@ts-ignore\n    getMeshGroupBoundingBox(mesh).getSize(point);\n    return point;\n}\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n    if (!Array.isArray(mesh)) {\n        mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        //@ts-ignore\n        box.union(obj.geometry.boundingBox);\n        return box;\n    }, new Box3());\n    return box;\n}\n\nfunction layer_text_logo_position(mesh: Mesh, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    const object_id = (mesh as IExtMesh).object_id;\n    if (!object_id) return;\n    return layer_text_logo_position_by_id(object_id, newMeshPos, mesh_size, newMesh, allIndexedMapObjects);\n}\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    let map_obj = allIndexedMapObjects[object_id];\n\n    if (!map_obj) {\n        map_obj = {\n            offsetX: \"0\",\n            offsetY: \"0\",\n            rotate: \"0\",\n        }\n    }\n\n    let offsetX = parseInt(map_obj.offsetX);\n    let offsetY = parseInt(map_obj.offsetY);\n\n    newMeshPos.z = -mesh_size.z;\n\n    //@ts-ignore\n    newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n    //@ts-ignore\n    newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += offsetX;\n    newMeshPos.y += offsetY;\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n        const img = new Image();\n        img.crossOrigin = 'Anonymous';\n        if (map_obj.obj_type == 'retailer') {\n            if (retailer) {\n                img.src = retailer.logo;\n            } else {\n                console.error('retailer not found');\n                return null;\n            }\n        } else if (map_obj.obj_type == 'special') {\n    \n            let svg_image_name = map_obj.value;\n            if (map_obj.layer_type == 'kiosk') svg_image_name = 'kiosk';\n            if (map_obj.layer_type == 'escalator') svg_image_name = 'escalator';\n            if (svg_image_name) {\n                let svg_color = '222222';\n                if (map_obj.text_color != null) {\n                    svg_color = map_obj.text_color;\n                }\n    \n                const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n                if (!svg_block) {\n                    console.error('svg_block not found', svg_image_name);\n                    return null;\n                }\n                const svg_element = svg_block.querySelector(\"svg\");\n                if (!svg_element) {\n                    console.error('svg_element not found', svg_image_name);\n                    return null;\n                }\n    \n                const svgColoredParts = svg_element.querySelectorAll('[fill]');\n                svgColoredParts.forEach((svgColoredPart) => {\n                    svgColoredPart.setAttribute('fill', '#' + svg_color);\n                })\n    \n                const svgData = (new XMLSerializer()).serializeToString(svg_element);\n                img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n            }\n    \n        } else {\n            if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n                img.src = map_obj.custom_image;\n            } else {\n                return null;\n            }\n        }\n\n        return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    img.onload = function () {\n        const c = document.createElement(\"canvas\");\n        const ctx = c.getContext(\"2d\");\n\n        c.width = img.width;\n        c.height = img.height;\n\n        ctx?.drawImage(img, 0, 0);\n\n        let texture = new CanvasTexture(c);\n        texture.colorSpace = 'srgb'\n\n        const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n        const material = new MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            side: DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        if (map_obj.layer_type === 'kiosk') {\n            material.visible = false;\n        }\n        \n        afterOnload(geometry, material);\n    };\n}\n\nfunction getImageLogo(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry,object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: {storeLogo: Object3D}) => void): void {\n    const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n    if (img === null) return;\n\n    processImage(img, map_obj, (geometry, material) => {\n        const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n        // @ts-ignore\n        const floor_index = mesh.floor_index;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n        logoMesh.object_id = new_object_id;\n        logoMesh.floor_index = floor_index;\n        logoMesh.renderOrder = getRenderOrder('layer-image');\n        floors[floor_index]?.objsGroup.add(logoMesh);\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        logoMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        //@ts-ignore\n        BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        \n        handleAsync({storeLogo: BoundingSphereMesh});\n        */\n        handleAsync({storeLogo: logoMesh});\n    })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id:string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): {textMesh: IExtMesh} | null | false {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n        return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    let map_obj: MapObj = allIndexedMapObjects[object_id]? allIndexedMapObjects[object_id] : {layer_type: object_id.startsWith('escalator')? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8};\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            text = '';\n        }\n\n        let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n        if (map_obj.text_color) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n        textMesh.userData.font = myFont;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        textMesh.object_id = new_object_id;\n        textMesh.floor_index = floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        if (map_obj.layer_type === 'retail_name') {\n            textMesh.userData.retail_name = text;\n        }\n\n        floors[floor_index].objsGroup.add(textMesh);\n\n        //scene.add(textMesh);\n        //console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        */\n        result = { textMesh };\n    }\n\n    else if (\n       map_obj.layer_type == 'retail_logo' ||\n       map_obj.layer_type == 'custom_image' ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'kiosk' && map_obj.kiosk_id != null) ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'amenity' && map_obj.value != '')\n       || (map_obj.layer_type == 'escalator')\n   ) {\n        getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n   }\n   return result;\n}","import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport type {Mesh} from \"three\";\nimport path from \"ngraph.path\";\nimport {EventedType} from \"ngraph.events\";\n\n\ntype MapBoxContextType = {\n    meshByObjectId: Map<string, Mesh>;\n    setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>> | Function;\n    allMapObjects: Array<string>;\n    setAllMapObjects: Dispatch<SetStateAction<Array<string>>> | Function;\n    allIndexedMapObjects: Record<string, MapObj>;\n    setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObj>>> | Function;\n    allIndexedRetailers: Record<string, IRetailer>;\n    setAllIndexedRetailers: Dispatch<SetStateAction<Record<string, IRetailer>>> | Function;\n    allNodesFloor: Record<string, number>;\n    setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>> | Function;\n    pathFinderGraph: Graph<any, any> & EventedType\n    setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>> | Function;\n    ngraphPath: typeof path;\n    setNgraphPath: Dispatch<SetStateAction<typeof path>> | Function;\n}\nconst MapBoxContext = createContext<MapBoxContextType>({\n    meshByObjectId: new Map<string, Mesh>(),\n    setMeshByObjectId: () => null,\n    allMapObjects: [],\n    setAllMapObjects: () => null,\n    allIndexedMapObjects: {},\n    setAllIndexedMapObjects: () => null,\n    allIndexedRetailers: {},\n    setAllIndexedRetailers: () => null,\n    allNodesFloor: {},\n    setAllNodesFloor: () => null,\n    pathFinderGraph: createGraph(),\n    setPathFinderGraph: () => null,\n    ngraphPath: path,\n    setNgraphPath: () => null,\n})\n\nconst MapBoxContextProvider = ({children}: {children: ReactNode}) => {\n\nconst [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string,Mesh>());\nconst [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\nconst [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\nconst [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\nconst [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n//<{ x:number, y:number }, { weight: number }>\nconst [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\nconst [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n\nreturn (\n    <MapBoxContext.Provider value={{\n        meshByObjectId,\n        setMeshByObjectId,\n        allMapObjects,\n        setAllMapObjects,\n        allIndexedMapObjects,\n        setAllIndexedMapObjects,\n        allIndexedRetailers,\n        setAllIndexedRetailers,\n        allNodesFloor,\n        setAllNodesFloor,\n        pathFinderGraph,\n        setPathFinderGraph,\n        ngraphPath,\n        setNgraphPath,\n    }}\n    >\n        {children}\n    </MapBoxContext.Provider>\n)\n\n} \n\nexport function useMapBoxContext() {\n    const context = useContext(MapBoxContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n    }\n\n    return context;\n}\n\nexport default MapBoxContextProvider;\n","import {\n    Group,\n    Scene,\n    Object3D,\n    Mesh,\n    BufferGeometry,\n    Color,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport {loadFloors} from \"./loadFloors\";\nimport type {IConfig, IExtMesh, IFloorData, IMeshParams, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {defaultVars, mapit2DefaultVars} from \"../../defaults\";\n// import {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport {drawTextLogoStoreOnMap, get_store_name_logo_geo} from \"src/helpers/draw.logo.helpers\";\nimport { FontLoader, Font } from \"three-stdlib\";\nimport { IJsonConfig, IMeshParamsTmp} from \"../../types\";\nimport {hex_to_color} from \"src/helpers/misc\";\nimport {Kiosk, Floor, MapIt2Response, MapObj, IRetailer} from \"../../mapitApiTypes\";\nimport { EventedType } from \"ngraph.events\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars}\n\nconst defaultMapObjValues = {\n\tid: null,\n\tcenter_id: config.CENTER_ID,\n\tretailer_id: null,\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: 8,\n\trotate: 0,\n\toffsetX: 0,\n\toffsetY: 0,\n} as Record<string, string | number | null| undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\nconst extraMapObjects = []\nlet activeMapObjectName = null;\nconst floorsData:IFloorData[] = [];\nconst floors = [] as Floor[];\nlet floors_loaded = 0;\nlet MEDIA_STORAGE_URI: string = '';\n\nfunction select<T>(...values: T[]) {\n    return values.find(value => value !== '' && value != null) || values.at(-1);\n}\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n\tfor (let key in obj) {\n\t\tdelete obj[key];\n\t}\n}\n\nfunction makeIndexedMapObjects(allIndexedMapObjects: Record<string, MapObj>,map_objs: MapObj[]) {\n\tclearObject(allIndexedMapObjects);\n\n    allNonIndexedMapObjects = map_objs;\n\n    for (let i = 0; i < map_objs.length; i++) {\n        const obj = map_objs[i];\n        allIndexedMapObjects[obj.map_obj_name] = obj;\n        for (let key in defaultMapObjValues) {\n            const value = defaultMapObjValues[key];\n            //@ts-ignore\n            if (value != null && obj[key] == null) {\n                //@ts-ignore\n                allIndexedMapObjects[obj.map_obj_name][key] = value;\n            }\n        }\n    }\n}\n\nconst init = (allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: IJsonConfig, floors:IFloorData[], response: MapIt2Response) => {\n    const KIOSKS:Record<string, Kiosk> = {};\n\n    response.kiosks.forEach((kiosk) => {\n        const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n        if (mapObj) {\n            kiosk.map_obj_name = mapObj.map_obj_name;\n        }\n        KIOSKS[kiosk.id] = kiosk;\n    });\n\n\n    for (let index in response.retailers) {\n        const retailer = response.retailers[index];\n        allIndexedRetailers[retailer.id] = retailer;\n        allIndexedRetailers[retailer.id].index = index;\n    }\n\n    // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n    // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n    makeIndexedMapObjects(allIndexedMapObjects, response.map_objs);\n\n    floors.length = 0;\n    response.floors.forEach((value: IFloorData, index: number) => {\n        const objsGroup = new Group();\n        objsGroup.scale.y *= -1;\n        objsGroup.lookAt(0, 1, 0);\n\n        floors.push({\n            id: value.id,\n            // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n            svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n            title: value.title,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n        });\n    });\n    const DEFAULT_CAMERA_FOV = 75;\n    const WP_SITE_CAMERA_FOV = 30;\n    const DEFAULT_CAMERA_FAR = 10000;\n    config.CAMERA.far = DEFAULT_CAMERA_FAR;\n    config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n    const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n    config.CAMERA.maxDistance *= fovCorrection;\n    config.CAMERA.far *= fovCorrection;\n\n    const processedConfig: IConfig = {\n        ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n        BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n        BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n        BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n        BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n        BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n        CAMERA: {\n            ...config.CAMERA,\n            minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE)? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n            maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE)? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n        },\n        CAMERA_CONTROLS_STATES: response.camera_controls_states[config.DEVICE],\n        CENTER_ID: config.CENTER_ID,\n        CONTROLS: null,\n        DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n        DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n        DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n        DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n        DEVICE: config.DEVICE,\n        KIOSK: config.KIOSK? config.KIOSK : '',\n        KIOSKS: KIOSKS,\n        MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n        ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n        OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n        OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n        ROLE: config.ROLE,\n        SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n        STATS: config.STATS === 'true' || config.STATS === '1',\n        STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n        STORE_HEIGHT: response.settings.STORE_HEIGHT? response.settings.STORE_HEIGHT : config.STORE_HEIGHT? config.STORE_HEIGHT : '8',\n        STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n        STYLE: response.settings.STYLE? response.settings.STYLE : config.STYLE? config.STYLE : '3D',\n        WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n        WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n        FLOORS: response.floors,\n        AMENITIES: response.amenities,\n        RETAILERS: response.retailers,\n        AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n        AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n        KIOSK_SIZE: response.settings.KIOSK_SIZE? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n        ZOOM_STEP: response.settings.ZOOM_STEP? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n    };\n\n    // AMENITIES_NAV_BG_COLOR: string;\n    // AMENITIES_NAV_ICON_COLOR: string;\n\n    return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response|null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n    const {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph} = useMapBoxContext();\n    const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n    const [textParams, setTextParams] = useState<Array<{textMesh:IExtMesh}[]>>([]);\n    const [storeLogos, setStoreLogos] = useState<{storeLogo: Mesh}[][]>([]);\n    // const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n    const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n    const [urls, setUrls] = useState<string[]>([]);\n    const [ processedConfig, setProcessedConfig ] = useState<IConfig|null>(null);\n    let result = useLoader(SVGLoader, urls);\n\n    MEDIA_STORAGE_URI = useMemo(() => {\n        const r = /\\/$/;\n        if (mediaStorageURI) {\n            return mediaStorageURI?.replace(r, '');\n        }\n\n        return '';\n\n    }, [mediaStorageURI])\n\n    const consolePrefix = 'MAPIT2';\n    // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n    const myFont = useFont(fontData as unknown as FontData);\n\n    // const getWallShape = (...params: any): Shape | Shape[] => {\n    //     return []\n    // }\n\n\n    const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: {storeLogo: Mesh}) => {\n        setStoreLogos((prevLogos) => {\n            // console.debug({floorIndex});\n            if (prevLogos[floorIndex]) {\n                prevLogos[floorIndex].push({...meshLogo});\n            } else {\n                prevLogos[floorIndex] = [{...meshLogo}];\n            }\n            // console.debug({prevLogos});\n            return [...prevLogos];\n        });\n    }), [])\n\n\n    useEffect(() => {\n        if (!data) return;\n\n\n        // console.log('useMeshFloors[data]', {data})\n\n        const processedConfig = init(allIndexedMapObjects, allIndexedRetailers, jsonConfig ? {...config, ...jsonConfig} : config, floorsData, data as MapIt2Response);\n        const values: string[] = [];\n        processedConfig.FLOORS.forEach((value) => {\n            // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n            //@ts-ignore\n            values.push(`${value.svg}`);\n        });\n\n        setProcessedConfig(processedConfig);\n        setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n    return () => {\n        if (meshParams) {\n            meshParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.mesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (textParams) {\n            textParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.textMesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (storeLogos) {\n            storeLogos.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.storeLogo.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        setMeshParams([]);\n        setTextParams([]);\n        setStoreLogos([]);\n    }\n    }, [data]);\n\n    useEffect(() => {\n        if (!processedConfig || !urls.length || !myFont || !result) return;\n\n        const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph,floorsData, processedConfig, result, role);\n        const TextsAndLogos:Array<{textMesh:IExtMesh}[]> = [];\n        allNonIndexedMapObjects.forEach((params) => {\n            let values: IMeshValues | undefined;\n            for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n                //@ts-ignore\n                values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n                if (values !== undefined) {\n                    break;\n                } \n            }\n            if (!values) return null;\n            const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n            if (textParams) {\n                if (!TextsAndLogos[values.floor_index]) {\n                    TextsAndLogos[values.floor_index] = [];\n                }\n                TextsAndLogos[values.floor_index].push(textParams);\n            }\n        })\n        const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n            return (acc + item.length);\n        }, 0);\n        const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n        if (countNonIndexedObjs !== 0) {\n            const mapObjNames = new Set<string>();\n            allNonIndexedMapObjects.forEach((item) => {\n                mapObjNames.add(item.map_obj_name);\n            });\n            GeometriesAndMaterials.forEach((items) => {\n                items.forEach(item => {\n                    if (!mapObjNames.has(item.object_id)) {\n                        const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n                        if (textParams) {\n                            if (!TextsAndLogos[item.floor_index]) {\n                                TextsAndLogos[item.floor_index] = [];\n                            }\n                            TextsAndLogos[item.floor_index].push(textParams);\n                        }\n                    }\n                })\n            });\n        }\n        setMeshParams(GeometriesAndMaterials);\n        setTextParams(TextsAndLogos);\n        setPathFinderGraph(graph);\n        setEscalatorNodes([...escalator_nodes]);\n\n    }, [processedConfig, urls, result, myFont]);\n\n    return useMemo(() => {\n        return {\n            config: processedConfig,\n            meshParams,\n            textParams,\n            storeLogos,\n            floors: floorsData,\n            pathFinderGraph,\n            escalator_nodes: escalatorNodes,\n        }\n    }, [ processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes ])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useEffect, useState } from \"react\"\nimport { Object3D } from \"three\";\nimport { IConfig, IExtMesh } from \"src/types\";\n\n\nexport type TMeshObjectContext = {\n    MeshObject: IExtMesh[] | null;\n    SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n    cameraLength: number | undefined,\n    setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n    config: IConfig | undefined,\n    setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n    MeshObject: null,\n    SetMeshObject: () => null,\n    cameraLength: undefined,\n    setCameraLength: () => null,\n    config: undefined,\n    setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({children}: {children: React.ReactNode}) {\n    const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n    const [config, setConfig] = useState<IConfig | undefined>();\n    const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n    return (\n        <MeshObjectContext.Provider\n            value={{\n                MeshObject,\n                SetMeshObject,\n                cameraLength,\n                setCameraLength,\n                config,\n                setConfig\n            }}\n        >\n            {children}\n        </MeshObjectContext.Provider>\n    )\n}\n\nexport function useMeshObjectContext() {\n    const context = useContext(MeshObjectContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n    }\n\n    return context;\n}\n","import React, { useContext, useEffect, useState } from \"react\";\nimport styles from '../../MapBox.module.scss';\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { IConfig } from \"src/types\";\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, config }: { size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined }) => {\n  const [sizeFactor, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n  const kioskElementRef = React.useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!lockSize && config !== undefined && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n    }\n  }, [lockSize, config, cameraLength])\n\n  useEffect(() => {\n    if (lockSize) {\n      setSizeFactor(1);\n    }\n  }, [lockSize]);\n\n  // todo figure out better way\n  useEffect(() => {\n    if (!kioskElementRef.current) return;\n    const kioskElement = kioskElementRef.current;\n    const svgOrigin = document.querySelector('#map-special-svg-kiosk svg');\n    let svgClone: Node;\n    if (svgOrigin) {\n      svgClone = svgOrigin.cloneNode(true);\n      kioskElement.appendChild(svgClone);\n    }\n\n    return () => {\n      if (svgClone) {\n        kioskElement.removeChild(svgClone);\n      }\n    }\n  }, []);\n\n  return <>\n    <div className={styles['kioskMarker']} ref={kioskElementRef} style={{ width: sizeFactor * size * 2, height: sizeFactor * size * 10 }}></div>\n    {blink ? <div className={styles['mapCenterMarker']}></div> : null}\n  </>\n}","import { IExtMesh, IMeshParams, IMeshValues, TRoles } from \"../../types\";\nimport { ThreeEvent, context, useThree } from \"@react-three/fiber\";\nimport React, { MouseEventHandler, useEffect } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB, BoxHelper } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from '../../MapBox.module.scss';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n  floorIndex: number,\n  meshFloors: IMeshParams;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, params?: IMeshValues }) {\n  const [update, setUpdate] = React.useState(false);\n  const { type, mesh, params } = props;\n  const { camera } = useThree();\n  React.useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      setUpdate((value) => !value);\n    };\n  }, [mesh.userData, setUpdate]);\n\n  const { config, cameraLength } = useMeshObjectContext();\n\n  // console.warn({update});\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig) {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <Html style={{ pointerEvents: 'none' }} distanceFactor={undefined}><MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /></Html> : null}\n        </primitive>\n      }\n      return <primitive key={mesh.uuid} object={mesh}>\n        {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n      </primitive>\n    case 'kiosk':\n      return <>\n        {mesh.userData.kioskConfig ? <Html style={{ pointerEvents: 'none' }} distanceFactor={undefined}><MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /></Html> : null}\n      </>\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n\n  const { config, meshParams, textParams, storeLogos } = meshFloors;\n  const floor = meshFloors.floors[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            // @ts-ignore\n            const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n            //console.log('Map', {baseColor, active, hovered})\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} type={'storeLogo'} visible={visible} />\n      })}\n      {escalatorMeshes?.map((params) => {\n        //@ts-ignore\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div onClick={() => handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n              <div className={styles.element} id={params.object_id as string}>\n                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type {Mesh} from \"three\";\nimport {Box3, Vector3} from \"three\";\n\nexport function get_camera_focus_object(objs:Mesh[], fov:number, aspectRatio: number, style: string) {\n    // config.STYLE\n    // config.CAMERA.fov\n\n    if (!Array.isArray(objs)) {\n        objs = [objs];\n    }\n    if (!objs.length) {\n        console.warn('get_camera_focus_object: no objects passed');\n        return { position: new Vector3(), target: new Vector3() };\n    }\n\n    const objsBoundingBox = objs.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        if (obj.geometry.boundingBox) {\n            box.union(obj.geometry.boundingBox);\n        }\n        return box;\n    }, new Box3());\n\n    const obj_size = new Vector3();\n    objsBoundingBox.getSize(obj_size);\n\n    const center = new Vector3();\n    objsBoundingBox.getCenter(center);\n\n    objs[0].localToWorld(center);\n\n    // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n    // var padding = max_length * 0.2;\n    // if (padding > 50) padding = 50;\n    // max_length += padding;\n    // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n    let tanFOV = Math.tan(Math.PI * fov / 360);\n    let padding = 1.1;\n    let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n    let new_height = (obj_size.y * padding) / 2 / tanFOV;\n    let new_y = Math.max(new_width, new_height);\n    let new_z = getCameraTiltPosition(new_y, style);\n\n    const target = new Vector3(center.x, 0, center.z);\n    const position = new Vector3(center.x, new_y, center.z + new_z);\n\n    // createjs.Ticker.framerate = 60;\n    // createjs.Tween.get(config.CONTROLS.target)\n    //     .to({ x: center.x, z: center.z }, 400);\n    // createjs.Tween.get(config.CAMERA.position)\n    //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n    return {position, target};\n}\n\nfunction getCameraTiltPosition(y:number, style:string): number {\n    let angle = 60;\n    if (style == '2D') angle = 89.9;\n    return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IJsonConfig, IMeshParams, TMapMode } from \"../../types\";\nimport { Map } from \"./Map\";\nimport React, { MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\n// import { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { isMobile } from \"react-device-detect\";\nimport { defaultVars } from \"src/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n// import { allNodesFloor } from \"src/globals\";\n\ninterface IFloorsMapProps {\n  meshFloors: IMeshParams;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  onCameraMove?: (e: any) => void;\n  currKioskObj: Mesh;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: IZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  config: IConfig;\n  cameraPos?: { x: number, y: number, z: number } | undefined | null;\n  controlPos?: { x: number, y: number, z: number } | undefined | null;\n  handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n  const { allIndexedMapObjects, allNodesFloor } = useMapBoxContext();\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const { meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    config,\n    cameraPos,\n    controlPos,\n    handleCameraAndControlsChange,\n    activeObjectId } = params;\n  const { floors } = meshFloors;\n\n  const { setCameraLength } = useMeshObjectContext();\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = meshFloors.config.STYLE;\n  const accentColor = meshFloors.config.ACCENT_COLOR;\n  const pathFinderGraph = meshFloors.pathFinderGraph;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length])\n\n  useEffect(() => {\n    if (!amenityTargetType || config.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(allNodesFloor, from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n    setRouteTubes(route);\n  }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n      if (config.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floors.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n\n    console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    // TODO: activate object (moved out of create_route function)\n    // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n    // TODO: focus object (moved out of create_route function)\n    // if (!routePaths.length) {\n    //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n    //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n    //     camera.position.copy(position);\n    // }\n\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n\n    if (!selectedFloorMeshParams.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && config.ROLE == 'PORTAL') {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      config.CAMERA.maxDistance,\n      Math.max(\n        config.CAMERA.minDistance,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n      const zoomStep = config.ZOOM_STEP ? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= zoomStep;\n      } else {\n        cameraDistance += zoomStep;\n      }\n\n      cameraDistance = Math.min(\n        config.CAMERA.maxDistance,\n        Math.max(\n          config.CAMERA.minDistance,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n  }, [zoom])\n\n  // useEffect(() => {\n  //     if (mapControlRef.current) {\n\n  //         // Set initial camera position\n  //         if (cameraPos)\n  //             mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n  //         // Set initial controls target\n  //         if (controlPos)\n  //             mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n  //         mapControlRef.current.update();\n  //     }\n  // }, [mapControlRef]);\n\n  // useEffect(() => {\n  //     if (mapControlRef.current) {\n  //         if (cameraPos)\n  //             mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n  //         // Set initial controls target\n  //         if (controlPos)\n  //             mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n  //         mapControlRef.current.update();\n  //     }\n  // }, [cameraPos, controlPos]);\n\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange)\n        handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const resetCamera = (fullReset: boolean = false, cameraControlsStates?: any) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n    const cameraDistance = Math.min(\n      config.CAMERA.maxDistance,\n      Math.max(\n        config.CAMERA.minDistance,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    if (config.CAMERA_CONTROLS_STATES && !['PORTAL', 'PORTAL_RESPONSIVE'].includes(config.ROLE)) {\n      focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n      focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n    }\n\n    // if (cameraPos && controlPos && !['PORTAL', 'PORTAL_RESPONSIVE'].includes(config.ROLE)) {\n    //     focus.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n    //     focus.target.set(controlPos.x, controlPos.y, controlPos.z);\n    // }\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n  };\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n  }))\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={config.CAMERA.minDistance}\n        maxDistance={config.CAMERA.maxDistance}\n        enableZoom={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floors && floors.map((value: IFloorData, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.scss';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\n\nconst UIComponent = ({\n  floors,\n  accentColor,\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  role,\n  mapObjs,\n  onExtractedAmenities,\n}: IFloorSelectorProps & {\n  amenitiesList: IAmenitiesInteractiveList[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: () => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  role?: TRoles,\n  mapObjs?: MapObj[],\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      reset();\n    }\n  }\n\n  const extractValues = useMemo<AmenityID[]>(() => {\n\n    if (!mapObjs) {\n      return [];\n    }\n\n    return mapObjs\n      .filter(obj => obj.layer_type === \"amenity\")\n      .map(obj => obj.value as AmenityID);\n  }, [mapObjs])\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [mapObjs, onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floors.length > 0 && (\n          <div className={styles.map_controls}>\n            <div className=\"map_controls_wrapper\">\n              <div className=\"floors btn_group\">\n                {floors.map((floor: any, index: number) => (\n                  <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                    console.log(floor, index);\n                    handleFloorChange(index)\n                  }}>{floor.title}</div>\n                ))}\n              </div>\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(role as string) &&\n          <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                  <div className={styles.img}>\n                    {/* <img src={amenity.icon} alt={amenity.name} /> */}\n                    <amenity.icon />\n                  </div>\n                  <div className={`${styles.name}`}>{amenity.name}</div>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { useCallback, useMemo, useState } from \"react\";\n\ntype GetRetailersParams = {\n    centerId: string | number,\n    apiURI?: string,\n    limit?: number,\n    page?: number,\n}\n\ntype Data = {\n    isError: boolean,\n    error: string | null,\n    items: any[],\n    count: number,\n}\n\nconst defaultData: Data = {\n    isError: false,\n    error: null,\n    items: [],\n    count: 0,\n}\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n    const { centerId, apiURI, limit, page } = params;\n\n    const fetchRetailers = useCallback((search: string) => {\n        const r = /\\/$/;\n        const uri = apiURI?.replace(r, '');\n        const url = `${uri}/v1/retailers?limit=${limit ? limit : 100}&page=${page ? page : 1}&search=${search ? search : ''}`;\n\n        return fetch(url, {\n            headers: {\n                center_id: centerId.toString(),\n            },\n        }).then(response => {\n            if (!response.ok) {\n                return {\n                    ...defaultData,\n                    isError: true,\n                    error: `Server error: [${response.status}] [${response.statusText}] [${response.url}]`,\n                    items: [],\n                };\n            }\n            return (async () => {\n                return await response.json().then(retailers => {\n                    return {\n                        ...defaultData,\n                        items: retailers.items,\n                        count: retailers.count,\n                    }\n                });\n            })()\n        }).catch((e: any) => {\n            return {\n                ...defaultData,\n                isError: true,\n                error: e.message ? e.message : 'useGetRetailer: something went wrong!',\n                items: [],\n            };\n        })\n    }\n        , [centerId, limit, page, apiURI]);\n\n    return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor, hex_to_color } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { MouseEventHandler, SyntheticEvent, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, FormControl, FormControlProps, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, Euler, MeshBasicMaterial, MeshPhongMaterial, Object3D, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { Geometry, TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IJsonConfig, IMeshParamsTmp } from \"src/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useGetRetailers from \"./useGetRetailersBySearch\";\nimport { MapCenterMarker } from \"../SceneComponent/MapCenterMarker\";\n\n\ninterface IMapboxForm {\n    floorIndex: number;\n    meshFloors: IMeshParamsTmp;\n    config: IConfig;\n    data: any;\n    setData: (index: number, data: MapObj) => void;\n    selectedId: string;\n    centerId: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    apiURI?: string;\n    onResetData?: (data: MapObj) => void;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n    [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n\tid: '',\n\tcenter_id: centerId,\n\tretailer_id: '',\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: '8',\n    lock_size: '0',\n\trotate: '0',\n\toffsetX: '0',\n\toffsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData) => {\n    const kioskConfig = obj.userData.kioskConfig;\n    if (kioskConfig) {\n        //TODO use 'value' until api with lock_size will be working\n        obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n        obj.userData.kioskConfig = {\n            lockSize: formData.value === '1',\n            blink: kioskConfig.blink,\n            size: Number(formData.size)\n        }\n        // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n        obj.userData.triggerUpdate?.();\n    }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n    const {data, setData, selectedId, centerId, config, floorIndex, meshFloors, onResetData} = params;\n\n    const myFont = useFont(fontData as unknown as FontData);\n    const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n    const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n    const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n    const [formData, setFormData] = useState<MapObj | null>(null);\n    const [rotation, setRotation] = useState<number | undefined>(undefined);\n    const context = useMeshObjectContext();\n    const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [, startTransition] = useTransition();\n    const intervalRefs = useRef<TIncDecInterval>({});\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const fetchRetailers = useGetRetailers({centerId, apiURI: params.apiURI});\n\n    const loadOptions = (inputValue: string, callback: (options: any[]) => void) => {\n        setIsLoading(true);\n        const retailersData = fetchRetailers(inputValue);\n        retailersData.then(data => {\n            setIsLoading(false);\n            let result: any = [];\n            if (!data) return result;\n            if (!data.isError) {\n                result = data.items.map((item: any) => {\n                    return {\n                        value: item.id,\n                        label: item.name,\n                    }\n                })\n            } else {\n                console.error(`Fetch Retailers error: ${data.error}`)\n            }\n            callback(result);\n        })\n    }\n\n    useEffect(() => {\n        switch(mainTabKey) {\n            case 'retailer':\n                handleChangeTab(retailerTabsKey);\n                break;\n        }\n    }, [formData, mainTabKey, retailerTabsKey])\n\n    const handleChangeTab = (k:  any | null) => {\n        if (!formData) return;\n        const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n        if (key !== null) {\n            if (isTMainTabsKey(key)) {\n                setMainTabKey(key);\n                if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n                    formData.obj_type = key;\n                    if (key === 'retailer') {\n                        formData.layer_type = 'retail_name';\n                        clearKioskConfig(context);\n                    } else if (key === 'special') {\n                        formData.layer_type = 'kiosk';\n                        formData.retailer_id = '';\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            if (obj) {\n                                if (!obj.userData) {\n                                    obj.userData = {};\n                                }\n                                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                                obj.userData.kioskConfig = {\n                                    lockSize: formData.value === '1',\n                                    blink: false,\n                                    size: Number(formData.size)\n                                }\n                                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n                            }\n                        }\n                    } else if (key === 'custom') {\n                        formData.layer_type = 'custom_text';\n                        formData.retailer_id = '';\n                        clearKioskConfig(context);\n                    }\n                    setMainTabKey('');\n                    setRetailerTabsKey('');\n                    setSpecialTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    });\n                }\n            } else if (isTRetailerTabsKey(key)) {\n                setRetailerTabsKey(key);\n                clearKioskConfig(context);\n                if (formData.id && retailerTabsKey && key) {\n                    formData.layer_type = key;\n                    if (formData.layer_type !== key) {\n                        setFormData({ ...formData });\n                    }\n                    updateData({\n                        ...formData,\n                    })\n                    if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n                        let text = '';\n                        switch (key) {\n                            case 'retail_name':\n                               \n                                if(!formData.retailer_id)\n                                {\n                                    break;\n                                }\n\n                                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                               \n                                if (retailIndex !== -1) {\n                                    text = data.retailers[retailIndex].retail_name;\n\n                                }\n                                break;\n                            case 'retail_text':\n                            case 'custom_text':\n                                text = formData.custom_text;\n                                break;\n                        }\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            makeTextGeometry(obj, text, formData.size);\n                        }\n                    }\n\n                    if (['retail_logo', 'custom_image'].includes(key)) {\n                        context?.MeshObject?.forEach((obj, index) => {\n                            if (index === 0) return;\n\n                            makeImage(formData, obj);\n                        })\n                    }\n                }\n            } else if (isTSpecialTabsKey(key)) {\n                setSpecialTabsKey(key);\n                formData.layer_type = key;\n                if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n                    if (key !== 'kiosk') {\n                        clearKioskConfig(context);\n                    }\n                    formData.layer_type = key;\n                    formData.kiosk_id = '';\n                    formData.retailer_id = '';\n                    formData.value = '';\n                    setFormData({ ...formData });\n                    updateData({ ...formData });\n                }\n            }\n        }\n    }\n\n    const handleRotateChange = (e: any) => {\n        if (!formData) return;\n        formData.rotate = e.target.value;\n        setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = {...formData};\n            setData(index, {...data});\n        }\n    }\n\n    const handleReset = () => {\n        if (!formData) return;\n        const defaultValues = getDefaultMapOjbValues(formData.center_id);\n        if (onResetData) {\n            onResetData({\n                ...formData,\n            })\n        }\n        setFormData({\n            ...defaultValues,\n            id: formData.id,\n        });\n        updateData({\n            ...defaultValues,\n            id: formData.id,\n        });\n    }\n\n    const updateData = (formData: MapObj) => {\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = { ...formData };\n            setData(index, { ...formData });\n        }\n    }\n\n    const handleChangeRetailer = ({value}: {value: string}) => {\n        if (value && formData) {\n            formData.retailer_id = value;\n            formData.kiosk_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeKiosk = (e: any) => {\n        if (e.target.value && formData) {\n            formData.kiosk_id = e.target.value;\n            formData.retailer_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                updateMapCenterMarkerFor(obj, formData);\n            })\n        }\n    }\n\n    const handleChangeAmenity = (e: any) => {\n        if (e.target.value && formData) {\n            formData.value = e.target.value; \n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const makeTextGeometry = (obj: IExtMesh, text: string, size: string) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let text_geometry = new TextGeometry(text, {\n            font: (obj.userData && obj.userData.font)? obj.userData.font : myFont,\n            size: parseInt(size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n        if (obj.geometry) {\n            obj.geometry.dispose();\n        }\n        obj.geometry = text_geometry;\n    }\n\n    const makeImage = (formData: MapObj, obj: IExtMesh) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let img = null;\n        if (formData.layer_type === 'retail_logo') {\n            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n            if (retailIndex !== -1) {\n                img = getImage(formData, data.retailers[retailIndex]);\n            }\n        } else {\n            img = getImage(formData);\n        }\n        if (img instanceof HTMLImageElement) {\n            processImage(img, formData, (geometry, material) => {\n                obj.geometry = geometry;\n                obj.material = material;\n\n                const boundingBox = geometry.boundingBox;\n\n                const mesh_center_point = new Vector3();\n                if (boundingBox) {\n                    boundingBox.getCenter(mesh_center_point);\n\n                    const mesh_size = new Vector3();\n                    boundingBox.getSize(mesh_size);\n                    if (obj.object_id) {\n                        layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n                    }\n                }\n            });\n        }\n    }\n\n    const changeValue = (name: string, value: string) => {\n        if (!formData) return;\n        // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n        //     formData.custom_image = value;\n        //     setFormData({...formData});\n        //     updateData({...formData});\n        // }\n\n        context?.MeshObject?.forEach((obj, index) => {\n            if (!obj.userData) {\n                obj.userData = {};\n            }\n            if (!obj.userData.position) {\n                obj.userData.position = new Vector3();\n                if (obj.position) {\n                    obj.userData.position.copy(obj.position);\n                }\n            }\n            const position = new Vector3();\n            if (obj.userData.position){\n                position.copy(obj.userData.position);\n            }\n            switch (name) {\n                case 'custom_text':\n                    if (index === 0) break;\n                    formData.custom_text = value;\n                    if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        makeTextGeometry(obj, formData.custom_text, formData.size);\n                    }\n                    break;\n                case 'custom_image':\n                    if (index === 0) break;\n                    formData.custom_image = value;\n                    makeImage(formData, obj);\n                    updateData({\n                        ...formData,\n                    })\n                    break;\n                case 'size':\n                    if (index === 0) break;\n                    formData.size = value;\n                    if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n                        let text = '';\n                        if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n                            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                            if (retailIndex !== -1) {\n                                text = data.retailers[retailIndex].retail_name;\n                            }\n                        } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                            text = formData.custom_text;\n                        }\n                        makeTextGeometry(obj, text, formData.size);\n                    } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n                        makeImage(formData, obj);\n                        if (timeoutRef.current) {\n                            clearInterval(timeoutRef.current);\n                        }\n                        timeoutRef.current = setTimeout(() => {\n                            updateData({ ...formData });\n                        }, 300);\n                    } else if (['amenity'].includes(formData.layer_type)) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            setFormData({ ...formData });\n                            updateData({ ...formData });\n                        })\n                    } else if (['kiosk'].includes(formData.layer_type)) {\n                        updateMapCenterMarkerFor(obj, formData);\n                    }\n                    break;\n                case 'lock_size':\n                    formData.lock_size = value;\n                    //TODO use 'value' until api with lock_size will be working\n                    formData.value = value;\n                    if (formData.layer_type === 'kiosk') {\n                        updateMapCenterMarkerFor(obj, formData);\n                    }\n                    break;\n                case 'rotate':\n                    if (index === 0) break;\n                    formData.rotate = value;\n                    obj.rotation.set(\n                        obj.rotation.x,\n                        obj.rotation.y,\n                        parseFloat(formData.rotate) * Math.PI / 180\n                    );\n                    break;\n\n                case 'offsetX':\n                    if (index === 0) break;\n                    position.x += parseFloat(value);\n                    obj.position.setX(position.x);\n                    formData.offsetX = value;\n                    break;\n\n                case 'offsetY':\n                    if (index === 0) break;\n                    position.y += parseFloat(value);\n                    obj.position.setY(position.y);\n                    formData.offsetY = value;\n                    break;\n\n                case 'text_color':\n                    if (index === 0) break;\n                    formData.text_color = value;\n                    if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        const material_settings = {\n                            // color: hex_to_color(formData.text_color),\n                            color: formData.text_color,\n                            transparent: true,\n                            side: DoubleSide,\n                            depthWrite: false,\n                            depthTest: false,\n                        };\n                        let text_material = new MeshPhongMaterial(material_settings);\n                        obj.material = text_material;\n                    } else if (\n                        formData.layer_type === 'retail_logo' ||\n                        formData.layer_type === 'custom_image' ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            updateData({\n                                ...formData,\n                                text_color: formData.text_color.replace('#', ''),\n                            });\n                        })\n                    }\n                    break;\n\n                case 'bg_color':\n                    if (index !== 0) break;\n                    formData.bg_color = value;\n                    let meshType: MeshType = 'store';\n                    if (obj.object_id?.startsWith('big-store')) {\n                        meshType = 'big-store';\n                    }\n                    obj.material = getMaterial(\n                        config,\n                        meshType,\n                        formData.map_obj_name,\n                        formData.bg_color,\n                        formData.transparent === \"1\"? true : false,\n                        {[formData.map_obj_name]: {...formData}}\n                        );\n                    // updateData({...formData});\n                    break;\n            \n                default:\n                    break;\n            }\n            startTransition(() => {\n                setFormData({ ...formData })\n                updateData({ ...formData });\n            });\n\n        })\n    }\n    const handleChange = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value;\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    const handleChangeLock = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value === '0'? '1' : '0';\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    useEffect(() => {\n        if (data && data.map_objs && selectedId) {\n            const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n            if (index !== -1) {\n                setFormData({...data.map_objs[index]});\n            } else {\n                setFormData({\n                    ...getDefaultMapOjbValues(centerId),\n                    id: 'new-' + (new Date()).getTime(),\n                });\n            }\n        }\n        return () => {\n            setRetailerTabsKey('');\n        }\n    }, [data, selectedId])\n\n    useEffect(() => {\n        if (!formData) return;\n        if (formData.obj_type) {\n            handleChangeTab(formData.obj_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n        if (formData.layer_type) {\n            handleChangeTab(formData.layer_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n    }, [formData])\n\n    const decrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value -= 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const incrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const rotateByFixedAngle = (key:TIncDecKey, angle: number) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += angle;\n            if (value > 360) {\n                value = angle;\n            } else if (value === 360) {\n                value = 0;\n            }\n\n            changeValue(key, value.toString());\n        }\n    }\n\n    const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            rotateByFixedAngle(key, angle);\n        }, 100);\n    } \n\n    const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            decrementValue(key);\n        }, 100);\n    }\n\n    const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            incrementValue(key);\n        }, 100);\n    }\n\n    const stopIntervals = () => {\n        let key:TIncDecKey;\n        for (key in intervalRefs.current) {\n            if (intervalRefs.current[key])\n                clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n                intervalRefs.current[key] = null;\n        }\n    }\n\n    const handleOnSubmit = () => {\n        if (params.onSubmit && context && context.MeshObject && formData) {\n            formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n            const kioskId = formData.kiosk_id !== null? parseInt(formData.kiosk_id) : null;\n            params.onSubmit({...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId});\n        }\n    }\n\n    if (!formData) return null;\n\n    return (\n        <>\n            <Tab.Container activeKey={mainTabKey}>\n                <Col>\n                    <Row>\n                        <Col sm=\"9\">\n                            <Nav\n                                variant=\"tabs\"\n                                className=\"flex-row\"\n                                // activeKey={mainTabKey}\n                                onSelect={handleChangeTab}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col sm=\"3\" className=\"px-0\">\n                            {/* \n                //@ts-ignore */}\n                            <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Tab.Content>\n                                <Tab.Pane eventKey={\"retailer\"}>\n                            <AsyncSelect\n                                className=\"mb-3\"\n                                aria-label=\"Choose a Retailer\"\n                                loadOptions={loadOptions}\n                                noOptionsMessage={() => 'Retailers not found'}\n                                placeholder=\"Choose a Retailer...\"\n                                value={data.retailers?.filter((item: IRetailer) => item.id === formData.retailer_id)?.map((item: IRetailer) => ({\n                                    value: item.id,\n                                    label: `${item.retail_name}${item.location && item.location.length > 1 ? item.location : ''}`,\n                                }))}\n                                defaultOptions={data.retailers?.map((item: any) => ({value: item.id, label: `${item.retail_name}${item.location && item.location.length > 1? item.location : ''}`}))}\n                                onChange={handleChangeRetailer}\n\n                            />\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"retail-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                    >\n                        <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                        <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                        <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"custom_text\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"special\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"special-tab-form\"\n                        activeKey={specialTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.kiosk_id?? ''} onChange={handleChangeKiosk}>\n                                <option value={''} disabled hidden>Choose a Kiosk...</option>\n                                {data.kiosks?.map((value: any, index: number) => <option key={`kiosk-${value.id}-${index}`} value={value.id}>{value.title}</option>)}\n                            </Form.Select>\n                        </Tab>\n                        <Tab eventKey=\"amenity\" title=\"Amenity\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                                <option value={''} disabled hidden>Choose Amenity...</option>\n                                {Object.keys(data.amenities)?.map((value: string) => (\n                                    <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                                ))}\n                            </Form.Select>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"custom\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"custom-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"custom_text\" title=\"Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            name=\"custom_text\"\n                                            as=\"textarea\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"custom_image\" title=\"Image\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            type=\"string\"\n                                            name=\"custom_image\"\n                                            value={formData.custom_image}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Col>\n            </Tab.Container>\n            <Form.Group className=\"mb-3 mt-3\">\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Size</Form.Label>\n                    </Col>\n                    <Col>\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('size')}\n                                    onMouseDown={handleDecrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"size\"\n                                    type=\"text\"\n                                    value={formData.size}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('size')}\n                                    onMouseDown={handleIncrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >+</Button>\n                            </div>\n                            <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                                <Row>\n                                    <Col sm=\"4\">\n                                        <Form.Check\n                                            name=\"lock_size\"\n                                            id=\"lock_size\"\n                                            type=\"checkbox\"\n                                            //TODO use 'value' until api with lock_size will be working\n                                            value={formData.value}\n                                            checked={formData.value === '1'}\n                                            onChange={handleChangeLock}\n                                        />\n                                    </Col>\n                                    <Col sm=\"8\" className=\"p-0\">\n                                        <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Rotate</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('rotate')}\n                                    onMouseDown={handleDecrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"rotate\"\n                                    type=\"number\"\n                                    value={rotation ?? formData.rotate}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('rotate')}\n                                    onMouseDown={handleIncrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                            <div style={{maxWidth: 50, height: 50}}>\n                                <Button\n                                    onClick={() => rotateByFixedAngle('rotate', 45)}\n                                    onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >\n                                    <ArrowClockwise size={'1rem'} />\n                                </Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset X</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetX')}\n                                    onMouseDown={handleDecrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n\n                                <Form.Control\n                                    name=\"offsetX\"\n                                    type=\"number\"\n                                    value={formData.offsetX}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetX')}\n                                    onMouseDown={handleIncrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetY')}\n                                    onMouseDown={handleDecrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"offsetY\"\n                                    type=\"number\"\n                                    value={formData.offsetY}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetY')}\n                                    onMouseDown={handleIncrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"3\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">BG Color</Form.Label>\n                    </Col>\n                    <Col sm=\"3\" className=\"p-0\">\n                        <Form.Control\n                            name=\"bg_color\"\n                            type=\"string\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"2\">\n                        <Form.Control\n                            type=\"color\"\n                            name=\"bg_color\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Row>\n                            <Col sm=\"3\">\n                                <input\n                                        name=\"transparent\"\n                                        id=\"transparent\"\n                                        type=\"checkbox\"\n                                        value={formData.transparent}\n                                        onChange={handleChange}\n                                ></input>\n                            </Col>\n                            <Col sm=\"9\" className=\"p-0\">\n                                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                            <Form.Label className=\"mb-0\">Text Color</Form.Label>\n                        </Col>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                name=\"text_color\"\n                                type=\"color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                {['kiosk', 'amenity'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                type=\"color\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                <Row className=\"justify-content-center px-5 py-5\">\n                    <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-')? 'Save' : 'Update'}</button>\n                </Row>\n            </Form.Group>\n        </>\n    );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext) {\n    if (context && context.MeshObject) {\n        const obj = context.MeshObject[1];\n        if (obj && obj.userData && obj.userData.kioskConfig) {\n            obj.userData.kioskConfig = undefined;\n        }\n    }\n}\n\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n    centerId: string,\n    slug: string,\n    webApiURI: string,\n}\n\nexport type RetailerData = {\n    data: IRetailer | null,\n    isLoading: boolean,\n    isError: boolean,\n    error: string | null,\n}\n\nconst defaultData: RetailerData = {\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n} \nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n    const {centerId, slug, webApiURI} = props;\n    const [data, setData] = useState<RetailerData>(defaultData);\n\n    useMemo(() => {\n        if (!slug || !centerId) {\n            setData({...defaultData});\n            return false;\n        }\n\n        let apiURI = webApiURI;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            setData({\n                isLoading: true,\n                data: null,\n                isError: false,\n                error: null,\n            })\n            fetch(`${apiURI}/v1/retailers/${slug}`, {\n                headers: {\n                    center_id: centerId,\n                }\n            }).then(\n                (response) => response.json()\n            ).then(data => {\n                setData({\n                    isLoading: false,\n                    isError: false,\n                    error: null,\n                    data: {\n                        id: data.id,\n                        retail_name: data.name,\n                        slug: data.slug,\n                        location: data.location && data.location !== '-'? data.location : '',\n                        retailer_phone: data.retailer_phone,\n                        retailer_description: data.global_retailer.description,\n                        logo: data.media.url,\n                        map_obj_name: '',\n                    }\n                });\n            }).catch((e: any) => {\n                setData({\n                    data: null,\n                    isLoading: false,\n                    isError: true,\n                    error: `Error fetch retaler data: ${e.message}`,\n                })\n            })\n        } else {\n            setData({\n                isLoading: false,\n                isError: true,\n                error: 'webApiURI not provided!',\n                data: null,\n            })\n        }\n\n    }, [centerId, slug, webApiURI]);\n\n    return data;\n\n}\n\nexport default useRetailerData;\n","import { Col, Form, FormGroup, Modal, Placeholder, Row, Spinner  } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { XCircleFill } from \"react-bootstrap-icons\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { CSSProperties, ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n    amenity: string,\n    show: boolean,\n    onHide: () => void,\n    centerId: string,\n    retailers?: IRetailer[],\n    mapObjs?: MapObj[],\n    mapObjectName?: string,\n    webApiURI: string,\n    onClick?: (id: string, amenityType?: string) => void,\n    kioskId: string,\n}\n\nconst RetailerInfoList = ({retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId}: {retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string}) => {\n    const [retailerId, setRetailerId] = useState<string>('');\n\n    const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n        e.preventDefault();\n        if (onClick) {\n            onClick(retailerId);\n        }\n    }\n\n    const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n        setRetailerId(e.target.value);\n    }\n\n    const filterRetailers = (retailers:IRetailer[], arrayObjects:MapObj[]) => {\n        return retailers.filter(retailer => \n            arrayObjects.some(obj => obj.retailer_id === retailer.id)\n        );\n    }\n\n    if (!isAmenity && (isLoading || !retailer )) {\n        return (\n        <div>\n            <div className={styles['retailer-info-spinner']} >\n                <Spinner animation=\"border\" role=\"status\" variant=\"secondary\"/>\n            </div>\n            <div className={styles['retailer-info-content']} >\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={5} /> <Placeholder bg=\"secondary\"  xs={3} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={7} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            {!!retailer && (\n                <>\n                    <div className={styles['retailer-logo']}>\n                        <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n                    </div>\n                    <div className={styles['retailer-info-content']} >\n                        <div>\n                            <b>Retailer:</b> {retailer.retail_name}\n                        </div>\n                        {retailer.location &&\n                            <div>\n                                <b>Location:</b> {retailer.location}\n                            </div>\n                        }\n                        {retailer.retailer_phone &&\n                            <div>\n                                <b>Phone:</b> {retailer.retailer_phone}\n                            </div>\n                        }\n                        {retailer.retailer_description &&\n                            <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n                        }\n                    </div>\n                </>\n            )}\n            <Form className={styles['get-directions-from']}>\n                <FormGroup>\n                    <div className=\"d-flex align-items-center gap-3\">\n                        {!kioskId.length ?\n                            <>\n                                <Form.Select\n                                    name=\"retailer\"\n                                    onChange={onChange}\n                                    value={retailerId}\n                                >\n                                    <option value={''} disabled>Get direction from ...</option>\n                                    {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                                        if (retailer && item.id === retailer.id) return null;\n                                        return (\n                                            <option key={index} value={item.id}>{item.retail_name}</option>\n                                        )\n                                    }\n                                    )}\n                                </Form.Select>\n                                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n                            </>\n                            : null\n                        }\n                    </div>\n                </FormGroup>\n            </Form>\n        </div>\n    );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n    const {\n        amenity,\n        show,\n        onHide,\n        centerId,\n        retailers,\n        mapObjs,\n        mapObjectName,\n        webApiURI,\n        onClick,\n        kioskId,\n    } = props;\n    const slug = useMemo(() => {\n        if (centerId && mapObjs && retailers && mapObjectName) {\n            const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n            if (mapObj && mapObj.retailer_id) {\n                const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n                if (retailer) {\n                    return retailer.slug;\n                }\n            }\n        }\n        return '';\n    }, [centerId, mapObjectName, mapObjs, retailers]);\n    const data = useRetailerData({ centerId, slug, webApiURI });\n    const handleOnClick = (retailerId: string) => {\n        if (!onClick) return;\n        let mapObj = null;\n        if (kioskId) {\n            mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id?? '') === parseInt(kioskId));\n        } else {\n            mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n        }\n\n        let mapObjectName = '';\n\n\n        if (mapObj) {\n            mapObjectName = mapObj.map_obj_name;\n        }\n\n        if (amenity) {\n            onClick(mapObjectName, amenity);\n        } else {\n            onClick(mapObjectName);\n        }\n    }\n\n    const isAmenity = (amenity !== '' || (mapObjectName? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n    return (\n        <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n            <div className={styles['retailerInfoCloseBtn']}>\n                <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n            </div>\n            <Modal.Body className=\"p-3\">\n                <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from \"react\";\nimport { Canvas, ThreeEvent, context, useThree } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { DoubleSide, Mesh, MeshLambertMaterial, Object3D } from \"three\";\nimport { IAmenitiesInteractiveList, IExtMesh, IJsonConfig, IMeshParams, IMeshValues, TMapMode, TMapSettingsProps } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\nimport { delete_route_path } from \"src/helpers/route.helpers\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.scss';\nimport { Alert } from 'react-bootstrap';\nimport { hex_to_color } from \"src/helpers/misc\";\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { Vector3 } from \"three\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { AmenityID } from \"src/MapBox\";\nimport { defaultVars } from \"src/defaults\";\n\ninterface ISceneComponentProps {\n  mapitData?: MapIt2Response;\n  config: Partial<IJsonConfig>;\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObj[]) => void;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n}\n\nexport interface IZoomData {\n  direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n  const { data, refreshData } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlState, setCameraControlState] = useState<any>(null);\n  const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition } = params;\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n  const [cameraLength, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n  const cameraControlStateRef = useRef<any>(null);\n  cameraControlStateRef.current = cameraControlState;\n  const deviceTypeRef = useRef<string | undefined | null>(null);\n  deviceTypeRef.current = deviceType;\n  const floorsMapRef = useRef<{ resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const handleFloorChange = (floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }\n\n  const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n  const mapCenterMarkerRef = useRef(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const context = useMeshObjectContext();\n  const { SetMeshObject } = context;\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n  const config = meshFloors.config;\n  const floors = meshFloors.floors;\n  const meshParams = meshFloors.meshParams;\n\n  const { setConfig: setCxtConfig } = context;\n\n  useEffect(() => {\n    if (context && meshFloors && meshFloors.config) {\n      setCxtConfig(meshFloors.config);\n    }\n  }, [meshFloors, setCxtConfig])\n\n  useImperativeHandle(ref, () => ({\n    refreshData,\n    createRouteToAmenity: handleAmenityClick,\n  }))\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      const resizeWidth = () => {\n        setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      }\n      window.addEventListener('resize', () => {\n        resizeWidth();\n        // Update your map or camera settings based on newWidth\n      });\n      resizeWidth();\n    }\n  }, [statsParentRef.current]);\n\n  useEffect(() => {\n    if (data && data.camera_controls_states) {\n      setCameraControlState(data.camera_controls_states);\n      setCameraControlPos(data.camera_controls_states);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (cameraControlStateRef.current) {\n      setCameraControlPos(cameraControlStateRef.current);\n    }\n  }, [deviceType, canvasWidth])\n\n  const setCameraControlPos = (camera_controls_states: any) => {\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraPos(camera_controls_states.display_app.camera)\n      setControlPos(camera_controls_states.display_app.controls)\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n      if (canvasWidth > 1024) {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (canvasWidth > 600) {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      } else {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraPos(camera_controls_states.display_app.camera)\n        setControlPos(camera_controls_states.display_app.controls)\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      }\n    }\n  }\n  const { onSettingsLoading } = params;\n  useEffect(() => {\n    if (data && meshFloors.config && onSettingsLoading) {\n      onSettingsLoading?.(\n        {\n          ...data,\n          settings: {\n            ...data.settings,\n            STYLE: meshFloors.config.STYLE,\n            ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n            AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n            AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n            BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n            BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n            BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n            BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n            MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n            OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n            OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n            STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n            STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n            WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n            WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n            KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n            STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n            CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n            CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n            ZOOM_STEP: meshFloors.config.ZOOM_STEP ?? defaultVars.ZOOM_STEP ?? '100',\n          }\n        });\n    }\n  }, [data, meshFloors, onSettingsLoading])\n\n  const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n    if (canvasWidthRef.current === 0) return;\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n      if (canvasWidthRef.current > 1024) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (canvasWidthRef.current > 600) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      } else {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      }\n    }\n  }, [config?.ROLE])\n\n  useEffect(() => {\n    if (cameraControlStateRef.current && setCameraControlPosition) {\n      setCameraControlPosition(cameraControlStateRef.current);\n    }\n  }, [cameraControlState, setCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapitData = (index: number, newData: MapObj) => {\n    const itemIndex = formMapObjData.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n    if (itemIndex !== -1) {\n      formMapObjData[itemIndex] = { index, data: { ...newData } };\n    } else {\n      formMapObjData.push({ index, data: { ...newData } })\n    }\n\n    setFormMapObjData([...formMapObjData]);\n  }\n\n  const getMapitData = useCallback((): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }, [data, formMapObjData])\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refreshData);\n    }\n  }\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    if (!config) {\n      return [null, 0, ''] // not an error - loading/initializing\n    }\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = 0;\n    if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n      const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n      const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (config.ROLE === 'WEBSITE') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n      }\n      if (config.ROLE === 'WEBSITE') {\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [config, meshParams]);\n\n  const floorsCount = data?.floors?.length ?? 0;\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsCount ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = () => {\n\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n\n    if (floorsMapRef.current) {\n      if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n        let ccs = null;\n        if (deviceTypeRef.current === \"desktop\") {\n          ccs = { ...data.camera_controls_states.desktop }\n        } else if (deviceTypeRef.current === \"display_app\") {\n          ccs = { ...data.camera_controls_states.display_app }\n        } else if (deviceTypeRef.current === \"mobile\") {\n          ccs = { ...data.camera_controls_states.mobile }\n        } else if (deviceTypeRef.current === \"tablet\") {\n          ccs = { ...data.camera_controls_states.tablet }\n        }\n        console.debug({\n          device: deviceTypeRef.current,\n          ccs\n        })\n        if (ccs) {\n          floorsMapRef?.current?.resetCamera(false, ccs);\n        }\n      } else {\n\n        floorsMapRef?.current?.resetCamera();\n\n      }\n    }\n\n  }\n\n  useEffect(() => {\n    if (!config) {\n      return;\n    }\n\n    const kiosks: IMeshValues[] = [];\n    meshFloors.meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n    // console.log('kiosks', kiosks);\n\n    const mapObjectIdToKiosk = new Map();\n    const mapObjectIdToLogo = new Map();\n    kiosks.forEach(item => {\n      mapObjectIdToKiosk.set(item.object_id, item.mesh);\n    });\n    // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n    meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n    // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n    // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    const mapData = getMapitData();\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        //TODO use 'value' until api with lock_size will be working\n        // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n        logo.userData.kioskConfig = {\n          lockSize: mapObj?.value === '1',\n          blink: item.object_id === currKioskId,\n          size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)\n        }\n        // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n        logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n        logo.visible = true;\n\n        currKioskLogo.push(logo);\n      }\n    });\n\n    // return () => {\n    //     currKioskLogo?.forEach(mesh => {\n    //         mesh.userData.htmlContent = null;\n    //     });\n    // }\n  }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObj[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (config && data && data.retailers && data.map_objs && config.SELECTED_RETAILER_SLUG) {\n      const retailer = data.retailers.find(item => {\n        return item.slug === config.SELECTED_RETAILER_SLUG;\n      })\n      if (retailer) {\n        const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [config, data, setSelectedActiveObjectId])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const textParams = meshFloors.textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const logoParams = meshFloors.storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const result = [object as IExtMesh];\n\n    if (textParams) {\n      result.push(textParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    SetMeshObject([...result]);\n  }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n      const object = meshFloors.meshParams[currentFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n      if (object) {\n        //@ts-ignore\n        handleMeshObjectContext(object);\n      }\n      //@ts-ignore\n    }\n  }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [config, setSelectedActiveObjectId]);\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    // console.log('onClick', e.object)\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value);\n      if (config && config.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleMeshObjectContext(e.object as IExtMesh);\n      setSelectedActiveObjectId(targetId ?? '');\n      // console.log('set active object', targetId);\n      setAmenityTargetType('');\n      setFromObjectId('');\n      if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext]);\n\n  const onCameraMove = useCallback((e: any) => {\n    if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n      return\n    }\n  }, []);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    console.debug()\n    setHovered(true);\n    // console.log('onPointerEnter', e.object)\n    if (!e.object.userData.storeName && config && config.ROLE !== 'PORTAL') {\n      // console.warn('onPointerEnter no storeName', e.object);\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, [config]);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerLeave', e.object)\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerMove', e.object)\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n  }\n\n  if (data && (!data.floors || data.floors.length <= 0)) {\n    return <div style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!config || !meshFloors.meshParams.length) {\n    console.warn('LOADING MAP')\n    if (config?.ROLE === 'WP_SITE') {\n      return <div style={messageStyle}>No map for Center</div>\n    }\n    return <div style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && config.ROLE === 'WEBSITE') {\n    console.error('NO KIOSK OBJECT FOUND');\n    // return <div style={messageStyle}>Map initialization error</div>\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      // setSelectedActiveObjectId(retailerId);\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }\n\n  return (\n    <>\n      {config.ROLE === 'PORTAL' &&\n        <div className={styles['mapbox-admin-form']}>\n          {!selectedActiveObjectId ?\n            <Alert variant=\"info\">Select a store to customize.</Alert>\n            :\n            <MapboxForm\n              floorIndex={currentFloorIndex}\n              meshFloors={meshFloors}\n              config={config}\n              data={getMapitData()}\n              setData={handleChangeMapitData}\n              selectedId={selectedActiveObjectId}\n              centerId={params.config.CENTER_ID as string}\n              onSubmit={handleOnSubmit}\n              apiURI={params.webApiURI}\n              onResetData={params.onResetData}\n            />\n          }\n        </div>\n      }\n\n      <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n        <UIComponent\n          accentColor={config.ACCENT_COLOR.getStyle()}\n          floors={floors}\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          amenitiesList={amenitiesList}\n          handleAmenityClick={handleAmenityClick}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          role={config.ROLE}\n          mapObjs={data?.map_objs}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n          <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n          {/*<axesHelper args={[5000]} />*/}\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n          <FloorsMap\n            onCameraMove={onCameraMove}\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            // @ts-ignore\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            config={config}\n            ref={floorsMapRef}\n            cameraPos={cameraPos}\n            controlPos={controlPos}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n          />\n        </Canvas>\n        <div ref={labelRef}\n          style={{\n            position: 'absolute',\n            padding: 10,\n            background: '#ffffff',\n            fontWeight: 600,\n            color: '#000000',\n            fontSize: 16,\n            display: currentHoveredObject ? 'block' : 'none',\n            top: 300,\n            left: 400,\n            opacity: .8,\n          }}\n        >\n          <div>\n            {currentHoveredObject && currentHoveredObject.userData.storeName}\n          </div>\n        </div>\n\n      </div>\n\n      <RetailerInfoModal\n        amenity={selectedAmenityType}\n        show={showRetailerInfo}\n        onHide={() => setShowRetailerInfo(false)}\n        centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n        mapObjectName={selectedActiveObjectId}\n        retailers={data?.retailers}\n        mapObjs={data?.map_objs}\n        webApiURI={params.webApiURI ?? ''}\n        onClick={handleRetailerInfoOnClick}\n        kioskId={config.KIOSK.toString()}\n      />\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\n\ninterface useMapIt2DataProps {\n    CENTER_ID: string;\n    mapitData?: MapIt2Response;\n    webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n    data: MapIt2Response | null,\n    refreshData: () => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n    const [data, setData] = useState<MapIt2Response | null>(null);\n\n    if (!CENTER_ID && !mapitData) {\n        console.error('useMapit2Data requires either CENTER_ID or mapitData');\n    }\n\n    const getData = useCallback(() => {\n        let apiURI = webApiURI || null;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            const retailersApiUri = `${apiURI}/v1/retailers?limit=100&page=1`;\n            const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n            const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n            const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n            const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n            const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n            const retailersPromise = fetch(retailersApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { console.error(e) })\n\n            const mapObjsPromise = fetch(mapObjsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => { console.error(e) })\n\n            const floorsPromise = fetch(floorsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            })\n                .then(data => {\n                    if (!data\n                        || !data.items\n                        || (data.items && !data.items.length)) {\n                        console.error('Empty floors data from server');\n                    }\n                    return data;\n                }).catch(e => { console.error(e) })\n\n            const kiosksPromise = fetch(kioskApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => { console.error(e) })\n\n            const settingsPromise = fetch(settingsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { console.error(e) })\n\n            const responsivePromise = fetch(responsiveApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { throw new Error(e) })\n\n            Promise.all<Array<any>>([\n                retailersPromise,\n                mapObjsPromise,\n                floorsPromise,\n                kiosksPromise,\n                settingsPromise,\n                responsivePromise\n            ]).then(data => {\n                if (data.length >= 5) {\n                    const responseData: Partial<MapIt2Response> = {};\n                    responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n                        id: item.id,\n                        retail_name: item.name,\n                        slug: item.slug,\n                        location: item.location,\n                        retailer_phone: '',\n                        retailer_description: '',\n                        logo: item.media.url,\n                        map_obj_name: '',\n                    }));\n                    responseData.map_objs = [...data[1].items].map(item => ({\n                        ...item,\n                        offsetX: item.offset_x,\n                        offsetY: item.offset_y,\n                    }));\n                    responseData.floors = [...data[2].items];\n                    responseData.settings = {\n                        ...demoData.settings as Settings,\n                        KIOSK_SIZE: \"1\",\n                    }\n                    responseData.kiosks = [];\n                    responseData.amenities = { ...demoData.amenities };\n                    responseData.kiosks = [...data[3].items];\n                    const settings: Settings = data[4]?.settings ? data[4].settings : {\n                        \"STYLE\": \"3D\",\n                        \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n                        \"ACCENT_COLOR\": \"4EA5FF\",\n                        \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n                        \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n                        \"WALL_THICKNESS\": \"0.6\",\n                        \"WALL_COLOR\": \"888888\",\n                        \"BOUNDARY_THICKNESS\": \"0.8\",\n                        \"BOUNDARY_COLOR\": \"888888\",\n                        \"BASE_COLOR\": \"25292B\",\n                        \"STORE_TEXT_COLOR\": \"222222\",\n                        \"OVERLAY_COLOR\": \"FFFFFF\",\n                        \"OVERLAY_OPACITY\": \"0.7\",\n                        \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n                        \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n                        \"ZOOM_STEP\": \"100\",\n                    };\n                    if (data[5]) {\n                        responseData.camera_controls_states = data[5];\n                    } else {\n                        responseData.camera_controls_states = { ...demoData.camera_controls_states };\n                    }\n                    responseData.settings = settings;\n\n                    setData({ ...responseData as MapIt2Response })\n                }\n            })\n        }\n    }, [CENTER_ID, webApiURI])\n\n    useEffect(() => {\n        if (mapitData) {\n            setData(mapitData);\n            return;\n        }\n\n        if (!CENTER_ID) {\n            return;\n        }\n\n        getData();\n\n    }, [CENTER_ID, mapitData, getData]);\n\n    const refreshData = () => getData();\n    return { data, refreshData };\n}","import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport styles from './MapBox.module.scss';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport { isMapIt2Response, MapIt2Response, MapObj, MapObjToSave } from \"./mapitApiTypes\";\nimport { IJsonConfig, TMapMode, TMapSettingsProps, TRoles } from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapBoxContextProvider from './contexts/MapBoxContextProvider';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station';\n\nexport interface IAppProps {\n  mapitData?: unknown;\n  config: Partial<IJsonConfig>;\n  stats?: boolean;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n\n\nfunction MapBox({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, deviceType, setCameraControlPosition, onResetData, onExtractedAmenities }: IAppProps) {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <MapBoxContextProvider>\n      <MeshObjectContextProvider>\n        <div className={`${styles['mapbox-component']} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n          <SceneComponent\n            ref={refObj}\n            setSelectedActiveObjectId={setSelectedActiveObjectId}\n            selectedActiveObjectId={selectedActiveObjectId}\n            mapitData={mapData}\n            config={config}\n            onSettingsLoading={onSettingsLoading}\n            webApiURI={webApiURI}\n            mediaStorageURI={mediaStorageURI}\n            onSubmit={handleOnSubmit}\n            onResetData={onResetData}\n            deviceType={deviceType}\n            setCameraControlPosition={setCameraControlPosition}\n            onExtractedAmenities={onExtractedAmenities}\n          />\n          <div className={styles.hide}>\n            <div id=\"map-special-svg-kiosk\">\n              <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n                <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-atm\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n                <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n                <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-management\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n                <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n                <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-playarea\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n                <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-restroom\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n                <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-family-restroom\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n                <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-elevator\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n                <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-security\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n                <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-dog-poop-station\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n                <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n                <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n                <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n                <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n                <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n              </svg>\n            </div>\n            <div id=\"map-special-svg-escalator\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"398\" viewBox=\"0 0 512 398\">\n                <g fillRule=\"evenodd\">\n                  <path fill=\"#FFF\" d=\"M217.01,68.67 C235.674,68.677 250.846,53.503 250.85,34.83 C250.846,16.072 235.674,0.9 217.01,0.87 C198.243,0.9 183.071,16.072 183.05,34.83 C183.071,53.503 198.243,68.677 217.01,68.67\"></path>\n                  <path fill=\"#FFF\" d=\"M250.49,129.63 L250.49,108.27 C250.507,62.826 183.412,63.326 183.41,108.27 L183.41,195.39 L183.53,195.39 L120.17,258.87 C114.172,264.805 113.443,265.065 101.69,265.11 C101.691,265.075 62.93,265.11 62.93,265.11 C23.943,265.065 0.557,300.113 0.53,329.79 C0.557,359.539 23.943,397.1 66.41,397.11 C66.41,397.11 119.149,397.1 135.41,397.11 C151.738,397.1 171.491,390.871 187.73,375.51 L389.93,174.03 C394.237,170.175 396.633,168.978 404.09,168.99 C404.09,168.99 431.929,168.978 454.01,168.99 C478,168.978 512,141.75 511.97,102.51 C512,63.651 477.75,37.75 451.97,37.71 L373.25,37.71 C356.899,37.664 335.943,44.326 323.45,56.79 L250.49,129.63\"></path>\n                  <path fill=\"#FFF\" d=\"M377.93,71.19 L448.85,71.19 C466.144,71.211 477.75,90.498 477.77,102.03 C477.75,113.502 469.516,134.969 448.37,134.91 L405.77,134.91 C387.75,134.969 379.75,137.5 369.41,147.87 L165.65,351.63 C157.443,359.826 146.989,363.093 133.61,363.15 L66.41,363.15 C49.149,363.093 33.943,348.496 33.89,329.31 C33.943,310.156 48.443,299.415 63.41,299.43 L109.49,299.43 C122.943,299.415 131.775,295.581 139.49,287.91 L346.61,80.79 C355.083,72.276 363.502,71.211 377.93,71.19\"></path>\n                </g>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </MeshObjectContextProvider>\n    </MapBoxContextProvider>\n\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n    id: string;\n    index?: string;\n    retail_name: string;\n    slug: string;\n    location: string;\n    retailer_phone: string;\n    retailer_description: string;\n    logo: string;\n    map_obj_name: string;\n};\n\nexport type MapObj = {\n    id: string | number;\n    center_id: string;\n    retailer_id: string;\n    kiosk_id: string | null;\n    map_obj_name: string;\n    obj_type: string;\n    layer_type: string;\n    value: string;\n    custom_text: string;\n    custom_image: string;\n    hover_text: string;\n    bg_color: string;\n    transparent: string | number;\n    text_color: string;\n    size: string;\n    lock_size: string;\n    rotate: string;\n    offsetX: string;\n    offsetY: string;\n    goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & {kiosk_id: number | null};\n\nexport type Floor = {\n    id: string;\n    svg_map?: string;\n    objsGroup?: Group;\n    interactiveObjs?: any[];\n    escalatorsObjs?: any[];\n    escalatorsNodes?: Record<any, any>;\n    escalatorMeshes?: any[];\n    route_points?: IRoutePoint[];\n    route_tube?: any;\n    route_texture?: Texture | null | undefined;\n    routeMeshes?: any[];\n    route_active?: boolean;\n    center_id?: string;\n    title: string;\n    svg?: string;\n    status?: string;\n    created_at?: string;\n};\n\nexport type CameraControlsState = {\n    camera: { x: number, y: number, z: number };\n    controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n    STYLE: '2D' | '3D',\n    MAP_BACKGROUND_COLOR: string;\n    ACCENT_COLOR: string;\n    STORE_DEFAULT_COLOR: string;\n    BIG_STORE_DEFAULT_COLOR: string;\n    WALL_THICKNESS: string;\n    WALL_COLOR: string;\n    BOUNDARY_THICKNESS: string;\n    BOUNDARY_COLOR: string;\n    BASE_COLOR: string;\n    STORE_TEXT_COLOR: string;\n    STORE_HEIGHT: string;\n    OVERLAY_COLOR: string;\n    OVERLAY_OPACITY: string;\n    AMENITIES_NAV_BG_COLOR: string;\n    AMENITIES_NAV_ICON_COLOR: string;\n    KIOSK_SIZE: string;\n    CAMERA_MIN_DISTANCE: string;\n    CAMERA_MAX_DISTANCE: string;\n    ZOOM_STEP: string;\n};\n\nexport type Kiosk = {\n    id: string;\n    title: string;\n    map_obj_name: string;\n};\n\nexport type Amenity = {\n    name: string;\n    image: string;\n};\n\nexport type MapIt2Response = {\n    retailers: IRetailer[];\n    map_objs: MapObj[];\n    floors: Floor[];\n    camera_controls_states: {\n        display_app: CameraControlsState;\n        desktop: CameraControlsState;\n        tablet: CameraControlsState;\n        mobile: CameraControlsState;\n    };\n    settings: Settings;\n    kiosks: Kiosk[];\n    amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n    name: string;\n    node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const response = obj as Record<string, unknown>;\n\n    return (\n        Array.isArray(response.retailers) &&\n        Array.isArray(response.map_objs) &&\n        Array.isArray(response.floors) &&\n        typeof response.camera_controls_states === 'object' &&\n        response.camera_controls_states !== null &&\n        typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n        typeof response.settings === 'object' &&\n        Array.isArray(response.kiosks) &&\n        typeof response.amenities === 'object'\n    );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","_path$userData","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","_floors$floor_index$r","push","Vector3","node2_name","exists2","_floors$floor_index$r2","addNode","_extends","addLink","weight","distanceTo","hex_to_color","hex_code","Color","getFormatedColor","replace","amenitiesList","type","icon","ATMIcon","_jsxs","xmlns","viewBox","children","_jsx","d","transform","fill","ManagementIcon","PlayAreaIcon","RestroomIcon","FamilyRestroom","ElevatorIcon","SecurityIcon","DogPoopStation","cx","cy","rx","ry","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","allMapObjects","allIndexedRetailers","role","_allIndexedMapObjects","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","item","_mesh$mesh_type","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","_floor$objsGroup","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","_floors$allNodesFloor","escalator_mesh","goToFloor","_floors$allNodesFloor2","direction","floor_route","routePath","create_route_path","_floors$floor_index","_floors$floor_index2","routeMeshes","create_route_paths","_floors$floor_index$o","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","set","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","_map_obj$custom_image","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","size","get_store_name_logo_geo","textLogoNamePrefix","myFont","handleAsync","new_object_id","result","boundingBox","computeBoundingBox","mesh_center_point","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","logoMesh","storeLogo","getImageLogo","MapBoxContext","createContext","meshByObjectId","Map","setMeshByObjectId","setAllMapObjects","setAllIndexedMapObjects","setAllIndexedRetailers","setAllNodesFloor","createGraph","setPathFinderGraph","setNgraphPath","MapBoxContextProvider","useState","Provider","useMapBoxContext","context","useContext","Error","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","floorsData","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","meshParams","setMeshParams","textParams","setTextParams","storeLogos","setStoreLogos","escalatorNodes","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","camera_controls_states","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","values","removeFromParent","GeometriesAndMaterials","graph","results","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","point","origin_point","target_direction","storeIntersects","intersectObjects","object","escalatorIntersects","assign_route_nodes_to_stores","has","get","_floors$i$escalatorsN","_floors$escalatorsNod","_floors$i$escalatorsN2","_floors$escalatorsNod2","nodeIdFrom","nodeIdTo","linkFloorEscalators","loadFloors","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","_mesh$geometry$index","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","useMeshObjectContext","MapCenterMarker","lockSize","blink","sizeFactor","setSizeFactor","kioskElementRef","React","kioskElement","svgOrigin","svgClone","cloneNode","appendChild","removeChild","_Fragment","className","ref","MapObject","update","setUpdate","triggerUpdate","kioskConfig","Html","pointerEvents","distanceFactor","htmlContent","uuid","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","Fragment","_params$geometry$boun","_params$goToFloor2","boundingSphere","_params$goToFloor","display","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","firstMove","setFirstMove","currentFloorIndex","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","resetCamera","route","kiosk_obj_name","amenity_type","_to_obj_name","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","targetMesh","selectedFloorMeshParams","_floors$currentFloorI","meshes","currentActiveObject","focus","aspect","cameraDistance","min","setLength","fromPosition","fromTarget","animationStartTime","duration","zoomStep","onCameraMove","vector","_cameraFocus$current","_cameraFocus$current2","animationTime","animationProgress","lerpVectors","fullReset","cameraControlsStates","controls","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","UIComponent","selectedFloorIndex","handleFloorChange","zoomIn","zoomOut","reset","handleAmenityClick","mapObjs","onExtractedAmenities","extractValues","filter","preventDefault","Function","styles","backgroundColor","defaultData","isError","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","Number","MapboxForm","_data$retailers","_data$retailers2","_formData$kiosk_id","_data$kiosks","_Object$keys","setData","selectedId","onResetData","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","setRotation","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","setIsLoading","fetchRetailers","apiURI","limit","page","search","uri","fetch","headers","toString","then","ok","json","status","statusText","url","catch","useGetRetailers","handleChangeTab","k","clearKioskConfig","updateData","isTRetailerTabsKey","retailIndex","findIndex","makeTextGeometry","_context$MeshObject","makeImage","HTMLImageElement","changeValue","_context$MeshObject4","_obj$object_id","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadOptions","inputValue","callback","label","noOptionsMessage","placeholder","location","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","Select","_context$MeshObject2","disabled","hidden","_context$MeshObject3","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","kioskId","handleRotateByFixedAngle","RetailerInfoList","isAmenity","_filterRetailers","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","slug","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","_item$kiosk_id","SceneComponent","_config$DEFAULT_SELEC","_data$floors$length","_data$floors","_params$webApiURI","refreshData","mapitData","getData","mapObjsApiUri","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","retailersPromise","mapObjsPromise","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","Promise","all","_data$","responseData","offset_x","offset_y","demoData","useMapit2Data","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","canvasWidth","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","labelRef","currentHoveredObject","setCurrentHoveredObject","showRetailerInfo","setShowRetailerInfo","setCxtConfig","createRouteToAmenity","resizeWidth","_statsParentRef$curre","offsetWidth","addEventListener","setCameraControlPos","display_app","desktop","tablet","mobile","onSettingsLoading","_ref","_meshFloors$config$ZO","getHexString","camPos","ctrlTarget","activeFromObjectId","getMapitData","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","flat","floorsCount","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","exportData","handleMeshObjectContext","_meshFloors$textParam","_meshFloors$storeLogo","logoParams","stopPropagation","targetId","messageStyle","top","left","meshFloorsChecked","handleChangeMapitData","newData","itemIndex","Alert","getStyle","resetHandle","ccs","_floorsMapRef$current","device","_floorsMapRef$current2","Canvas","Stats","parent","intensity","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","MapBox","refObj","setMapData","isMapIt2Response","fillRule"],"mappings":"gmDAOgBA,GAAcC,EAAiBC,EAAqBC,EAAsBC,GACtF,IAAIC,GAAS,EACTC,EAAmB,mBACvB,MAAMC,EAAeJ,EAAOD,GAC5B,QAAkCM,IAA9BD,EAAaE,aAA4B,CACzC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaE,aAAaE,OAAQD,IAClD,GAAIT,EAAOW,GAAKL,EAAaE,aAAaC,GAAGG,KAAKD,GAAKX,EAAOa,GAAKP,EAAaE,aAAaC,GAAGG,KAAKC,EAAG,CACpGT,GAAS,EACTC,EAAYC,EAAaE,aAAaC,GAAGK,KACzC,KACH,CAEAV,IACDC,EAjBI,SAAeF,GAC3B,MAAO,QAAUA,CACrB,CAewBY,CAAeZ,GAGlC,CACD,MAAO,CAACE,EAAWD,EACvB,OCjBaY,GAAgBA,CAACC,EAAsBC,EAAyBhB,EAAsBD,EAAqBkB,EAAiBC,EAAmBC,EAAuCC,SAA0BC,EACzN,MAAMC,EAAgB,aACtB,IAAIC,EAAqB,KACzB,IAAIC,EAA8BT,EAAKU,MAAMC,QACzCC,EAAU,EACVC,EAAU,EACVC,GAAe,EACfC,GAAY,EACZC,GAAmB,EACnBC,EAAiBf,EAAOgB,eACxBC,GAAkB,EAClBC,SAAUd,EAAGN,EAAKqB,iBAALf,EAAeX,KAAK2B,GAwHrC,OAvHkBhC,MAAd8B,EACIA,EAAWG,WAAW,aACtBf,EAAY,WACZC,EAAcP,EAAOsB,eACrBP,EAAiBf,EAAOuB,mBACJ,MAAhBvB,EAAOwB,QACPd,EAAU,IAEPQ,EAAWG,WAAW,SAC7Bf,EAAY,OACZC,EAAcP,EAAOyB,WACD,MAAhBzB,EAAOwB,QACPd,EAAU,MAEPQ,EAAWG,WAAW,eAC7Bf,EAAY,aACZC,EAAcP,EAAOyB,WACD,MAAhBzB,EAAOwB,QACPX,GAAY,IAETK,EAAWG,WAAW,kBAC7Bf,EAAY,gBACZC,EAAcP,EAAO0B,oBACD,MAAhB1B,EAAOwB,QACPd,EAAU,GACVC,GAAW,KAERO,EAAWG,WAAW,SAC7Bf,EAAY,OACZC,EAAcP,EAAO2B,YACdT,EAAWG,WAAW,UAC7Bf,EAAY,QACZC,EAAcP,EAAO4B,oBACD,MAAhB5B,EAAOwB,QACPd,EAAUmB,SAAS7B,EAAO8B,eAE1BZ,EAAWG,WAAW,oBACtBJ,GAAkB,IAEfC,EAAWG,WAAW,cAC7Bf,EAAY,YACZC,EAAcP,EAAO+B,wBACD,MAAhB/B,EAAOwB,QACPd,EAAU,KAEPQ,EAAWG,WAAW,eAC7Bf,EAAY,aACZO,GAAY,EACZf,EAAKkC,SAASC,QAAQC,IACW,GAAzBA,EAAQC,OAAO5C,QACf6C,QAAQC,KAAKhC,EAAgB,8DAA+Da,GAGhGgB,EAAQC,OAAOF,QAAQK,IAEnB,MAAMC,EAAaD,EAAMC,GAEnBC,EAAaF,EAAME,IAElBC,EAAYC,GAAW9D,GAAc2D,EAAIzD,EAAaC,EAAQkB,OACvD0C,EAATD,WACDC,EAAA5D,EAAOD,GAAaO,eAApBsD,EAAkCC,KAAK,CACnCjD,KAAM8C,EACNhD,KAAM,IAAIoD,EAAQN,EAAG/C,EAAG+C,EAAG7C,EAAG,KAElCQ,EAAcuC,GAAc3D,GAEhC,MAAOgE,EAAYC,GAAWnE,GAAc4D,EAAI1D,EAAaC,EAAQkB,GACvD+C,IAAAA,EAATD,IAC+B,OAAhCC,EAAAjE,EAAOD,GAAaO,eAApB2D,EAAkCJ,KAAK,CACnCjD,KAAMmD,EACNrD,KAAM,IAAIoD,EAAQL,EAAGhD,EAAGgD,EAAG9C,EAAG,KAElCQ,EAAc4C,GAAchE,GAEhCqB,EAAgB8C,QAAQR,EAAUS,GAAOX,CAAAA,EAAAA,IACzCpC,EAAgB8C,QAAQH,EAAUI,GAAOV,GAAAA,IAGzCrC,EAAgBgD,QAAQV,EAAYK,EAAY,CAAEM,OAAQb,EAAGc,WAAWb,KACxErC,EAAgBgD,QAAQL,EAAYL,EAAY,CAAEW,OAAQb,EAAGc,WAAWb,IAAK,EAErF,IACOtB,EAAWG,WAAW,eAC7Bf,EAAY,YACZM,GAAe,EACfE,GAAmB,GACZI,EAAWG,WAAW,WAC7Bf,EAAY,QACZQ,GAAmB,GACZI,EAAWG,WAAW,aAC7Bf,EAAY,UACZQ,GAAmB,EACnBH,EAAU,GACHO,EAAWG,WAAW,WAC7Bf,EAAY,UACLY,EAAWG,WAAW,iBAC7Bf,EAAY,gBAEZI,EAAU,EAGd0B,QAAQC,KAAKhC,EAAgB,gCAAiCP,GAiB3D,CACHQ,YACAC,cACAG,UACAC,UACAC,eACAC,YACAC,mBACAC,iBACAE,kBACAnB,OACAoB,eCpJQ,SAAAoC,GAAaC,GACzB,WAAWC,EAA0B,IAApBD,EAAShE,OAAesC,SAAS,KAAO0B,EAAU,IAAMA,EAC7E,CAEa,MAAAE,GAAoBjD,GACxBA,EAAMjB,OAGJ,IAAMiB,EAAMkD,QADT,KACoB,IAHJ,GCGjBC,GAA6C,CACtD,CACIhE,KAAM,MACNiE,KAAM,MACNC,KCdQC,IAERC,SAAK3C,GAAG,UAAoB,YAAA,UAAU4C,MAAM,6BAA6BC,QAAQ,oBAAmBC,SAAA,CAChGC,UAAMC,EAAE,kWAAkWC,UAAU,yBAAyBC,KAAK,iBAClZH,EAAA,OAAA,CAAMC,EAAE,kzBAAkzBC,UAAU,yBAAyBC,KAAK,qBDY12B,CACI3E,KAAM,aACNiE,KAAM,aACNC,KElBeU,IAEfR,SAAK3C,GAAG,UAAoB,YAAA,UAAU4C,MAAM,6BAA6BC,QAAQ,oBAAmBC,SAAA,CAChGC,UAAMC,EAAE,0cAA0cC,UAAU,2BAA2BC,KAAK,iBAC5fH,EAAA,OAAA,CAAMC,EAAE,6VAA6VC,UAAU,2BAA2BC,KAAK,qBFgBvZ,CACI3E,KAAM,YACNiE,KAAM,WACNC,KGvBaW,IAEbT,EAAK,MAAA,CAAA3C,GAAG,UAAoB,YAAA,UAAU4C,MAAM,6BAA6BC,QAAQ,iBAC7EC,SAAA,CAAAC,EAAA,OAAA,CAAMC,EAAE,+jFAA+jFC,UAAU,2BAA2BC,KAAK,iBACjnFH,EAAA,OAAA,CAAMC,EAAE,whBAAwhBC,UAAU,2BAA2BC,KAAK,iBAC1kBH,EAAA,OAAA,CAAMC,EAAE,6IAA6IC,UAAU,2BAA2BC,KAAK,qBHoBvM,CACI3E,KAAM,WACNiE,KAAM,WACNC,KI5BaY,IAEbN,EAAA,MAAA,CAAK/C,GAAG,UAAS,YAAW,UAAU4C,MAAM,6BAA6BC,QAAQ,mBAC7EC,SAAAC,EAAA,OAAA,CAAMC,EAAE,sgCAAsgCC,UAAU,2BAA2BC,KAAK,oBJ2BhkC,CACI3E,KAAM,kBACNiE,KAAM,kBACNC,KKjCea,IAEnBX,EAAK,MAAA,CAAA3C,GAAG,UAAS,YAAW,UAAU4C,MAAM,6BAA6BC,QAAQ,iBAC/EC,SAAA,CAAAC,EAAA,OAAA,CAAMC,EAAE,qYAAqYC,UAAU,sBAAsBC,KAAK,YAClbH,EAAA,OAAA,CAAMC,EAAE,8dAA8dC,UAAU,sBAAsBC,KAAK,YAC3gBH,EAAA,OAAA,CAAMC,EAAE,whBAAwhBC,UAAU,sBAAsBC,KAAK,YACrkBH,EAAM,OAAA,CAAAC,EAAE,6HAA6HC,UAAU,sBAAsBC,KAAK,YAC1KH,EAAM,OAAA,CAAAC,EAAE,8GAA8GC,UAAU,sBAAsBC,KAAK,gBL4B7J,CACI3E,KAAM,WACNiE,KAAM,WACNC,KMtCac,IAEbZ,EAAK,MAAA,CAAA3C,GAAG,UAAoB,YAAA,UAAU4C,MAAM,6BAA6BC,QAAQ,iBAC7EC,SAAA,CAAAC,EAAA,OAAA,CAAMC,EAAE,oUAAoUC,UAAU,uBAAuBC,KAAK,iBAClXH,EAAA,OAAA,CAAMC,EAAE,8IAA8IC,UAAU,uBAAuBC,KAAK,iBAC5LH,EAAA,OAAA,CAAMC,EAAE,4GAA4GC,UAAU,uBAAuBC,KAAK,qBNmClK,CACI3E,KAAM,WACNiE,KAAM,WACNC,KO3Cae,IAEbT,EAAA,MAAA,CAAK/C,GAAG,UAAS,YAAW,UAAU4C,MAAM,6BAA6BC,QAAQ,oBAC7EC,SAAAC,EAAA,OAAA,CAAMC,EAAE,0qCAA0qCC,UAAU,2BAA2BC,KAAK,oBP0CpuC,CACI3E,KAAM,mBACNiE,KAAM,mBACNC,KQhDegB,IAGfd,EAAA,MAAA,CAAK3C,GAAG,UAAS,YAAW,UAAU6C,QAAQ,kBAAiBC,SAAA,CAC3DC,EAAS,UAAA,CAAAE,UAAU,wDAAwDC,KAAK,OAAOQ,GAAG,QAAQC,GAAG,MAAMC,GAAG,OAAOC,GAAG,UACxHd,EAAS,UAAA,CAAAE,UAAU,yDAAyDC,KAAK,OAAOQ,GAAG,QAAQC,GAAG,MAAMC,GAAG,QAAQC,GAAG,SAC1Hd,EAAA,UAAA,CAASE,UAAU,uDAAuDC,KAAK,OAAOQ,GAAG,KAAKC,GAAG,QAAQC,GAAG,OAAOC,GAAG,UACtHd,EAAA,UAAA,CAASE,UAAU,wDAAwDC,KAAK,OAAOQ,GAAG,MAAMC,GAAG,QAAQC,GAAG,QAAQC,GAAG,SACzHd,EAAM,OAAA,CAAAG,KAAK,OAAOF,EAAE,2hBCG1Bc,GAAe,CACjB,aAAc,EACdC,UAAa,EACbC,SAAY,EACZC,QAAW,EACX,gBAAiB,EACjBC,KAAQ,EACRC,MAAS,EACT,YAAa,EACbC,MAAS,EACTC,KAAQ,EACR,aAAc,EACdC,SAAY,EACZC,QAAW,EACX,cAAe,GACf,aAAc,GACd,aAAc,GACd,gBAAiB,IAKf,SAAUC,GAAetF,GAC3B,OAAIA,cAA6ElB,IAA5B8F,GAAa5E,GACvD4E,GAAa5E,IAI5B,OAEauF,GAAcA,CACvB7F,EACAM,EACAY,EACAX,EACAO,EACAgF,KAEA,MAAMC,EAAoB,CACtBvF,MAAOD,aAAuBiD,EAAQjD,EAAc+C,GAAa/C,GACjEyF,KAAMC,EACNC,aAAa,EACbC,YAAY,EACZC,WAAW,EACXC,QAAS,GAEO,MAAhBrG,EAAOwB,OAA8B,QAAblB,GAAoC,MAAbA,GAC9B,YAAbA,IACAyF,EAAkBI,YAAa,EAC/BJ,EAAkBK,WAAY,GAGrB,WAAb9F,IACAyF,EAAkBvF,MAAQR,EAAOsG,cACjCP,EAAkBM,QAAUrG,EAAOuG,iBAEnCjG,GAAa,CAAC,QAAS,YAAa,SAASkG,SAASlG,IAA6B,UAAfN,EAAOyG,MAAoBX,EAAqB5E,IAA+D,GAAhD4E,EAAqB5E,GAAYgF,cACpKH,EAAkBM,QAAU,GAEhC,IAAIK,EAAW,IAAIC,EAAoBZ,GAmBvC,OAlBIzF,GAAa,CAAC,QAAS,YAAa,QAAS,WAAWkG,SAASlG,KAEjEoG,EAASE,aAAeF,EAASlG,MAC7BsF,EAAqB5E,IAA4D,IAA7C4E,EAAqB5E,GAAY2F,WACrEH,EAASlG,MAAQ8C,GAAawC,EAAqB5E,GAAY2F,UAE/DH,EAASE,aAAeF,EAASlG,OAGrCkG,EAASI,QAAS,GAEH,UAAf9G,EAAOyG,MAAoB3F,IAC3B4F,EAASL,QAAU,EACnBK,EAASR,aAAc,GAG3BQ,EAASR,YAAmC,IAArBQ,EAASL,QAEzBK,GAiFEK,GAAyBA,CAACC,EAAyBhH,EAAiBM,EAAqBY,EAAoBX,EAA6BO,EAA2BF,EAAuBD,EAAiBD,EAAiBK,EAAwBhC,EAAaD,EAAqBgH,EAA8CmB,EAAgDnH,EAAWoH,SAA8BC,EAExa,MAAMT,EAAWb,GACb7F,EACAM,EACAY,EACAX,EACAO,EACAgF,GAGEsB,EAzFiBC,EACvBrH,EACAM,EACAY,EACAR,EACAK,EACAjB,KAEA,MAAMO,EAAgB,sBAEtB,IAGIiH,EAHAC,EAASzH,EAAK0H,UAAS,GAY3B,IAAIJ,EACJ,GARIE,EADgB,MAAhBtH,EAAOwB,MACU,CAAC,iBAED,CAAC,QAAS,YAAa,OAAQ,iBAMhDlB,GAAagH,EAAed,SAASlG,GACrC8G,EAAW,IAAIK,EAAgBF,EAAQ,CACnCG,OAAQhH,EACRiH,cAAc,SAEf,GAAIrH,GARO,CAAC,OAAQ,aAAc,YAQLkG,SAASlG,GAAY,CAErD,IAAIsH,EAAkB,GAEtB9H,EAAKkC,SAASC,QAAQC,IAElBA,EAAQC,OAAOF,QAAQK,IACnB,GAAkB,aAAdA,EAAMsB,KAAqB,CAC3B,IAAIiE,EAAe,EACF,YAAbvH,IACAuH,EAAe,GAInB,IAAIC,WCrIKxF,EAAkByF,EAAY,EAAGF,EAAe,GACzE,IAAIG,EAAY,IAAIC,EAChBC,EAAS,IAAIrF,EAAQP,EAAMC,GAAG/C,EAAG8C,EAAMC,GAAG7C,EAAG,GAC7CyI,EAAS,IAAItF,EAAQP,EAAME,GAAGhD,EAAG8C,EAAME,GAAG9C,EAAG,GAG7C0I,EAAMD,EAAO1H,QAAQ4H,IAAIH,GAAQI,YAAYC,gBAAgBR,EAAYF,GACzEW,EAAgBN,EAAOzH,QAAQgI,IAAIL,GAEvCA,EAAMF,EAAOzH,QAAQ4H,IAAIF,GAAQG,YAAYC,gBAAgBR,EAAYF,GACzE,IAAIa,EAAgBP,EAAO1H,QAAQgI,IAAIL,GAEnCO,EAAWT,EAAO7E,WAAWqF,GAE7BE,EAAe,CACfpJ,EAAGgJ,EAAchJ,GAAK2I,EAAOzI,EAAI8I,EAAc9I,GAAKqI,EAAYY,EAChEjJ,EAAG8I,EAAc9I,GAAK8I,EAAchJ,EAAI2I,EAAO3I,GAAKuI,EAAYY,GAEhEE,EAAe,CACfrJ,EAAGgJ,EAAchJ,GAAK2I,EAAOzI,EAAI8I,EAAc9I,GAAKqI,EAAYY,EAChEjJ,EAAG8I,EAAc9I,GAAK8I,EAAchJ,EAAI2I,EAAO3I,GAAKuI,EAAYY,GAGhEG,EAAe,CACftJ,EAAGkJ,EAAclJ,GAAK0I,EAAOxI,EAAIgJ,EAAchJ,GAAKqI,EAAYY,EAChEjJ,EAAGgJ,EAAchJ,GAAKgJ,EAAclJ,EAAI0I,EAAO1I,GAAKuI,EAAYY,GAEhEI,EAAe,CACfvJ,EAAGkJ,EAAclJ,GAAK0I,EAAOxI,EAAIgJ,EAAchJ,GAAKqI,EAAYY,EAChEjJ,EAAGgJ,EAAchJ,GAAKgJ,EAAclJ,EAAI0I,EAAO1I,GAAKuI,EAAYY,GAapE,OAVAX,EAAUgB,OAAOJ,EAAapJ,EAAGoJ,EAAalJ,GAC9CsI,EAAUiB,OAAOJ,EAAarJ,EAAGqJ,EAAanJ,GAC9CsI,EAAUiB,OAAOF,EAAavJ,EAAGuJ,EAAarJ,GAC9CsI,EAAUiB,OAAOH,EAAatJ,EAAGsJ,EAAapJ,GAOvCsI,CACX,CD0FiCkB,CAAa5G,EAAOvB,EAAgB8G,GAC7CsB,EAAgB,IAAI1B,EAAgBK,EAAQ,CAC5CJ,OAAQhH,EACRiH,cAAc,IAElBC,EAAgBhF,KAAKuG,EACxB,MACG/G,QAAQC,KAAKhC,EAAgB,wCAAyCiC,EAAMsB,KAAM1C,EACrF,EACJ,GAGyB,GAA1B0G,EAAgBrI,OAEhB6H,EAAWQ,EAAgB,GACpBA,EAAgBrI,OAAS,EAEhC6H,EAAWgC,EAAgBxB,GAE3BxF,QAAQC,KAAKhC,EAAgB,gCAAiCa,EAErE,KAAM,CACHkG,EAAW,IAAIiC,EAAc9B,GAC7B,IAE8C,GAAtCH,EAASkC,WAAWC,SAASC,OAC7BpH,QAAQC,KAAKhC,EAAgB,8BAA+Ba,EAAYpB,EAAKqB,SAAS1B,KAE7F,CAAC,MAAOgK,GACLrH,QAAQsH,MAAMD,EAAEE,QACnB,CACJ,CAED,OAAOvC,GAcUC,CACbrH,EACAM,EACAY,EACAR,EACAK,EACAjB,GAGE8J,EAAO,IAAIC,EAAKzC,EAAUV,GAChCkD,EAAKE,UAAY5I,EACjB0I,EAAKtJ,UAAYA,EACjBsJ,EAAK9K,YAAcA,EACnB8K,EAAKG,QAAUnJ,EACfgJ,EAAKL,SAASS,EAAIrJ,EAClB,IAAIsJ,EAAY,GAChB,GAAI,CAAC,cAAe,cAAe,cAAe,WAAWzD,SAASW,OAADA,EAACrB,EAAqB5E,SAArBiG,EAAAA,EAAkC+C,YACpG,GAAIpE,EAAqB5E,GAAYgJ,YAA6D,eAA/CpE,EAAqB5E,GAAYgJ,YAA+BpE,EAAqB5E,GAAYiJ,aAAelD,EAAoBnB,EAAqB5E,GAAYiJ,aACpNF,EAAYhD,EAAoBnB,EAAqB5E,GAAYiJ,aAAaC,oBACvE,CAAC,cAAe,eAAe5D,SAASV,EAAqB5E,GAAYgJ,YAChFD,EAAYnE,EAAqB5E,GAAYmJ,YAC3B,KAAdJ,GAAoBnE,EAAqB5E,GAAYiJ,aAAelD,EAAoBnB,EAAqB5E,GAAYiJ,eACzHF,EAAYhD,EAAoBnB,EAAqB5E,GAAYiJ,aAAaC,kBAE/E,GAAI,CAAC,WAAW5D,SAASV,EAAqB5E,GAAYgJ,cAC7DD,EAAYnE,EAAqB5E,GAAYoJ,MACzCL,EAAU1K,OAAS,GAAG,CACtB,MAAMoG,EAAUhC,GAAc4G,KAAKC,GAAQA,EAAK5G,OAASqG,GACrDtE,IACAsE,EAAYtE,EAAQhG,KAE3B,CAmBwE,IAAA8K,EAoCjF,OApDAb,EAAKzI,SAAS8I,UAAYA,EACN,MAAhBjK,EAAOwB,QACPoI,EAAKc,YAAc9E,GAAetF,GAC9BY,GAAcA,EAAWsF,SAAS,cAClCoD,EAAKc,YAAc9E,GAAe,cAI1C7G,EAAOD,GAAa6L,UAAUlC,IAAImB,GAEjB,aAAbtJ,IACAvB,EAAOD,GAAa8L,gBAAgB1J,GAAc,KAClDnC,EAAOD,GAAa+L,eAAejI,KAAKgH,GACxCA,EAAKkB,aAAehM,EAAc,IAAMoC,GAGxCZ,GAAa,CAAC,QAAS,YAAa,QAAS,WAAWkG,SAASlG,KAEjEsJ,EAAKmB,cAAgB,KAUD,WAAhB/K,EAAOyG,MACPO,EAAcpE,KAAK1B,IAGF,WAAhBlB,EAAOyG,MAAkC,SAAbnG,GACZ,WAAhBN,EAAOyG,MAAqC,iBAAhBzG,EAAOyG,MAA2BX,EAAqB5E,IAA4D,YAA7C4E,EAAqB5E,GAAY8J,UAA0E,MAAhDlF,EAAqB5E,GAAYiJ,aAC9K,WAAhBnK,EAAOyG,MAAoC,gBAAfzG,EAAOyG,MAA0BX,EAAqB5E,IAA8D,WAA/C4E,EAAqB5E,GAAYgJ,YAAqE,IAA1CpE,EAAqB5E,GAAYoJ,OAC9K,WAAhBtK,EAAOyG,MAAsBX,EAAqB5E,KAA+D,YAA9C4E,EAAqB5E,GAAY8J,UAAwE,WAA9ClF,EAAqB5E,GAAY8J,WAC/I,WAAhBhL,EAAOyG,MAAqB,CAAC,QAAS,QAAS,WAAWD,SAAuB,OAAfiE,EAACb,EAAKtJ,WAASmK,EAAG,KAMpE,WAAhBzK,EAAOyG,OAHR1H,EAAOD,GAAamM,gBAAgBrI,KAAKgH,IAa1C,CACHA,OACAxC,WACAV,WACAoD,UAAW5I,EACXZ,YACAxB,cACAiL,QAASnJ,EACT8J,YAAad,EAAKc,cE5PpBrK,GAAgB,mBA6CN6K,GAAahL,EAAuCiL,EAA6BC,EAA2BC,EAActM,EAAsBuM,EAA2BnL,EAAwBoL,GAC/M,GAAIJ,IAAwBC,EACxB,MAAO,GAEX,MAAMI,EAMV,SAA4BL,EAA6BC,EAA2BC,EAAcnL,EAAuCoL,EAAyBvM,EAAsBoB,EAAwBoL,EAAeE,EAAgB,MAE3O,MAAMD,EAAa,IA9BjB,SAA4BzM,GAC9B,IAAK,IAAID,EAAc,EAAGA,EAAcC,EAAOQ,OAAQT,IAAe,CAClE,MAAM4M,EAAQ3M,EAAOD,GAGS,IAAA6M,EAF9BD,EAAME,cAAe,EAEG,MAApBF,EAAMG,aACNH,EAAMG,WAAWzE,SAAS0E,UAE1BJ,EAAMG,WAAWnF,SAASoF,UACX,OAAfH,EAAAD,EAAMf,YAANgB,EAAiBI,OAAOL,EAAMG,aAGlCH,EAAMG,gBAAazM,EACnBsM,EAAMM,cAAgB,KACtBN,EAAMO,gBAAkB,EAC3B,CACL,CAeIC,CAAkBnN,GAClB,IAAIoN,EAAWd,EAAMe,oBAAoB,YAAajB,GAClDkB,EAAShB,EAAMe,oBAAoB,YAAahB,GAChDkB,EAAiBH,EAASpB,cAC1BwB,EAAeF,EAAOtB,cAiB1B,GAHKuB,GAAgBlK,QAAQsH,MAAMrJ,GAAgB,sCAAuC8K,GACrFoB,GAAcnK,QAAQsH,MAAMrJ,GAAgB,sCAAuC+K,IAEnFkB,IAAmBC,EAAc,OAAOf,EAE7C,MAAMgB,EAAyBL,EAASrN,YAClC2N,EAAuBJ,EAAOvN,YAU9B4N,EA4HV,SAAyBJ,EAAwBC,EAAsBI,GACnE,IAAID,EAAaC,EAAgBpC,KAAKgC,EAAcD,GACpD,OAAyB,GAArBI,EAAWnN,QACRmN,CACX,CAhIuBE,CAAgBN,EAAgBC,EAR3BM,EAAWC,MAAM3M,EAAiB,CACtDwI,SAAU,SAAUoE,EAAUC,EAAQC,GAClC,QAAIA,EAAKC,MAAaD,EAAKC,KAAK9J,MAEpC,EAEA+J,OAAO,KAGLC,EAAsB,GAC5B,IAAKV,EACD,MAAO,GAEX,MAAMW,EAAe,GAErB,IAAK,IAAIC,EAAQ,EAAGA,EAAQZ,EAAWnN,OAAQ+N,IAAS,CACpD,MAAMC,EAAYb,EAAWY,GACzBD,EAAanN,EAAcqN,EAAUnM,KACrCiM,EAAanN,EAAcqN,EAAUnM,KAAKwB,KAAK2K,GAE/CF,EAAanN,EAAcqN,EAAUnM,KAAO,CAACmM,GAG7CjC,EAAgB9E,SAAS+G,EAAUnM,KAAOkK,EAAgB9E,SAASkG,EAAWY,EAAQ,GAAGlM,KAAOkK,EAAgB9E,SAASkG,EAAWY,EAAQ,GAAGlM,KAG/IgM,EAAoBxK,KAAK2K,EAEhC,CACD,IAAK,IAAID,EAAQ,EAAGA,EAAQF,EAAoB7N,OAAQ+N,IAAS,CAC7D,MAAMC,EAAYH,EAAoBE,GACtC,GACIpN,EAAckN,EAAoB,GAAGhM,MAAQlB,EAAckN,EAAoBA,EAAoB7N,OAAS,GAAG6B,KAC5GkK,EAAgB9E,SAAS+G,EAAUnM,IACxC,CACE,MAAM0J,EAAe0C,OAAOC,KAAK1O,EAAOmB,EAAcqN,EAAUnM,KAAKwJ,iBAA2BL,KAAKmD,IAAG,IAAAC,EAAI,OAAmC,OAAnCA,EAAA5O,EAAOmB,EAAcqN,EAAUnM,cAAIuM,EAAnCA,EAAqC/C,wBAArC+C,EAAuDD,MAASH,EAAUnM,KAChLwM,EAA2BvC,EAAMe,oBAAoB,eAAgBlM,EAAcqN,EAAUnM,IAAM,IAAM0J,GAC/G,IAAI+C,EAAY,KAgBiB,IAAAC,EAd7B5N,EAAcqN,EAAUnM,MAAQlB,EAAckN,EAAoBE,EAAQ,GAAGlM,KAAOkK,EAAgB9E,SAAS4G,EAAoBE,EAAQ,GAAGlM,MAC5IyM,EAAY,CACRP,MAAOpN,EAAckN,EAAoBE,EAAQ,GAAGlM,IACpD2M,UAAW,SAIf7N,EAAcqN,EAAUnM,MAAQlB,EAAckN,EAAoBE,EAAQ,GAAGlM,KAAOkK,EAAgB9E,SAAS4G,EAAoBE,EAAQ,GAAGlM,MAC5IyM,EAAY,CACRP,MAAOpN,EAAckN,EAAoBE,EAAQ,GAAGlM,IACpD2M,UAAW,aAIfF,GAAaD,IACbA,EAAeC,UAAYA,SAE3BC,EAAA/O,EAAOmB,EAAcqN,EAAUnM,cAAI0M,EAAnCA,EAAqC7B,kBAArC6B,EAAsDlL,KAAKgL,GAElE,CAEJ,CACD,IAAK,IAAI9O,EAAc,EAAGA,EAAcuO,EAAa9N,OAAQT,IAAe,CACxE,MAAMkP,EAAcX,EAAavO,GACjC,GAAIkP,GAAeA,EAAYzO,OAAS,EAAG,CACvC,MAAM0O,EAAYC,GAAkBF,EAAalP,EAAaC,EAAQwM,GAK1B4C,IAAAA,EAIFC,EAR1C5C,EAAW1M,GAAemP,EAE1BlP,EAAOD,GAAa8M,cAAe,EACnC7M,EAAOD,GAAauP,YAAc,CAAEJ,GAChCnP,IAAgB0N,IAEG2B,OAAnBA,EAAApP,EAAOD,KAAyB,OAAbqP,EAAnBA,EAAqBE,cAArBF,EAAkCvL,KAAKuJ,IAEvCrN,IAAgB2N,IAEG,OAAnB2B,EAAArP,EAAOD,YAAYsP,EAAnBA,EAAqBC,cAArBD,EAAkCxL,KAAKyJ,GAG9C,CACJ,CAOD,OAAOb,CACX,CA1HuB8C,CAAmBnD,EAAqBC,EAAmBC,EAAOnL,EAAeoL,EAAiBvM,EAAQoB,EAAiBoL,GAG9I,OAFKC,EAAWjM,QAAQ6C,QAAQC,KAAKhC,GAAgB,0CAA2C8K,EAAqBC,GAE9GI,CACX,CAwHA,SAAS0C,GACLxB,EACA5N,EACAC,EACAwM,EAAQ,MAAI,IAAAgD,EAEZ,IAAI5F,EAAW,EACX6F,EAAa,IAAIC,EACrB,IAAK,IAAInP,EAAI,EAAGA,EAAIoN,EAAWnN,OAAQD,IAAK,CACxC,IAAIoP,EAAY,IAAI7L,EAAQ6J,EAAWpN,EAAI,GAAG4N,KAAK1N,EAAGkN,EAAWpN,EAAI,GAAG4N,KAAKxN,EAAG,GAC5EiP,EAAU,IAAI9L,EAAQ6J,EAAWpN,GAAG4N,KAAK1N,EAAGkN,EAAWpN,GAAG4N,KAAKxN,EAAG,GACtE8O,EAAW/F,IAAI,IAAImG,EAAWF,EAAWC,IACzChG,GAAY+F,EAAUrL,WAAWsL,EACpC,CACD,IAAIvH,EAAyB,IAAIyH,EAAaL,EAAY,IAAK,EAAG,GAElEpH,GAAW,IAAI0H,GAAiBC,KAAK3H,GACrC,IAAIV,EAAW,IAAIsI,EAAkB,CACjCC,IAAKC,GAAkBvG,EAAU7J,EAAaC,GAC9CmH,aAAa,EACbF,KAAMC,EACNG,WAAW,EACXD,YAAY,IAGhB,IAAI0F,EAAa,IAAIhC,EAAKzC,EAAUV,GAepC,MAdc,OAAV6E,IACAM,EAAWtC,SAASS,GAAK,GACzB6B,EAAWsD,MAAMnF,EAAI,IAEzB6B,EAAWtC,SAASS,EAAI,EACxB6B,EAAWnB,YAAc9E,GAAe,cACxCiG,EAAWvL,UAAY,aAEvBuL,EAAWzE,SAASgI,aAAa,EAAGvD,EAAWzE,SAASkG,MAAM9D,OAG9DzK,EAAOD,GAAa+M,WAAaA,EACjC0C,OAAAA,EAAAxP,EAAOD,GAAa6L,YAApB4D,EAA+B9F,IAAIoD,GAE5BA,CACX,CAuCA,SAASqD,GAAkBvG,EAAkB7J,EAAqBC,GAC9D,IACIsQ,EADSC,SAASC,cAAc,UACnBC,WAAW,MAC5B,GAAIH,EAAK,CACLA,EAAII,OAAOC,MAAQ/G,EACnB0G,EAAII,OAAOE,OAAS,GAEpBN,EAAIO,UAAY,UAChBP,EAAIQ,SAAS,EAAG,EAAGlH,EAAU,IAE7B,IAAImH,EAAY,GAAMnH,EACtB,MAAMoH,EAAgB,GAChBC,EAAgB,IAClBF,EAAYC,IAAeD,EAAYC,GACvCD,EAAYE,IAAeF,EAAYE,GAE3C,IAAIC,EAAMZ,EAAIa,qBAAqB,EAAG,EAAGJ,EAAW,GACpDG,EAAIE,aAAa,EAAG,WACpBF,EAAIE,aAAa,GAAK,SACtBF,EAAIE,aAAa,GAAK,SACtBF,EAAIE,aAAa,EAAG,WAEpBd,EAAIO,UAAYK,EAChBZ,EAAIQ,SAAS,GAAI,EAAGC,EAAW,IAEnC,IAAI9D,EAAgB,IAAIoE,EAAcf,EAAII,QAMtC,OALJzD,EAAcqE,OAAO7Q,EAAI,EACzBwM,EAAcsE,WAAa,OAEvBvR,EAAOD,GAAakN,cAAgBA,EAE7BA,CACV,CAGL,CC3SA,IAAIhN,GAAa,ECXV,MA+BMuR,GAA2B,CACpCC,qBAAsB,GACtB/J,KAAM,UACNgK,OAAQ,cACRC,MAAO,GACPC,OAAQ,GACRC,OAAQ,CAAE,EACVC,UAAW,KACXC,MAAO,QACPtP,MAAO,KACPuP,MAAO,IACPC,aAAc,SACdpP,oBAAqB,SACrBE,aAAc,IACdC,wBAAyB,SACzBf,eAAgB,MAChBO,mBAAoB,MACpBE,WAAY,SACZH,eAAgB,SAChBK,WAAY,SACZD,oBAAqB,SACrBuP,iBAAkB,SAClB3K,cAAe,SACfC,gBAAiB,MACjB2K,uBAAwB,KACxBC,yBAA0B,KAC1BC,wBAAyB,KACzBC,wBAAyB,KACzBC,uBAAwB,KACxBC,OAAQ,CACJC,YAAa,IACbC,YAAa,KACbC,UAAW,IAEfC,WAAY,KACZC,UAAW,gBCKCC,GAA+B/H,EAAmBgI,EAAqBC,EAAoBC,EAAelM,GACtH,IAAImM,EAAUnM,EAAqBgE,GAE9BmI,IACDA,EAAU,CACNC,QAAS,IACTC,QAAS,IACTC,OAAQ,MAIhB,IAAIF,EAAUrQ,SAASoQ,EAAQC,SAC3BC,EAAUtQ,SAASoQ,EAAQE,SAE/BL,EAAW9H,GAAK+H,EAAU/H,EAG1BgI,EAAQK,UAAYxQ,SAASoQ,EAAQG,QAErCJ,EAAQM,QAAQN,EAAQK,UAAYE,KAAKC,GAAK,KAE9CR,EAAQ7C,MAAMzP,IAAM,EAEpBoS,EAAWtS,GAAK0S,EAChBJ,EAAWpS,GAAKyS,EAEhBH,EAAQzI,SAASkJ,IAAIX,EAAWtS,EAAGsS,EAAWpS,EAAGoS,EAAW9H,EAAI,EACpE,CAoFa,MAAA0I,GAAWA,CAACT,EAA8BU,KAC/C,MAAMC,EAAM,IAAIC,MAEhB,GADAD,EAAIE,YAAc,YACM,YAApBb,EAAQjH,SAAwB,CAChC,IAAI2H,EAIA,OADAvQ,QAAQsH,MAAM,2BAFdkJ,EAAIG,IAAMJ,EAASK,IAK1B,MAAUf,GAAoB,WAApBA,EAAQjH,SAAuB,CAEtC,IAAIiI,EAAiBhB,EAAQ3H,MAG7B,GAF0B,SAAtB2H,EAAQ/H,aAAuB+I,EAAiB,SAC1B,aAAtBhB,EAAQ/H,aAA2B+I,EAAiB,aACpDA,EAAgB,CAChB,IAAIC,EAAY,SACU,MAAtBjB,EAAQkB,aACRD,EAAYjB,EAAQkB,YAGxB,MAAMC,EAAY9D,SAAS+D,eAAe,mBAAqBJ,GAC/D,IAAKG,EAED,OADAhR,QAAQsH,MAAM,sBAAuBuJ,GAExC,KACD,MAAMK,EAAcF,EAAUG,cAAc,OAC5C,IAAKD,EAED,OADAlR,QAAQsH,MAAM,wBAAyBuJ,QAInBK,EAAYE,iBAAiB,UACrCvR,QAASwR,IACrBA,EAAeC,aAAa,OAAQ,IAAMR,EAC9C,GAEA,MAAMS,GAAW,IAAIC,eAAiBC,kBAAkBP,GACxDV,EAAIG,IAAM,6BAA+Be,OAAOC,KAAKC,SAASC,mBAAmBN,IACpF,CAEJ,KAAM,CAAAO,IAAAA,EACH,GAA6B,KAAzBjC,EAAQkC,cAA8BD,MAAPjC,GAAqB,OAAdiC,EAAPjC,EAASkC,gBAATD,EAAuB7S,WAAW,QAGjE,YAFAuR,EAAIG,IAAMd,EAAQkC,YAIzB,CAED,OAAOvB,GAGFwB,GAAeA,CAACxB,EAAuBX,EAA8BoC,KAC9EzB,EAAI0B,OAAS,WACT,MAAMC,EAAIjF,SAASC,cAAc,UAC3BF,EAAMkF,EAAE/E,WAAW,MAEzB+E,EAAE7E,MAAQkD,EAAIlD,MACd6E,EAAE5E,OAASiD,EAAIjD,OAEZ,MAAHN,GAAAA,EAAKmF,UAAU5B,EAAK,EAAG,GAEvB,IAAI6B,EAAU,IAAIrE,EAAcmE,GAChCE,EAAQnE,WAAa,OAErB,MAAMlJ,EAAW,IAAIsN,EAAczC,EAAQ0C,KAAM1C,EAAQ0C,KAAO/B,EAAIjD,OAASiD,EAAIlD,OAC3EhJ,EAAW,IAAIsI,EAAkB,CACnCC,IAAKwF,EACLvO,aAAa,EACbF,KAAMC,EACNG,WAAW,EACXD,YAAY,IAGW,UAAvB8L,EAAQ/H,aACRxD,EAASqD,SAAU,GAGvBsK,EAAYjN,EAAUV,EAC1B,CACJ,EAyCM,SAAUkO,GAAwBxN,EAA0B0C,EAAkBhL,EAAqB+V,EAA4B/O,EAAwCmB,EAAuCjH,EAA0B8U,EAAa/V,EAA0BgW,GACjR,MAAMC,EAAgBH,EAAqB/K,EAE3C,IAAImL,EAAS,KAKb,GAHK7N,EAAS8N,aACV9N,EAAS+N,sBAER/N,EAAS8N,YACV,YAGJ,MAAMA,EAAc9N,EAAS8N,YAEvBE,EAAoB,IAAIvS,EAC9BqS,EAAYG,UAAUD,GAEtB,MAAMrD,EAAY,IAAIlP,EACtBqS,EAAYI,QAAQvD,GAGpB,IAAIE,EAAkBnM,EAAqBgE,GAAYhE,EAAqBgE,GAAa,CAACI,WAAYJ,EAAUzI,WAAW,aAAc,YAAc,cAAegJ,YAAe,GAAIsK,KAAQ,GAEjM,GAAI,CAAC,cAAe,cAAe,eAAenO,SAASyL,EAAQ/H,YAAa,CAC5E,IAAIqL,EAAO,GAEPA,EADsB,eAAtBtD,EAAQ/H,YAA+B+H,EAAQ9H,aAAelD,EAAoBgL,EAAQ9H,aACnFlD,EAAoBgL,EAAQ9H,aAAaC,YACzC,CAAC,cAAe,eAAe5D,SAASyL,EAAQ/H,YAChD+H,EAAQ5H,YAER,GAGX,IAAI8I,EAAa7P,GAAatD,EAAOiR,kBACjCgB,EAAQkB,aACRA,EAAa7P,GAAa2O,EAAQkB,aAUtC,IAAIqC,EAAgB,IAAIC,EAPE,CACtBjV,MAAO2S,EACPjN,aAAa,EACbF,KAAMC,EACNE,YAAY,EACZC,WAAW,IAGXsP,EAAgB,IAAIC,EAAaJ,EAAM,CACvCK,KAAMd,EACNH,KAAM9S,SAASoQ,EAAQ0C,MACvBhF,OAAQ,IACRkG,cAAe,IAEnBH,EAAcI,SAEd,MAAMC,EAAW,IAAIlM,EAAK6L,EAAeF,GACzCO,EAAS5U,SAASyU,KAAOd,EACzBjD,GAA+B/H,EAAWsL,EAAmBrD,EAAWgE,EAAUjQ,GAClFiQ,EAASjM,UAAYkL,EACrBe,EAASjX,YAAcA,EACvBiX,EAASrL,YAAc9E,GAAe,cACX,gBAAvBqM,EAAQ/H,aACR6L,EAAS5U,SAASiJ,YAAcmL,GAGpCxW,EAAOD,GAAa6L,UAAUlC,IAAIsN,GAsBlCd,EAAS,CAAEc,WACd,MAGwB,eAAtB9D,EAAQ/H,YACc,gBAAtB+H,EAAQ/H,YACa,WAApB+H,EAAQjH,UAA+C,SAAtBiH,EAAQ/H,YAA6C,MAApB+H,EAAQ+D,UACtD,WAApB/D,EAAQjH,UAA+C,WAAtBiH,EAAQ/H,YAA4C,IAAjB+H,EAAQ3H,OACnD,aAAtB2H,EAAQ/H,aArInB,SAAsBpE,EAA8CmB,EAA0CgL,EAA8BrI,EAAqBE,EAAmBkL,EAA8BI,EAA4BrD,EAAoBhT,EAAagW,GAC3Q,MAAMnC,EAAMF,GAAST,EAAShL,EAAoBgL,EAAQ9H,cAE9C,OAARyI,GAEJwB,GAAaxB,EAAKX,EAAS,CAAC7K,EAAUV,KAAYyH,IAAAA,EAC9C,MAAM8H,EAAW,IAAIpM,EAAKzC,EAAUV,GAG9B5H,EAAc8K,EAAK9K,YACzB+S,GAA+B/H,EAAWsL,EAAmBrD,EAAWkE,EAAUnQ,GAClFmQ,EAASnM,UAAYkL,EACrBiB,EAASnX,YAAcA,EACvBmX,EAASvL,YAAc9E,GAAe,eACtCuI,OAAAA,EAAApP,EAAOD,KAAPqP,EAAqBxD,UAAUlC,IAAIwN,GAkBnClB,EAAY,CAACmB,UAAWD,KAGhC,CAoGQE,CAAarQ,EAAsBmB,EAAqBgL,EAAS7K,EAAU0C,EAAWkL,EAAeI,EAAmBrD,EAAWhT,EAAQgW,GAIhJ,OAAOE,CACV,s3zGC9XA,MAAMmB,GAAgBC,EAAiC,CACnDC,eAAgB,IAAIC,IACpBC,kBAAmBA,IAAM,KACzBxP,cAAe,GACfyP,iBAAkBA,IAAM,KACxB3Q,qBAAsB,CAAE,EACxB4Q,wBAAyBA,IAAM,KAC/BzP,oBAAqB,CAAE,EACvB0P,uBAAwBA,IAAM,KAC9BzW,cAAe,CAAA,EACf0W,iBAAkBA,IAAM,KACxBzW,gBAAiB0W,IACjBC,mBAAoBA,IAAM,KAC1BjK,WAAY/M,EACZiX,cAAeA,IAAM,OAGnBC,GAAwBA,EAAE9S,eAEhC,MAAOoS,EAAgBE,GAAqBS,EAA8C,IAAIV,MACvFvP,EAAeyP,GAAoBQ,EAA6C,KAChFnR,EAAsB4Q,GAA2BO,EAAoD,CAAA,IACrGhQ,EAAqB0P,GAA0BM,EAAmD,CAAE,IACpG/W,EAAe0W,GAAoBK,EAA6C,CAAA,IAGhF9W,EAAiB2W,GAAsBG,EAA+CJ,MACtFhK,EAAYkK,GAAiBE,EAA0CnX,GAE9E,OACIqE,EAACiS,GAAcc,SAAQ,CAAC5M,MAAO,CAC3BgM,iBACAE,oBACAxP,gBACAyP,mBACA3Q,uBACA4Q,0BACAzP,sBACA0P,yBACAzW,gBACA0W,mBACAzW,kBACA2W,qBACAjK,aACAkK,iBAGC7S,SAAAA,GACoB,WAKbiT,KACZ,MAAMC,EAAUC,EAAWjB,IAE3B,QAAgBhX,IAAZgY,EACA,MAAU,IAAAE,MAAM,8DAGpB,OAAOF,CACX,CCxDa,MAAAvC,GAAqB,gBAE5B7U,GAAMkD,GAAA,CAAA,EAAqBqN,GH7BsB,CACnD9J,KAAM,UACNgK,OAAQ,cACRI,UAAW,GACXH,MAAO,GACPlP,MAAO,KACP8P,uBAAwB,GACxBP,MAAO,IAEPP,qBAAsB,SACtBQ,aAAc,SACdpP,oBAAqB,SACrBE,aAAc,IACdC,wBAAyB,SACzBf,eAAgB,MAChBS,WAAY,SACZF,mBAAoB,MACpBD,eAAgB,SAChBK,WAAY,SACZsP,iBAAkB,SAClB3K,cAAe,SACfC,gBAAiB,MAGjBgL,OAAQ,CACJC,YAAa,IACbC,YAAa,KACbC,UAAW,MGIb6F,GAAsB,CAC3BnW,GAAI,KACJoW,UAAWxX,GAAO6Q,UAClB1G,YAAa,KACb6L,SAAU,KACVyB,aAAc,GACdzM,SAAU,WACVd,WAAY,cACZI,MAAO,GACPD,YAAa,GACb8J,aAAc,GACduD,WAAY,GACZ7Q,SAAU,GACVX,YAAa,EACbiN,WAAY,GACZwB,KAAM,EACNvC,OAAQ,EACRF,QAAS,EACTC,QAAS,GAIV,IAAIwF,GAAoC,GAIxC,MAAMC,GAA0B,GAGhC,IAAIC,GAA4B,GA+BhC,MAuIMC,GAAgBA,CAAC5K,EAA2B6K,EAAmC7Q,EAAe8Q,KAChG,MAAMlS,qBAACA,EAAoBmB,oBAAEA,EAAmBD,cAAEA,EAAa9G,cAAEA,EAAaC,gBAAEA,EAAe2W,mBAAEA,GAAsBK,MAChHc,EAAYC,GAAiBjB,EAA0B,KACvDkB,EAAYC,GAAiBnB,EAAuC,KACpEoB,EAAYC,GAAiBrB,EAAgC,KAE7DsB,EAAgBC,GAAqBvB,EAAmB,KACxDwB,EAAMC,GAAWzB,EAAmB,KACnC0B,EAAiBC,GAAuB3B,EAAuB,MACvE,IAAIhC,EAAS4D,EAAUC,EAAWL,GAElCZ,GAAoBkB,EAAQ,IAEpBf,EACsB,MAAfA,OAAe,EAAfA,EAAiBtU,QAFlB,MAE6B,IAGhC,GAER,CAACsU,IAIJ,MAAMlD,EAASkE,EAAQC,IAOjBC,EAAwBC,EAAaC,GAAyBC,IAChEf,EAAegB,IAEPA,EAAUF,GACVE,EAAUF,GAAYxW,KAAIM,GAAKmW,CAAAA,EAAAA,IAE/BC,EAAUF,GAAc,CAAAlW,GAAKmW,CAAAA,EAAAA,IAG1B,IAAIC,IACd,EACD,IA8GJ,OA3GAC,EAAU,KACN,IAAKrM,EAAM,OAKX,MAAMyL,EAzLDa,EAAC1T,EAA8CmB,EAAgDjH,EAAqBjB,EAAqB0a,KAClJ,MAAM7I,EAA+B,CAAA,EAErC6I,EAASC,OAAOzX,QAASuD,IACrB,MAAMmU,EAASF,EAASG,SAASrP,KAAKC,GAAQA,EAAKwL,WAAaxQ,EAAMpE,IAClEuY,IACAnU,EAAMiS,aAAekC,EAAOlC,cAEhC7G,EAAOpL,EAAMpE,IAAMoE,CACvB,GAGA,IAAK,IAAI8H,KAASmM,EAASI,UAAW,CAClC,MAAMlH,EAAW8G,EAASI,UAAUvM,GACpCrG,EAAoB0L,EAASvR,IAAMuR,EACnC1L,EAAoB0L,EAASvR,IAAIkM,MAAQA,CAC5C,EAnCL,SAA+BxH,EAA6C8T,GANvDE,KACpB,IAAK,IAAIpM,KAAOoM,SACRA,EAAIpM,EACX,EAIDqM,CAAYjU,GAET6R,GAA0BiC,EAE1B,IAAK,IAAIta,EAAI,EAAGA,EAAIsa,EAASra,OAAQD,IAAK,CACtC,MAAMwa,EAAMF,EAASta,GACrBwG,EAAqBgU,EAAIrC,cAAgBqC,EACzC,IAAK,IAAIpM,KAAO6J,GAAqB,CACjC,MAAMjN,EAAQiN,GAAoB7J,GAErB,MAATpD,GAA6B,MAAZwP,EAAIpM,KAErB5H,EAAqBgU,EAAIrC,cAAc/J,GAAOpD,EAErD,CACJ,CACL,CAuBI0P,CAAsBlU,EAAsB2T,EAASG,UAErD7a,EAAOQ,OAAS,EAChBka,EAAS1a,OAAOkD,QAAQ,CAACqI,EAAmBgD,KACxC,MAAM3C,EAAY,IAAIsP,EACtBtP,EAAUwE,MAAMzP,IAAM,EACtBiL,EAAUuP,OAAO,EAAG,EAAG,GAEvBnb,EAAO6D,KAAK,CACRxB,GAAIkJ,EAAMlJ,GAEV+Y,QAAStC,GAAoB,IAAMvN,EAAM8P,IACzCC,MAAO/P,EAAM+P,MACb1P,UAAWA,EACXM,gBAAiB,GACjBJ,eAAgB,GAChBD,gBAAiB,CAAE,EACnBqB,gBAAiB,GACjB5M,aAAc,GACdwM,gBAAYzM,EACZ4M,cAAe,KACfqC,YAAa,GACbzC,cAAc,GAEtB,GAIA5L,EAAOuR,OAAO+I,IADa,IAE3Bta,EAAOuR,OAAOgJ,IAJa,GAK3B,MAAMC,EALqB,GAKgBxa,EAAOuR,OAAOgJ,IAmDzD,OAlDAva,EAAOuR,OAAOE,aAAe+I,EAC7Bxa,EAAOuR,OAAO+I,KAAOE,EAEY,CAC7BxJ,aAAc1N,GAAamW,EAASgB,SAASzJ,aAAeyI,EAASgB,SAASzJ,aAAehR,EAAOgR,cACpGrP,WAAY2B,GAAamW,EAASgB,SAAS9Y,WAAa8X,EAASgB,SAAS9Y,WAAa3B,EAAO2B,YAC9FI,wBAAyBuB,GAAamW,EAASgB,SAAS1Y,wBAA0B0X,EAASgB,SAAS1Y,wBAA0B/B,EAAO+B,yBACrIT,eAAgBgC,GAAamW,EAASgB,SAASnZ,eAAiBmY,EAASgB,SAASnZ,eAAiBtB,EAAOsB,gBAC1GC,mBAAoBmZ,WAAWjB,EAASgB,SAASlZ,mBAAqBkY,EAASgB,SAASlZ,mBAAqBvB,EAAOuB,oBACpHG,oBAAqB4B,GAAatD,EAAO0B,qBACzC6P,OAAMrO,GACClD,GAAAA,EAAOuR,OACVC,CAAAA,YAAa3P,SAAS4X,EAASgB,SAASE,qBAAsB9Y,SAAS4X,EAASgB,SAASE,qBAAuB3a,EAAOuR,OAAOC,YAC9HC,YAAa5P,SAAS4X,EAASgB,SAASG,qBAAsB/Y,SAAS4X,EAASgB,SAASG,qBAAuB5a,EAAOuR,OAAOE,cAElIP,uBAAwBuI,EAASoB,uBAAuB7a,EAAOyQ,QAC/DI,UAAW7Q,EAAO6Q,UAClBiK,SAAU,KACV/J,MAAO/Q,EAAO+Q,MACdK,wBAAyBpR,EAAOoR,wBAChCC,wBAAyBrR,EAAOqR,wBAChCC,uBAAwBtR,EAAOsR,uBAC/Bb,OAAQzQ,EAAOyQ,OACfC,MAAO1Q,EAAO0Q,MAAO1Q,EAAO0Q,MAAQ,GACpCE,OAAQA,EACRJ,qBAAsBlN,GAAamW,EAASgB,SAASjK,qBAAuBiJ,EAASgB,SAASjK,qBAAuBxQ,EAAOwQ,sBAC5HW,yBAA0BnR,EAAOmR,yBACjC7K,cAAehD,GAAamW,EAASgB,SAASnU,cAAgBmT,EAASgB,SAASnU,cAAgBtG,EAAOsG,eACvGC,gBAAiBmU,WAAWjB,EAASgB,SAASlU,gBAAkBkT,EAASgB,SAASlU,gBAAkBvG,EAAOuG,iBAC3GE,KAAMzG,EAAOyG,KACbsU,uBAAwB/a,EAAO+a,uBAC/BjK,MAAwB,SAAjB9Q,EAAO8Q,OAAqC,MAAjB9Q,EAAO8Q,MACzClP,oBAAqB0B,GAAamW,EAASgB,SAAS7Y,oBAAsB6X,EAASgB,SAAS7Y,oBAAsB5B,EAAO4B,qBACzHE,aAAc2X,EAASgB,SAAS3Y,aAAc2X,EAASgB,SAAS3Y,aAAe9B,EAAO8B,aAAc9B,EAAO8B,aAAe,IAC1HmP,iBAAkB3N,GAAamW,EAASgB,SAASxJ,iBAAmBwI,EAASgB,SAASxJ,iBAAmBjR,EAAOiR,kBAChHzP,MAAOiY,EAASgB,SAASjZ,MAAOiY,EAASgB,SAASjZ,MAAQxB,EAAOwB,MAAOxB,EAAOwB,MAAQ,KACvFC,WAAY6B,GAAamW,EAASgB,SAAShZ,WAAagY,EAASgB,SAAShZ,WAAazB,EAAOyB,YAC9FT,eAAgB0Z,WAAWjB,EAASgB,SAASzZ,eAAiByY,EAASgB,SAASzZ,eAAiBhB,EAAOgB,gBACxG2P,OAAQ8I,EAAS1a,OACjBic,UAAWvB,EAASwB,UACpBC,UAAWzB,EAASI,UACpBsB,uBAAwB7X,GAAamW,EAASgB,SAASU,wBACvDC,yBAA0B9X,GAAamW,EAASgB,SAASW,0BACzDzJ,WAAY8H,EAASgB,SAAS9I,WAAY8H,EAASgB,SAAS9I,WAAa3R,EAAO2R,WAChFC,UAAW6H,EAASgB,SAAS7I,UAAW6H,EAASgB,SAAS7I,UAAY5R,EAAO4R,UAM1E+G,EAmFqBa,CAAK1T,EAAsBmB,EAAqB8Q,EAAU7U,GAAA,CAAA,EAAOlD,GAAW+X,GAAc/X,GAAQ4X,GAAY1K,GAChImO,EAAmB,GAU7B,OATI1C,EAAgBhI,OAAO1O,QAASqI,IAG5B+Q,EAAOzY,KAAK,GAAG0H,EAAM8P,MAAK,GAG9BxB,EAAmBD,GACnBD,EAAQ,IAAI2C,IAET,KACCpD,GACAA,EAAWhW,QAAQyJ,IACXA,GACAA,EAAMzJ,QAAQqI,IACVA,EAAMV,KAAK0R,kBACf,EACH,GAILnD,GACAA,EAAWlW,QAAQyJ,IACXA,GACAA,EAAMzJ,QAAQqI,IACVA,EAAMyL,SAASuF,kBACnB,EACH,GAILjD,GACAA,EAAWpW,QAAQyJ,IACXA,GACAA,EAAMzJ,QAAQqI,IACVA,EAAM4L,UAAUoF,kBACpB,EACH,GAITpD,EAAc,IACdE,EAAc,IACdE,EAAc,GAAE,CACpB,EACG,CAACpL,IAEJqM,EAAU,KACN,KAAKZ,GAAoBF,EAAKlZ,QAAWuV,GAAWG,GAAQ,OAE5D,MAAMsG,uBAAEA,EAAsBC,MAAEA,EAAKlQ,gBAAEA,YJ1TpBxF,EAA8CmB,EAAgDD,EAAyB9G,EAAuCC,EAAgDpB,EAAqBiB,EAAgByb,EAAqBvU,GAC/R,MAAMqU,EAA+C,GAC/CjQ,EAA4B,GA6FlC,OA5FAmQ,EAAQxZ,QAAQ,CAACgT,EAAQnW,KACrB,GAAImW,EAAOlV,OAASkV,EAAOlV,MAAMR,OAAQ,CAKrC,MAAMQ,EAAQkV,EAAOlV,MACrB,IAAK,IAAIT,EAAI,EAAGA,EAAIS,EAAMR,OAAQD,IAAK,CACnC,MAAMgB,UACFA,EAASC,YACTA,EAAWG,QACXA,EAAOC,QACPA,EAAOC,aACPA,EAAYC,UACZA,EAASC,iBACTA,EAAgBC,eAChBA,EACejB,KACfA,EAAIoB,WACJA,GACArB,GACAE,EAAMT,GACNS,EACAhB,EACAD,EACAkB,IACEhB,GAEFkB,EACAC,GAGJ,GAAIU,EAAW,CACX,MAAMoX,EAAalR,GACfC,EACAhH,EACAM,EACAY,EACAX,EACAO,EACAF,EACAD,EACAD,EACAK,EACAhC,EACAD,EACAgH,EACAmB,EACAnH,GAIAoB,EAAWG,WAAW,UAQrBka,EAAuBzc,KACxByc,EAAuBzc,GAAe,IAG1Cyc,EAAuBzc,GAAa8D,KAAKqV,EAC5C,CACJ,CACD,MAAMyD,EAAyB,IAAIC,EAC7BC,WDgPd9c,EACCC,EACA+G,EACAmB,EACA/G,EACAoL,EACAuQ,EACA3U,GAED,MAAM+N,EAAS,IAAIsB,IACbpX,EAAeJ,EAAOD,GAoC5B,OAnCIK,GAAgBA,EAAaE,cAC7BF,EAAaE,aAAa4C,QAAQ6Z,IAC9B,IAAIC,EAAe,IAAIlZ,EAAQiZ,EAAMrc,KAAKD,EAAGsc,EAAMrc,KAAKC,GAAI,IACxDsc,EAAmB,IAAInZ,EAAQ,EAAG,EAAG,GACzCgZ,EAA0BpJ,IAAIsJ,EAAcC,GAE5C,IAAIC,EAAkBJ,EAA0BK,iBAAiBnd,EAAOD,GAAamM,iBACjFgR,EAAgB1c,SAEhB0c,EAAgB,GAAGE,OAAOpR,cAAgB+Q,EAAMnc,KAEhDsV,EAAOxC,IAAIwJ,EAAgB,GAAGE,OAAOrS,UAAWgS,EAAMnc,OAW1D,IAAIyc,EAAsBP,EAA0BK,iBAAiBnd,EAAOD,GAAa+L,gBACzF,GAAIuR,EAAoB7c,OAAQ,CAG5B,MAAMgZ,EAAiBxZ,EAAOD,GAAa8L,gBACvC2N,IACAA,EAJkB6D,EAAoB,GAAGD,OAClBrS,WAGsBgS,EAAMnc,KACnDO,EAAc4b,EAAMnc,MAAQb,EAC5BwM,EAAgB1I,KAAKkZ,EAAMnc,MAElC,IAGFsV,CACX,CC/RiCoH,CACjBvd,EACAC,EACA+G,EACAmB,EACA/G,EACAoL,EACAoQ,GAIJ,GAAIE,EAAajH,MAAQ4G,EAAuBzc,GAAaS,OACzD,IAAK,IAAID,EAAI,EAAGA,EAAIic,EAAuBzc,GAAaS,OAAQD,IACxDsc,EAAaU,IAAIf,EAAuBzc,GAAaQ,GAAGsK,KAAKE,aAC7DyR,EAAuBzc,GAAaQ,GAAGsK,KAAKmB,cAAgB6Q,EAAaW,IAAIhB,EAAuBzc,GAAaQ,GAAGsK,KAAKE,aDmRjI,SAAoB/K,EAAsBoB,GAEtD,GAAIpB,EAAOQ,OAAS,EAChB,IAAI,IAAID,EAAE,EAAGA,EAAKP,EAAOQ,OAAO,EAAID,IAIhCkO,OAAOC,KAFkB1O,EAAOO,GAAGsL,iBAEK3I,QAAQkD,IAAYqX,IAAAA,EAAAC,EACxD,GAA8C,OAAjB,OAAzBD,EAAAzd,EAAOO,GAAGsL,sBAAe,EAAzB4R,EAA4BrX,KAAkE,OAA5CsX,OAAAA,EAAA1d,EAAOO,EAAE,GAAGsL,sBAAZ6R,EAAAA,EAA8BtX,IAAoB,CAAA,IAAAuX,EAAAC,EAEpG,MAAMC,SAAUF,EAAG3d,EAAOO,GAAGsL,wBAAV8R,EAA4BvX,GACzC0X,SAAQF,EAAG5d,EAAOO,EAAE,GAAGsL,wBAAZ+R,EAA8BxX,GAC3CyX,GAAcC,IACd1c,EAAgBgD,QAAQyZ,EAAYC,EAAU,CAAEzZ,OAAQ,IACxDjD,EAAgBgD,QAAQ0Z,EAAUD,EAAY,CAAExZ,OAAQ,IAE/D,GAMjB,CCpSY0Z,CAAoB/d,EAAQoB,EAE/B,IAGE,CAAEob,yBAAwBC,MAAOrb,EAAiBmL,kBAC7D,CI0NmEyR,CAAWjX,EAAsBmB,EAAqBD,EAAe9G,EAAeC,EAAgByX,GAAYe,EAAiB1D,GACtL+H,EAA6C,GAuBnD,GAtBArF,GAAwB1V,QAASgb,IAC7B,IAAI5B,EACJ,IAAK,IAAI/b,EAAI,EAAGA,EAAIic,EAAuBhc,SAEvC8b,EAASE,EAAuBjc,GAAGiL,KAAKC,GAAQA,EAAKV,YAAcmT,EAAOxF,mBAC3DrY,IAAXic,GAH2C/b,KAOnD,IAAK+b,EAAQ,OAAW,KACxB,MAAMlD,EAAavD,GAAwByG,EAAOjU,SAAU6V,EAAOxF,aAAc4D,EAAOvc,YAAa+V,GAAoB/O,EAAsBmB,EAAqBjH,GAAQ8U,EAAQ8C,GAAYsB,EAAsBmC,EAAOvc,cACzNqZ,IACK6E,EAAc3B,EAAOvc,eACtBke,EAAc3B,EAAOvc,aAAe,IAExCke,EAAc3B,EAAOvc,aAAa8D,KAAKuV,GAC1C,GAMuB,GAJXoD,EAAuB2B,OAAO,CAACC,EAAK3S,IACzC2S,EAAM3S,EAAKjL,OACpB,GACoCoY,GAAwBpY,OAChC,CAC3B,MAAM6d,EAAc,IAAIC,IACxB1F,GAAwB1V,QAASuI,IAC7B4S,EAAY3U,IAAI+B,EAAKiN,aAAY,GAErC8D,EAAuBtZ,QAASqb,IAC5BA,EAAMrb,QAAQuI,IACV,IAAK4S,EAAYd,IAAI9R,EAAKV,WAAY,CAClC,MAAMqO,EAAavD,GAAwBpK,EAAKpD,SAAUoD,EAAKV,UAAWU,EAAK1L,YAAa+V,GAAoB/O,EAAsBmB,EAAqBjH,GAAQ8U,EAAQ8C,GAAYsB,EAAsB1O,EAAK1L,cAC9MqZ,IACK6E,EAAcxS,EAAK1L,eACpBke,EAAcxS,EAAK1L,aAAe,IAEtCke,EAAcxS,EAAK1L,aAAa8D,KAAKuV,GAE5C,GACJ,EAER,CACDD,EAAcqD,GACdnD,EAAc4E,GACdlG,EAAmB0E,GACnBhD,EAAkB,IAAIlN,KAEvB,CAACqN,EAAiBF,EAAMxD,EAAQH,IAE5BiE,EAAQ,KACJ,CACH/Y,OAAQ2Y,EACRV,aACAE,aACAE,aACAtZ,OAAQ6Y,GACRzX,kBACAmL,gBAAiBiN,IAEtB,CAAEI,EAAiBV,EAAYE,EAAYE,EAAYT,GAAYzX,EAAiBoY,GAAgB,EC9X9FgF,GAAmBN,IAC5B,MAAM5R,MAAEA,GAAUmS,IAIlB,OAHIP,EAAOQ,aACPpS,EAAMoS,WAAa,IAAIja,EAAMyZ,EAAOQ,aAEjC,MCREC,GAAoBC,IAC7B,MAAMC,OAAEA,GAAWJ,IAEbK,EAA8BF,EAAMrD,KAAOqD,EAAMG,MAAQH,EAAMpD,IAkBrE,OAjBIoD,EAAMrD,MACNsD,EAAOtD,IAAMqD,EAAMrD,KAEnBqD,EAAMG,OACNF,EAAOE,KAAOH,EAAMG,MAGpBF,aAAkBG,GACdJ,EAAMpD,MACNqD,EAAOrD,IAAMoD,EAAMpD,KAIvBsD,GACAD,EAAOI,yBAGJ,eCzBKC,GAAeze,GAC3B,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAI,EAAI+S,KAAK2L,KAAK,EAAI1e,EAAI,EAAG,GAAK,CACnE,CCQgB,SAAA2e,IAAUvU,KAACA,IACvB,MAAMwU,EAAeC,EAAwB,MAoF7C,OAlFA9E,EAAU,KAAK+E,IAAAA,EACX,IAAK1U,EACD,OAGJ,GAAK0U,OAADA,EAAC1U,EAAKxC,SAASkG,SAAdgR,EAAqB9U,MAEtB,YADApH,QAAQmc,IAAI,sCAIhB,KAAM3U,EAAKlD,oBAAoBsI,GAC3B,OAEJ,IAAKpF,EAAKlD,SAASuI,IAEf,YADA7M,QAAQmc,IAAI,oBAIhB3U,EAAKxC,SAASgI,aAAa,EAAG,GAE9B,MAAMoP,EAAM5U,EAAKxC,SAASkG,MAAM9D,MAC1BiV,EAAc,MAEZ,MACMC,EAAYC,YAAYC,MAC9B,MAAO,KACH,MAAMC,GAAYF,YAAYC,MAAQF,GAH3B,IAILI,EAAevM,KAAK7G,MAAMuS,GAAeY,GAAYL,GAEvDK,GAAY,IACZT,EAAaW,QAAUC,GAG3BpV,EAAKxC,SAASgI,aAAa,EAAG0P,EAClC,CACH,EAde,GAiBdE,EAAiB,MACnB,KAAMpV,EAAKlD,oBAAoBsI,GAC3B,YAEJ,IAAKpF,EAAKlD,SAASuI,IACf,OACH,KACD,MAAMgQ,EAAerV,EAAKlD,SAASuI,IAAIoB,OAIjCqO,EAAYC,YAAYC,MAC9B,MAAO,KACH,MAAMC,GAAYF,YAAYC,MAAQF,GAL3B,IAKiD,EAC5DO,EAAazf,EALK,GACC,IAI+Bye,GAAeY,GAExE,EAhBsB,GAoBvB,OAFAT,EAAaW,QAAUN,EAEhB,KACHL,EAAaW,QAAU,KACvBnV,EAAK0R,mBACD1R,EAAKlD,oBAAoBsI,GACzBpF,EAAKlD,SAASoF,UAEdlC,EAAKxC,UACLwC,EAAKxC,SAAS0E,SACjB,CACL,EAED,CAAClC,IAEJsV,EAAS,KACL,GAAId,EAAaW,QACb,IACIX,EAAaW,SAChB,CAAC,MAAOtV,GACLrH,QAAQsH,MAAM,wBAAwBD,EAAEE,WACxCyU,EAAaW,QAAU,IAC1B,CACJ,GAGAnV,EACEzF,EAAW,YAAA,CAAAgY,OAAQvS,QAC9B,CCnFA,MAAMuV,GAAoB9I,EAAkC,CACxD+I,WAAY,KACZC,cAAeA,IAAM,KACrBC,kBAAclgB,EACdmgB,gBAAiBA,IAAM,KACvBvf,YAAQZ,EACRogB,UAAWA,IAAM,OAGP,SAAUC,IAA0Bvb,SAACA,IAC/C,MAAOkb,EAAYC,GAAiBpI,EAA4B,OACzDjX,EAAQwf,GAAavI,KACrBqI,EAAcC,GAAmBtI,IAExC,OACI9S,EAACgb,GAAkBjI,SAAQ,CACvB5M,MAAO,CACH8U,aACAC,gBACAC,eACAC,kBACAvf,SACAwf,aAGHtb,SAAAA,GAGb,UAEgBwb,KACZ,MAAMtI,EAAUC,EAAW8H,IAE3B,QAAgB/f,IAAZgY,EACA,MAAU,IAAAE,MAAM,sEAGpB,OAAOF,CACX,CC/CO,MAAMuI,GAAkBA,EAAGhL,OAAMiL,WAAUC,QAAOP,eAActf,aACrE,MAAO8f,EAAYC,GAAiB9I,EAAiB,GAC/C+I,EAAkBC,EAAM5B,OAAuB,MAgCrD,OA9BA9E,EAAU,KACHqG,QAAuBxgB,IAAXY,QAAyCZ,IAAjBkgB,GACvCS,EAAc,GAAKT,EAAetf,EAAOuR,OAAOC,cAAgBxR,EAAOuR,OAAOE,YAAczR,EAAOuR,OAAOC,aAC3G,EACA,CAACoO,EAAU5f,EAAQsf,IAEtB/F,EAAU,KACJqG,GACFG,EAAc,EACf,EACA,CAACH,IAGJrG,EAAU,KACR,IAAKyG,EAAgBjB,QAAS,OAC9B,MAAMmB,EAAeF,EAAgBjB,QAC/BoB,EAAY7Q,SAASiE,cAAc,8BACzC,IAAI6M,EAMJ,OALID,IACFC,EAAWD,EAAUE,WAAU,GAC/BH,EAAaI,YAAYF,IAGpB,KACDA,GACFF,EAAaK,YAAYH,EAC1B,CACH,EACC,IAEIrc,EAAAyc,EAAA,CAAAtc,SAAA,CACLC,SAAKsc,mBAAkCC,IAAKV,EAAiBzU,MAAO,CAAEmE,MAAOoQ,EAAanL,EAAO,EAAGhF,OAAQmQ,EAAanL,EAAO,MAC/HkL,EAAQ1b,EAAA,MAAA,CAAKsc,qBAA+C,OAAI,ECLrE,SAASE,GAAUhD,GACjB,MAAOiD,EAAQC,GAAaZ,EAAMhJ,UAAS,IACrCrT,KAAEA,EAAIgG,KAAEA,GAAiB+T,EACZH,IACnByC,EAAM1G,UAAU,KACd3P,EAAKzI,SAAS2f,cAAgB,KAC5BD,EAAWvW,IAAWA,EACxB,CAAA,EACC,CAACV,EAAKzI,SAAU0f,IAEnB,MAAM7gB,OAAEA,EAAMsf,aAAEA,GAAiBI,KAGjC,OAAQ9b,GACN,IAAK,YACH,OACSO,cADLyF,EAAKzI,SAAS4f,aACkB5E,OAAQvS,EAAI1F,SAC3C0F,EAAKzI,SAAS4f,YAAc5c,EAAC6c,GAAKzV,MAAO,CAAE0V,cAAe,QAAUC,oBAAgB9hB,EAAS8E,SAAEC,EAACwb,IAAgBhL,KAAM/K,EAAKzI,SAAS4f,YAAYpM,KAAMkL,MAAOjW,EAAKzI,SAAS4f,YAAYlB,MAAOP,aAAcA,EAActf,OAAQA,EAAQ4f,SAAUhW,EAAKzI,SAAS4f,YAAYnB,aAAsB,MAGlS,CAA2BzD,OAAQvS,WACvCA,EAAKzI,SAASggB,YAAchd,EAAC6c,EAAI,CAACzV,MAAO,CAAE0V,cAAe,QAAUC,eAAgBtX,EAAKzI,SAAS+f,eAAchd,SAAG0F,EAAKzI,SAASggB,cAAsB,MALjIvX,EAAKwX,MAOhC,IAAK,QACH,OAAOjd,EACJqc,EAAA,CAAAtc,SAAA0F,EAAKzI,SAAS4f,YAAc5c,EAAC6c,EAAK,CAAAzV,MAAO,CAAE0V,cAAe,QAAUC,oBAAgB9hB,EAAW8E,SAAAC,EAACwb,GAAe,CAAChL,KAAM/K,EAAKzI,SAAS4f,YAAYpM,KAAMkL,MAAOjW,EAAKzI,SAAS4f,YAAYlB,MAAOP,aAAcA,EAActf,OAAQA,EAAQ4f,SAAUhW,EAAKzI,SAAS4f,YAAYnB,aAAsB,OAEzS,QACE,OACH,KACH,OAEarJ,GAAO0G,IAClB,MAAMoE,WAAEA,EAAUC,UAAEA,EAASlI,WAAEA,EAAUmI,eAAEA,EAAcC,cAAEA,EAAazX,QAAEA,EAAO0X,kBAAEA,GAAsBxE,GAEnGjd,OAAEA,EAAMiY,WAAEA,EAAUE,WAAEA,EAAUE,WAAEA,GAAegJ,EACjD3V,EAAQ2V,EAAWtiB,OAAOqa,GAE1BsI,EAAgBzE,EAAOyE,cACvBC,EAAgB1E,EAAO2E,eACvBC,EAAe5E,EAAO6E,eACtBC,EAAU9E,EAAO8E,QAEjBC,EAAkB/J,EAAWmB,GAC7B6I,EAAkB9J,EAAWiB,GAC7B8I,EAAkB7J,EAAWe,GAC7BnN,EAAkBoV,EAAWtiB,OAAOqa,GAAYnN,gBAEtD,OACElI,EAAA,QAAA,CAAOgG,QAASA,EAAO7F,SAAA,CACL,MAAf8d,OAAe,EAAfA,EAAiB/S,IAAKgO,IACrB,IAAKA,EAAOrT,KAAM,OAAO,KAEzB,MAAMuY,EAAepY,GAAWkT,EAAOrT,KAAKG,SAAW2B,EAAMT,iBAAmBS,EAAMT,gBAAgBzE,SAASyW,EAAOrT,MAChHwY,EAAUZ,GAAiBvE,EAAOrT,KAAKE,YAAc0X,EACrD1a,EAASya,GAAkBtE,EAAOrT,KAAKE,YAAcyX,EAC3D,GAAIY,EAEF,IAAKrb,GAAUsb,KAAanF,EAAOrT,KAAKlD,oBAAoBC,GAAuBsW,EAAOrT,KAAKlD,oBAAoB2b,GAAuB,CAExI,MAAMC,EAAYxb,EAAS9G,EAAOgR,aAAeiM,EAAOrT,KAAKlD,SAASE,aAEtEqW,EAAOrT,KAAKlD,SAASlG,MAAQ4hB,EAzEjB5hB,KACtB,GAAIA,EAAO,CACT,IAAI+hB,EAAQrf,GAAA,CAAA,EAAQ1C,GAIpB,OAHA+hB,EAASC,EAAc,IAAVhiB,EAAMgiB,EACnBD,EAASE,EAAc,IAAVjiB,EAAMiiB,EACnBF,EAASG,EAAc,IAAVliB,EAAMkiB,EACZH,CACR,CACD,OACF,MAgEmDI,CAAeL,GAAaA,CACpE,MAECrF,EAAOrT,KAAKlD,SAASlG,MAAQyc,EAAOrT,KAAKlD,SAASE,aAItD,OAAOzC,EAAkC,QAAAjB,GAAA,CAAA,EAACif,EAAc,CAAER,gBAAeD,gBAAeG,eAAcE,WAAY,GAChH7d,CAAAA,SAAAC,EAAA,YAAA,CAAWgY,OAAQc,EAAOrT,SADTqT,EAAOrT,KAAKwX,KAAI,GAIpCa,MAAAA,OAAAA,EAAAA,EAAiBhT,IAAKgO,GAChBA,EAAOlH,SAEV5R,EAAC8b,EAAM2C,mBACLze,EAAW,YAAA,CAAAgY,OAAQc,EAAOlH,kBAEvBkH,EAAOlH,SAAS5U,SAAS4f,YAAc5c,EAACwc,GAA0B,CAAA/W,KAAMqT,EAAOlH,SAAUnS,KAAM,QAASmG,QAASA,QAA1D3K,GAAwE,QAH/G6d,EAAOlH,SAASqL,MAFV,MAU9Bc,MAAAA,OAAAA,EAAAA,EAAiBjT,IAAKgO,GAChBA,EAAO/G,UAEL/R,EAACwc,GAAsC,CAAA/W,KAAMqT,EAAO/G,UAAWtS,KAAM,YAAamG,QAASA,GAA3EkT,EAAO/G,UAAUkL,YAE1B,MAAfnV,OAAe,EAAfA,EAAiBgD,IAAKgO,IAAU,IAAA4F,EAAAC,EAE/B,OAAO3e,EAAA,YAAA,CAAiDgY,OAAQc,EAAM/Y,SACpEC,EAAC6c,EAAI,CAACjX,SAAS,EAAMR,SAAwC,OAAhCsZ,EAAE5F,EAAO7V,SAAS2b,qBAAc,EAA9BF,EAAgC/M,OAC7D5R,SAAAC,EAAA,MAAA,CAAK4d,QAASA,KAAA,IAAAiB,EAAA,OAAMvB,GAAkBuB,OAAAA,EAAA/F,EAAOpP,gBAAPmV,EAAAA,EAAkB1V,QAAS,EAAC,EAAGlM,YAA4BmK,MAAO,CAAE0X,QAASlZ,EAAU,QAAU,QACrI7F,SAAAC,EAAA,MAAA,CAAKsc,mBAA2Brf,GAAI6b,EAAOnT,UACzC5F,SAAAH,EAAA,MAAA,CAAK0c,mBAAuBvc,SAAA,CAAmB,OAAnB4e,EAAG7F,EAAOpP,gBAAS,EAAhBiV,EAAkB/U,UAAS,WAAUkP,EAAOpP,UAAYoP,EAAOpP,UAAUP,MAAQ,EAAI,aAJxF,aAAA2P,EAAOnT,YAAW,GAUxD3F,EAACga,GAAS,CAACvU,KAAM0X,MACX,ECvIN,SAAU4B,GAAwBC,EAAa5I,EAAY6I,EAAqB7X,GAOlF,GAHK8X,MAAMC,QAAQH,KACfA,EAAO,CAACA,KAEPA,EAAK5jB,OAEN,OADA6C,QAAQC,KAAK,8CACN,CAAEkH,SAAU,IAAI1G,EAAW0gB,OAAQ,IAAI1gB,GAGlD,MAAM2gB,EAAkBL,EAAKjG,OAAO,CAACuG,EAAK3J,KACjCA,EAAI1S,SAAS8N,aACd4E,EAAI1S,SAAS+N,qBAEb2E,EAAI1S,SAAS8N,aACbuO,EAAIC,MAAM5J,EAAI1S,SAAS8N,aAEpBuO,GACR,IAAIE,GAEDC,EAAW,IAAI/gB,EACrB2gB,EAAgBlO,QAAQsO,GAExB,MAAM9N,EAAS,IAAIjT,EACnB2gB,EAAgBnO,UAAUS,GAE1BqN,EAAK,GAAGU,aAAa/N,GAQrB,IAAIgO,EAASvR,KAAKwR,IAAIxR,KAAKC,GAAK+H,EAAM,KAIlCyJ,EAAQzR,KAAK0R,IAHH,IACGL,EAASpkB,EAAe,GAAKskB,EAASV,GADzC,IAEIQ,EAASlkB,EAAe,EAAIokB,GAE1CI,EAcR,SAA+BxkB,EAAU6L,GACrC,IAAI4Y,EAAQ,GAEZ,MADa,MAAT5Y,IAAe4Y,EAAQ,MACpBzkB,EAAI6S,KAAKwR,IAAII,EAAQ5R,KAAKC,GAAK,IAC1C,CAlBgB4R,CAAsBJ,EAAOzY,GAEzC,MAAMgY,EAAS,IAAI1gB,EAAQiT,EAAOtW,EAAG,EAAGsW,EAAO9L,GAS/C,MAAO,CAACT,SARS,IAAI1G,EAAQiT,EAAOtW,EAAGwkB,EAAOlO,EAAO9L,EAAIka,GAQvCX,SACtB,CCdO,MAAMc,GAAYC,EAAW,CAACrH,EAAyByD,KAC5D,MAAM5a,qBAAEA,EAAoB5F,cAAEA,GAAkBiX,MACzCoN,EAAWC,GAAgBvN,GAAkB,IAC9CoK,WAAEA,EAAUoD,kBAChBA,EAAiBC,aACjBA,EAAYC,oBACZA,EAAmBC,cACnBA,EAAaC,kBACbA,EAAiBC,kBACjBA,EAAiBrD,kBACjBA,EAAiBlJ,eACjBA,EAAcwM,KACdA,EAAIC,mBACJA,EAAkBhlB,OAClBA,EAEUilB,8BACVA,EAA6B1D,eAC7BA,GAAmBtE,GACfle,OAAEA,GAAWsiB,GAEb9B,gBAAEA,GAAoBG,KAEtBwF,EAAW7G,EAAc,OACxB8G,EAAYC,GAAiBnO,EAAiB,IAC/CoO,EAAgBhH,EAAY,OAC5BT,OAAEA,EAAMvS,MAAEA,GAAUmS,IACpB8H,EAAcjH,EAIV,MAGJ9S,EAAQ8V,EAAWrhB,OAAOwB,MAC1B+jB,EAAclE,EAAWrhB,OAAOgR,aAChC7Q,EAAkBkhB,EAAWlhB,gBAC7BqlB,EAAOd,EAAgBA,EAA0B5a,UACrD+a,QAAwCzlB,EAE1Cma,EAAU,KACJ8H,EAAWpJ,WAAW1Y,OAAS,GACjCkmB,GACD,EACA,CAACpE,EAAWpJ,WAAW1Y,SAE1Bga,EAAU,KACR,IAAKuL,GAAqC,WAAhB9kB,EAAOyG,KAE/B,YADA2e,EAAc,IAGhB,MAAMM,EdkTM,SAAmBxlB,EAAuCylB,EAAwBC,EAAsBva,EAAcvF,EAA8C3F,EAAwBpB,EAAsBuM,EAA2BC,GAAa,IAAAsa,EACtQ,IAAIC,EAAsBza,EAAMe,oBAAoB,YAAauZ,GAE7DI,EAAkBD,EAAWA,EAAU/a,cAAgB,GAE3D,IAAIib,EAAc,KAEdC,EAAoB,KAExB,MAAMrM,EAAqB,GAC3B,IAAI,IAAIlM,KAAO5H,EAAsB,CACjC,MAAMogB,EAAYpgB,EAAqB4H,GAEV,YAAzBwY,EAAUhc,YACgB,YAAvBgc,EAAUlb,UACVkb,EAAU5b,QAAUsb,GAEvBhM,EAAShX,KAAK8K,EAErB,CA6BD,OA5BAkM,EAAS3X,QAAQ,CAACkkB,EAA0B7Y,KACxC,IAAI8Y,EAAwB/a,EAAMe,oBAAoB,YAAa+Z,GAEvE,MAAMxZ,EAAkBE,EAAWC,MAAM3M,EAAiB,CACtDwI,SAAU,SAAUoE,EAAUC,EAAQC,GAClC,QAAIA,EAAKC,MAAaD,EAAKC,KAAK9J,MAEpC,EAEA+J,OAAO,IAGX,GAAIiZ,GAAeL,EAAiB,CAChC,IAAIM,EAAoBD,EAAYrb,cACpC,IACI,IAAIub,EA3LhB,SAA4Bha,EAAwBC,EAAsBI,EAAkCxM,GACxG,IAAIwI,EAAW,EAEX+D,EAAaC,EAAgBpC,KAAKgC,EAAcD,GACpD,GAAyB,GAArBI,EAAWnN,OAAa,OAAY,EAExC,IAAK,IAAID,EAAI,EAAGA,EAAIoN,EAAWnN,OAAQD,IAAK,CACxC,IAAI2N,EAAO9M,EAAgBomB,QAAQ7Z,EAAWpN,EAAI,GAAG8B,GAAIsL,EAAWpN,GAAG8B,IACvEuH,IAAYsE,MAAAA,OAAAA,EAAAA,EAAMC,KAAK9J,SAAU,CACpC,CACD,OAAOuF,CACX,CAgLiC6d,CAAmBT,MAAAA,EAAAA,EAAmB,GAAIM,MAAAA,EAAAA,EAAqB,GAAI1Z,EAAiBxM,GACrGmmB,GAAkBA,EAAiBL,IACnCA,EAAoBK,EACpBN,EAAcG,EAErB,CAAC,MAAM1c,GACJrH,QAAQC,KAAK,iBAAiBoH,EAAEE,UACnC,CACJ,EACIoc,GAAmBK,IACpBJ,EAAcK,EACjB,GAEMnb,GAAahL,EAAeylB,EAA2BE,OAAbA,EAAEG,GAAWH,EAAG,GAAIxa,EAAOtM,EAAQuM,EAAiBnL,EAAiBoL,EAC1H,CcnWkBkb,CAAmBvmB,EAAmB,MAAJslB,EAAAA,EAAQ,GAAIV,EAAmBzZ,EAAOvF,EAAsB3F,EAAiBpB,EAAQwZ,EAAgBhN,GACrJ6Z,EAAcM,EAChB,EAAG,CAACZ,EAAmBzZ,EAAOlL,EAAiBpB,EAAQwZ,EAAgBhN,EAAOia,IAE9EjM,EAAU,KAER,IAAKiM,IAASZ,GAAiC,WAAhB5kB,EAAOyG,KAAmB,CACvD,GAAoB,WAAhBzG,EAAOyG,KACT,GAAIme,EAAe,CACjB,MAAM8B,EAAarb,EAAMe,oBAAoB,YAAawY,GACtD8B,GACFtB,EAAc,CAACsB,GAElB,MACCtB,EAAc,SAENN,GACVM,EAAc,IAEhB,MACD,CACIN,GACH/lB,EAAOkD,QAAQyJ,IACbA,EAAMO,gBAAkB,EAC1B,GAIF7J,QAAQmc,IAAI,2BAA4BiH,EAAMZ,EAAezkB,GAI7D,MAAMulB,EAAQxa,GAAahL,EAAeslB,EAAMZ,EAAevZ,EAAOtM,EAAQsiB,EAAW/V,gBAAiBnL,EAAiBoL,GAa3H6Z,EAAcM,EAAK,EAElB,CAACF,EAAMZ,EAAevZ,EAAOuS,EAAQ7e,EAAQwmB,EAAaplB,EAAiBoL,EAAO8V,EAAW/V,gBAAiBwZ,EAAmB9kB,EAAOyG,OAE3I,MAAMkgB,EAA0BtF,EAAWpJ,WAAWwM,GACtDlL,EAAU,KAAK,IAAAqN,EACb,GAAoB,sBAAhB5mB,EAAOyG,KAA8B,OAEzC,KAAMmX,aAAkBG,GAEtB,YADA3b,QAAQsH,MAAM,qCAIhB,IAAKid,EAAwBpnB,OAE3B,YADA6C,QAAQC,KAAK,0BAIf,IAAIgM,EAAuC,OAA5BuY,EAAG7nB,EAAO0lB,SAAkB,EAAzBmC,EAA2BvY,YAE7C,IAAKkT,IAAmBuD,EACtB,OAGF,IAAI+B,EAAiB,GACrB,GAAI1B,EAAWV,IAAsBpW,MAAAA,GAAAA,EAAa9O,OAEhDsnB,EAAS,IAAIxY,QACJkT,GAAAA,GAAiC,UAAfvhB,EAAOyG,KAAkB,CACpD,MAAMqgB,EAAsBlC,GAAiB+B,EAAwBpc,KAAKC,GAAQA,EAAKZ,KAAKE,YAAc8a,GACtGkC,IACFD,EAAS,CAACC,EAAoBld,MAEjC,CACIid,EAAOtnB,SACVsnB,EAASF,EAAwB1X,IAAIzE,GAAQA,EAAKZ,OAGpD,MAAMmd,EAAQ7D,GAAwB2D,EAAQjJ,EAAOrD,IAAKqD,EAAOoJ,OAAwB,WAAhBhnB,EAAOyG,MAAqC,YAAhBzG,EAAOyG,KAAqB,KAAO8E,GAClI0b,EAAiB1U,KAAK2U,IAC1BlnB,EAAOuR,OAAOE,YACdc,KAAK0R,IACHjkB,EAAOuR,OAAOC,YACduV,EAAMxd,SAASlG,WAAW0jB,EAAMxD,UAGpCwD,EAAMxd,SAASlB,IAAI0e,EAAMxD,QAAQ4D,UAAUF,GAAgBxe,IAAIse,EAAMxD,QACrE+B,EAAYvG,QAAO7b,GACd6jB,GAAAA,EACHK,CAAAA,aAAc/B,EAActG,QAAQ5C,OAAO5S,SAAS9I,QACpD4mB,WAAYhC,EAActG,QAAQwE,OAAO9iB,QACzC6mB,mBAAoB3I,YAAYC,MAChC2I,SAAUvnB,EAAOuR,OAAOG,WAAS,EAMlC,CAACyT,EAAYwB,EAAyBlC,EAAmBlZ,EAAOqS,EAAQgH,EAAe5kB,EAAOyG,KAAMzG,EAAOuR,OAAOE,YAAazR,EAAOuR,OAAOC,YAAaxR,EAAOuR,OAAOG,YAE3K6H,EAAU,KACR,GAAIwL,MAAAA,GAAAA,EAAMhX,WAAasX,EAActG,QAAS,CAC5C,KAAMnB,aAAkBG,GAEtB,YADA3b,QAAQsH,MAAM,qCAIhB,IAAKid,EAAwBpnB,OAE3B,YADA6C,QAAQC,KAAK,0BAIf,IAAIwkB,EACJ,GAAI1B,EAAWV,GAAoB,CACjCoC,EAAS,CAAC1B,EAAWV,IAErB,MAAMqC,EAAsBlC,GAAiB+B,EAAwBpc,KAAKC,GAAQA,EAAKZ,KAAKE,YAAc8a,GACtGkC,GACFD,EAAOjkB,KAAKkkB,EAAoBld,KAEnC,MACCid,EAASF,EAAwB1X,IAAIzE,GAAQA,EAAKZ,MAEpD,MAAMmd,EAAQ,CACZxd,SAAU8b,EAActG,QAAQ5C,OAAO5S,SAAS9I,QAChD8iB,OAAQ8B,EAActG,QAAQwE,OAAO9iB,SAGvC,IAAIwmB,EAAiBF,EAAMxd,SAASlG,WAAW0jB,EAAMxD,QACrD,MAAMiE,EAAWxnB,EAAO4R,UAAY/P,SAAS7B,EAAO4R,WAAa/P,SAAS0O,GAAYqB,WAE/D,OAAnBmT,EAAKhX,UACPkZ,GAAkBO,EAElBP,GAAkBO,EAGpBP,EAAiB1U,KAAK2U,IACpBlnB,EAAOuR,OAAOE,YACdc,KAAK0R,IACHjkB,EAAOuR,OAAOC,YACdyV,IAIJF,EAAMxd,SAASlB,IAAI0e,EAAMxD,QAAQ4D,UAAUF,GAAgBxe,IAAIse,EAAMxD,QAErE+B,EAAYvG,QAAO7b,GACd6jB,CAAAA,EAAAA,EACHK,CAAAA,aAAc/B,EAActG,QAAQ5C,OAAO5S,SAAS9I,QACpD4mB,WAAYhC,EAActG,QAAQwE,OAAO9iB,QACzC6mB,mBAAoB3I,YAAYC,MAChC2I,SAAUvnB,EAAOuR,OAAOG,WAE3B,GACA,CAACqT,IA6BJ,MAAM0C,EAAetO,EAAa1P,IAChC,GAAIub,EAAoB,CACtB,MAAM0C,EAAS,IAAI7kB,EACnB6kB,EAAO3Y,KAAKtF,EAAE8Z,OAAOpH,OAAO5S,UAC5Bme,EAAOrf,IAAIgd,EAActG,QAAQwE,QACjCyB,EAAmB0C,EAAOnoB,UAC1BggB,EAAgBmI,EAAOnoB,UACnB0lB,GACFA,EAA8BI,EAActG,QAAQ5C,OAAO5S,SAAS9I,QAAS4kB,EAActG,QAAQwE,OAAO9iB,QAC7G,GACA,CAACukB,EAAoBC,EAA+B1F,IAEvDL,EAAS,KAAKyI,IAAAA,EAAAC,EACZ,GAAuB,OAAnBD,EAAArC,EAAYvG,UAAZ4I,EAAqBJ,WAAYK,OAAAA,EAAAtC,EAAYvG,cAAZ6I,EAAAA,EAAqBL,UAAW,EAAG,CACjEhD,IACHC,GAAa,GACbc,EAAYvG,QAAQwI,SAAW,GAEjC,MAAMR,EAAQzB,EAAYvG,QACpB8I,GAAiBlJ,YAAYC,MAAQmI,EAAMO,oBAAsB,IAEjEQ,EAAoBvV,KAAK2U,IAAI,EAAGW,GAAqB,MAALd,OAAK,EAALA,EAAOQ,WAC7DlC,EAActG,QAAQ5C,OAAO5S,SAASwe,YAAYhB,EAAMK,aAAcL,EAAMxd,SAAUue,GACtFzC,EAActG,QAAQwE,OAAOwE,YAAiB,MAALhB,OAAK,EAALA,EAAOM,WAAYN,EAAMxD,OAAQuE,GAE1EzC,EAActG,QAAQ5C,OAAO6B,yBACzB8J,GAAqB,IACvBxC,EAAYvG,QAAU,KAEzB,IAGH,MAAM0G,EAAcA,CAACuC,GAAqB,EAAOC,KAC/C,KAAMrK,aAAkBG,GAEtB,YADA3b,QAAQsH,MAAM,qCAGhB,MAAMid,EAA0BtF,EAAWpJ,WAAW0M,GACtD,IAAKgC,EAAwBpnB,OAE3B,YADA6C,QAAQC,KAAK,0BAKf,IAAIwkB,EACJA,EAASF,EAAwB1X,IAAIzE,GAAQA,EAAKZ,MAGlD,MAAMmd,EAAQ7D,GAAwB2D,EAAQjJ,EAAOrD,IAAKqD,EAAOoJ,OAAwB,WAAhBhnB,EAAOyG,KAAoB,KAAO8E,GACrG0b,EAAiB1U,KAAK2U,IAC1BlnB,EAAOuR,OAAOE,YACdc,KAAK0R,IACHjkB,EAAOuR,OAAOC,YACduV,EAAMxd,SAASlG,WAAW0jB,EAAMxD,UAGpCwD,EAAMxd,SAASlB,IAAI0e,EAAMxD,QAAQ4D,UAAUF,GAAgBxe,IAAIse,EAAMxD,QAEjEvjB,EAAOkR,yBAA2B,CAAC,SAAU,qBAAqB1K,SAASxG,EAAOyG,QACpFsgB,EAAMxd,SAASkJ,IAAIzS,EAAOkR,uBAAuB0M,OAAOpe,EAAGQ,EAAOkR,uBAAuB0M,OAAOle,EAAGM,EAAOkR,uBAAuB0M,OAAO5T,GACxI+c,EAAMxD,OAAO9Q,IAAIzS,EAAOkR,uBAAuBgX,SAAS1oB,EAAGQ,EAAOkR,uBAAuBgX,SAASxoB,EAAGM,EAAOkR,uBAAuBgX,SAASle,IAQ9Isb,EAAYvG,QAAO7b,GAAA,CAAA,EACd6jB,EAAK,CACRK,aAAc/B,EAActG,QAAQ5C,OAAO5S,SAAS9I,QACpD4mB,WAAYhC,EAActG,QAAQwE,OAAO9iB,QACzC6mB,mBAAoB3I,YAAYC,MAChC2I,SAAUvnB,EAAOuR,OAAOG,WAG5B,EAMA,OAJAyW,EAAoBzH,EAAK,KAAA,CACvB+E,iBAGMthB,WAAOikB,SAAU,CAAC7V,KAAKC,GAAK,EAAG,EAAG,GAAIkO,IAAKwE,EAAQhhB,SACzDH,EACEyc,EAAA,CAAAtc,SAAA,CAAAC,EAACkkB,EAAW,CACVC,aACA,EAAAC,SAAUd,EACV/G,IAAK2E,EACLmD,cAAejW,KAAKC,GAAK,EACzBhB,YAAaxR,EAAOuR,OAAOC,YAC3BC,YAAazR,EAAOuR,OAAOE,YAC3BgX,WAA4B,YAAhBzoB,EAAOyG,MAAsC,sBAAhBzG,EAAOyG,MAAgD,gBAAhBzG,EAAOyG,KACvFiiB,aAA8B,YAAhB1oB,EAAOyG,MAAsC,sBAAhBzG,EAAOyG,MAAgD,gBAAhBzG,EAAOyG,KACzFkiB,cAAe,KAGhB5pB,GAAUA,EAAOkQ,IAAI,CAAC3E,EAAmBgD,IACxCnJ,EAACoS,GAEC,CAAAxM,QAAS0a,IAAsBnX,EAC/B8L,WAAY9L,EACZoX,aAAczH,EAAOyH,aACrBnD,eAAgBtE,EAAOsE,eACvBC,cAAevE,EAAOuE,cACtBH,WAAYA,EACZC,UAA2B,WAAhBthB,EAAOyG,KAAoB0e,GAAcA,EAAW7X,QAASlO,EACxEwiB,eAAgB3E,EAAO2E,eACvBE,eAAgB7E,EAAO6E,eACvBJ,cAAezE,EAAOyE,cACtBK,QAAS9E,EAAO8E,QAChBN,kBAAmBA,GAZP,OAAAnU,UAgBZ,6yCCtYV,MAAMsb,GAAcA,EAClB7pB,SAEA8pB,qBACAC,oBACAnlB,gBACAolB,SACAC,UACAC,QAEAC,qBACAhiB,OACAiiB,UACAC,2BAaA,MAOMC,EAAgBtQ,EAAqB,IAEpCoQ,EAIEA,EACJG,OAAOxP,GAA0B,YAAnBA,EAAI5P,YAClB+E,IAAI6K,GAAOA,EAAIxP,OALT,GAMR,CAAC6e,IAOJ,OANA5P,EAAU,KACJ6P,GACFA,EAAqBC,EACtB,EACA,CAACF,EAASC,EAAsBC,IAGjCllB,EAAA,MAAA,CAAK/C,YAAiC8C,SACpCH,SAAK3C,YAAyB8C,SAAA,CAC3BnF,EAAOQ,OAAS,GACf4E,EAAK,MAAA,CAAAsc,mBAA8Bvc,SACjCH,EAAK,MAAA,CAAA0c,UAAU,uBAAsBvc,SAAA,CACnCC,EAAK,MAAA,CAAAsc,UAAU,mBACZvc,SAAAnF,EAAOkQ,IAAI,CAACvD,EAAY4B,IACvBnJ,EAAiB,MAAA,CAAAsc,UAAW,sBAAqBnT,IAAUub,EAAqB,SAAW,IAAM9G,QAASA,KACxG3f,QAAQmc,IAAI7S,EAAO4B,GACnBwb,EAAkBxb,EAAK,WACrB5B,EAAM2O,OAHA/M,MAOdvJ,EAAK,MAAA,CAAA0c,UAAU,uBACbtc,EAAK,MAAA,CAAA4d,QAvC0BtY,IAC3CA,EAAE8f,iBACEN,aAAiBO,UACnBP,GACD,EAmC2CxI,UAAU,wBAAuBvc,SAAA,UAEjEH,EAAK,MAAA,CAAA0c,UAAU,sBACbtc,EAAK,MAAA,CAAA4d,QAASiH,EAASvI,UAAU,uBAAsBvc,SAAA,MACvDC,EAAK,MAAA,CAAA4d,QAASgH,EAAQtI,UAAU,sBAAqBvc,SAAA,iBAO/DC,EAAK,MAAA,CAAAsc,UAAW,eAAegJ,+CAE7B,CAAC,SAAU,eAAejjB,SAASU,IACnC/C,EAAK,MAAA,CAAAsc,UAAW,SAAuBlV,MAAO,CAAE0X,QAAS,SACtD/e,SAAAP,EAAcsL,IAAI,CAACtJ,EAAS2H,IACtB+b,EAAc7iB,SAASb,EAAQ/B,MAIlCG,EAAA,MAAA,CAA8C0c,UAAc,SAAkBlV,MAAO,CAAEme,gBAAiB,WAAa3H,QAASA,IAAMmH,EAAmBvjB,EAAQ/B,MAAKM,SAAA,CAClKC,SAAKsc,mBAAqBvc,SAExBC,EAACwB,EAAQ9B,KAAI,MAEfM,EAAK,MAAA,CAAAsc,UAAW,SAAgBvc,SAAGyB,EAAQhG,SALxB,WAAAgG,EAAQhG,QAAQ2N,KAFtC,YAaH,ECtFNqc,GAAoB,CACtBC,SAAS,EACTlgB,MAAO,KACP4T,MAAO,GACP9T,MAAO,GCYLqgB,GAAW,CAAC,WAAY,UAAW,SAAU,IAI7CC,GAAe,CAAC,cAAe,cAAe,cAAe,cAAe,eAAgB,IAI5FC,GAAc,CAAC,QAAS,UAAW,IAU5BC,GAA0BC,IAA8B,CACpE7oB,GAAI,GACJoW,UAAWyS,EACX9f,YAAa,GACb6L,SAAU,KACVyB,aAAc,GACdzM,SAAU,WACVd,WAAY,cACZI,MAAO,GACPD,YAAa,GACb8J,aAAc,GACduD,WAAY,GACZ7Q,SAAU,GACVX,YAAa,EACbiN,WAAY,GACZwB,KAAM,IACHuV,UAAW,IACd9X,OAAQ,IACRF,QAAS,IACTC,QAAS,MAMJgY,GAAqDA,CAACrQ,EAAKsQ,KAC7D,MAAMrJ,EAAcjH,EAAI3Y,SAAS4f,YAC7BA,IAEAjH,EAAI3Y,SAAS+f,eAAqC,aAApBkJ,SAAAA,EAAU9f,OAAgB,UAAOlL,EAC/D0a,EAAI3Y,SAAS4f,YAAc,CACvBnB,SAA6B,MAAnBwK,EAAS9f,MACnBuV,MAAOkB,EAAYlB,MACnBlL,KAAM0V,OAAOD,EAASzV,OAG1BmF,MAAAA,EAAI3Y,SAAS2f,eAAbhH,EAAI3Y,SAAS2f,gBAChB,EAGCwJ,GAAcrN,IAAuB,IAAAsN,EAAAC,EAAAC,EAAAC,EAAAC,EAEvC,MAAMzd,KAACA,EAAI0d,QAAEA,EAAOC,WAAEA,EAAUZ,SAAEA,EAAQjqB,OAAEA,EAA8B8qB,YAAEA,GAAe7N,EAErFnI,EAASkE,EAAQC,KAChB8R,EAAYC,GAAiB/T,EAAuB,KACpDgU,EAAiBC,GAAsBjU,EAA2B,KAClEkU,EAAgBC,GAAqBnU,EAA0B,KAC/DmT,EAAUiB,GAAepU,EAAwB,OACjDmR,EAAUkD,GAAerU,OAA6B7X,GACvDgY,EAAUsI,MACT6L,EAAeC,GAAoBvU,EAAwB,MAC5DwU,EAAapN,EAA8B,OAC3C,CAAGqN,GAAmBC,IACtBC,EAAevN,EAAwB,CAAE,IAExCwN,EAAWC,GAAgB7U,GAAkB,GAC9C8U,EDrFuB9O,KAC7B,MAAMgN,SAAEA,EAAQ+B,OAAEA,EAAMC,MAAEA,EAAKC,KAAEA,GAASjP,EAwC1C,OAtCuB9D,EAAagT,IAChC,MACMC,EAAMJ,MAAAA,OAAAA,EAAAA,EAAQtoB,QADV,MACqB,IAG/B,OAAO2oB,MAFQ,GAAAD,wBAA0BH,GAAgB,YAAYC,GAAc,YAAYC,GAAkB,KAE/F,CACdG,QAAS,CACL9U,UAAWyS,EAASsC,cAEzBC,KAAK/S,GACCA,EAASgT,GAQP,gBACUhT,EAASiT,OAAOF,KAAK3S,GAC9B3W,GACOymB,CAAAA,EAAAA,GACHrM,CAAAA,MAAOzD,EAAUyD,MACjB9T,MAAOqQ,EAAUrQ,SALtB,GAPHtG,GAAA,CAAA,EACOymB,GAAW,CACdC,SAAS,EACTlgB,MAAO,kBAAkB+P,EAASkT,YAAYlT,EAASmT,gBAAgBnT,EAASoT,OAChFvP,MAAO,MAYhBwP,MAAOrjB,GACNvG,GAAA,CAAA,EACOymB,GAAW,CACdC,SAAS,EACTlgB,MAAOD,EAAEE,QAAUF,EAAEE,QAAU,wCAC/B2T,MAAO,KAEd,EAEC,CAAC2M,EAAUgC,EAAOC,EAAMF,GAEvBD,EC4CgBgB,CAAgB,CAAC9C,WAAU+B,OAAQ/O,EAAO+O,SAuBjEzS,EAAU,KAEG,aADFwR,GAECiC,EAAgB/B,EAEvB,EACF,CAACb,EAAUW,EAAYE,IAE1B,MAAM+B,EAAmBC,IACrB,IAAK7C,EAAU,OACf,MAAM1c,EAAgEuf,EACtE,GAAY,OAARvf,EACA,GA5G0Cmc,GAASrjB,SA4GhCkH,IAEf,GADAsd,EAActd,GACV0c,EAAShpB,IAAMgpB,EAASpf,WAAa0C,GAAOqd,GAAcrd,EAAK,CAE/D,GADA0c,EAASpf,SAAW0C,EACR,aAARA,EACA0c,EAASlgB,WAAa,cACtBgjB,GAAiB9V,WACF,YAAR1J,GAGP,GAFA0c,EAASlgB,WAAa,QACtBkgB,EAASjgB,YAAc,GACnBiN,GAAWA,EAAQgI,WAAY,CAC/B,MAAMtF,EAAM1C,EAAQgI,WAAW,GAC3BtF,IACKA,EAAI3Y,WACL2Y,EAAI3Y,SAAW,CAAA,GAEnB2Y,EAAI3Y,SAAS+f,eAAqC,OAAZ,MAARkJ,OAAQ,EAARA,EAAU9f,OAAgB,UAAOlL,EAC/D0a,EAAI3Y,SAAS4f,YAAc,CACvBnB,SAA6B,MAAnBwK,EAAS9f,MACnBuV,OAAO,EACPlL,KAAM0V,OAAOD,EAASzV,OAIjC,MACc,WAARjH,IACP0c,EAASlgB,WAAa,cACtBkgB,EAASjgB,YAAc,GACvB+iB,GAAiB9V,IAErB4T,EAAc,IACdE,EAAmB,IACnBE,EAAkB,IAClBC,EAAWnoB,GAAKknB,CAAAA,EAAAA,IAChB+C,EAAUjqB,MACHknB,GAEV,OACMgD,GA9IuCtD,GAAatjB,SA8IjCkH,IAG1B,GAFAwd,EAAmBxd,GACnBwf,GAAiB9V,GACbgT,EAAShpB,IAAM6pB,GAAmBvd,EAAK,CAQvC,GAPA0c,EAASlgB,WAAawD,EAClB0c,EAASlgB,aAAewD,GACxB2d,EAAWnoB,MAAMknB,IAErB+C,EAAUjqB,GACHknB,GAAAA,IAEH,CAAC,cAAe,cAAe,eAAe5jB,SAASkH,GAAM,CAC7D,IAAI6H,EAAO,GACX,OAAQ7H,GACJ,IAAK,cAED,IAAI0c,EAASjgB,YAET,MAGJ,MAAMkjB,EAAcngB,EAAK2M,UAAUyT,UAAW9iB,GAAoB4f,EAASjgB,YAAYoiB,aAAe/hB,EAAKpJ,GAAGmrB,aAEzF,IAAjBc,IACA9X,EAAOrI,EAAK2M,UAAUwT,GAAajjB,aAGvC,MACJ,IAAK,cACL,IAAK,cACDmL,EAAO6U,EAAS/f,YAGpB+M,GAAWA,EAAQgI,YAEnBmO,EADYnW,EAAQgI,WAAW,GACT7J,EAAM6U,EAASzV,KAE5C,CAEkD,IAAA6Y,EAA/C,CAAC,cAAe,gBAAgBhnB,SAASkH,KAClC8f,MAAPpW,GAAmB,OAAZoW,EAAPpW,EAASgI,aAAToO,EAAqBvrB,QAAQ,CAAC6X,EAAKxM,KACjB,IAAVA,GAEJmgB,EAAUrD,EAAUtQ,EACxB,GAEP,OAxL2CiQ,GAAYvjB,SAyL/BkH,KACzB0d,EAAkB1d,GAClB0c,EAASlgB,WAAawD,EAClB0c,EAAShpB,IAAMgpB,EAASlgB,aAAewD,GAAOyd,GAAkBzd,IACpD,UAARA,GACAwf,GAAiB9V,GAErBgT,EAASlgB,WAAawD,EACtB0c,EAASpU,SAAW,GACpBoU,EAASjgB,YAAc,GACvBigB,EAAS9f,MAAQ,GACjB+gB,EAAWnoB,MAAMknB,IACjB+C,EAAUjqB,GAAA,CAAA,EAAMknB,KAG3B,EAgCC+C,EAAc/C,IAChB,MAAM9c,EAAQJ,EAAK0M,SAAS0T,UAAWhjB,GAAkBA,EAAMlJ,KAAOgpB,EAAShpB,KAChE,IAAXkM,IACAJ,EAAK0M,SAAStM,GAAMpK,GAAA,CAAA,EAAQknB,GAC5BQ,EAAQtd,EAAKpK,GAAA,CAAA,EAAOknB,IACvB,EAqCCmD,EAAmBA,CAACzT,EAAevE,EAAcZ,KACnD,GAAI4W,KAA0B,MAARnB,OAAQ,EAARA,EAAU3S,cAAc,OAC9C,IAAI/B,EAAgB,IAAIC,EAAaJ,EAAM,CACvCK,KAAOkE,EAAI3Y,UAAY2Y,EAAI3Y,SAASyU,KAAOkE,EAAI3Y,SAASyU,KAAOd,EAC/DH,KAAM9S,SAAS8S,GACfhF,OAAQ,IACRkG,cAAe,IAEnBH,EAAcI,SACVgE,EAAI1S,UACJ0S,EAAI1S,SAAS0E,UAEjBgO,EAAI1S,SAAWsO,CAAAA,EAGb+X,EAAYA,CAACrD,EAAkBtQ,KACjC,GAAIyR,KAA0B,MAARnB,OAAQ,EAARA,EAAU3S,cAAc,OAC9C,IAAI7E,EAAM,KACV,GAA4B,gBAAxBwX,EAASlgB,WAA8B,CACvC,MAAMmjB,EAAcngB,EAAK2M,UAAUyT,UAAW9iB,GAAoB4f,EAASjgB,YAAYoiB,aAAe/hB,EAAKpJ,GAAGmrB,aACzF,IAAjBc,IACAza,EAAMF,GAAS0X,EAAUld,EAAK2M,UAAUwT,IAE/C,MACGza,EAAMF,GAAS0X,GAEfxX,aAAe8a,kBACftZ,GAAaxB,EAAKwX,EAAU,CAAChjB,EAAUV,KACnCoT,EAAI1S,SAAWA,EACf0S,EAAIpT,SAAWA,EAEf,MAAMwO,EAAc9N,EAAS8N,YAEvBE,EAAoB,IAAIvS,EAC9B,GAAIqS,EAAa,CACbA,EAAYG,UAAUD,GAEtB,MAAMrD,EAAY,IAAIlP,EACtBqS,EAAYI,QAAQvD,GAChB+H,EAAIhQ,WACJ+H,GAA+BiI,EAAIhQ,UAAWsL,EAAmBrD,EAAW+H,EAAK,CAAE,CAACA,EAAIhQ,WAAS5G,GAAA,CAAA,EAAQknB,IAEhH,GAER,EAGCuD,GAAcA,CAAChuB,EAAc2K,KAAiBsjB,IAAAA,EAC3CxD,UAOLhT,GAAAwW,OAAOA,EAAPxW,EAASgI,aAATwO,EAAqB3rB,QAAQ,CAAC6X,EAAKxM,SAASugB,EACnC/T,EAAI3Y,WACL2Y,EAAI3Y,SAAW,CAClB,GACI2Y,EAAI3Y,SAASoI,WACduQ,EAAI3Y,SAASoI,SAAW,IAAI1G,EACxBiX,EAAIvQ,UACJuQ,EAAI3Y,SAASoI,SAASwF,KAAK+K,EAAIvQ,WAGvC,MAAMA,EAAW,IAAI1G,EAIrB,OAHIiX,EAAI3Y,SAASoI,UACbA,EAASwF,KAAK+K,EAAI3Y,SAASoI,UAEvB5J,GACJ,IAAK,cACD,GAAc,IAAV2N,EAAa,MACjB8c,EAAS/f,YAAcC,EACnB,CAAC,cAAe,eAAe9D,SAAS4jB,EAASlgB,aACjDqjB,EAAiBzT,EAAKsQ,EAAS/f,YAAa+f,EAASzV,MAEzD,MACJ,IAAK,eACD,GAAc,IAAVrH,EAAa,MACjB8c,EAASjW,aAAe7J,EACxBmjB,EAAUrD,EAAUtQ,GACpBqT,EAAUjqB,MACHknB,IAEP,MACJ,IAAK,OACD,GAAc,IAAV9c,EAAa,MAEjB,GADA8c,EAASzV,KAAOrK,EACV,CAAC,cAAe,QAAS,UAAW,gBAAgB9D,SAAS4jB,EAASlgB,YAWzC,gBAAxBkgB,EAASlgB,YAAwD,iBAAxBkgB,EAASlgB,YACzDujB,EAAUrD,EAAUtQ,GAChB2R,EAAW1M,SACX+O,cAAcrC,EAAW1M,SAE7B0M,EAAW1M,QAAUgP,WAAW,KAC5BZ,EAAUjqB,GAAMknB,CAAAA,EAAAA,KACjB,MACI,CAAC,WAAW5jB,SAAS4jB,EAASlgB,aACrCujB,EAAUrD,EAAUtQ,GACpB4R,EAAgB,KACZL,EAAWnoB,GAAA,GAAMknB,IACjB+C,EAAUjqB,GAAA,CAAA,EAAMknB,GACpB,IACO,CAAC,SAAS5jB,SAAS4jB,EAASlgB,aACnCigB,GAAyBrQ,EAAKsQ,OA1BwD,CACtF,IAAI7U,EAAO,GACX,GAA4B,gBAAxB6U,EAASlgB,YAAgC4P,EAAI3Y,UAAY2Y,EAAI3Y,SAASiJ,YAAa,CACnF,MAAMijB,EAAcngB,EAAK2M,UAAUyT,UAAW9iB,GAAoB4f,EAASjgB,YAAYoiB,aAAe/hB,EAAKpJ,GAAGmrB,aACzF,IAAjBc,IACA9X,EAAOrI,EAAK2M,UAAUwT,GAAajjB,YAE1C,KAAU,CAAC,cAAe,eAAe5D,SAAS4jB,EAASlgB,cACxDqL,EAAO6U,EAAS/f,aAEpBkjB,EAAiBzT,EAAKvE,EAAM6U,EAASzV,KACxC,CAiBD,MACJ,IAAK,YACDyV,EAASF,UAAY5f,EAErB8f,EAAS9f,MAAQA,EACW,UAAxB8f,EAASlgB,YACTigB,GAAyBrQ,EAAKsQ,GAElC,MACJ,IAAK,SACD,GAAc,IAAV9c,EAAa,MACjB8c,EAAShY,OAAS9H,EAClBwP,EAAIsO,SAAS3V,IACTqH,EAAIsO,SAAS5oB,EACbsa,EAAIsO,SAAS1oB,EACbgb,WAAW0P,EAAShY,QAAUG,KAAKC,GAAK,KAE5C,MAEJ,IAAK,UACD,GAAc,IAAVlF,EAAa,MACjB/D,EAAS/J,GAAKkb,WAAWpQ,GACzBwP,EAAIvQ,SAASykB,KAAKzkB,EAAS/J,GAC3B4qB,EAASlY,QAAU5H,EACnB,MAEJ,IAAK,UACD,GAAc,IAAVgD,EAAa,MACjB/D,EAAS7J,GAAKgb,WAAWpQ,GACzBwP,EAAIvQ,SAAS0kB,KAAK1kB,EAAS7J,GAC3B0qB,EAASjY,QAAU7H,EACnB,MAEJ,IAAK,aACD,GAAc,IAAVgD,EAAa,MAEjB,GADA8c,EAASjX,WAAa7I,EAClB,CAAC,cAAe,cAAe,eAAe9D,SAAS4jB,EAASlgB,YAAa,CAS7E,IAAIsL,EAAgB,IAAIC,EARE,CAEtBjV,MAAO4pB,EAASjX,WAChBjN,aAAa,EACbF,KAAMC,EACNE,YAAY,EACZC,WAAW,IAGf0T,EAAIpT,SAAW8O,CAClB,MAC2B,gBAAxB4U,EAASlgB,YACe,iBAAxBkgB,EAASlgB,YACc,YAAtBkgB,EAASpf,UAAkD,UAAxBof,EAASlgB,YAA+C,MAArBkgB,EAASpU,UACzD,YAAtBoU,EAASpf,UAAkD,YAAxBof,EAASlgB,YAA+C,KAAnBkgB,EAAS9f,SAClFmjB,EAAUrD,EAAUtQ,GACpB4R,EAAgB,KACZyB,EAAUjqB,GAAA,CAAA,EACHknB,EAAQ,CACXjX,WAAYiX,EAASjX,WAAWzP,QAAQ,IAAK,MAErD,IAEJ,MAEJ,IAAK,WACD,GAAc,IAAV4J,EAAa,MACjB8c,EAASvjB,SAAWyD,EACpB,IAAI4jB,EAAqB,eACzBL,EAAI/T,EAAIhQ,YAAJ+jB,EAAexsB,WAAW,eAC1B6sB,EAAW,aAEfpU,EAAIpT,SAAWb,GACX7F,EACAkuB,EACA9D,EAAS3S,aACT2S,EAASvjB,SACgB,MAAzBujB,EAASlkB,YACT,CAAC,CAACkkB,EAAS3S,cAAYvU,GAAA,CAAA,EAAOknB,KAQ1CsB,EAAgB,KACZL,EAAWnoB,MAAMknB,IACjB+C,EAAUjqB,GAAMknB,CAAAA,EAAAA,GAAU,EAC7B,GAEJ,EAEC+D,GAAgB1kB,IAClB,MAAM8Z,EAAS9Z,EAAE8Z,OAGjBoK,GADapK,EAAO5jB,KADN4jB,EAAOjZ,MAEE,EAU3BiP,EAAU,KACN,GAAIrM,GAAQA,EAAK0M,UAAYiR,EAAY,CACrC,MAAMvd,EAAQJ,EAAK0M,SAAS0T,UAAWhjB,GAAeA,EAAMmN,eAAiBoT,GAEzEQ,GADW,IAAX/d,EACWpK,GAAKgK,CAAAA,EAAAA,EAAK0M,SAAStM,IAEnBpK,GACJ8mB,CAAAA,EAAAA,GAAuBC,IAC1B7oB,GAAI,QAAU,IAAIgtB,MAAQC,YAGrC,CACD,MAAO,KACHnD,EAAmB,IACvB,EACD,CAAChe,EAAM2d,IAEVtR,EAAU,KACD6Q,IACDA,EAASpf,WACTgiB,EAAgB5C,EAASpf,UACzBwgB,EAAiBpB,EAAS3S,eAE1B2S,EAASlgB,aACT8iB,EAAgB5C,EAASlgB,YACzBshB,EAAiBpB,EAAS3S,eAC7B,EACF,CAAC2S,IAEJ,MAAMkE,GAAkB5gB,IACpB,GAAK0c,GACD5c,OAAO+gB,OAAOnE,EAAU1c,GAAM,CAC9B,IAAIpD,EAAQzI,SAASuoB,EAAS1c,IAC9BpD,GAAS,EACTqjB,GAAYjgB,EAAKpD,EAAMiiB,WAC1B,GAGCiC,GAAkB9gB,IACpB,GAAK0c,GACD5c,OAAO+gB,OAAOnE,EAAU1c,GAAM,CAC9B,IAAIpD,EAAQzI,SAASuoB,EAAS1c,IAC9BpD,GAAS,EACTqjB,GAAYjgB,EAAKpD,EAAMiiB,WAC1B,GAGCkC,GAAqBA,CAAC/gB,EAAgByW,KACxC,GAAKiG,GACD5c,OAAO+gB,OAAOnE,EAAU1c,GAAM,CAC9B,IAAIpD,EAAQzI,SAASuoB,EAAS1c,IAC9BpD,GAAS6Z,EACL7Z,EAAQ,IACRA,EAAQ6Z,EACS,MAAV7Z,IACPA,EAAQ,GAGZqjB,GAAYjgB,EAAKpD,EAAMiiB,WAC1B,GAWCmC,GAAmBhhB,GAAmD,KACpEke,EAAa7M,QAAQrR,KAEzBke,EAAa7M,QAAQrR,GAAOihB,YAAY,KACpCL,GAAe5gB,EAAG,EACnB,KACP,EAEMkhB,GAAmBlhB,GAAmD,KACpEke,EAAa7M,QAAQrR,KAEzBke,EAAa7M,QAAQrR,GAAOihB,YAAY,KACpCH,GAAe9gB,EACnB,EAAG,OAGDmhB,GAAgBA,KAClB,IAAInhB,EACJ,IAAKA,KAAOke,EAAa7M,QACjB6M,EAAa7M,QAAQrR,IACrBogB,cAAclC,EAAa7M,QAAQrR,IACnCke,EAAa7M,QAAQrR,GAAO,IACnC,EAWL,OAAK0c,EAGDrmB,EAAAyc,EAAA,CAAAtc,SAAA,CACIC,EAAC2qB,EAAIC,UAAS,CAACC,UAAWjE,EAAU7mB,SAChCH,EAACkrB,aACGlrB,EAACmrB,EACG,CAAAhrB,SAAA,CAAAC,EAAC8qB,EAAG,CAACE,GAAG,IACJjrB,SAAAH,EAACqrB,EAAG,CACAC,QAAQ,OACR5O,UAAU,WAEV6O,SAAUtC,EAAe9oB,SAAA,CAEzBC,EAACirB,EAAIG,KAAI,CAAArrB,SACLC,EAACirB,EAAII,KAAI,CAACC,SAAU,WAA+BvrB,SAAA,eAEvDC,EAACirB,EAAIG,KACD,CAAArrB,SAAAC,EAACirB,EAAII,KAAK,CAAAC,SAAU,UAASvrB,SAAA,cAEjCC,EAACirB,EAAIG,KAAI,CAAArrB,SACLC,EAACirB,EAAII,KAAI,CAACC,SAAU,SAA2BvrB,SAAA,kBAI3DC,EAAC8qB,GAAIE,GAAG,IAAI1O,UAAU,OAGlBvc,SAAAC,EAACurB,EAAO,CAAAL,QAAQ,SAAS5O,UAAU,OAAOsB,QA3Z9C4N,KAChB,IAAKvF,EAAU,OACf,MAAMwF,EAAgB5F,GAAuBI,EAAS5S,WAClDsT,GACAA,EAAW5nB,GAAA,GACJknB,IAGXiB,EAAWnoB,GACJ0sB,CAAAA,EAAAA,EACHxuB,CAAAA,GAAIgpB,EAAShpB,MAEjB+rB,EAAUjqB,GAAA,CAAA,EACH0sB,EAAa,CAChBxuB,GAAIgpB,EAAShpB,KAErB,EA2YsF8C,SAAA,eAGtEC,EAAC+qB,EACG,CAAAhrB,SAAAC,EAAC8qB,EAAI,CAAAE,GAAG,cACJprB,EAAC+qB,EAAIe,mBACD9rB,EAAC+qB,EAAIgB,MAAKL,SAAU,WAAUvrB,SAAA,CAClCC,EAAC4rB,GAAW,CACRtP,UAAU,OACC,aAAA,oBACXuP,YAxjBRA,CAACC,EAAoBC,KACrCpE,GAAa,GACSC,EAAekE,GACvBzD,KAAKtf,IACf4e,GAAa,GACb,IAAI7W,EAAc,GAClB,IAAK/H,EAAM,OAAO+H,EACb/H,EAAK0c,QAQNxnB,QAAQsH,MAAM,0BAA0BwD,EAAKxD,SAP7CuL,EAAS/H,EAAKoQ,MAAMrO,IAAKzE,IACd,CACHF,MAAOE,EAAKpJ,GACZ+uB,MAAO3lB,EAAK7K,QAMxBuwB,EAASjb,IACZ,EAuiBuBmb,iBAAkBA,IAAM,sBACxBC,YAAY,uBACZ/lB,MAAqBigB,OAAhBA,EAAErd,EAAK2M,mBAAS0Q,EAAdA,EAAgBjB,OAAQ9e,GAAoBA,EAAKpJ,KAAOgpB,EAASjgB,qBAAjEogB,EAA+Etb,IAAKzE,KACvFF,MAAOE,EAAKpJ,GACZ+uB,MAAU,GAAA3lB,EAAKJ,cAAcI,EAAK8lB,UAAY9lB,EAAK8lB,SAAS/wB,OAAS,EAAIiL,EAAK8lB,SAAW,QAE7FC,eAAgB/F,OAAFA,EAAEtd,EAAK2M,gBAAL2Q,EAAAA,EAAgBvb,IAAKzE,IAAS,CAAOF,MAAOE,EAAKpJ,GAAI+uB,MAAO,GAAG3lB,EAAKJ,cAAcI,EAAK8lB,UAAY9lB,EAAK8lB,SAAS/wB,OAAS,EAAGiL,EAAK8lB,SAAW,QAC7J/H,SAnZCiI,EAAElmB,YACvBA,GAAS8f,IACTA,EAASjgB,YAAcG,EACvB8f,EAASpU,SAAW,GACpBqV,EAAWnoB,GAAKknB,CAAAA,EAAAA,IAChB+C,EAAUjqB,GAAA,CAAA,EAAKknB,IAClB,IAgZWrmB,EAAC0sB,GACG,CAAApB,QAAQ,QACRjuB,GAAG,kBACH4tB,UAAW/D,EACXqE,SAAUtC,EAEV9oB,SAAA,CAAAC,EAAC2qB,EAAI,CAAAW,SAAS,cAAcpV,MAAM,gBAClClW,EAAC2qB,GAAIW,SAAS,cAAcpV,MAAM,gBAClClW,EAAC2qB,EAAG,CAACW,SAAS,cAAcpV,MAAM,cAC9BnW,SAAAC,EAACusB,GAAKzW,OAAMwG,UAAU,MAAKvc,SACvBH,EAACmrB,GAAIzO,UAAU,0BACXvc,SAAA,CAAAC,EAAC8qB,EAAI,CAAAE,GAAG,IACJjrB,SAAAC,EAACusB,GAAKC,OAAMlQ,UAAU,OAAwBvc,SAAA,WAElDC,EAAC8qB,EAAG,CAACE,GAAG,cACJhrB,EAACusB,GAAKE,QAAO,CACTC,GAAG,WACHlxB,KAAK,cACLmxB,KAAM,EACNxmB,MAAO8f,EAAS/f,YAChBke,SAAU4F,oBAStBhqB,EAAC2qB,EAAIgB,MAAKL,SAAU,UAChCvrB,SAAAH,EAAC0sB,GAAI,CACDpB,QAAQ,QACRjuB,GAAG,mBACH4tB,UAAW7D,EACXmE,SAAUtC,EAEV9oB,SAAA,CAAAC,EAAC2qB,EAAI,CAAAW,SAAS,QAAQpV,MAAM,QAAOnW,SAC/BH,EAAC2sB,GAAKK,OAAO,CAAAtQ,UAAU,MAAK,aAAY,oBAAoBnW,MAAwB,OAAnBmgB,EAAEL,EAASpU,UAAQyU,EAAG,GAAIlC,SAlbxF9e,IACS,IAAAunB,EAA5BvnB,EAAE8Z,OAAOjZ,OAAS8f,IAClBA,EAASpU,SAAWvM,EAAE8Z,OAAOjZ,MAC7B8f,EAASjgB,YAAc,GACvBkhB,EAAWnoB,GAAA,CAAA,EAAKknB,IAChB+C,EAAUjqB,MAAKknB,IACR4G,MAAP5Z,GAAmB,OAAZ4Z,EAAP5Z,EAASgI,aAAT4R,EAAqB/uB,QAAQ,CAAC6X,EAAKxM,KACjB,IAAVA,GACJ6c,GAAyBrQ,EAAKsQ,EAClC,GACH,EAyauBlmB,SAAA,CAAAC,EAAA,SAAA,CAAQmG,MAAO,GAAI2mB,YAASC,QAAM,EAAAhtB,SAAA,6BAA2BwmB,EAC5Dxd,EAAKwM,eAALgR,EAAazb,IAAI,CAAC3E,EAAYgD,IAAkBnJ,EAA2C,SAAA,CAAAmG,MAAOA,EAAMlJ,YAAKkJ,EAAM+P,OAAtD,SAAS/P,EAAMlJ,MAAMkM,WAG3FnJ,EAAC2qB,GAAIW,SAAS,UAAUpV,MAAM,UAC1BnW,SAAAH,EAAC2sB,GAAKK,QAAOtQ,UAAU,MAAK,aAAY,oBAAoBnW,MAAO8f,EAAS9f,MAAOie,SA3a9E9e,IACO0nB,IAAAA,EAA5B1nB,EAAE8Z,OAAOjZ,OAAS8f,IAClBA,EAAS9f,MAAQb,EAAE8Z,OAAOjZ,MAC1B+gB,EAAWnoB,GAAA,GAAKknB,IAChB+C,EAAUjqB,GAAA,GAAKknB,IACR+G,MAAP/Z,GAAA+Z,OAAOA,EAAP/Z,EAASgI,aAAT+R,EAAqBlvB,QAAQ,CAAC6X,EAAKxM,KACjB,IAAVA,GACJmgB,EAAUrD,EAAUtQ,EAAG,GAE9B,EAmauB5V,SAAA,CAAAC,EAAA,SAAA,CAAQmG,MAAO,GAAI2mB,YAASC,QAAM,EAAAhtB,SAAA,6BAA2BymB,EAC5Dnd,OAAOC,KAAKP,EAAK+N,mBAAjB0P,EAA6B1b,IAAK3E,GAC/BnG,EAAiC,SAAA,CAAAmG,MAAOA,EAAKpG,SAAGgJ,EAAK+N,UAAU3Q,GAAO3K,MAAzD,WAAW2K,gBAM5BnG,EAAC2qB,EAAIgB,KAAK,CAAAL,SAAU,SAAQvrB,SACxCH,EAAC0sB,GAAI,CACDpB,QAAQ,QACRjuB,GAAG,kBACH4tB,UAAW/D,EACXqE,SAAUtC,EAEV9oB,SAAA,CAAAC,EAAC2qB,EAAI,CAAAW,SAAS,cAAcpV,MAAM,gBAC9BlW,EAACusB,GAAKzW,MAAK,CAACwG,UAAU,eAClB1c,EAACmrB,EAAI,CAAAzO,UAAU,oCACXtc,EAAC8qB,GAAIE,GAAG,IACJjrB,SAAAC,EAACusB,GAAKC,MAAK,CAAClQ,UAAU,2BAE1Btc,EAAC8qB,EAAG,CAACE,GAAG,KAAIjrB,SACRC,EAACusB,GAAKE,QACF,CAAAjxB,KAAK,cACLkxB,GAAG,WACHC,KAAM,EACNxmB,MAAO8f,EAAS/f,YAChBke,SAAU4F,cAM9BhqB,EAAC2qB,EAAG,CAACW,SAAS,eAAepV,MAAM,iBAC/BlW,EAACusB,GAAKzW,MAAK,CAACwG,UAAU,MAAKvc,SACvBH,EAACmrB,EAAG,CAACzO,UAAU,oCACXtc,EAAC8qB,EAAI,CAAAE,GAAG,aACJhrB,EAACusB,GAAKC,MAAK,CAAClQ,UAAU,OAA6Bvc,SAAA,gBAEvDC,EAAC8qB,EAAI,CAAAE,GAAG,KAAIjrB,SACRC,EAACusB,GAAKE,QAAO,CACThtB,KAAK,SACLjE,KAAK,eACL2K,MAAO8f,EAASjW,aAChBoU,SAAU4F,+BAa1CpqB,EAAC2sB,GAAKzW,OAAMwG,UAAU,YAAWvc,SAAA,CAC7BH,EAACmrB,GAAIzO,UAAU,0BACXvc,SAAA,CAAAC,EAAC8qB,EAAI,CAAAE,GAAG,IAAI1O,UAAU,+BAA8Bvc,SAChDC,EAACusB,GAAKC,MAAM,CAAAlQ,UAAU,OAAwBvc,SAAA,WAElDC,EAAC8qB,YACGlrB,EAACmrB,GAAI3jB,MAAO,CAAC6lB,cAAe,OAAMltB,SAAA,CAC9BC,SAAKoH,MAAO,CAAC8lB,SAAU,IACnBntB,SAAAC,EAACurB,EACG,CAAA3N,QAASA,IAAMuM,GAAe,QAC9BgD,YAAa5C,GAAgB,QAC7B6C,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,4BAGtDvtB,SAAKoH,MAAO,CAAC8lB,SAAU,GAAIM,QAAS,GAAEztB,SAClCC,EAACusB,GAAKE,QAAO,CACTjxB,KAAK,OACLiE,KAAK,OACL0G,MAAO8f,EAASzV,KAChB4T,SAAU4F,OAGlBhqB,EAAA,MAAA,CAAKoH,MAAO,CAAC8lB,SAAU,aACnBltB,EAACurB,GACG3N,QAASA,IAAMyM,GAAe,QAC9B8C,YAAa1C,GAAgB,QAC7B2C,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,WAAUxtB,SAAA,QAGhEC,EAAA,MAAA,CAAKsc,UAAU,gCAAgClV,MAAO,CAAE8lB,SAAU,GAAID,cAAe,UACjFltB,SAAAH,EAACmrB,EACG,CAAAhrB,SAAA,CAAAC,EAAC8qB,EAAI,CAAAE,GAAG,IAAGjrB,SACPC,EAACusB,GAAKkB,OACFjyB,KAAK,YACLyB,GAAG,YACHwC,KAAK,WAEL0G,MAAO8f,EAAS9f,MAChBunB,QAA4B,MAAnBzH,EAAS9f,MAClBie,SAjTd9e,IACtB,MAAM8Z,EAAS9Z,EAAE8Z,OAGjBoK,GADapK,EAAO5jB,KADW,MAAjB4jB,EAAOjZ,MAAe,IAAM,IAEnB,MAgTKnG,EAAC8qB,EAAG,CAACE,GAAG,IAAI1O,UAAU,MAClBvc,SAAAC,EAACusB,GAAKC,MAAM,CAAAmB,QAAQ,YAAYrR,UAAU,OAAMvc,SAAA,wBAOxEH,EAACmrB,EAAI,CAAAzO,UAAU,0BAAyBvc,SAAA,CACpCC,EAAC8qB,EAAI,CAAAE,GAAG,IAAI1O,UAAU,+BAA8Bvc,SAChDC,EAACusB,GAAKC,MAAK,CAAClQ,UAAU,OAA0Bvc,SAAA,aAEpDC,EAAC8qB,EAAG,CAACE,GAAG,IACJjrB,SAAAH,EAACmrB,EAAG,CAAC3jB,MAAO,CAAC6lB,cAAe,iBACxBjtB,EAAK,MAAA,CAAAoH,MAAO,CAAC8lB,SAAU,IACnBntB,SAAAC,EAACurB,EAAM,CACH3N,QAASA,IAAMuM,GAAe,UAC9BgD,YAAa5C,GAAgB,UAC7B6C,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,WACvCxtB,SAAA,QAEfC,EAAA,MAAA,CAAKoH,MAAO,CAAC8lB,SAAU,GAAIM,QAAS,GAChCztB,SAAAC,EAACusB,GAAKE,QACF,CAAAjxB,KAAK,SACLiE,KAAK,SACL0G,MAAO8d,MAAAA,EAAAA,EAAYgC,EAAShY,OAC5BmW,SAAU4F,OAGlBhqB,EAAK,MAAA,CAAAoH,MAAO,CAAC8lB,SAAU,IAAGntB,SACtBC,EAACurB,GACG3N,QAASA,IAAMyM,GAAe,UAC9B8C,YAAa1C,GAAgB,UAC7B2C,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,WACrCxtB,SAAA,QAEjBC,EAAK,MAAA,CAAAoH,MAAO,CAAC8lB,SAAU,GAAI1hB,OAAQ,IAAGzL,SAClCC,EAACurB,EAAM,CACH3N,QAASA,IAAM0M,GAAmB,SAAU,IAC5C6C,aA5RE5jB,GA4RoC,SA5RD,KAC7Dke,EAAa7M,QAAQrR,MAEzBke,EAAa7M,QAAQrR,IAAOihB,YAAY,KACpCF,GAAmB/gB,GAwRqD,GAvR5E,EAAG,KAAG,GAwRsB6jB,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,WAE9CxtB,SAAAC,EAAC4tB,GAAe,CAAApd,KAAM,qBAM1C5Q,EAACmrB,GAAIzO,UAAU,0BAAyBvc,SAAA,CACpCC,EAAC8qB,EAAI,CAAAE,GAAG,IAAI1O,UAAU,wCAClBtc,EAACusB,GAAKC,MAAM,CAAAlQ,UAAU,OAAMvc,SAAA,eAEhCC,EAAC8qB,GAAIE,GAAG,IAAGjrB,SACPH,EAACmrB,GAAI3jB,MAAO,CAAC6lB,cAAe,OACxBltB,SAAA,CAAAC,EAAA,MAAA,CAAKoH,MAAO,CAAC8lB,SAAU,IACnBntB,SAAAC,EAACurB,EAAM,CACH3N,QAASA,IAAMuM,GAAe,WAC9BgD,YAAa5C,GAAgB,WAC7B6C,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,WAAUxtB,SAAA,QAGhEC,SAAKoH,MAAO,CAAC8lB,SAAU,GAAIM,QAAS,GAEhCztB,SAAAC,EAACusB,GAAKE,QACF,CAAAjxB,KAAK,UACLiE,KAAK,SACL0G,MAAO8f,EAASlY,QAChBqW,SAAU4F,OAGlBhqB,EAAA,MAAA,CAAKoH,MAAO,CAAC8lB,SAAU,IACnBntB,SAAAC,EAACurB,EAAM,CACH3N,QAASA,IAAMyM,GAAe,WAC9B8C,YAAa1C,GAAgB,WAC7B2C,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,WACrCxtB,SAAA,gBAK7BH,EAACmrB,EAAG,CAACzO,UAAU,0BACXvc,SAAA,CAAAC,EAAC8qB,EAAG,CAACE,GAAG,IAAI1O,UAAU,wCAClBtc,EAACusB,GAAKC,MAAM,CAAAlQ,UAAU,OAAMvc,SAAA,eAEhCC,EAAC8qB,GAAIE,GAAG,IAAGjrB,SACPH,EAACmrB,EAAI,CAAA3jB,MAAO,CAAC6lB,cAAe,iBACxBjtB,EAAK,MAAA,CAAAoH,MAAO,CAAC8lB,SAAU,IAAGntB,SACtBC,EAACurB,EACG,CAAA3N,QAASA,IAAMuM,GAAe,WAC9BgD,YAAa5C,GAAgB,WAC7B6C,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,WACvCxtB,SAAA,QAEfC,EAAA,MAAA,CAAKoH,MAAO,CAAC8lB,SAAU,GAAIM,QAAS,GAAEztB,SAClCC,EAACusB,GAAKE,QAAO,CACTjxB,KAAK,UACLiE,KAAK,SACL0G,MAAO8f,EAASjY,QAChBoW,SAAU4F,OAGlBhqB,EAAA,MAAA,CAAKoH,MAAO,CAAC8lB,SAAU,IACnBntB,SAAAC,EAACurB,EAAM,CACH3N,QAASA,IAAMyM,GAAe,WAC9B8C,YAAa1C,GAAgB,WAC7B2C,UAAW1C,GACX2C,aAAc3C,GACdQ,QAAQ,eACR9jB,MAAO,CAACkmB,YAAa,UAAWC,aAAc,WAAUxtB,SAAA,gBAM5EH,EAACmrB,EAAI,CAAAzO,UAAU,0BAAyBvc,SAAA,CACpCC,EAAC8qB,EAAI,CAAAE,GAAG,IAAI1O,UAAU,+BAA8Bvc,SAChDC,EAACusB,GAAKC,MAAK,CAAClQ,UAAU,OAA4Bvc,SAAA,eAEtDC,EAAC8qB,EAAG,CAACE,GAAG,IAAI1O,UAAU,eAClBtc,EAACusB,GAAKE,QACF,CAAAjxB,KAAK,WACLiE,KAAK,SACL0G,MAAO7G,GAAiB2mB,EAASvjB,UACjC0hB,SAAU4F,OAGlBhqB,EAAC8qB,EAAG,CAACE,GAAG,IAAGjrB,SACPC,EAACusB,GAAKE,QAAO,CACThtB,KAAK,QACLjE,KAAK,WACL2K,MAAO7G,GAAiB2mB,EAASvjB,UACjC0hB,SAAU4F,OAGlBhqB,EAAC8qB,EAAG,CAACE,GAAG,IAAGjrB,SACPH,EAACmrB,EAAG,CAAAhrB,SAAA,CACAC,EAAC8qB,EAAI,CAAAE,GAAG,IAAGjrB,SACPC,EACQ,QAAA,CAAAxE,KAAK,cACLyB,GAAG,cACHwC,KAAK,WACL0G,MAAO8f,EAASlkB,YAChBqiB,SAAU4F,OAGtBhqB,EAAC8qB,EAAI,CAAAE,GAAG,IAAI1O,UAAU,MAAKvc,SACvBC,EAACusB,GAAKC,OAAMmB,QAAQ,cAAcrR,UAAU,OAA+Bvc,SAAA,0BAK1F,CAAC,cAAe,cAAe,eAAesC,SAAS4jB,EAASlgB,aAC7DnG,EAACmrB,EAAI,CAAAzO,UAAU,oCACXtc,EAAC8qB,EAAI,CAAAE,GAAG,IAAI1O,UAAU,+BAA8Bvc,SAChDC,EAACusB,GAAKC,MAAK,CAAClQ,UAAU,OAAMvc,SAAA,iBAEhCC,EAAC8qB,EAAG,CAACE,GAAG,IACJjrB,SAAAC,EAACusB,GAAKE,QAAO,CACThtB,KAAK,SACLjE,KAAK,aACL2K,MAAO7G,GAAiB2mB,EAASjX,YACjCoV,SAAU4F,OAGlBhqB,EAAC8qB,EAAI,CAAAE,GAAG,aACJhrB,EAACusB,GAAKE,QACF,CAAAjxB,KAAK,aACLiE,KAAK,QACL0G,MAAO7G,GAAiB2mB,EAASjX,YACjCoV,SAAU4F,UAKzB,CAAC,QAAS,WAAW3nB,SAAS4jB,EAASlgB,aACpCnG,EAACmrB,EAAG,CAACzO,UAAU,0BAAyBvc,SAAA,CACpCC,EAAC8qB,EAAI,CAAAE,GAAG,aACJhrB,EAACusB,GAAKC,MAAM,CAAAlQ,UAAU,OAA8Bvc,SAAA,iBAExDC,EAAC8qB,EAAG,CAACE,GAAG,IACJjrB,SAAAC,EAACusB,GAAKE,QAAO,CACThtB,KAAK,SACLjE,KAAK,aACL2K,MAAO7G,GAAiB2mB,EAASjX,YACjCoV,SAAU4F,OAGlBhqB,EAAC8qB,EAAG,CAACE,GAAG,IACJjrB,SAAAC,EAACusB,GAAKE,QAAO,CACThtB,KAAK,QACLjE,KAAK,aACL2K,MAAO7G,GAAiB2mB,EAASjX,YACjCoV,SAAU4F,UAK1BhqB,EAAC+qB,EAAI,CAAAzO,UAAU,mCAAkCvc,SAC7CC,EAAQ,SAAA,CAAA4d,QAtaDiQ,KACnB,GAAI/U,EAAOgV,UAAY7a,GAAWA,EAAQgI,YAAcgL,EAAU,CAC9DA,EAASpU,SAAiC,KAAtBoU,EAASpU,SAAkB,KAAOoU,EAASpU,SAC/D,MAAMkc,EAAgC,OAAtB9H,EAASpU,SAAmBnU,SAASuoB,EAASpU,UAAY,KAC1EiH,EAAOgV,SAAQ/uB,GAAA,CAAA,EAAKknB,EAAU3S,CAAAA,aAAcL,EAAQgI,WAAW,GAAGtV,UAAqBkM,SAAUkc,IACpG,GAia4CzR,UAAU,kBAAmBvc,SAAAkmB,EAAShpB,GAAGmrB,WAAWlrB,WAAW,QAAS,OAAS,mBA9ZxG,KAzCO8wB,IAACzkB,EAycb,EAMzB,SAASwf,GAAiB9V,GACtB,GAAIA,GAAWA,EAAQgI,WAAY,CAC/B,MAAMtF,EAAM1C,EAAQgI,WAAW,GAC3BtF,GAAOA,EAAI3Y,UAAY2Y,EAAI3Y,SAAS4f,cACpCjH,EAAI3Y,SAAS4f,iBAAc3hB,EAElC,CACL,CC5hCA,MAAMuqB,GAA4B,CAC9Bzc,KAAM,KACN2e,WAAW,EACXjC,SAAS,EACTlgB,MAAO,sBCCX,MAAM0oB,GAAmBA,EAAEvY,YAAWlH,WAAUkZ,YAAW9J,UAASsQ,YAAWlJ,UAAS+I,kBAAgLI,EACpQ,MAAOC,EAAYC,GAAiBvb,EAAiB,IAmBrD,OA0BIlT,EACK,MA3BJsuB,IAAcxG,GAAclZ,EA2BxB,CAAAzO,SAAA,GAAEyO,GACC5O,EACIyc,EAAA,CAAAtc,SAAA,CAAAC,EAAA,MAAA,CAAKsc,mBAAkCvc,SACnCC,EAAK,MAAA,CAAAsc,mBAA0B1N,IAAKJ,EAASK,KAAMyf,IAAK9f,EAASvI,gBAErErG,EAAA,MAAA,CAAK0c,UAAWgJ,GAA+BvlB,SAAA,CAC3CH,EACI,MAAA,CAAAG,SAAA,CAAAC,EAAA,IAAA,CAAAD,SAAA,cAAkB,IAAAyO,EAASvI,eAE9BuI,EAAS2d,UACNvsB,EACI,MAAA,CAAAG,SAAA,CAAAC,EAAA,IAAA,CAAAD,SAAA,kBAAkByO,EAAS2d,YAGlC3d,EAAS+f,gBACN3uB,EACI,MAAA,CAAAG,SAAA,CAAAC,EAAA,IAAA,CAAAD,SAAA,eAAeyO,EAAS+f,kBAG/B/f,EAASggB,sBACNxuB,EAAA,MAAA,CAAKyuB,wBAAyB,CAAEC,OAAQlgB,EAASggB,8BAKjExuB,EAACusB,GAAK,CAAAjQ,mBACFvc,SAAAC,EAAC2uB,GACG,CAAA5uB,SAAAC,EAAA,MAAA,CAAKsc,UAAU,kCACVvc,SAACguB,EAAQ3yB,OAkBJ,KAjBFwE,EAAAyc,EAAA,CAAAtc,SAAA,CACIH,EAAC2sB,GAAKK,OACF,CAAApxB,KAAK,WACL4oB,SArEyB9e,IACrD+oB,EAAc/oB,EAAE8Z,OAAOjZ,MAC3B,EAoEgCA,MAAOioB,EAEPruB,SAAA,CAAAC,EAAA,SAAA,CAAQmG,MAAO,GAAI2mB,UAAQ,EAAA/sB,SAAA,2BAC1BouB,OAD0DA,EApEnES,EAAClZ,EAAuBmZ,IACrCnZ,EAAUyP,OAAO3W,GACpBqgB,EAAaC,KAAKnZ,GAAOA,EAAI3P,cAAgBwI,EAASvR,KAmE7B2xB,CAAgBlZ,MAAAA,EAAAA,EAAa,GAAIsP,MAAAA,EAAAA,EAAW,UAA5CmJ,EAAAA,EAAiDrjB,IAAI,CAACzE,EAAM8C,IACrDqF,GAAYnI,EAAKpJ,KAAOuR,EAASvR,QAEjC+C,EAAA,SAAA,CAAoBmG,MAAOE,EAAKpJ,GAAK8C,SAAAsG,EAAKJ,aAA7BkD,OAKzBnJ,EAAA,SAAA,CAAQ4d,QAxFyBtY,IACzDA,EAAE8f,iBACExH,GACAA,EAAQwQ,EACX,EAoFuD9R,UAAU,8BAA6Bvc,SAAA,sBApE3F,CAAAA,SAAA,CAAAC,EAAA,MAAA,CAAKsc,mBACDvc,SAAAC,EAAC+uB,GAAO,CAACC,UAAU,SAASjsB,KAAK,SAASmoB,QAAQ,gBAEtDtrB,EAAK,MAAA,CAAA0c,UAAWgJ,GAA+BvlB,SAAA,CAC3CH,EACI,MAAA,CAAAG,SAAA,CAAAC,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAY,CAAAC,GAAG,YAAaC,GAAI,OAEnHvvB,EAAA,MAAA,CAAAG,SAAA,CACIC,EAACivB,GAAY,CAAAC,GAAG,YAAaC,GAAI,IAAK,IAACnvB,EAACivB,GAAY,CAAAC,GAAG,YAAaC,GAAI,IAAK,IAACnvB,EAACivB,GAAY,CAAAC,GAAG,YAAaC,GAAI,IAAK,IAACnvB,EAACivB,GAAY,CAAAC,GAAG,YAAaC,GAAI,OAE1JvvB,EAAA,MAAA,CAAAG,SAAA,CACIC,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,OAE5EvvB,EACI,MAAA,CAAAG,SAAA,CAAAC,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IACtJnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,IAAM,IAAAnvB,EAACivB,GAAW,CAACC,GAAG,YAAaC,GAAI,YA2DvJ,EAKbC,GAAqB5V,IACvB,MAAMhY,QACFA,EAAO6tB,KACPA,EAAIC,OACJA,EAAMxJ,SACNA,EAAQpQ,UACRA,EAASsP,QACTA,EAAOuK,cACPA,EAAaC,UACbA,EAAS5R,QACTA,EAAOmQ,QACPA,GACAvU,EACEiW,EAAO7a,EAAQ,KACjB,GAAIkR,GAAYd,GAAWtP,GAAa6Z,EAAe,CACnD,MAAM/Z,EAASwP,EAAQ5e,KAAKC,GAAQA,EAAKiN,eAAiBic,GAC1D,GAAI/Z,GAAUA,EAAOxP,YAAa,CAC9B,MAAMwI,EAAWkH,EAAUtP,KAAKC,GAAQA,EAAKpJ,KAAOuY,EAAOxP,aAC3D,GAAIwI,EACA,OAAOA,EAASihB,IAEvB,CACJ,CACD,MAAO,IACR,CAAC3J,EAAUyJ,EAAevK,EAAStP,IAChC3M,ED9HeyQ,KACrB,MAAMsM,SAACA,EAAQ2J,KAAEA,EAAID,UAAEA,GAAahW,GAC7BzQ,EAAM0d,GAAW3T,EAAuB0S,IA4D/C,OA1DA5Q,EAAQ,KACJ,IAAK6a,IAAS3J,EAEV,OADAW,EAAO1nB,MAAKymB,MAEf,EAED,IAAIqC,EAAS2H,EAET3H,GAEAA,EAASA,EAAOtoB,QADN,MACiB,IAC3BknB,EAAQ,CACJiB,WAAW,EACX3e,KAAM,KACN0c,SAAS,EACTlgB,MAAO,OAEX2iB,MAAS,GAAAL,kBAAuB4H,IAAQ,CACpCtH,QAAS,CACL9U,UAAWyS,KAEhBuC,KACE/S,GAAaA,EAASiT,QACzBF,KAAKtf,IACH0d,EAAQ,CACJiB,WAAW,EACXjC,SAAS,EACTlgB,MAAO,KACPwD,KAAM,CACF9L,GAAI8L,EAAK9L,GACTgJ,YAAa8C,EAAKvN,KAClBi0B,KAAM1mB,EAAK0mB,KACXtD,SAAUpjB,EAAKojB,UAA8B,MAAlBpjB,EAAKojB,SAAkBpjB,EAAKojB,SAAW,GAClEoC,eAAgBxlB,EAAKwlB,eACrBC,qBAAsBzlB,EAAK2mB,gBAAgBC,YAC3C9gB,KAAM9F,EAAK6mB,MAAMlH,IACjBpV,aAAc,KAG1B,GAAGqV,MAAOrjB,IACNmhB,EAAQ,CACJ1d,KAAM,KACN2e,WAAW,EACXjC,SAAS,EACTlgB,MAAO,6BAA6BD,EAAEE,WAE9C,IAEAihB,EAAQ,CACJiB,WAAW,EACXjC,SAAS,EACTlgB,MAAO,0BACPwD,KAAM,MAEb,EAEF,CAAC+c,EAAU2J,EAAMD,IAEbzmB,GCgEM8mB,CAAgB,CAAE/J,WAAU2J,OAAMD,cAwBzCtB,GAAyB,KAAZ1sB,KAAmB+tB,GAAeA,EAAcryB,WAAW,aAAwBqyB,IAAkBA,EAAcryB,WAAW,UAAYqyB,EAAcryB,WAAW,eACtL,OACI0C,EAACkwB,GAAK,CAACT,KAAMA,EAAMU,yBAAgDzT,UAAU,OAAOgT,OAAQA,EAAQU,UAAQ,EAAAjwB,SAAA,CACxGC,SAAKsc,mBACDvc,SAAAC,EAACiwB,GAAO,CAACrS,QAAS0R,EAAQ9e,KAAM,GAAInU,MAAM,QAAQigB,uBAEtDtc,EAAC8vB,GAAMI,KAAK,CAAA5T,UAAU,eAClBtc,EAACiuB,GAAiB,CAAAvY,UAAWA,EAAWlH,SAAUzF,EAAKA,KAAM2e,UAAW3e,EAAK2e,UAAW9J,QA9B7EwQ,IACnB,IAAKxQ,EAAS,OACd,IAAIpI,EAAS,KAETA,EADAuY,EACS/I,MAAAA,OAAAA,EAAAA,EAAS5e,KAAKC,IAAI8pB,IAAAA,EAAI,OAAAzyB,SAAuB,OAAfyyB,QAAC9pB,SAAAA,EAAMwL,UAAQse,EAAG,MAAQzyB,SAASqwB,EAAO,GAEjE,MAAP/I,OAAO,EAAPA,EAAS5e,KAAKC,GAAQ3I,SAAS2I,EAAKL,eAAiBtI,SAAS0wB,IAG3E,IAAImB,EAAgB,GAGhB/Z,IACA+Z,EAAgB/Z,EAAOlC,cAGvB9R,EACAoc,EAAQ2R,EAAe/tB,GAEvBoc,EAAQ2R,EACX,EAUuHrB,UAAWA,EAAWlJ,QAASA,EAAS+I,QAASA,QAEjK,ECnIVqC,GAAiBjQ,EAAW,CAACrH,EAA8ByD,KAAO,IAAA8T,EAAAC,EAAAC,EAAAC,EACtE,MAAMznB,KAAEA,EAAI0nB,YAAEA,GC/BV,UAAwB/jB,UAAEA,EAASgkB,UAAEA,EAASlB,UAAEA,IAClD,MAAOzmB,EAAM0d,GAAW3T,EAAgC,MAEnDpG,GAAcgkB,GACfzyB,QAAQsH,MAAM,wDAGlB,MAAMorB,EAAU3b,EAAY,KACxB,IAAI6S,EAAS2H,GAAa,KAE1B,GAAI3H,EAAQ,CAERA,EAASA,EAAOtoB,QADN,MACiB,IAC3B,MACMqxB,EAAmB,GAAA/I,mBACnBgJ,EAAkB,GAAAhJ,wCAClBiJ,EAAiB,GAAAjJ,yDACjBkJ,EAAiB,GAAGlJ,wBAA6Bnb,IACjDskB,EAAmB,GAAGnJ,0BAA+Bnb,IAErDukB,EAAmB/I,MAPE,GAAAL,kCAOqB,CAC5CM,QAAS,CACL9U,UAAW3G,KAEhB2b,KAAK/S,IACCA,EAASgT,IACVrqB,QAAQsH,MAAwB,kBAAA+P,EAASkT,YAAYlT,EAASmT,gBAAgBnT,EAASoT,QAEpFpT,EAASiT,SACjBI,MAAMrjB,IAAOrH,QAAQsH,MAAMD,EAAC,GAEzB4rB,EAAiBhJ,MAAM0I,EAAe,CACxCzI,QAAS,CACL9U,UAAW3G,KAEhB2b,KAAK/S,IACCA,EAASgT,IACVrqB,QAAQsH,MAAwB,kBAAA+P,EAASkT,YAAYlT,EAASmT,gBAAgBnT,EAASoT,QAEpFpT,EAASiT,SACjBI,MAAMrjB,IAAOrH,QAAQsH,MAAMD,KAExB6rB,EAAgBjJ,MAAM2I,EAAc,CACtC1I,QAAS,CACL9U,UAAW3G,KAEhB2b,KAAK/S,IACCA,EAASgT,IACVrqB,QAAQsH,MAAwB,kBAAA+P,EAASkT,YAAYlT,EAASmT,gBAAgBnT,EAASoT,QAEpFpT,EAASiT,SAEfF,KAAKtf,IACGA,GACGA,EAAKoQ,SACLpQ,EAAKoQ,OAAUpQ,EAAKoQ,MAAM/d,SAC9B6C,QAAQsH,MAAM,iCAEXwD,IACR4f,MAAMrjB,IAAOrH,QAAQsH,MAAMD,EAAC,GAE7B8rB,EAAgBlJ,MAAM4I,EAAa,CACrC3I,QAAS,CACL9U,UAAW3G,KAEhB2b,KAAK/S,IACCA,EAASgT,IACVrqB,QAAQsH,MAAwB,kBAAA+P,EAASkT,YAAYlT,EAASmT,gBAAgBnT,EAASoT,QAEpFpT,EAASiT,SACjBI,MAAMrjB,IAAOrH,QAAQsH,MAAMD,EAAG,GAE3B+rB,EAAkBnJ,MAAM6I,EAAgB,CAC1C5I,QAAS,CACL9U,UAAW3G,KAEhB2b,KAAK/S,IACCA,EAASgT,IACVrqB,QAAQsH,MAAwB,kBAAA+P,EAASkT,YAAYlT,EAASmT,gBAAgBnT,EAASoT,QAEpFpT,EAASiT,SACjBI,MAAMrjB,IAAOrH,QAAQsH,MAAMD,EAAC,GAEzBgsB,EAAoBpJ,MAAM8I,EAAkB,CAC9C7I,QAAS,CACL9U,UAAW3G,KAEhB2b,KAAK/S,IACJ,IAAKA,EAASgT,GACV,MAAM,IAAInV,MAAwB,kBAAAmC,EAASkT,YAAYlT,EAASmT,gBAAgBnT,EAASoT,QAE7F,OAAOpT,EAASiT,MACpB,GAAGI,MAAMrjB,IAAO,MAAU,IAAA6N,MAAM7N,EAAC,GAEjCisB,QAAQC,IAAgB,CACpBP,EACAC,EACAC,EACAC,EACAC,EACAC,IACDjJ,KAAKtf,IACJ,GAAIA,EAAK3N,QAAU,EAAG,CAAAq2B,IAAAA,EAClB,MAAMC,EAAwC,CAAA,EAC9CA,EAAahc,UAAY3M,EAAK,GAAGoQ,MAAMrO,IAAKzE,IAA0B,CAClEpJ,GAAIoJ,EAAKpJ,GACTgJ,YAAaI,EAAK7K,KAClBi0B,KAAMppB,EAAKopB,KACXtD,SAAU9lB,EAAK8lB,SACfoC,eAAgB,GAChBC,qBAAsB,GACtB3f,KAAMxI,EAAKupB,MAAMlH,IACjBpV,aAAc,MAElBoe,EAAajc,SAAW,IAAI1M,EAAK,GAAGoQ,OAAOrO,IAAIzE,GAAItH,GAC5CsH,CAAAA,EAAAA,EACH0H,CAAAA,QAAS1H,EAAKsrB,SACd3jB,QAAS3H,EAAKurB,YAElBF,EAAa92B,OAAS,IAAImO,EAAK,GAAGoQ,OAClCuY,EAAapb,SAAQvX,GAAA,CAAA,EACd8yB,GAA6B,CAChCrkB,WAAY,MAEhBkkB,EAAanc,OAAS,GACtBmc,EAAa5a,UAAS/X,GAAQ8yB,CAAAA,EAAAA,IAC9BH,EAAanc,OAAS,IAAIxM,EAAK,GAAGoQ,OAClC,MAAM7C,EAA4B,OAAPmb,EAAA1oB,EAAK,KAAL0oB,EAASnb,SAAWvN,EAAK,GAAGuN,SAAW,CAC9DjZ,MAAS,KACTgP,qBAAwB,SACxBQ,aAAgB,SAChBpP,oBAAuB,SACvBG,wBAA2B,SAC3Bf,eAAkB,MAClBS,WAAc,SACdF,mBAAsB,MACtBD,eAAkB,SAClBK,WAAc,SACdsP,iBAAoB,SACpB3K,cAAiB,SACjBC,gBAAmB,MACnB4U,uBAA0B,SAC1BC,yBAA4B,SAC5BxJ,UAAa,OAGbikB,EAAahb,uBADb3N,EAAK,GACiCA,EAAK,GAERhK,GAAQ8yB,CAAAA,EAAAA,IAE/CH,EAAapb,SAAWA,EAExBmQ,EAAO1nB,GAAA,CAAA,EAAM2yB,GAChB,GAER,GACF,CAAChlB,EAAW8iB,IAiBf,OAfApa,EAAU,KACFsb,EACAjK,EAAQiK,GAIPhkB,GAILikB,GAEJ,EAAG,CAACjkB,EAAWgkB,EAAWC,IAGnB,CAAE5nB,OAAM0nB,YADKA,IAAME,IAE9B,CD/IgCmB,CAAc,CAAEpB,UAAW5X,EAAO4X,UAAWhkB,UAAWoM,EAAOjd,OAAO6Q,UAAqB8iB,UAAW1W,EAAO0W,aACpIuC,EAAcC,GAAmBlf,EAAiB,KAClDmL,EAASgU,GAAcnf,GAAkB,IACzC4R,EAAoBwN,GAAyBpf,GAAkB,IAC/Dqf,EAAgBC,GAAqBtf,EAA4B,KACjEuf,EAAoBC,GAAyBxf,EAAc,OAC3Dyf,EAAWC,GAAgB1f,KAC3B2f,EAAYC,GAAiB5f,KAC7B6f,EAAaC,GAAkB9f,EAA6B,IAC7D+f,uBAAEA,EAAsBC,0BAAEA,EAAyBC,gBAAEA,EAAeC,WAAEA,EAAUC,yBAAEA,GAA6Bna,GAE9G6H,EAAmBuS,GAAwBpgB,EAAiB,KAC5DqgB,EAAqBC,GAA0BtgB,EAAiB,KAChE8N,EAAMyS,GAAWvgB,EAA2B,OAE5CqI,EAAcC,GAAmBtI,EAAiB,GAEnDwgB,EAAiBpZ,EAA8B,MAC/CqZ,EAAiBrZ,EAAkC,MACzDqZ,EAAe3Y,QAAU+X,EACzB,MAAMa,EAAwBtZ,EAAY,MAC1CsZ,EAAsB5Y,QAAUyX,EAChC,MAAMoB,EAAgBvZ,EAAkC,MACxDuZ,EAAc7Y,QAAUoY,EACxB,MAAMU,EAAexZ,EAA0F,MAEzG2G,EAAqB7L,EAAa5Z,IACtCggB,EAAgBhgB,EAClB,EAAG,IAEGupB,GAAqB1P,IACzBid,EAAsBjd,EAAU,EAG5BiI,GAAavJ,GAAc5K,EAAM+P,EAAOjd,OAAQid,EAAoBA,EAAOjF,iBAE3E8f,IADqBzZ,EAAO,MACjBA,EAAuB,QACjC0Z,GAAsBC,IAA2B/gB,EAA0B,MAC5EG,GAAUsI,MACVL,cAAEA,IAAkBjI,IAEnB6gB,GAAkBC,IAAuBjhB,GAAkB,GAC5DjX,GAASqhB,GAAWrhB,OACpBjB,GAASsiB,GAAWtiB,OACpBkZ,GAAaoJ,GAAWpJ,YAEtBuH,UAAW2Y,IAAiB/gB,GAEpCmC,EAAU,KACJnC,IAAWiK,IAAcA,GAAWrhB,QACtCm4B,GAAa9W,GAAWrhB,OACzB,EACA,CAACqhB,GAAY8W,KAEhBhQ,EAAoBzH,EAAK,KAAA,CACvBkU,cACAwD,qBAAsBlP,MAGxB3P,EAAU,KACR,GAAIke,EAAe1Y,QAAS,CAC1B,MAAMsZ,EAAcA,KAAKC,IAAAA,EACvBvB,EAA6B,MAAdU,GAAuB,OAATa,EAAdb,EAAgB1Y,cAAO,EAAvBuZ,EAAyBC,YAC1C,EACAzkB,OAAO0kB,iBAAiB,SAAU,KAChCH,GAAW,GAGbA,GACD,GACA,CAACZ,EAAe1Y,UAEnBxF,EAAU,KACJrM,GAAQA,EAAK2N,yBACf4b,EAAsBvpB,EAAK2N,wBAC3B4d,GAAoBvrB,EAAK2N,wBAC1B,EACA,CAAC3N,IAEJqM,EAAU,KACJoe,EAAsB5Y,SACxB0Z,GAAoBd,EAAsB5Y,QAC3C,EACA,CAACoY,EAAYL,IAEhB,MAAM2B,GAAuB5d,IACN,iBAAjB7a,MAAAA,QAAAA,EAAAA,GAAQyG,OACVkwB,EAAa9b,EAAuB6d,YAAY9a,QAChDiZ,EAAchc,EAAuB6d,YAAYxQ,WACvB,aAAjBloB,MAAAA,QAAAA,EAAAA,GAAQyG,OAAsBqwB,EACnCA,EAAc,MAChBH,EAAa9b,EAAuB8d,QAAQ/a,QAC5CiZ,EAAchc,EAAuB8d,QAAQzQ,WACpC4O,EAAc,KACvBH,EAAa9b,EAAuB+d,OAAOhb,QAC3CiZ,EAAchc,EAAuB+d,OAAO1Q,YAE5CyO,EAAa9b,EAAuBge,OAAOjb,QAC3CiZ,EAAchc,EAAuBge,OAAO3Q,WAEpB,uBAAX,MAANloB,QAAM,EAANA,GAAQyG,QACa,YAA1BmxB,EAAc7Y,SAChB4X,EAAa9b,EAAuB8d,QAAQ/a,QAC5CiZ,EAAchc,EAAuB8d,QAAQzQ,WACV,gBAA1B0P,EAAc7Y,SACvB4X,EAAa9b,EAAuB6d,YAAY9a,QAChDiZ,EAAchc,EAAuB6d,YAAYxQ,WACd,WAA1B0P,EAAc7Y,SACvB4X,EAAa9b,EAAuBge,OAAOjb,QAC3CiZ,EAAchc,EAAuBge,OAAO3Q,WACT,WAA1B0P,EAAc7Y,UACvB4X,EAAa9b,EAAuB+d,OAAOhb,QAC3CiZ,EAAchc,EAAuB+d,OAAO1Q,WAE/C,GAEG4Q,kBAAEA,IAAsB7b,EAC9B1D,EAAU,KAC4C,IAAAwf,EAAAC,EAAhD9rB,GAAQmU,GAAWrhB,QAAU84B,KAC/BA,MAAAA,IAAAA,GAAiB51B,GAEVgK,CAAAA,EAAAA,EACHuN,CAAAA,SAAQvX,GACHgK,CAAAA,EAAAA,EAAKuN,UACRjZ,MAAO6f,GAAWrhB,OAAOwB,MACzBwP,aAAcqQ,GAAWrhB,OAAOgR,aAAaioB,eAC7C9d,uBAAwBkG,GAAWrhB,OAAOmb,uBAAuB8d,eACjE7d,yBAA0BiG,GAAWrhB,OAAOob,yBAAyB6d,eACrEt3B,WAAY0f,GAAWrhB,OAAO2B,WAAWs3B,eACzCl3B,wBAAyBsf,GAAWrhB,OAAO+B,wBAAwBk3B,eACnE33B,eAAgB+f,GAAWrhB,OAAOsB,eAAe23B,eACjD13B,mBAAoB8f,GAAWrhB,OAAOuB,mBAAmBgrB,WACzD/b,qBAAsB6Q,GAAWrhB,OAAOwQ,qBAAqByoB,eAC7D3yB,cAAe+a,GAAWrhB,OAAOsG,cAAc2yB,eAC/C1yB,gBAAiB8a,GAAWrhB,OAAOuG,gBAAgBgmB,WACnD3qB,oBAAqByf,GAAWrhB,OAAO4B,oBAAoBq3B,eAC3DhoB,iBAAkBoQ,GAAWrhB,OAAOiR,iBAAiBgoB,eACrDx3B,WAAY4f,GAAWrhB,OAAOyB,WAAWw3B,eACzCj4B,eAAgBqgB,GAAWrhB,OAAOgB,eAAeurB,WACjD5a,WAAY0P,GAAWrhB,OAAO2R,WAAa0P,GAAWrhB,OAAO2R,WAAa,KAC1E7P,aAAcuf,GAAWrhB,OAAO8B,cAAgB,IAChD8Y,oBAAqByG,GAAWrhB,OAAOuR,OAAOE,YAAY8a,WAC1D5R,oBAAqB0G,GAAWrhB,OAAOuR,OAAOC,YAAY+a,WAC1D3a,UAA+DmnB,OAAtDA,EAA6BC,OAA7BA,EAAE3X,GAAWrhB,OAAO4R,WAASonB,EAAIzoB,GAAYqB,WAASmnB,EAAI,WAG1E,EACA,CAAC7rB,EAAMmU,GAAYyX,KAEtB,MAAM7T,GAAgC9L,EAAY,CAAC+f,EAA6CC,KAC/D,IAA3BzB,EAAe3Y,UACE,iBAAX,MAAN/e,QAAM,EAANA,GAAQyG,MACVgwB,EAAqBvzB,GAAMy0B,CAAAA,EAAAA,EAAsB5Y,QAAS,CAAA2Z,YAAe,CAAE9a,OAAQsb,EAAQhR,SAAUiR,MAC3E,aAAjBn5B,MAAAA,QAAAA,EAAAA,GAAQyG,OAAsBixB,EAAe3Y,QAEpD0X,EAAqBvzB,GAAMy0B,CAAAA,EAAAA,EAAsB5Y,QAD/C2Y,EAAe3Y,QAAU,MAC+B4Z,QAAW,CAAE/a,OAAQsb,EAAQhR,SAAUiR,IACxFzB,EAAe3Y,QAAU,IACwB,CAAA6Z,OAAU,CAAEhb,OAAQsb,EAAQhR,SAAUiR,IAEtC,CAAAN,OAAU,CAAEjb,OAAQsb,EAAQhR,SAAUiR,MAExE,uBAAX,MAANn5B,QAAM,EAANA,GAAQyG,QACa,YAA1BmxB,EAAc7Y,QAChB0X,EAAqBvzB,GAAMy0B,CAAAA,EAAAA,EAAsB5Y,QAAS,CAAA4Z,QAAW,CAAE/a,OAAQsb,EAAQhR,SAAUiR,MAC9D,gBAA1BvB,EAAc7Y,QACvB0X,EAAqBvzB,GAAA,CAAA,EAAMy0B,EAAsB5Y,QAAO,CAAE2Z,YAAe,CAAE9a,OAAQsb,EAAQhR,SAAUiR,MAClE,WAA1BvB,EAAc7Y,QACvB0X,EAAqBvzB,GAAA,CAAA,EAAMy0B,EAAsB5Y,QAAO,CAAE8Z,OAAU,CAAEjb,OAAQsb,EAAQhR,SAAUiR,MAC7D,WAA1BvB,EAAc7Y,SACvB0X,EAAqBvzB,GAAMy0B,CAAAA,EAAAA,EAAsB5Y,QAAS,CAAA6Z,OAAU,CAAEhb,OAAQsb,EAAQhR,SAAUiR,OAEnG,EACA,CAAO,MAANn5B,QAAM,EAANA,GAAQyG,OAEZ8S,EAAU,KACJoe,EAAsB5Y,SAAWqY,GACnCA,EAAyBO,EAAsB5Y,QAChD,EACA,CAACyX,EAAoBY,IAGxB,IAAIgC,GAAqB,GACrB7X,GAA+C,OAAjCiT,EAAS,MAANx0B,QAAM,EAANA,GAAQsR,wBAAsBkjB,EAAI,GACnDwC,GACFzV,GAAiByV,EACjBoC,GAAqBlD,GACZpR,IACTvD,GAAiB,GACjB6X,GAAqBlD,GAIvB,MAYMmD,GAAelgB,EAAY,KAC3BjM,GAAQA,EAAK0M,UACX0c,GACFA,EAAer0B,QAASqI,IACtB,MAAMgD,EAAQJ,EAAK0M,SAAS0T,UAAW9iB,GAAiBA,EAAKiN,eAAiBnN,EAAM4C,KAAKuK,eAC1E,IAAXnK,IACFJ,EAAK0M,SAAStM,GAAMpK,GAAA,CAAA,EAAQoH,EAAM4C,MACnC,GAKAA,GACN,CAACA,EAAMopB,IAQV/c,EAAU,KACRjK,SAASgqB,KAAK/tB,MAAMguB,OAASxB,GAAuB,UAAY,SAClE,EAAG,CAACA,KAEJ,MAAOrT,GAAcC,GAAqB6U,IAA6CzgB,EAAQ,KAC7F,IAAK/Y,GACH,MAAO,CAAC,KAAM,EAAG,IAEnB,IACI0kB,EAA4B,KAC5BC,EAAsB,EAC1B,GAAI3kB,GAAO4Q,QAAU5Q,GAAO4Q,OAAO5Q,GAAO0Q,OAAQ,CAChD,MAAM+oB,EAAkBz5B,GAAO4Q,OAAO5Q,GAAO0Q,OAAO+G,aAC9CiiB,EAAsBzhB,GAAW0hB,OAAOpvB,KAAKX,GAAQA,EAAKE,YAAc2vB,GAC1EC,IACFhV,EAAegV,EAAoB9vB,KACnC+a,EAAsB+U,EAAoB56B,YAE7C,KAIqB,YAAhBkB,GAAOyG,MACTrE,QAAQsH,MAAM,6BAKlB,MAAO,CAACgb,EAAcC,EApBL,GAoBoC,EACpD,CAAC3kB,GAAQiY,KAEN2hB,GAAkCnF,OAAvBA,EAAOC,MAAJxnB,GAAAwnB,OAAIA,EAAJxnB,EAAMnO,aAAN21B,EAAAA,EAAcn1B,QAAMk1B,EAAI,EACtChQ,GAAoBoE,GAAsB,GAAKA,EAAqB+Q,GAAc/Q,EAAqBlE,GAoC7GpL,EAAU,KACR,IAAKvZ,GACH,OAGF,MAAM0Z,EAAwB,GAC9B2H,GAAWpJ,WAAWhW,QAAQyJ,IAC5BA,EAAMzJ,QAAQuI,IACY,WAApBA,MAAAA,OAAAA,EAAAA,EAAMlK,YACRoZ,EAAO9W,KAAK4H,EACb,EACF,GAIH,MAAMqvB,EAAqB,IAAItjB,IACzBujB,EAAoB,IAAIvjB,IAC9BmD,EAAOzX,QAAQuI,IACbqvB,EAAmBpnB,IAAIjI,EAAKV,UAAWU,EAAKZ,KAAI,GAGlDyX,GAAWhJ,WAAWiR,OAAO9e,QAAiBpL,IAAToL,GAAoBvI,QAAQyJ,IAC/DA,EAAMzJ,QAAQuI,IACZsvB,EAAkBrnB,IAAIjI,EAAK0L,UAAUpM,UAAWU,EAAK0L,UACvD,EACF,GAIA,MAAM6jB,EAAerV,MAAAA,QAAAA,EAAAA,GAA2B5a,UAE1CkwB,EAAUX,KAChB3f,EAAOzX,QAAQuI,IACb,MAAMhF,EAAQgF,EAAKZ,KACboJ,EAAO8mB,EAAkBvd,IAAI,gBAAkB/R,EAAKV,WACpD6P,EAASqgB,MAAAA,OAAAA,EAAAA,EAASpgB,SAASrP,KAAKC,GAAQA,EAAKiN,eAAiBjS,EAAMsE,WACtEtE,GAASwN,IAGXA,EAAK7R,SAAS4f,YAAc,CAC1BnB,SAA4B,OAAZ,MAANjG,OAAM,EAANA,EAAQrP,OAClBuV,MAAOrV,EAAKV,YAAciwB,EAC1BplB,KAAe0V,OAAT1Q,EAAgBA,EAAOhF,KAAe3U,GAAO2R,aAGrDqB,EAAK7R,SAAS+f,eAAmC,OAAlBvH,MAAAA,OAAAA,EAAAA,EAAQrP,OAAgB,UAAOlL,EAC9D4T,EAAKjJ,SAAU,EAGhB,EACF,EAOA,CAACsX,GAAYqD,GAAc1kB,GAAQq5B,KAGtC9f,EAAU,KACR,GAAI2d,EAAiB,CACnB,MAAM+C,EAAuB,GAE7B3D,EAAer0B,QAASqI,IACtB2vB,EAAWr3B,KAAIM,GAAMoH,CAAAA,EAAAA,EAAM4C,MAC7B,EACD,GACA,CAACopB,IAEJ/c,EAAU,KACRjK,SAASgqB,KAAK/tB,MAAMguB,OAASnX,EAAU,UAAY,MAErD,EAAG,CAACA,IAEJ7I,EAAU,KACR,GAAIvZ,IAAUkN,GAAQA,EAAK2M,WAAa3M,EAAK0M,UAAY5Z,GAAO+a,uBAAwB,CACtF,MAAMpI,EAAWzF,EAAK2M,UAAUtP,KAAKC,GAC5BA,EAAKopB,OAAS5zB,GAAO+a,wBAE9B,GAAIpI,EAAU,CACZ,MAAMuT,EAAYhZ,EAAK0M,SAASrP,KAAKC,GAAQA,EAAKL,cAAgBwI,EAASvR,IACvE8kB,GACF+Q,EAA0B/Q,EAAUzO,aAEvC,CACF,GACA,CAACzX,GAAQkN,EAAM+pB,IAGlB,MAAMiD,GAA0B/gB,EAAagD,IAAoB,IAAAge,EAAAC,EAC/D,MAAMjiB,EAAqD,OAA3CgiB,EAAG9Y,GAAWlJ,WAAWsM,UAAkB,EAAxC0V,EAA0C5vB,KAAKD,GACzDA,EAAMyL,SAASjM,YAAiB,GAAA+K,KAAsBsH,EAAoBrS,aAG7EuwB,EAAaD,OAAHA,EAAG/Y,GAAWhJ,WAAWoM,UAAtB2V,EAAAA,EAA0C7vB,KAAKD,GACzDA,EAAM4L,UAAUpM,YAAiB,GAAA+K,KAAsBsH,EAAoBrS,aAG9EmL,EAAS,CAACkH,GAEZhE,GACFlD,EAAOrS,KAAKuV,EAAWpC,UAGrBskB,GACFplB,EAAOrS,KAAKy3B,EAAWnkB,WAGzBmJ,GAAc,IAAIpK,GACpB,EAAG,CAACoM,GAAWhJ,WAAYgJ,GAAWlJ,WAAYkH,GAAeoF,KAEjElL,EAAU,KACR,GAAI8H,GAAWpJ,YAAcoJ,GAAWpJ,WAAW1Y,QAAUy3B,EAAwB,CACnF,MAAM7a,EAASkF,GAAWpJ,WAAWwM,IAAmBla,KAAMD,GAAUA,EAAMR,YAAcktB,GACxF7a,GAEF+d,GAAwB/d,EAG3B,GACA,CAACkF,GAAY6Y,GAAyBlD,EAAwBvS,KAEjE,MAAMyE,GAAqB/P,EAAavV,IACtCqzB,EAA0B,IAC1Bd,EAAgB,IACZn2B,IAA0B,WAAhBA,GAAOyG,OAAsBzG,GAAO0Q,OAChD6mB,EAAuB3zB,GACvBs0B,IAAoB,IAEpBb,EAAqBzzB,EACtB,EACA,CAAC5D,GAAQi3B,IAENlV,GAAU5I,EAAa1P,IAC3BA,EAAE6wB,kBAGF,MAAMC,EAAY9wB,EAAE0S,OAAoBrS,UAClC6P,EAASzM,MAAAA,OAAAA,EAAAA,EAAM0M,SAASrP,KAAKC,GAAQA,EAAKiN,eAAiB8iB,GAC7D5gB,GAAgC,YAAtBA,EAAOzP,YACnBgf,GAAmBvP,EAAOrP,OACtBtK,IAA0B,WAAhBA,GAAOyG,OACnByzB,GAAwBzwB,EAAE0S,QAC1B8a,EAAkC,MAARsD,EAAAA,EAAY,OAGxCL,GAAwBzwB,EAAE0S,QAC1B8a,EAA0BsD,MAAAA,EAAAA,EAAY,IAEtClD,EAAqB,IACrBlB,EAAgB,IACZn2B,IAA0B,WAAhBA,GAAOyG,OAAsBzG,GAAO0Q,OAChDwnB,IAAoB,GAEvB,EACA,CAACl4B,GAAQkpB,GAAoB+N,EAA2B/pB,MAAAA,OAAAA,EAAAA,EAAM0M,SAAUsgB,KAErEzS,GAAetO,EAAa1P,IAG/B,EACA,IAEGmY,GAAiBzI,EAAa1P,IAClCA,EAAE6wB,kBACFl4B,QAAQ+K,QACRipB,GAAW,IAEN3sB,EAAE0S,OAAOhb,SAAS8I,WAAajK,IAA0B,WAAhBA,GAAOyG,MAIrDuxB,GAAwBvuB,EAAE0S,OAC5B,EAAG,CAACnc,KAEE8hB,GAAiB3I,EAAa1P,IAClCA,EAAE6wB,kBAEFtC,GAAwB,MACxB5B,GAAW,GACP0B,IAAYA,GAAS/Y,UACvB+Y,GAAS/Y,QAAQxT,MAAM0X,QAAU,OAClC,EACA,IAeGuX,GAA8B,CAClCjxB,SAAU,WACVkxB,IAAK,MACLC,KAAM,MACNr2B,UAAW,wBAGb,GAAI6I,KAAUA,EAAKnO,QAAUmO,EAAKnO,OAAOQ,QAAU,GACjD,OAAO4E,EAAK,MAAA,CAAAoH,MAAOivB,4CAGrB,IAAKx6B,KAAWqhB,GAAWpJ,WAAW1Y,OAEpC,OADA6C,QAAQC,KAAK,eAEJ8B,EAAK,MADO,aAAjBnE,MAAAA,QAAAA,EAAAA,GAAQyG,MACE,CAAA8E,MAAOivB,iCAET,CAAAjvB,MAAOivB,4CAGrB,GAAIhB,GACF,OAAOr1B,SAAKoH,MAAOivB,GAAet2B,SAAAs1B,KAG/B9U,IAAgC,YAAhB1kB,GAAOyG,MAC1BrE,QAAQsH,MAAM,yBAKhB,MAAMixB,GAAiCtZ,GAGvC,IACIG,GAAgB,GAgBpB,OAjBkBuW,OAEajuB,YAC7B0X,GAHgBuW,GAGYjuB,WAe5B/F,EACGyc,EAAA,CAAAtc,SAAA,CAAgB,WAAhBlE,GAAOyG,MACNtC,EAAK,MAAA,CAAAsc,mBACFvc,SAAC8yB,EAGA7yB,EAACmmB,GACC,CAAAlR,WAAYqL,GACZpD,WAAYA,GACZrhB,OAAQA,GACRkN,KAAMmsB,KACNzO,QAzWkBgQ,CAACttB,EAAeutB,KAC5C,MAAMC,EAAYxE,EAAehJ,UAAW9iB,GAASA,EAAK0C,KAAKuK,eAAiBojB,EAAQpjB,eAErE,IAAfqjB,EACFxE,EAAewE,GAAa,CAAExtB,QAAOJ,KAAIhK,GAAO23B,CAAAA,EAAAA,IAEhDvE,EAAe1zB,KAAK,CAAE0K,QAAOJ,KAAIhK,GAAA,CAAA,EAAO23B,KAG1CtE,EAAkB,IAAID,GAAe,EAiW3BzL,WAAYmM,EACZ/M,SAAUhN,EAAOjd,OAAO6Q,UACxBohB,SAjVY/kB,IAClB+P,EAAOgV,UACThV,EAAOgV,SAAS/kB,EAAM0nB,EACvB,EA+US5I,OAAQ/O,EAAO0W,UACf7I,YAAa7N,EAAO6N,cAZtB3mB,EAAC42B,GAAK,CAAC1L,QAAQ,OAA2CnrB,SAAA,mCAkBhEH,EAAA,MAAA,CAAK2c,IAAK+W,EAAgBlsB,MAAO,CAAEhC,SAAU,WAAYmG,MAAO,QAC9DxL,SAAA,CAAAC,EAACykB,GACC,CAAArD,YAAavlB,GAAOgR,aAAagqB,WACjCj8B,OAAQA,GACR8pB,mBAAoBpE,GACpBqE,kBAAmBA,GACnBnlB,cAAeA,GACfulB,mBAAoBA,GACpBD,MAzTYgS,KAMlB,GAJAhE,EAA0B,IAC1Bd,EAAgB,IAChBkB,EAAqB,IAEjBQ,EAAa9Y,QACf,GAAqB,uBAAX,MAAN/e,QAAM,EAANA,GAAQyG,OAAgCyG,GAAQA,EAAK2N,uBAAwB,CAC/E,IAAIqgB,EAAM,KAcD,IAAAC,EAbqB,YAA1BvD,EAAc7Y,QAChBmc,EAAGh4B,GAAA,CAAA,EAAQgK,EAAK2N,uBAAuB8d,SACJ,gBAA1Bf,EAAc7Y,QACvBmc,EAAGh4B,MAAQgK,EAAK2N,uBAAuB6d,aACJ,WAA1Bd,EAAc7Y,QACvBmc,EAAGh4B,GAAQgK,CAAAA,EAAAA,EAAK2N,uBAAuBge,QACJ,WAA1BjB,EAAc7Y,UACvBmc,EAAGh4B,GAAQgK,CAAAA,EAAAA,EAAK2N,uBAAuB+d,SAEzCx2B,QAAQ+K,MAAM,CACZiuB,OAAQxD,EAAc7Y,QACtBmc,QAEEA,IACU,MAAZrD,GAAqB,OAATsD,EAAZtD,EAAc9Y,UAAdoc,EAAuB1V,aAAY,EAAOyV,GAE7C,KAAM,CAAAG,IAAAA,EAEOA,MAAZxD,GAAAwD,OAAYA,EAAZxD,EAAc9Y,UAAdsc,EAAuB5V,aAExB,CACF,EA4RKsD,OAAQA,IAAMyO,EAAQ,CAAEzpB,UAAW,OACnCib,QAASA,IAAMwO,EAAQ,CAAEzpB,UAAW,QACpC7G,KAAMlH,GAAOyG,KACb0iB,QAASjc,MAAAA,OAAAA,EAAAA,EAAM0M,SACfwP,qBAAsBnM,EAAOmM,uBAE/BrlB,EAACu3B,EAAM,CAAC/vB,MAAO,CAAEhC,SAAU,WAAYkxB,IAAK,EAAGC,KAAM,GAAKf,MAAI,EAAAz1B,SAAA,CAC3DmmB,OAAOpN,EAAOjd,OAAO8Q,OAAS3M,EAACo3B,EAAM,CAAA9a,mBAAyB+a,OAAQ/D,IAAqB,KAC5FtzB,EAACoZ,IAAgBE,WAAYzd,GAAOwQ,uBACpCrM,EAACuZ,IAAiBI,KAAM,EAAGxD,IAAKta,GAAOuR,OAAO+I,IAAKC,IAAKva,GAAOuR,OAAOgJ,MAGtEpW,EAAA,eAAA,CAAcs3B,UAAW,EAAGj7B,MAAO,YACnC2D,EAAkB,mBAAA,CAAAoF,SAAU,CAAC,EAAG,IAAK,GAAI/I,MAAO,UAAWi7B,UAAW,KACtEt3B,EAAkB,mBAAA,CAAAoF,SAAU,CAAC,EAAG,EAAG,KAAM/I,MAAO,UAAWi7B,UAAW,KACtEt3B,sBAAkBoF,SAAU,CAAC,EAAG,GAAI,KAAM/I,MAAO,UAAWi7B,UAAW,KACvEt3B,EAACkgB,GAAS,CACRoD,aAAcA,GACdpG,WAAYsZ,GACZpZ,eAAgBA,GAChBC,cAAeA,GAEfkD,aAAcA,GACdC,oBAAqBA,GACrBC,cAAerD,GACfsD,kBAAmBuU,GACnB3U,kBAAmBA,GACnB7C,eAAgBA,GAChBE,eAAgBA,GAChBJ,cA3HajY,IACrBA,EAAE6wB,kBAGExC,IAAYA,GAAS/Y,SAAWtV,EAAE0S,OAAOhb,SAAS8I,WAA6C,KAAhCR,EAAE0S,OAAOhb,SAAS8I,WACnF6tB,GAAS/Y,QAAQxT,MAAMkvB,IAAShxB,EAAE0I,QAAU,GAAZ,KAChC2lB,GAAS/Y,QAAQxT,MAAMmvB,KAAO,GAAGjxB,EAAEyI,YACnC4lB,GAAS/Y,QAAQxT,MAAM0X,QAAU,SACxB6U,GAAS/Y,UAClB+Y,GAAS/Y,QAAQxT,MAAM0X,QAAU,OAClC,EAkHOlB,QAASA,GACTN,kBAAmBqH,GACnBhE,kBAAmBA,EACnBvM,eAAgB8I,GAAW/V,gBAC3ByZ,KAAMA,EACNC,mBAAoBA,EACpBhlB,OAAQA,GACR0gB,IAAKmX,EACLnB,UAAWA,EACXE,WAAYA,EACZ3R,8BAA+BA,QAGnC9gB,EAAK,MAAA,CAAAuc,IAAKoX,GACRvsB,MAAO,CACLhC,SAAU,WACVooB,QAAS,GACTlU,WAAY,UACZie,WAAY,IACZl7B,MAAO,UACPm7B,SAAU,GACV1Y,QAAS8U,GAAuB,QAAU,OAC1C0C,IAAK,IACLC,KAAM,IACNr0B,QAAS,IAGXnC,SAAAC,EAAA,MAAA,CAAAD,SACG6zB,IAAwBA,GAAqB52B,SAAS8I,iBAM7D9F,EAACovB,GACC,CAAA5tB,QAAS2xB,EACT9D,KAAMyE,GACNxE,OAAQA,IAAMyE,IAAoB,GAClCjO,SAAUhN,EAAOjd,OAAO6Q,UAAYoM,EAAOjd,OAAO6Q,UAAU0b,WAAa,GACzEmH,cAAesD,EACfnd,UAAe,MAAJ3M,OAAI,EAAJA,EAAM2M,UACjBsP,QAAa,MAAJjc,OAAI,EAAJA,EAAM0M,SACf+Z,UAA2BgB,OAAlBA,EAAE1X,EAAO0W,WAASgB,EAAI,GAC/B5S,QApH4B6Z,CAACrJ,EAAoBsJ,KAChDA,GAIH1F,EAAgB5D,GAChB8E,EAAqBwE,IAJrB1F,EAAgB5D,GAMlB2F,IAAoB,EAAK,EA6GrBhG,QAASlyB,GAAO0Q,MAAM6b,eAEvB,GE5pBP,SAASuP,IAAOjH,UAAEA,EAAS70B,OAAEA,EAAM84B,kBAAEA,EAAiBnF,UAAEA,EAAS3b,gBAAEA,EAAeia,SAAEA,EAAQ8J,OAAEA,EAAM5E,WAAEA,EAAUC,yBAAEA,EAAwBtM,YAAEA,EAAW1B,qBAAEA,IACvJ,MAAO4N,EAAwBC,GAA6BhgB,EAAiB,KACtE+iB,EAASgC,GAAc/kB,OAAc7X,GAM5C,OAJAma,EAAU,KACRyiB,EAAWnH,EAAS,EACnB,CAACA,IAECA,GAAc70B,EAAO6Q,UAIrB7Q,EAAO6Q,WC4EE,SAAiBiJ,GAC7B,GAAmB,iBAARA,GAA4B,OAARA,EAAc,OAAY,EAEzD,MAAML,EAAWK,EAEjB,OACIuJ,MAAMC,QAAQ7J,EAASI,YACvBwJ,MAAMC,QAAQ7J,EAASG,WACvByJ,MAAMC,QAAQ7J,EAAS1a,SACoB,iBAApC0a,EAASoB,wBACoB,OAApCpB,EAASoB,wBAC2E,iBAA5EpB,EAASoB,uBAAmD6d,aACY,iBAAxEjf,EAASoB,uBAAmD8d,SACW,iBAAvElf,EAASoB,uBAAmD+d,QACW,iBAAvEnf,EAASoB,uBAAmDge,QACvC,iBAAtBpf,EAASgB,UAChB4I,MAAMC,QAAQ7J,EAASC,SACO,iBAAvBD,EAASwB,SAExB,CD/F4BghB,CAAiBpH,GAYzC1wB,EAAC6S,aACC7S,EAACsb,aACC1b,EAAK,MAAA,CAAA0c,UAAW,mBAA0CzgB,EAAOyG,QAAwB,WAAhBzG,EAAOyG,cAAkC,KAAIvC,SAAA,CACpHC,EAACowB,GAAc,CACb7T,IAAKqb,EACL9E,0BAA2BA,EAC3BD,uBAAwBA,EACxBnC,UAAWmF,EACXh6B,OAAQA,EACR84B,kBAAmBA,EACnBnF,UAAWA,EACX3b,gBAAiBA,EACjBia,SAnBaD,CAAC9kB,EAAoB0nB,KACtC3C,GACFA,EAAS/kB,EAAM0nB,EAChB,EAiBO9J,YAAaA,EACbqM,WAAYA,EACZC,yBAA0BA,EAC1BhO,qBAAsBA,IAExBrlB,EAAA,MAAA,CAAK0c,UAAWgJ,GAAWvlB,SAAA,CACzBC,EAAK,MAAA,CAAA/C,GAAG,wBAAuB8C,SAC7BC,SAAK/C,GAAG,UAAoB,YAAA,UAAU4C,MAAM,6BAA6BC,QAAQ,6BAC/EE,EAAM,OAAA,CAAAC,EAAE,0IAA0IC,UAAU,yBAAyBC,KAAK,gBAG9LH,SAAK/C,GAAG,sBACN8C,SAAAH,EAAA,MAAA,CAAK3C,GAAG,sBAAoB,UAAU4C,MAAM,6BAA6BC,QAAQ,oBAC/EC,SAAA,CAAAC,EAAA,OAAA,CAAMC,EAAE,kWAAkWC,UAAU,yBAAyBC,KAAK,SAClZH,EAAA,OAAA,CAAMC,EAAE,kzBAAkzBC,UAAU,yBAAyBC,KAAK,cAGt2BH,EAAK,MAAA,CAAA/C,GAAG,6BAA4B8C,SAClCH,EAAK,MAAA,CAAA3C,GAAG,UAAS,YAAW,UAAU4C,MAAM,6BAA6BC,QAAQ,oBAC/EC,SAAA,CAAAC,EAAA,OAAA,CAAMC,EAAE,0cAA0cC,UAAU,2BAA2BC,KAAK,SAC5fH,EAAM,OAAA,CAAAC,EAAE,6VAA6VC,UAAU,2BAA2BC,KAAK,cAGnZH,SAAK/C,GAAG,2BACN8C,SAAAH,EAAA,MAAA,CAAK3C,GAAG,sBAAoB,UAAU4C,MAAM,6BAA6BC,QAAQ,iBAAgBC,SAAA,CAC/FC,UAAMC,EAAE,+jFAA+jFC,UAAU,2BAA2BC,KAAK,SACjnFH,EAAA,OAAA,CAAMC,EAAE,whBAAwhBC,UAAU,2BAA2BC,KAAK,SAC1kBH,UAAMC,EAAE,6IAA6IC,UAAU,2BAA2BC,KAAK,cAGnMH,EAAA,MAAA,CAAK/C,GAAG,oCACN+C,EAAK,MAAA,CAAA/C,GAAG,UAAS,YAAW,UAAU4C,MAAM,6BAA6BC,QAAQ,mBAC/EC,SAAAC,EAAA,OAAA,CAAMC,EAAE,sgCAAsgCC,UAAU,2BAA2BC,KAAK,aAG5jCH,SAAK/C,GAAG,kCAAiC8C,SACvCH,SAAK3C,GAAG,UAAoB,YAAA,UAAU4C,MAAM,6BAA6BC,QAAQ,iBAAgBC,SAAA,CAC/FC,UAAMC,EAAE,qYAAqYC,UAAU,sBAAsBC,KAAK,YAClbH,UAAMC,EAAE,8dAA8dC,UAAU,sBAAsBC,KAAK,YAC3gBH,EAAM,OAAA,CAAAC,EAAE,whBAAwhBC,UAAU,sBAAsBC,KAAK,YACrkBH,UAAMC,EAAE,6HAA6HC,UAAU,sBAAsBC,KAAK,YAC1KH,UAAMC,EAAE,8GAA8GC,UAAU,sBAAsBC,KAAK,iBAG/JH,EAAK,MAAA,CAAA/C,GAAG,oCACN2C,EAAK,MAAA,CAAA3C,GAAG,UAAS,YAAW,UAAU4C,MAAM,6BAA6BC,QAAQ,2BAC/EE,EAAM,OAAA,CAAAC,EAAE,oUAAoUC,UAAU,uBAAuBC,KAAK,SAClXH,EAAM,OAAA,CAAAC,EAAE,8IAA8IC,UAAU,uBAAuBC,KAAK,SAC5LH,EAAA,OAAA,CAAMC,EAAE,4GAA4GC,UAAU,uBAAuBC,KAAK,cAG9JH,SAAK/C,GAAG,2BACN8C,SAAAC,EAAA,MAAA,CAAK/C,GAAG,UAAoB,YAAA,UAAU4C,MAAM,6BAA6BC,QAAQ,oBAAmBC,SAClGC,UAAMC,EAAE,0qCAA0qCC,UAAU,2BAA2BC,KAAK,aAGhuCH,EAAA,MAAA,CAAK/C,GAAG,4CACN2C,EAAK,MAAA,CAAA3C,GAAG,UAAS,YAAW,UAAU6C,QAAQ,kBAAiBC,SAAA,CAC7DC,EAAS,UAAA,CAAAE,UAAU,wDAAwDC,KAAK,OAAOQ,GAAG,QAAQC,GAAG,MAAMC,GAAG,OAAOC,GAAG,UACxHd,EAAA,UAAA,CAASE,UAAU,yDAAyDC,KAAK,OAAOQ,GAAG,QAAQC,GAAG,MAAMC,GAAG,QAAQC,GAAG,SAC1Hd,EAAA,UAAA,CAASE,UAAU,uDAAuDC,KAAK,OAAOQ,GAAG,KAAKC,GAAG,QAAQC,GAAG,OAAOC,GAAG,UACtHd,EAAA,UAAA,CAASE,UAAU,wDAAwDC,KAAK,OAAOQ,GAAG,MAAMC,GAAG,QAAQC,GAAG,QAAQC,GAAG,SACzHd,UAAMG,KAAK,OAAOF,EAAE,2hBAOxBD,EAAK,MAAA,CAAA/C,GAAG,4BAA2B8C,SACjCC,SAAKH,MAAM,6BAA6B0L,MAAM,MAAMC,OAAO,MAAM1L,QAAQ,cAAaC,SACpFH,OAAGm4B,SAAS,UACVh4B,SAAA,CAAAC,EAAA,OAAA,CAAMG,KAAK,OAAOF,EAAE,2LACpBD,UAAMG,KAAK,OAAOF,EAAE,goBACpBD,EAAA,OAAA,CAAMG,KAAK,OAAOF,EAAE,keAlGlChC,QAAQsH,MAAM,kDAJdtH,QAAQsH,MAAM,gDAEf,KA+GH"}