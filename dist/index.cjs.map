{"version":3,"file":"index.cjs","sources":["../src/helpers/misc.helper.ts","../src/defaults.ts","../src/helpers/svgIcons.helper.ts","../src/helpers/amenities.helper.ts","../src/contexts/MapBoxContextProvider.tsx","../src/services/index.service.ts","../src/services/map.service.ts","../src/services/retailers.service.ts","../src/Hooks/useMeshFloors/useMaterialAndGeometry.tsx","../src/Hooks/useMeshFloors/getWallShape.ts","../src/Hooks/useMeshFloors/useRouteHelper.tsx","../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/useLoadFloors.tsx","../src/Hooks/useMeshFloors/useDrawLogoHelper.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.helper.ts","../src/components/SceneComponent/RouteTube.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helper.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent.tsx","../src/components/SceneComponent/retailer-info/RetailerInfoModal.tsx","../src/components/SceneComponent/portal-sidebar-form/PortalSidebarForm.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/Hooks/useMeshFloors/useMeshParams.tsx","../src/MapBox.tsx"],"sourcesContent":["import { Color } from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n  const withoutHex = hex_code.replace('#', '');\n  return new Color(withoutHex.length === 6 ? parseInt('0x' + withoutHex, 16) : withoutHex);\n}\n\nexport const getSvgIconHTML = (icon: string) => {\n  let svg;\n  const svg_block = document.getElementById(`map-special-svg-${icon}`);\n  if (svg_block) {\n    const svg_element = svg_block.querySelector('svg');\n    if (svg_element) {\n      const svgColoredParts = svg_element.querySelectorAll('[fill]');\n      svgColoredParts.forEach((svgColoredPart) => {\n        svgColoredPart.setAttribute('fill', '#FFFFFF');\n      });\n      svg = (new XMLSerializer()).serializeToString(svg_element);\n    }\n  }\n  return svg;\n}\n\nexport const FormatPhoneNumber = (numberStr: string): string => {\n  numberStr = numberStr.slice(-10);\n  if (numberStr.length === 10) {\n    const maskedNumber = `${numberStr.slice(0, 3)}.${numberStr.slice(3, 6)}.${numberStr.slice(-4)}`;\n    return maskedNumber;\n  }\n  return numberStr;\n}\n","import { hex_to_color } from \"./helpers/misc.helper\";\nimport { MapConfigProps } from \"./interfaces\";\nimport { MapCameraControlsState, MapObjData, MapVectorPoint } from \"./interfaces/mapApiTypes\";\nimport { PortalMapSettingsProps } from \"./interfaces/portal\";\n\nconst mapVector0: MapVectorPoint = { x: 0, y: 0, z: 0 };\n\nexport const cameraControlsDefaultVars: MapCameraControlsState = {\n  camera: mapVector0,\n  controls: mapVector0\n};\n\nexport const defaultPortalMapSettings: PortalMapSettingsProps = {\n  MAP_STYLE: '2D',\n  MAP_BACKGROUND_COLOR: '#FFFFFF',\n  ACCENT_COLOR: '#4EA5FF',\n  STORE_DEFAULT_COLOR: '#E2E2E2',\n  STORE_TEXT_COLOR: '#222222',\n  STORE_HEIGHT: 12,\n  WALL_COLOR: '#888888',\n  BOUNDARY_COLOR: '#888888',\n  BASE_COLOR: '#25292B',\n  OVERLAY_COLOR: '#FFFFFF',\n  WALL_THICKNESS: 0.6,\n  BOUNDARY_THICKNESS: 0.8,\n  OVERLAY_OPACITY: 0.7,\n  KIOSK_SIZE: 15,\n  ZOOM_STEP: 100,\n  SELECTED_ZOOM_LIMIT: 1200,\n  CAMERA_MAX_DISTANCE: 2000,\n  CAMERA_MIN_DISTANCE: 300,\n}\n\nexport const mapConfigDefaultVars: MapConfigProps = {\n  MAP_BACKGROUND_COLOR: hex_to_color(defaultPortalMapSettings.MAP_BACKGROUND_COLOR),\n  ROLE: 'DEMO',\n  DEVICE: 'display_app',\n  KIOSK_ID: 0,\n  CENTER_ID: 0,\n  STATS: false,\n  STYLE: defaultPortalMapSettings.MAP_STYLE,\n  DEBUG: false,\n  ACCENT_COLOR: hex_to_color(defaultPortalMapSettings.ACCENT_COLOR),\n  STORE_DEFAULT_COLOR: hex_to_color(defaultPortalMapSettings.STORE_DEFAULT_COLOR),\n  STORE_HEIGHT: defaultPortalMapSettings.STORE_HEIGHT,\n  WALL_THICKNESS: defaultPortalMapSettings.WALL_THICKNESS,\n  BOUNDARY_THICKNESS: defaultPortalMapSettings.BOUNDARY_THICKNESS,\n  WALL_COLOR: hex_to_color(defaultPortalMapSettings.WALL_COLOR),\n  BOUNDARY_COLOR: hex_to_color(defaultPortalMapSettings.BOUNDARY_COLOR),\n  BASE_COLOR: hex_to_color(defaultPortalMapSettings.BASE_COLOR),\n  STORE_TEXT_COLOR: hex_to_color(defaultPortalMapSettings.STORE_TEXT_COLOR),\n  OVERLAY_COLOR: hex_to_color(defaultPortalMapSettings.OVERLAY_COLOR),\n  OVERLAY_OPACITY: defaultPortalMapSettings.OVERLAY_OPACITY,\n  CAMERA_CONTROLS_STATES: {\n    display_app: cameraControlsDefaultVars,\n    desktop: cameraControlsDefaultVars,\n    tablet: cameraControlsDefaultVars,\n    mobile: cameraControlsDefaultVars,\n  },\n  ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n  DEFAULT_CAMERA_POSITION: null, // custom default camera position\n  DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n  DEFAULT_SELECTED_STORE: null,\n  CAMERA: {\n    fov: 75,\n    far: 10000,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  },\n  KIOSK_SIZE: defaultPortalMapSettings.KIOSK_SIZE,\n  ZOOM_STEP: defaultPortalMapSettings.ZOOM_STEP,\n  SELECTED_ZOOM_LIMIT: defaultPortalMapSettings.SELECTED_ZOOM_LIMIT,\n};\n\nexport const mapObjDefaultVars: MapObjData = {\n  id: 0,\n  retailer_id: null,\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  bg_color: '',\n  transparent: true,\n  text_color: '',\n  size: 8,\n  rotate: 0,\n  offset_x: 0,\n  offset_y: 0,\n  lock_size: false,\n};\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\n","const SVGIcons = {\n  Kiosk: `<svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n            <path fill=\"#444444\" d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" />\n          </svg>`,\n  Escalator: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 445.3\">\n                <path fill=\"#444444\" d=\"M243.4,75.9c21.2,0,38.1-16.8,38.1-38S264.6,0,243.4,0c-21.2,0-38.1,16.8-38.1,38S222.1,75.9,243.4,75.9z M508.5,41.2h-88.7 c-18.5,0-41.9,7.6-56.1,21.7l-82.2,81.9V121c0-51-75.7-50.4-75.7,0v98.2l-71.3,71c-6.5,6.5-7.6,7.1-20.7,7.1H70.2 C26.1,297.2,0,336.8,0,369.9c0,33.6,26.1,75.4,74,75.4h77.9c18.5,0,40.8-7.1,58.8-24.4l228.1-226.7c4.9-4.3,7.6-5.4,15.8-5.4h56.1 c27.2,0,65.3-30.4,65.3-74.8C576.5,70.5,537.9,41.2,508.5,41.2z M504.7,150.8h-47.9c-20.1,0-29.4,2.7-41.4,14.7L185.7,394.3 c-9.3,9.2-21.2,13-36.5,13H73.5c-19.6,0-36.5-16.3-36.5-38c0-21.7,16.3-33.6,33.2-33.6H122c15.2,0,25-4.3,33.7-13L389.3,90 c9.8-9.8,19.1-10.9,35.4-10.9h80c19.6,0,32.7,21.7,32.7,34.7C537.9,126.4,528.6,150.8,504.7,150.8z\" />\n              </svg>`,\n  ATM: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 577.8 577\">\n          <path fill=\"#444444\" d=\"M388.7,314c-3.7-10.3-10.3-19.8-17.7-27.2c-7.4-7.4-17.7-14-29.5-19.1c-6.6-2.9-19.2-6.6-39.1-11.8V144.2 c13.3,2.2,22.8,8.1,30.2,16.2c7.4,8.1,11.8,19.9,14,35.3l39.8-5.9c-2.9-24.3-13.3-44.1-30.2-58.1c-13.3-11-31-17.7-53.8-19.8V93.4 h-24.3v18.4c-25.8,2.2-45,9.6-58.2,21.3c-19.9,17.7-29.5,39.7-29.5,67.6c0,15.5,3.7,29.4,10.3,41.9s16.2,22,28.7,28.7 c17,9.6,33.2,16.2,49.4,20.6v121.3c-14.8-1.5-28-8.8-39.1-22.8c-7.4-9.6-13.3-25-16.2-46.3l-39.1,7.4c1.5,20.6,6.6,37.5,15.5,51.5 s19.9,23.5,31.7,30.1c12.5,6.6,28,11,47.9,13.2v39v-0.1V483h22.1v-39c28-0.7,50.1-11,67.1-28.7c17-18.4,25.8-40.4,25.8-67.6 C394.6,336,392.4,324.3,388.7,314z M278.9,145.1v107.2c-17.7-5.2-30.2-11.8-37.6-20.6s-11.1-19.8-11.1-33.1c0-14,4.4-25.7,13.3-35.3 C252.2,153.9,263.7,147.4,278.9,145.1V145h0.7C279.3,145,279.1,145,278.9,145.1z M340,394.2c-9.6,11-22.1,18.4-37.6,19.8l0,0V297.9 c20.6,5.2,34.6,11.8,42,20.6c6.6,8.1,10.3,19.8,10.3,33.8C354.8,369.2,349.6,383.1,340,394.2z\" />\n          <path fill=\"#444444\" d=\"M289.8,2.5c-158.7,0-288,128-288,287.2c0,158.3,129.3,287.2,288,287.2s288-128.9,288-287.2S448.6,2.5,289.8,2.5z M289.9,533.9C155,533.9,45.2,424.3,45.2,289.8C45.2,154.5,155,45.7,289.9,45.7s244.7,109.5,244.7,244.1S424.8,533.9,289.9,533.9z\" />\n        </svg>`,\n\n  Management: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 414.6\">\n                  <path fill=\"#444444\" d=\"M371.6,180.4c66.8,0,101,58.5,121.4,121.9l16.4,50.4c2.7,8.8-7.5,16.3-16.4,16.3h-56.6l-7.5-27.2 c-17.7-53.1-45-106.2-94.8-125.9c13-8.8,23.9-21.1,30.7-35.4C366.1,180.4,368.8,180.4,371.6,180.4z M441.2,145.7 c64.8,2,98.2,59.2,118.7,121.9l15.7,49.7c2.7,8.8-7.5,17.7-16.4,17.7h-35.5l-12.3-38.1c-16.4-53.1-44.3-106.2-94.8-125.9 C426.2,162.7,434.3,155.2,441.2,145.7z M51.6,334.3H16.8c-9.6,0-19.1-8.2-16.4-17.7l15.7-49.7C35.9,204.2,70.1,147.1,134.9,145 c6.1,9.5,15,18.4,24.6,24.5c-49.8,19.7-77.8,72.8-94.8,125.9L51.6,334.3L51.6,334.3z M437.7,0c35.5,0,64.8,28.6,64.8,64.7 c0,31.3-22.5,57.2-52.5,62.6c3.4-8.8,5.5-18.4,5.5-27.9c0-39.5-27.3-71.5-62.8-81C403.6,6.8,419.3,0,437.7,0L437.7,0z M137.6,0 c17.7,0,34.1,6.8,45,18.4c-35.5,9.5-62.8,41.5-62.8,81c0,9.5,2.1,19.1,5.5,27.9C96,121.9,72.8,96,72.8,64.7 C73.5,28.6,102.1,0,137.6,0L137.6,0z M287.7,0c19.8,0,37.5,8.8,49.8,22.5c-15.7,6.8-29.3,19.1-38.2,34l-3.4,5.5c-2.7,0-5.5,0-7.5,0 c-2,0-6.1,0-8.9,0l-3.4-5.5c-9.6-15-22.5-27.2-38.2-34C250.2,8.9,267.9,0,287.7,0L287.7,0z M287.7,226c66.8,0,101,58.5,122.1,121.9 l15.7,50.4c2.7,8.8-8.2,16.3-16.4,16.3H166.2c-9.6,0-19.8-8.2-16.4-16.3l15.7-50.4C186,284.6,220.8,226,287.7,226z M287.7,81 c35.5,0,64.8,28.6,64.8,64.7s-28.7,64.7-64.8,64.7c-35.5,0-64.8-28.6-64.8-64.7S252.2,81,287.7,81z M138.3,369H82.3 c-9.6,0-19.1-8.2-16.4-16.3l15.7-50.4c21.1-63.3,55.3-121.9,122.1-121.9c2.7,0,5.5,0,7.5,0c6.1,15,17.7,27.2,30.7,35.4 c-49.8,19.7-78.5,72.8-94.8,125.9C147.1,341.8,138.3,369,138.3,369z M203.8,34.7c23.9,0,44.3,12.9,55.9,31.3 c-32.1,12.2-55.9,42.9-55.9,79c0,6.1,0.7,12.2,2.1,18.4h-2.1c-35.5,0-64.8-28.6-64.8-64.7S168.3,34.7,203.8,34.7z M371.6,34.7 c35.5,0,64.8,28.6,64.8,64.7s-29.3,64-64.8,64h-2.7c2.1-6.1,2.7-12.2,2.7-18.4c0-36.8-23.9-66.7-55.9-79 C327.2,47.7,347,34.7,371.6,34.7z\" />\n                </svg>`,\n\n  PlayArea: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 537.9\">\n                <path fill=\"#444444\" d=\"M384.3,137c38,0,68.8-30.7,68.8-68.5S422.3,0,384.3,0s-68.8,30.7-68.8,68.5S346.4,137,384.3,137z\" />\n                <path fill=\"#444444\" d=\"M283.3,96c20,26.3,35.9,53.3,67.6,64.4c31.2,11.1,60.5,11.1,83.5-5.3c22.9-16.4,34.7-46.8,54.1-87.2 c18.8-40.4,34.1-48,57-48c23.5,0,31.2,28.1,30.6,39.8s-10.6,31-40,52.7c-49.4,36.3-57.6,108.3-59.4,127.7 c-1.8,19.3-2.9,50.4,17.6,169.2c20.6,118.9-20,125.9-25.3,127.1c-5.3,0.6-21.2,8.2-31.1-16.4c-10-24.6-11.8-91.3-14.1-120 c-2.9-28.7-6.5-70.9-35.9-79c-30-8.2-40.6,39.8-51.7,76.1c-10.6,36.9-40,71.4-72.3,59.1s-29.4-50.4-10-78.5 c19.4-27.5,61.7-57.4,67.6-124.1c5.9-66.8-11.8-69.1-68.2-90.8c-55.8-22.3-60.5-33.4-67.6-48.6s7.6-46.8,31.1-52.7 C239.2,55.1,259.1,63.9,283.3,96L283.3,96z\" />\n                <path fill=\"#444444\" d=\"M134.7,251.7c26.9,0,48.8-21.8,48.8-48.6s-21.8-48.6-48.8-48.6s-48.8,21.8-48.8,48.6S107.7,251.7,134.7,251.7z\" />\n                <path fill=\"#444444\" d=\"M204,227.8c-15.3,17.6-28.2,35.7-51.1,41.6c-22.9,6.4-43.5,4.7-58.8-8.2c-15.3-12.9-21.7-35.1-32.9-64.4S40,161,23.5,159.8 C7.1,158.7,0,178,0,186.2c-0.6,8.2,5.9,22.3,25.3,39.2C58.2,253.5,60,305.1,60,318.5c0.6,13.5-0.6,35.7-21.7,118.3 s7.1,89.6,10.6,90.8s14.7,7,22.9-10s12.9-63.8,16.5-83.7c3.5-19.9,8.2-49.8,29.4-53.9s26.5,30.4,32.3,56.8 c5.9,26.3,24.7,52.7,47.6,45.7c22.9-7,23.5-34,11.2-54.4c-12.3-20.5-40-43.9-40.6-90.8c-0.6-47.4,12.3-48,52.9-60.3 c40.6-12.3,44.7-20.5,50.5-30.4c5.9-10-2.9-33.4-18.8-38.6C237.5,201.4,222.8,206.7,204,227.8L204,227.8z\" />\n              </svg>`,\n\n  RestRoom: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 533.9\">\n              <path fill=\"#444444\" d=\"M282.3,533.9h9.2V0h-9.2V533.9z\" />\n              <path fill=\"#444444\" d=\"M118.2,97.1c25.4-4.6,41.6-30.1,34.7-55.5C146,16.2,122.9,2.3,97.4,6.9S58.1,39.3,62.8,62.4S95.1,104,118.2,97.1z\" />\n              <path fill=\"#444444\" d=\"M159.8,145.6h4.6c0,0,2.3,0,2.3,2.3L183,270.4c2.3,9.2,9.2,16.2,18.5,16.2c11.6,0,18.5-9.2,18.5-20.8l-18.5-129.4 c-2.3-13.9-13.9-23.1-27.7-23.1H44.3c-13.9,0-25.4,9.2-27.7,23.1L0.4,265.8c-2.3,11.6,6.9,20.8,18.5,20.8c9.2,0,16.2-6.9,18.5-16.2 l16.2-122.5c0,0,0-2.3,2.3-2.3h4.6c0,0,2.3,0,2.3,2.3L30.4,390.6c0,0,0,2.3,2.3,2.3h37c0,0,2.3,0,2.3,2.3v117.9 c0,9.2,6.9,16.2,16.2,16.2s16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h11.6c0,0,2.3,0,2.3,2.3v117.9c0,9.2,6.9,16.2,16.2,16.2 c9.2,0,16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h30.1c0,0,2.3,0,2.3-2.3l-27.7-242.7l0,0l0,0L159.8,145.6z\" />\n              <path fill=\"#444444\" d=\"M497.3,76.3c13.9-23.1,4.6-50.9-16.2-62.4s-50.9-6.9-64.7,16.2c-13.9,23.1-4.6,50.9,16.2,62.4 C455.7,106.3,483.5,99.4,497.3,76.3z\" />\n              <path fill=\"#444444\" d=\"M545.9,113.3h-178c-13.9,0-25.4,9.2-27.7,23.1v129.4c0,11.6,9.2,20.8,20.8,20.8s18.5-9.2,18.5-20.8V159.5c0,0,0-2.3,2.3-2.3 h2.3c0,0,2.3,0,2.3,2.3l25.4,161.8v187.2c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V323.6c0,0,0-2.3,2.3-2.3h6.9 c0,0,2.3,0,2.3,2.3v184.9c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V321.3l25.4-161.8c0,0,0-2.3,2.3-2.3h-2.3 c0,0,2.3,0,2.3,2.3v106.3c0,11.6,9.2,20.8,20.8,20.8s20.8-9.2,20.8-20.8V136.4C571.4,122.5,559.8,113.3,545.9,113.3L545.9,113.3 L545.9,113.3z\" />\n            </svg>`,\n\n  FamilyRestRoom: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 522.5\">\n                    <path fill=\"#444444\" d=\"M119.8,91.5c25-5.9,40.5-30.8,34.6-55.7c-5.9-24.9-30.9-40.4-55.9-34.5S58,32,63.9,56.9S94.8,97.3,119.8,91.5z\" />\n                    <path fill=\"#444444\" d=\"M160.6,139.1h4.5c0.6,0,1.3,0.6,1.3,1.3l15.3,123.1c1.3,8.9,8.9,15.9,17.8,15.9c10.8,0,19.1-9.5,17.8-20.3l-15.9-128.9 c-1.9-13.3-13.4-24.1-27.4-24.1H43.4c-14,0-25.5,10.2-27.4,24.1L0.1,259.1c-1.3,10.8,7,20.3,17.8,20.3c8.9,0,16.5-7,17.8-15.9 l15.3-123.8c0-0.6,0.6-1.3,1.3-1.3h4.5c0.6,0,1.3,0.6,1.3,1.3L29.4,384.1c0,0.6,0.6,1.3,1.3,1.3H67c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h36.3c0.6,0,1.3-0.6,1.3-1.3L158,140.3 C159.3,139.7,159.9,139.1,160.6,139.1L160.6,139.1z\" />\n                    <path fill=\"#444444\" d=\"M498.9,69.8c12.9-22.1,5.4-50.5-16.8-63.4c-22.2-12.9-50.6-5.4-63.6,16.7c-12.9,22.1-5.4,50.5,16.8,63.4 C457.5,99.4,486,91.9,498.9,69.8z\" />\n                    <path fill=\"#444444\" d=\"M547.9,106.1H369.6c-14,0-25.5,10.2-27.4,24.1v128.9c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7v-106 c0-0.6,0.6-1.3,1.3-1.3h2.5c0.6,0,1.3,0.6,1.3,1.3l25.5,162.5v187.3c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7v-186 c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v186c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7V315.6l25.5-162.5 c0-0.6,0.6-1.3,1.3-1.3h2.6c0.6,0,1.3,0.6,1.3,1.3v106c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7V130.2 C573.4,116.2,562,106.1,547.9,106.1L547.9,106.1z\" />\n                    <path fill=\"#444444\" d=\"M259.6,480l19.7-19.7L251.9,433L229,455.8c-7.6,7.6-5.7,20.3,1.3,27.3l32.5,33.6c12.7,12.7,29.3-5.1,17.2-17.1L259.6,480 L259.6,480z M288.9,347.9c19.1,0,34.4-15.2,34.4-34.3s-15.3-34.3-34.4-34.3s-34.4,15.2-34.4,34.3S269.7,347.9,288.9,347.9z  M369.7,405.7l-46.5-46.3c-3.8-3.8-8.3-6.3-14.7-6.3h-41.4c-6.4,0-10.8,2.5-14,6.3l-45.9,45.7c-12.7,12.7,4.5,28.6,17.2,15.9 l28-27.9v26h72.6v-26l28.6,28.6C364.6,433.6,381.8,417.1,369.7,405.7L369.7,405.7z M324.5,433l-27.4,27.3l19.7,19.7l-20.4,20.3 c-12.1,12.1,4.5,29.2,17.2,17.1l32.5-33.6c7-7,8.9-20.3,1.3-27.3C347.4,455.9,324.5,433,324.5,433z\" />\n                  </svg>`,\n\n  Elevator: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 576\">\n                <path fill=\"#444444\" d=\"M576,145.2v268.6c-0.1,1.6-0.3,3.1-0.3,4.7c-0.3,33.3-0.6,66.6-0.8,99.9c-0.1,21.1-9.7,37.2-26.7,49 c-7.7,5.4-15.9,9.3-25.9,8c-3.8-0.5-7.7-0.1-11.5-0.1c-115.3,0.1-230.6,0.2-345.9,0.3c-1.1,0-2.2,0.2-3.3,0.3h-16.9 c-1.2-0.1-2.4-0.3-3.6-0.3c-30.2-0.3-60.4-0.6-90.7-0.8c-11.1-0.1-20.7-4.1-29.1-11.2c-8.7-7.4-15.5-16.7-19.9-27.3l-0.2-0.5 c-0.7-1.6-1.1-3.4-1.2-5.4v0C0,492.8,0,455.1,0,417.4c0-124.1,0-248.1,0-372.2c0-0.2,0-0.3,0-0.5c0-1.5,0.3-2.9,0.7-4.2l0,0.1 C8.3,22.5,20.5,8.9,38.7,1c1.2-0.5,2.6-0.9,4-0.9h0c162.8,0,325.6,0,488.4,0c1.5,0,2.8,0.4,4.1,0.9l-0.1,0c3.4,1.4,6.1,2.7,8.8,4.2 l-0.4-0.2c19.7,11.2,30.9,27.8,31.3,50.8c0.4,28.2,0.6,56.3,0.8,84.5C575.7,141.8,575.8,143.5,576,145.2L576,145.2z M536.4,288.6 h0.3c0-56.7,0-113.4,0-170c0-18.2-0.4-36.4-0.7-54.6c-0.1-8-8.4-19.8-15.9-22.7c-1-0.4-2.1-0.6-3.2-0.7h0c-3.2-0.3-6.4-0.6-9.5-0.6 c-25.5-0.4-51-0.9-76.6-1c-96.4-0.2-192.7-0.4-289.1-0.4c-22.9,0-45.8,0.1-68.7,0.3c-3.4,0-6.8,0.1-10,0.9 c-9.9,2.3-17.1,8.3-21.7,17.3c-1,1.9-2,3.9-2.1,5.9c-0.1,149.8-0.1,299.6-0.1,449.4c0,0.9-0.1,2,0.3,2.7c2.7,4.2,5.1,8.6,8.3,12.3 c5.6,6.3,13.2,8.4,21.6,8.4c23.7,0.1,47.5,0.6,71.2,0.6c123.5,0,247,0,370.5,0c0.1,0,0.2,0,0.3,0c1.1,0,2.1-0.2,3-0.6l-0.1,0 c8.3-3.5,15.4-8.4,20.2-16.3c1.2-1.8,2-4.1,2-6.5l0,0C536.4,438.2,536.4,363.4,536.4,288.6L536.4,288.6z\" />\n                <path fill=\"#444444\" d=\"M307,277.5l75.9,68.4l0.9-0.2V150.9h49.7v194.8l1,0.3l78.2-67.4c0.1,1,0.2,1.7,0.3,2.4c0.3,19.9,0.6,39.8,0.8,59.7 c0,0,0,0,0,0.1c0,1.4-0.5,2.6-1.4,3.6l0,0c-34.1,32.7-68.2,65.3-102.3,97.9c-0.3,0.3-0.6,0.5-1,0.9c-0.6-0.5-1.3-1-1.9-1.5 c-32.7-30.7-65.5-61.4-98.2-92c-1.4-1.2-2.3-3-2.3-5c0-0.1,0-0.3,0-0.4v0c0.2-20.9,0.3-41.9,0.4-62.8C307,280.5,307,279.4,307,277.5 L307,277.5z\" />\n                <path fill=\"#444444\" d=\"M142.2,234.5L67,301.8c-0.1-1.2-0.3-1.9-0.3-2.7c-0.3-20.7-0.7-41.5-1-62.2c0-1.3,0.5-2.5,1.3-3.4l0,0 c33.3-31.4,66.7-62.8,100.1-94.1c0.3-0.3,0.6-0.5,1-0.8c5.9,5.7,11.8,11.3,17.7,16.9c28.1,26.9,56.2,53.9,84.3,80.9 c0.9,0.8,1.4,2,1.5,3.3v0c-0.5,20.2-1.1,40.3-1.6,60.5c0,0.3-0.1,0.7-0.2,1.7l-77.4-67.1l-0.9,0.1v193.9h-48.3v-194L142.2,234.5z\" />\n              </svg>`,\n\n  Security: `<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 597.6\">\n                <path fill=\"#444444\" d=\"M554,80.7L298.5,1.5c-6.6-2-13.2-2-19.9,0L23.2,80.7C9.3,84.7,0,97.9,0,112.4c0,352.5,178.7,436.4,274,481.9 c4.6,2,9.3,3.3,13.9,3.3c4.6,0,9.9-1.3,13.9-3.3c96-45.5,274-129.4,274-481.9C577.2,97.9,567.9,85.3,554,80.7z M288.6,527.6 C197.2,484.1,73.5,411.4,66.2,136.2l222.4-68.6L511,136.8C503.7,412.1,379.3,484.1,288.6,527.6z\" />\n                <path fill=\"#444444\" d=\"M278.7,152l-26.5,87.1l-90.7-2.6c-4.6,0-8.6,2.6-9.9,7.3c-1.3,4.6,0,9.2,4,11.9l74.8,51.5L200.6,393c-1.3,4.6,0,9.2,4,11.9 c4,2.6,8.6,2.6,12.6,0l72.1-54.8l72.1,54.8c4,2.6,8.6,2.6,12.6,0c4-2.6,5.3-7.3,4-11.9l-29.8-85.8l74.8-51.5c4-2.6,5.3-7.3,4-11.9 c-1.3-4.6-5.3-7.3-9.9-7.3l-90.7,2l-26.5-87.1c-1.3-4.6-5.3-7.3-9.9-7.3C283.9,144.1,280,147.4,278.7,152L278.7,152z\" />\n              </svg>`,\n\n  ChildStroller: `<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 432 370.06\">\n                    <path fill=\"#444444\" d=\"M130.29,178.61l-42.67,34L33.24,254.13c-15.48,12.09-28.32-2.64-28.32-2.64-12.08-15.86,1.89-26.06,1.89-26.06l68-53.24s7.55-7.93,26.81-2.26l28.7,8.68\"/>\n                    <path fill=\"#444444\" d=\"M210,111A38.52,38.52,0,1,1,248.48,72.5,38.68,38.68,0,0,1,210,111\"/>\n                    <path fill=\"#444444\" d=\"M390.84,0a42.88,42.88,0,0,0-24.92,8.31L80.44,235.63a43.71,43.71,0,0,0-13.59,22.28,40.67,40.67,0,0,0,1.89,23.41,47.9,47.9,0,0,0-22.28,41.16A47.58,47.58,0,1,0,94,274.9,41.43,41.43,0,0,0,84.22,276a22.77,22.77,0,0,1-1.51-14.35,25.82,25.82,0,0,1,8.68-13.59l17.37-14,88,29.08a33.54,33.54,0,0,0,42.67-21.53l1.51-4.91,18.88,45.32a47.09,47.09,0,0,0-22.28,40.4,47.58,47.58,0,1,0,47.58-47.58,41.43,41.43,0,0,0-9.82,1.13l-26.43-62.68,43.8-126.12,83.08-66.08a23.7,23.7,0,0,1,15.1-5.29,25.3,25.3,0,0,1,25.3,25.3,25.72,25.72,0,0,1-10.2,20.39,8,8,0,0,0,10.58,12.08A41.37,41.37,0,0,0,390.84,0ZM93.66,301.33A20.77,20.77,0,1,1,72.89,322.1,20.71,20.71,0,0,1,93.66,301.33Zm191.07,0A20.77,20.77,0,1,1,264,322.1,20.71,20.71,0,0,1,284.73,301.33Z\"/>\n                  </svg>`,\n\n  VendingMachine: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 594\">\n                      <circle fill=\"#444444\" cx=\"324\" cy=\"175.5\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"364.5\" cy=\"175.5\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"324\" cy=\"243\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"364.5\" cy=\"243\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"324\" cy=\"310.5\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"364.5\" cy=\"310.5\" r=\"13.5\"/>\n                      <path fill=\"#444444\" d=\"M216,94.5H67.5C59.4,94.5,54,99.9,54,108c0,8.1,5.4,13.5,13.5,13.5H216c8.1,0,13.5-5.4,13.5-13.5 C229.5,99.9,224.1,94.5,216,94.5z\"/>\n                      <path fill=\"#444444\" d=\"M216,162H67.5c-8.1,0-13.5,5.4-13.5,13.5c0,8.1,5.4,13.5,13.5,13.5H216c8.1,0,13.5-5.4,13.5-13.5 C229.5,167.4,224.1,162,216,162z\"/>\n                      <path fill=\"#444444\" d=\"M216,229.5H67.5c-8.1,0-13.5,5.4-13.5,13.5c0,8.1,5.4,13.5,13.5,13.5H216c8.1,0,13.5-5.4,13.5-13.5 C229.5,234.9,224.1,229.5,216,229.5z\"/>\n                      <path fill=\"#444444\" d=\"M216,297H67.5c-8.1,0-13.5,5.4-13.5,13.5S59.4,324,67.5,324H216c8.1,0,13.5-5.4,13.5-13.5S224.1,297,216,297z\"/>\n                      <path fill=\"#444444\" d=\"M391.5,0H324c-8.1,0-13.5,5.4-13.5,13.5S315.9,27,324,27h67.5c8.1,0,13.5,5.4,13.5,13.5V567H27V40.5 C27,32.4,32.4,27,40.5,27h216v499.5c0,8.1,5.4,13.5,13.5,13.5s13.5-5.4,13.5-13.5v-513C283.5,5.4,278.1,0,270,0H40.5 C17.5,0,0,17.5,0,40.5v540c0,8.1,5.4,13.5,13.5,13.5h405c8.1,0,13.5-5.4,13.5-13.5v-540C432,17.5,414.5,0,391.5,0z\"/>\n                      <path fill=\"#444444\" d=\"M364.5,94.5H324c-8.1,0-13.5,5.4-13.5,13.5c0,8.1,5.4,13.5,13.5,13.5h40.5c8.1,0,13.5-5.4,13.5-13.5 C378,99.9,372.6,94.5,364.5,94.5z\"/>\n                      <path fill=\"#444444\" d=\"M216,432H67.5c-8.1,0-13.5,5.4-13.5,13.5V513c0,8.1,5.4,13.5,13.5,13.5H216c8.1,0,13.5-5.4,13.5-13.5v-67.5 C229.5,437.4,224.1,432,216,432z M81,499.5V459h121.5v40.5H81z\"/>\n                    </svg>`,\n\n  Stairs: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 448.5\">\n              <path fill=\"#444444\" d=\"M432,243.3h-81.7v33.1h-72.2v33.1h-72.2v33.1h-72.2v33.1H61.5v33.1H0v39.7h101.2v-33.1h72.2v-33.1h72.2v-33.1h72.2v-33.1 h72.2V283H432L432,243.3\"/>\n              <path fill=\"#444444\" d=\"M99.9,109.3c12,0,21.8-9.7,21.8-21.8c0-12-9.8-21.8-21.8-21.8c-12,0-21.8,9.7-21.8,21.8C78.1,99.6,87.9,109.3,99.9,109.3\"/>\n              <path fill=\"#444444\" d=\"M179.4,299.8l-56.5-47.4l11.7-82.9c12.5,14.8,20.7,33.4,22.7,53.8l17.8-4.8c-0.9-32.2-14.2-61.3-35.3-82.6 c-14.4-14.5-32.9-19.2-45.9-20.6c-0.1,0-0.2,0-0.3,0c-1.6,0-2.9,1.2-3.2,2.7c-6.5,34.7-27.7,64.2-56.9,81.9l9.3,16.1 c15.6-6.6,29.5-16.4,40.9-28.6v177.3H107l10.4-73.7l57.7,33.3L179.4,299.8\"/>\n              <path fill=\"#444444\" d=\"M294.1,43.6c12,0,21.8-9.8,21.8-21.8c0-12-9.8-21.8-21.8-21.8c-12,0-21.8,9.8-21.8,21.8C272.3,33.8,282.1,43.6,294.1,43.6\" />\n              <path fill=\"#444444\" d=\"M337.2,154.3l-41.8-24.1l3.9-20c1.4-7.5,2.2-15.2,2.2-23.1c0-12-1.8-23.7-5-34.6c-0.4-1.4-1.7-2.4-3.1-2.4c0,0-0.1,0-0.1,0 c-46.7,1.6-84.1,40-84.1,87.1c0,2.3,0.1,4.6,0.3,6.9l18.3,3.2c0-0.5,0-0.9,0-1.4c0-19.5,8.6-36.9,22.3-48.7l-10.5,201.1h23.3 l24.9-128l23,10.7L294.9,240l16.6,16.6l34.6-74.3c1.3-2.8,2-5.9,2-9.2C348.1,165.1,343.8,158,337.2,154.3\"/>\n            </svg>`,\n\n  ChargingStation: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 627.4\">\n                      <polygon fill=\"#444444\" points=\"314.4,282.1 133.8,467.8 188.6,334.2 114.9,334.2 225.6,148.6 314.4,148.6 236.7,282.1 \"/>\n                      <path fill=\"#444444\" d=\"M374.2,0H63.3C28.4,0.1,0.1,28.4,0,63.3v503.6c0,32.8,30.1,60.5,62.6,60.5h309.2c33.3,0,60.3-27,60.3-60.3V374.2l0,0V57.8 C432,25.9,406.1,0,374.2,0z M220.3,600.4c-8.3,0.2-15.2-6.4-15.4-14.7c0-0.2,0-0.5,0-0.7c0.1-8.5,6.9-15.3,15.4-15.4 c8.3-0.2,15.2,6.4,15.4,14.7c0,0.2,0,0.5,0,0.7C235.4,593.8,229.1,600.4,220.3,600.4z M391.1,544.8H44v-465h346.7v294.4l0.4,55 V544.8z\"/>\n                    </svg>`,\n\n  WheelChair: `<svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 492.2\">\n                  <path fill=\"#444444\" d=\"M134.7,80.1l9.5,103h104.6v33.3H146.6l3.2,30.9h147.4l66.6,157l56.3-23.8l11.9,27l-84,36.4l-69.7-163.3H118.9l-19-221.9 c-3.2-5.5-4.7-11.9-4.7-18.2C95.1,18.2,112.5,0,134.7,0c22.2,0,40.4,18.2,40.4,40.4C175.2,61.8,156.9,80.1,134.7,80.1L134.7,80.1z\" />\n                  <path fill=\"#444444\" d=\"M306.7,397.1c-25.3,56.3-81.6,95.1-146.6,95.1C72.1,492.2,0,420.9,0,332.1C0,268.7,37.2,214,91.1,187.9l3.2,36.5 c-36.5,22.2-61,61.8-61,107.8c0,69.8,57.1,126.8,126.8,126.8c65,0,118.1-48.3,126-110.2L306.7,397.1\"/>\n                </svg>`,\n\n};\n\nexport default SVGIcons;","import SVGIcons from \"./svgIcons.helper\";\n\nexport type MapAmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'escalator' | 'security' | 'dog-poop-station' | 'child-stroller' | 'vending-machine' | 'stairs' | 'charging-station' | 'wheelchair';\n\nexport interface MapAmenity {\n  name: string;\n  type: MapAmenityID;\n  svgCode: string;\n}\n\nexport const AllAmenities: MapAmenity[] = [\n  {\n    name: \"ATM\",\n    type: \"atm\",\n    svgCode: SVGIcons.ATM\n  },\n  {\n    name: \"Management\",\n    type: \"management\",\n    svgCode: SVGIcons.Management\n  },\n  {\n    name: \"Kids Area\",\n    type: \"playarea\",\n    svgCode: SVGIcons.PlayArea\n  },\n  {\n    name: \"Restroom\",\n    type: \"restroom\",\n    svgCode: SVGIcons.RestRoom\n  },\n  {\n    name: \"Family Restroom\",\n    type: \"family-restroom\",\n    svgCode: SVGIcons.FamilyRestRoom\n  },\n  {\n    name: \"Elevator\",\n    type: \"elevator\",\n    svgCode: SVGIcons.Elevator\n  },\n  {\n    name: \"Security\",\n    type: \"security\",\n    svgCode: SVGIcons.Security\n  },\n  {\n    name: \"Escalator\",\n    type: \"escalator\",\n    svgCode: SVGIcons.Escalator\n  },\n  {\n    name: 'Child Stroller',\n    type: 'child-stroller',\n    svgCode: SVGIcons.ChildStroller\n  },\n  {\n    name: 'Vending Machine',\n    type: 'vending-machine',\n    svgCode: SVGIcons.VendingMachine\n  },\n  {\n    name: 'Stairs',\n    type: 'stairs',\n    svgCode: SVGIcons.Stairs\n  },\n  {\n    name: 'Charging Station',\n    type: 'charging-station',\n    svgCode: SVGIcons.ChargingStation\n  },\n  {\n    name: 'Wheelchair',\n    type: 'wheelchair',\n    svgCode: SVGIcons.WheelChair\n  },\n];\n\n","import { Dispatch, ReactNode, SetStateAction, createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { Group, type Mesh } from \"three\";\nimport path from \"ngraph.path\";\nimport { EventedType } from \"ngraph.events\";\nimport { MapConfigProps, IExtMesh } from \"src/interfaces\";\nimport { MapObjData, MapRetailer, MapAllDataResponse, MapKiosk } from \"src/interfaces/mapApiTypes\";\nimport { defaultPortalMapSettings, mapConfigDefaultVars, mapObjDefaultVars } from \"src/defaults\";\nimport { AllAmenities } from \"src/helpers/amenities.helper\";\nimport { AppDataProps } from \"src/interfaces/mapbox\";\nimport { AppFloor } from \"src/interfaces/mapbox\";\nimport createApiServices, { ApiServicesProps } from \"src/services/index.service\";\n\n\ninterface MapBoxContextType {\n  apiBaseUrl: string;\n  refetchMapData: () => void;\n  apiServices: ApiServicesProps;\n\n  loading: boolean;\n  setLoading: Dispatch<SetStateAction<boolean>>;\n\n  initialFloorsDataIsLoaded: boolean;\n  setInitialFloorsDataIsLoaded: Dispatch<SetStateAction<boolean>>;\n\n  mapConfig: MapConfigProps;\n  setMapConfig: React.Dispatch<React.SetStateAction<MapConfigProps>>;\n\n  mapApiResponse: MapAllDataResponse;\n  setMapApiResponse: React.Dispatch<React.SetStateAction<MapAllDataResponse>>;\n\n  appData: AppDataProps;\n  setAppData: React.Dispatch<React.SetStateAction<AppDataProps>>;\n\n  meshByObjectId: Map<string, Mesh>;\n  setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>>;\n\n  allMapObjects: Array<string>;\n  setAllMapObjects: Dispatch<SetStateAction<Array<string>>>;\n\n  allIndexedMapObjects: Record<string, MapObjData>;\n  setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObjData>>>;\n\n  allIndexedRetailers: Record<number, MapRetailer>;\n  setAllIndexedRetailers: Dispatch<SetStateAction<Record<number, MapRetailer>>>;\n\n  indexedKiosks: Record<number, MapKiosk>;\n  setIndexedKiosks: Dispatch<SetStateAction<Record<number, MapKiosk>>>;\n\n  floorsData: AppFloor[];\n  setFloorsData: Dispatch<SetStateAction<AppFloor[]>>;\n\n  allNodesFloor: Record<string, number>;\n  setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>>;\n\n  pathFinderGraph: Graph<any, any> & EventedType;\n  setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>>;\n  ngraphPath: typeof path;\n  setNgraphPath: Dispatch<SetStateAction<typeof path>>;\n\n  meshObject: IExtMesh[];\n  setMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[]>>;\n\n  cameraLength: number | undefined;\n  setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>>;\n}\n\nconst MapBoxContext = createContext<MapBoxContextType | undefined>(undefined);\n\nexport interface ProviderInitialData {\n  webApiBaseUrl: string;\n  config: Partial<MapConfigProps>;\n}\n\ninterface MapBoxContextProviderProps {\n  children: ReactNode;\n  initialData: ProviderInitialData;\n  mapApiResponseRef?: React.MutableRefObject<MapAllDataResponse | null>;\n}\n\nconst MapBoxContextProvider = ({ children, initialData, mapApiResponseRef }: MapBoxContextProviderProps) => {\n  const apiBaseUrl = initialData.webApiBaseUrl;\n\n  // console.log('...mapConfigDefaultVars, ...initialData.config ', { ...mapConfigDefaultVars, ...initialData.config });\n\n  const [loading, setLoading] = useState<MapBoxContextType['loading']>(true);\n  const [initialFloorsDataIsLoaded, setInitialFloorsDataIsLoaded] = useState<MapBoxContextType['initialFloorsDataIsLoaded']>(false);\n  const [mapConfig, setMapConfig] = useState<MapBoxContextType['mapConfig']>({ ...mapConfigDefaultVars, ...initialData.config });\n  const [mapApiResponse, setMapApiResponse] = useState<MapBoxContextType['mapApiResponse']>({\n    floors: [],\n    kiosks: [],\n    map_objs: [],\n    retailers: [],\n    mapSettings: defaultPortalMapSettings\n  });\n\n  if (mapApiResponseRef) {\n    mapApiResponseRef.current = mapApiResponse;\n  }\n\n  // angrej remove this later\n  const [appData, setAppData] = useState<MapBoxContextType['appData']>({\n    AMENITIES: AllAmenities,\n    FLOORS: [],\n    KIOSKS: {},\n    RETAILERS: {}\n  });\n\n  const [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string, Mesh>());\n\n  const [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\n  const [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\n  const [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\n  const [indexedKiosks, setIndexedKiosks] = useState<MapBoxContextType['indexedKiosks']>({});\n  const [floorsData, setFloorsData] = useState<MapBoxContextType['floorsData']>([]);\n\n  const [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n  const [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\n  const [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n\n  const [meshObject, setMeshObject] = useState<MapBoxContextType['meshObject']>([]);\n  const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n  const apiServices: ApiServicesProps = useMemo(() => {\n    return createApiServices(apiBaseUrl, mapConfig.CENTER_ID);\n  }, [apiBaseUrl, mapConfig.CENTER_ID])\n\n  // setting mapConfig when initialData.config is changed (for example, when CENTER_ID is changed) \n  // will trigger a re-fetch of the map data\n  useEffect(() => {\n    setMapConfig((config) => {\n      return { ...config, ...initialData.config };\n    });\n  }, [initialData.config, initialData.config.CENTER_ID]);\n\n  const refetchMapData = useCallback(() => {\n    Promise.all([\n      apiServices.retailersService.getAllRetailers(),\n      apiServices.mapApiService.getMapData(),\n      apiServices.mapApiService.getMapFloors(),\n      apiServices.mapApiService.getMapKiosks(),\n      apiServices.mapApiService.getMapSettings(),\n      apiServices.mapApiService.getMapResponsiveSettings()\n    ])\n      .then(([\n        retailers,\n        mapData,\n        mapFloors,\n        mapKiosks,\n        mapSettings,\n        responsiveSettings\n      ]) => {\n        // find all mapData.map_obj that use the same map_obj_name as another map_obj\n        // can be removed once the db don't have duplicates\n        const mapObjNames = mapData.map(map_obj => map_obj.map_obj_name);\n        mapData = mapData.filter((map_obj, index) => mapObjNames.indexOf(map_obj.map_obj_name) === index);\n\n        setMapApiResponse({\n          retailers,\n          map_objs: mapData,\n          floors: mapFloors,\n          kiosks: mapKiosks,\n          mapSettings: mapSettings.apiResponse\n        });\n\n        setMapConfig((config) => {\n          return { ...config, ...mapSettings.responseConfig, CAMERA_CONTROLS_STATES: responsiveSettings };\n        });\n\n        setAllIndexedRetailers(retailers.reduce(\n          (acc, retailer) => {\n            acc[retailer.id] = retailer;\n            return acc;\n          },\n          {} as Record<number, MapRetailer>\n        ));\n\n        setIndexedKiosks(mapKiosks.reduce(\n          (acc, kiosk) => {\n            acc[kiosk.id] = kiosk;\n            const mapObj = mapData.find(item => item.kiosk_id === kiosk.id);\n            if (mapObj) {\n              acc[kiosk.id].map_obj_name = mapObj.map_obj_name;\n            }\n            return acc;\n          },\n          {} as Record<number, MapKiosk>\n        ));\n\n        setAllIndexedMapObjects(mapData.reduce(\n          (acc, mapObj) => {\n            acc[mapObj.map_obj_name] = { ...mapObjDefaultVars, ...mapObj };\n            return acc;\n          },\n          {} as Record<string, MapObjData>\n        ));\n\n        setFloorsData(mapFloors.map(floor => {\n          const objsGroup = new Group();\n          objsGroup.scale.y *= -1;\n          objsGroup.lookAt(0, 1, 0);\n\n          return {\n            ...floor,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n          };\n        }));\n        setInitialFloorsDataIsLoaded(true);\n\n      })\n      .catch(error => {\n        console.error('Error: MapBoxContextProvider fetching api data:', error);\n        // there might still be some data in the context, so we can still use it\n        setInitialFloorsDataIsLoaded(true);\n      });\n  }, [apiServices])\n\n  useEffect(() => {\n    setInitialFloorsDataIsLoaded(false);\n    refetchMapData();\n  }, [refetchMapData]);\n\n  const contextValue: MapBoxContextType = {\n    apiBaseUrl,\n    refetchMapData,\n    apiServices,\n\n    loading,\n    setLoading,\n    initialFloorsDataIsLoaded,\n    setInitialFloorsDataIsLoaded,\n    mapConfig,\n    setMapConfig,\n    mapApiResponse,\n    setMapApiResponse,\n    appData,\n    setAppData,\n\n    meshByObjectId,\n    setMeshByObjectId,\n    allMapObjects,\n    setAllMapObjects,\n    allIndexedMapObjects,\n    setAllIndexedMapObjects,\n    allIndexedRetailers,\n    setAllIndexedRetailers,\n    indexedKiosks,\n    setIndexedKiosks,\n    floorsData,\n    setFloorsData,\n\n    allNodesFloor,\n    setAllNodesFloor,\n    pathFinderGraph,\n    setPathFinderGraph,\n    ngraphPath,\n    setNgraphPath,\n\n    meshObject,\n    setMeshObject,\n    cameraLength,\n    setCameraLength\n  };\n\n  return (\n    <MapBoxContext.Provider value={contextValue}>\n      {children}\n    </MapBoxContext.Provider>\n  )\n}\n\nexport function useMapBoxContext() {\n  const context = useContext(MapBoxContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n  }\n\n  return context;\n}\n\nexport default MapBoxContextProvider;\n","import axios from \"axios\";\nimport createMapApiService, { MapApiService } from \"./map.service\";\nimport createRetailersService, { RetailersService } from \"./retailers.service\";\n\nexport interface ApiServicesProps {\n  mapApiService: MapApiService;\n  retailersService: RetailersService;\n}\n\nconst createApiServices = (baseApiUrl: string, center_id: number): ApiServicesProps => {\n  const axiosInstance = axios.create({\n    baseURL: baseApiUrl, // server baseURL\n    timeout: 30000, // Set the request timeout in milliseconds\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"center_id\": center_id\n    },\n  });\n\n  // Interceptor for handling errors for Axios instance\n  const errorInterceptor = (error: any) => {\n    console.error('Axios Interceptor Error: ', error.response);\n  };\n\n  axiosInstance.interceptors.response.use(\n    (response) => response,\n    errorInterceptor\n  );\n\n\n  const mapApiService: MapApiService = createMapApiService(axiosInstance);\n  const retailersService: RetailersService = createRetailersService(axiosInstance);\n\n  return {\n    mapApiService,\n    retailersService\n  }\n}\n\nexport default createApiServices;\n\n","import { AxiosInstance } from \"axios\";\nimport { defaultPortalMapSettings, mapConfigDefaultVars } from \"src/defaults\";\nimport { hex_to_color } from \"src/helpers/misc.helper\";\nimport { MapConfigProps } from \"src/interfaces\";\nimport { MapResponsiveSettings, MapObjData, MapFloor, MapKiosk } from \"src/interfaces/mapApiTypes\";\nimport { PortalMapSettingsProps } from \"src/interfaces/portal\";\n\nexport interface MapApiService {\n  getMapData: () => Promise<MapObjData[]>;\n  getMapFloors: () => Promise<MapFloor[]>;\n  getMapKiosks: () => Promise<MapKiosk[]>;\n  getMapSettings: () => Promise<{ apiResponse: any, responseConfig: Partial<MapConfigProps> }>;\n  getMapResponsiveSettings: () => Promise<MapResponsiveSettings>;\n}\n\nconst createMapApiService = (axiosInstance: AxiosInstance): MapApiService => {\n  const CENTER_ID = axiosInstance.defaults.headers['center_id'];\n\n  const getMapData = (): Promise<MapObjData[]> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/mapit2/data`)\n        .then((response: any) => {\n          const mapDataItems: MapObjData[] = [];\n          if (response?.data?.items) {\n            for (const item of response?.data?.items) {\n              mapDataItems.push({\n                id: item.id,\n                retailer_id: item.retailer_id,\n                kiosk_id: item.kiosk_id,\n                map_obj_name: item.map_obj_name,\n                obj_type: item.obj_type,\n                layer_type: item.layer_type,\n                value: item.value,\n                custom_text: item.custom_text,\n                custom_image: item.custom_image,\n                bg_color: item.bg_color,\n                transparent: item.transparent,\n                text_color: item.text_color,\n                size: parseInt(item.size),\n                rotate: parseInt(item.rotate),\n                offset_x: parseInt(item.offset_x),\n                offset_y: parseInt(item.offset_y),\n                lock_size: false,\n              })\n            }\n          }\n          resolve(mapDataItems);\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapData()', err);\n          resolve([]);\n        });\n    });\n  }\n\n  const getMapFloors = (): Promise<MapFloor[]> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/mapit2/floors?limit=100&offset=0`)\n        .then((response: any) => {\n          const floors: MapFloor[] = [];\n          if (response?.data?.items) {\n            for (const item of response?.data?.items) {\n              floors.push({\n                id: item.id,\n                name: item.title,\n                svgUrl: item.svg\n              })\n            }\n          }\n          resolve(floors);\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapFloors()', err);\n          resolve([]);\n        });\n    });\n  }\n\n  const getMapKiosks = (): Promise<MapKiosk[]> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/display_kiosks?limit=100&page=1&display_type_id=1`)\n        .then((response: any) => {\n          const kiosks: MapKiosk[] = [];\n          if (response?.data?.items) {\n            for (const item of response?.data?.items) {\n              kiosks.push({\n                id: item.id,\n                name: item.title,\n              })\n            }\n          }\n          resolve(kiosks);\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapFloors()', err);\n          resolve([]);\n        });\n    });\n  }\n\n  const getMapSettings = (): Promise<{ apiResponse: any, responseConfig: Partial<MapConfigProps> }> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/mapit2/settings/${CENTER_ID}`)\n        .then((response: any) => {\n          const settings: MapConfigProps = { ...mapConfigDefaultVars };\n          let dbSettings: Partial<PortalMapSettingsProps> = defaultPortalMapSettings;\n          if (response?.data?.settings) {\n            dbSettings = response?.data?.settings;\n            if (dbSettings['MAP_BACKGROUND_COLOR']) settings.MAP_BACKGROUND_COLOR = hex_to_color(dbSettings['MAP_BACKGROUND_COLOR']);\n            if (dbSettings['STORE_DEFAULT_COLOR']) settings.STORE_DEFAULT_COLOR = hex_to_color(dbSettings['STORE_DEFAULT_COLOR']);\n            if (dbSettings['ACCENT_COLOR']) settings.ACCENT_COLOR = hex_to_color(dbSettings['ACCENT_COLOR']);\n            if (dbSettings['BASE_COLOR']) settings.BASE_COLOR = hex_to_color(dbSettings['BASE_COLOR']);\n            if (dbSettings['BOUNDARY_COLOR']) settings.BOUNDARY_COLOR = hex_to_color(dbSettings['BOUNDARY_COLOR']);\n            if (dbSettings['BASE_COLOR']) settings.BASE_COLOR = hex_to_color(dbSettings['BASE_COLOR']);\n            if (dbSettings['WALL_COLOR']) settings.WALL_COLOR = hex_to_color(dbSettings['WALL_COLOR']);\n            if (dbSettings['STORE_TEXT_COLOR']) settings.STORE_TEXT_COLOR = hex_to_color(dbSettings['STORE_TEXT_COLOR']);\n            if (dbSettings['OVERLAY_COLOR']) settings.OVERLAY_COLOR = hex_to_color(dbSettings['OVERLAY_COLOR']);\n\n            // todo, remove the parseFloat once the API returns the correct type\n            if (dbSettings['BOUNDARY_THICKNESS']) settings.BOUNDARY_THICKNESS = dbSettings['BOUNDARY_THICKNESS'];\n            if (dbSettings['WALL_THICKNESS']) settings.WALL_THICKNESS = dbSettings['WALL_THICKNESS'];\n            if (dbSettings['OVERLAY_OPACITY']) settings.OVERLAY_OPACITY = dbSettings['OVERLAY_OPACITY'];\n            if (dbSettings['KIOSK_SIZE']) settings.KIOSK_SIZE = dbSettings['KIOSK_SIZE'];\n            if (dbSettings['ZOOM_STEP']) settings.ZOOM_STEP = dbSettings['ZOOM_STEP'];\n            if (dbSettings['SELECTED_ZOOM_LIMIT']) settings.SELECTED_ZOOM_LIMIT = dbSettings['SELECTED_ZOOM_LIMIT'];\n\n            settings.CAMERA.minDistance = dbSettings['CAMERA_MIN_DISTANCE'] ? dbSettings['CAMERA_MIN_DISTANCE'] : settings.CAMERA.minDistance\n            settings.CAMERA.maxDistance = dbSettings['CAMERA_MAX_DISTANCE'] ? dbSettings['CAMERA_MAX_DISTANCE'] : settings.CAMERA.maxDistance\n\n            settings.CAMERA = { ...settings.CAMERA } // new reference to trigger some useEffects\n          }\n          settings.CENTER_ID = parseFloat(CENTER_ID as string);\n          const settingsToReturn: Partial<MapConfigProps> = { ...settings }\n\n          delete settingsToReturn.ROLE\n          resolve({\n            apiResponse: dbSettings,\n            responseConfig: settingsToReturn,\n          });\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapFloors()', err);\n          resolve({\n            apiResponse: defaultPortalMapSettings,\n            responseConfig: mapConfigDefaultVars,\n          });\n        });\n    });\n  }\n\n  const getMapResponsiveSettings = (): Promise<MapResponsiveSettings> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/mapit2/responsive/${CENTER_ID}`)\n        .then((response: any) => {\n          const settings: MapResponsiveSettings = { ...mapConfigDefaultVars.CAMERA_CONTROLS_STATES };\n          if (response.data.display_app) settings.display_app = response.data.display_app;\n          if (response.data.desktop) settings.desktop = response.data.desktop;\n          if (response.data.tablet) settings.tablet = response.data.tablet;\n          if (response.data.mobile) settings.mobile = response.data.mobile;\n          resolve(settings);\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapFloors()', err);\n          resolve(mapConfigDefaultVars.CAMERA_CONTROLS_STATES);\n        });\n    });\n  }\n\n  return {\n    getMapData,\n    getMapFloors,\n    getMapKiosks,\n    getMapSettings,\n    getMapResponsiveSettings\n  }\n}\n\nexport default createMapApiService;\n\n","import { AxiosInstance } from \"axios\";\nimport { MapRetailer, MapRetailerSingle } from \"src/interfaces/mapApiTypes\";\n\nexport interface RetailersService {\n  getAllRetailers: () => Promise<MapRetailer[]>;\n  getRetailer: (slug: string) => Promise<MapRetailerSingle>;\n}\n\nconst createRetailersService = (axiosInstance: AxiosInstance): RetailersService => {\n\n  const getAllRetailers = (): Promise<MapRetailer[]> => {\n    return new Promise((resolve, reject) => {\n      let items: any[] = [];\n\n      const fetchData = (currentPage: number = 1) => {\n        axiosInstance(`/v1/retailers?limit=100&page=${currentPage}`)\n          .then((response: any) => {\n            if (response?.data?.items) {\n              items = [...items, ...response.data.items];\n              if (response.data.count > items.length) {\n                fetchData(currentPage + 1);\n              } else {\n                const retailers: MapRetailer[] = [];\n\n                for (const item of items) {\n                  retailers.push({\n                    id: item.id,\n                    retail_name: item.name,\n                    slug: item.slug,\n                    retailer_description: item.description,\n                    location: item.location,\n                    retailer_phone: item.retailer_phone,\n                    logo: item.media.url || '',\n                    map_obj_name: ''\n                  })\n                }\n                resolve(retailers);\n              }\n            }\n          })\n          .catch((err) => {\n            console.error('Error fetching retailers', err);\n            resolve([]);\n          });\n      };\n\n      fetchData();\n    });\n  }\n\n  const getRetailer = (slug: string): Promise<MapRetailerSingle> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/retailers/${slug}`)\n        .then((response: any) => {\n          if (response?.data?.id) {\n            const resp = response?.data;\n            const retailer: MapRetailerSingle = {\n              id: resp.id,\n              retail_name: resp.name,\n              slug: resp.slug,\n              retailer_description: resp.description,\n              location: resp.location,\n              retailer_phone: resp.retailer_phone,\n              logo: resp.media.url || '',\n              map_obj_name: '',\n              opening_hours: resp.opening_hours\n            };\n\n            resolve(retailer);\n          }\n        })\n        .catch((err) => {\n          console.error('Error fetching retailers', err);\n          reject(err);\n        });\n    });\n  }\n\n  return {\n    getAllRetailers,\n    getRetailer\n  }\n}\n\nexport default createRetailersService;\n\n","import { Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry } from \"three\";\nimport { getWallShape } from \"./getWallShape\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\nimport { IExtMesh, IMeshValues } from \"../../interfaces\";\nimport { hex_to_color } from \"../../helpers/misc.helper\";\nimport { AllAmenities } from \"src/helpers/amenities.helper\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { useCallback } from \"react\";\n\nexport const renderOrders = {\n  'route-path': 0,\n  'escalator': 0,\n  'underlay': 0,\n  'overlay': 1,\n  'building-base': 1,\n  'base': 2,\n  'store': 3,\n  'big-store': 4,\n  'kiosk': 5,\n  'wall': 6,\n  'outer-wall': 7,\n  'boundary': 8,\n  'amenity': 9,\n  'layer-image': 10,\n  'layer-text': 11,\n  'route-tube': 12,\n  'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nconst useMaterialAndGeometry = () => {\n\n  const { mapConfig, allMapObjects, allIndexedMapObjects, allIndexedRetailers, floorsData } = useMapBoxContext();\n\n  const getRenderOrder = useCallback((mesh_type: MeshType): number => {\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n      return renderOrders[mesh_type];\n    }\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\n    return 0;\n  }, [])\n\n  const getMaterial = useCallback((mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean) => {\n    const material_settings = {\n      color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n      side: DoubleSide,\n      transparent: false,\n      depthWrite: true,\n      depthTest: true,\n      opacity: 1,\n    }\n    if (mapConfig.STYLE === '2D' || mesh_type === 'base' || mesh_type == null) {\n      if (mesh_type !== 'boundary') {\n        material_settings.depthWrite = false;\n        material_settings.depthTest = false;\n      }\n    }\n    if (mesh_type === 'overlay') {\n      material_settings.color = mapConfig.OVERLAY_COLOR;\n      material_settings.opacity = mapConfig.OVERLAY_OPACITY;\n    }\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && mapConfig.ROLE !== 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent) {\n      material_settings.opacity = 0;\n    }\n    var material = new MeshLambertMaterial(material_settings);\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n      //@ts-ignore\n      material.colorDefault = material.color;\n      if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color !== '') {\n        material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color as string);\n        //@ts-ignore\n        material.colorDefault = material.color;\n      }\n      //@ts-ignore\n      material.active = false;\n    }\n    if (mapConfig.ROLE !== 'PORTAL' && mesh_transparent) {\n      material.opacity = 0;\n      material.transparent = true;\n    }\n\n    material.transparent = material.opacity !== 1;\n\n    return material;\n  }, [allIndexedMapObjects, mapConfig.OVERLAY_COLOR, mapConfig.OVERLAY_OPACITY, mapConfig.ROLE, mapConfig.STYLE])\n\n  const getGeometry = useCallback((mesh_type: MeshType, layer_name: string, extrude: number, line_thickness: number, path: any) => {\n    const consolePrefix = 'MaterialAndGeometry';\n\n    let shapes = path.toShapes(true);\n\n    // shapes.forEach((shape, index) => {\n    let extrude_meshes;\n    if (mapConfig.STYLE === '2D') {\n      extrude_meshes = ['building-base'];\n    } else {\n      extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n    }\n\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n    var geometry;\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\n      geometry = new ExtrudeGeometry(shapes, {\n        depth: -extrude,\n        bevelEnabled: false,\n      });\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n      //@ts-ignore\n      let wall_geometries = [];\n      //@ts-ignore\n      path.subPaths.forEach(subPath => {\n        //@ts-ignore\n        subPath.curves.forEach(curve => {\n          if (curve.type === 'LineCurve') {\n            let shape_extend = 0;\n            if (mesh_type === 'boundary') {\n              shape_extend = 1;\n            } else if (mesh_type === 'wall') {\n              // shape_extend = 1 / 3;\n            }\n            let shape1 = getWallShape(curve, line_thickness, shape_extend);\n            let wall_geometry = new ExtrudeGeometry(shape1, {\n              depth: -extrude,\n              bevelEnabled: false,\n            });\n            wall_geometries.push(wall_geometry);\n          } else {\n            console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n          }\n        });\n      });\n\n      if (wall_geometries.length === 1) {\n        //@ts-ignore\n        geometry = wall_geometries[0];\n      } else if (wall_geometries.length > 1) {\n        //@ts-ignore\n        geometry = mergeGeometries(wall_geometries);\n      } else {\n        console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n      }\n    } else {\n      geometry = new ShapeGeometry(shapes);\n      try {\n        //@ts-ignore\n        if (geometry.attributes.position.count === 0) {\n          console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n        }\n      } catch (e: any) {\n        console.error(e.message);\n      }\n    }\n\n    return geometry;\n  }, [mapConfig.STYLE])\n\n  const getMaterialAndGeometry = useCallback((\n    mesh_type: MeshType,\n    layer_name: string,\n    layer_color: Color | string,\n    mesh_transparent: boolean,\n    mesh_visible: boolean,\n    z_index: number,\n    extrude: number,\n    line_thickness: number,\n    floor_index: number,\n    path: any\n  ): IMeshValues => {\n\n    const material = getMaterial(mesh_type, layer_name, layer_color, mesh_transparent);\n    const geometry = getGeometry(mesh_type, layer_name, extrude, line_thickness, path);\n\n    const mesh = new Mesh(geometry, material) as IExtMesh;\n    mesh.object_id = layer_name;\n    mesh.mesh_type = mesh_type;\n    mesh.floor_index = floor_index;\n    mesh.visible = mesh_visible;\n    mesh.position.z = z_index;\n\n    let storeName: string | null = '';\n\n    if (['retail_logo', 'retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n      if (allIndexedMapObjects[layer_name].layer_type && ['retail_name', 'retail_logo'].includes(allIndexedMapObjects[layer_name].layer_type) && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name]?.retailer_id || 0]) {\n        storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id as number].retail_name;\n      } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n        storeName = allIndexedMapObjects[layer_name].custom_text;\n        if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id as number]) {\n          storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id as number].retail_name;\n        }\n      } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n        storeName = allIndexedMapObjects[layer_name].value;\n        if (storeName) {\n          const amenity = AllAmenities.find(item => item.type === storeName)\n          if (amenity) {\n            storeName = amenity.name;\n          }\n        }\n      }\n    }\n    mesh.userData.storeName = storeName;\n    if (mapConfig.STYLE === '2D') {\n      mesh.renderOrder = getRenderOrder(mesh_type);\n      if (layer_name && layer_name.includes('underlay')) {\n        mesh.renderOrder = getRenderOrder('underlay');\n      }\n    }\n\n    floorsData[floor_index].objsGroup.add(mesh);\n\n    if (mesh_type === 'escalator') {\n      floorsData[floor_index].escalatorsNodes[layer_name] = null;\n      floorsData[floor_index].escalatorsObjs.push(mesh);\n      mesh.escalator_id = floor_index + '-' + layer_name;\n    }\n\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n      //@ts-ignore\n      mesh.route_node_id = null;\n\n      // add floor_index to the kiosks\n      if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'kiosk') {\n        // var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n        /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n            ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n        }*/\n      }\n\n      allMapObjects.push(layer_name);\n\n      if (\n        (mapConfig.ROLE !== 'PORTAL' && mesh_type === 'kiosk') ||\n        (mapConfig.ROLE !== 'PORTAL' && mapConfig.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n        (mapConfig.ROLE !== 'PORTAL' && mapConfig.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'custom' && allIndexedMapObjects[layer_name].custom_text !== \"\") ||\n        (mapConfig.ROLE !== 'PORTAL' && mapConfig.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'amenity' && allIndexedMapObjects[layer_name].value !== null) ||\n        (mapConfig.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n        (mapConfig.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type ?? ''))\n      ) {\n        floorsData[floor_index].interactiveObjs.push(mesh);\n      } else if (mapConfig.ROLE === 'PORTAL') {\n        floorsData[floor_index].interactiveObjs.push(mesh);\n      }\n    }\n\n    return {\n      mesh,\n      geometry,\n      material,\n      object_id: layer_name,\n      mesh_type,\n      floor_index,\n      visible: mesh_visible,\n      renderOrder: mesh.renderOrder,\n    }\n\n  }, [allIndexedMapObjects, allIndexedRetailers, allMapObjects, floorsData, getGeometry, getMaterial, getRenderOrder, mapConfig.ROLE, mapConfig.STYLE])\n\n  return {\n    getRenderOrder,\n    getMaterial,\n    getGeometry,\n    getMaterialAndGeometry\n  }\n}\n\nexport default useMaterialAndGeometry;","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import { Graph, Node } from \"ngraph.graph\";\nimport { PathFinder } from \"ngraph.path\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { IExtMesh } from \"src/interfaces\";\nimport { AppFloor } from \"src/interfaces/mapbox\";\nimport { BufferGeometry, CanvasTexture, CurvePath, DoubleSide, LineCurve3, Mesh, MeshBasicMaterial, Object3D, Raycaster, Scene, TubeGeometry, Vector3 } from \"three\";\nimport useMaterialAndGeometry from \"./useMaterialAndGeometry\";\nimport { useCallback } from \"react\";\n\nconst consolePrefix = 'ROUTE: ';\n\nconst useRouteHelper = () => {\n  const { floorsData, allNodesFloor, ngraphPath, pathFinderGraph, allIndexedMapObjects } = useMapBoxContext();\n  const { getRenderOrder } = useMaterialAndGeometry();\n\n  const delete_route_path = useCallback((floors: AppFloor[]) => {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n      const floor = floors[floor_index];\n      floor.route_active = false;\n\n      if (floor.route_tube != null) {\n        floor.route_tube.geometry.dispose();\n        //@ts-ignore\n        floor.route_tube.material.dispose();\n        floor.objsGroup?.remove(floor.route_tube);\n      }\n\n      floor.route_tube = undefined;\n      floor.route_texture = null;\n      floor.escalatorMeshes = [];\n    }\n  }, [])\n\n  const get_route_nodes = useCallback((from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) => {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length === 0) return false;\n    return routeNodes;\n  }, [])\n\n  const get_route_texture = useCallback((distance: number, floor_index: number, floors: AppFloor[]) => {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      ctx.canvas.width = distance;\n      ctx.canvas.height = 80;\n\n      ctx.fillStyle = \"#4ea5ff\";\n      ctx.fillRect(0, 0, distance, 80);\n\n      let grd_width = 0.1 * distance;\n      const min_grd_width = 60;\n      const max_grd_width = 120;\n      if (grd_width < min_grd_width) grd_width = min_grd_width;\n      if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n      let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n      grd.addColorStop(0, \"#4ea5ff\");\n      grd.addColorStop(0.4, \"white\");\n      grd.addColorStop(0.6, \"white\");\n      grd.addColorStop(1, \"#4ea5ff\");\n\n      ctx.fillStyle = grd;\n      ctx.fillRect(10, 0, grd_width, 80);\n\n      let route_texture = new CanvasTexture(ctx.canvas);\n      route_texture.offset.x = 1;\n      route_texture.colorSpace = 'srgb';\n\n      floors[floor_index].route_texture = route_texture;\n\n      return route_texture;\n    } else {\n      return undefined;\n    }\n  }, [])\n\n  const create_route_path = useCallback((routeNodes: Node<any>[], floor_index: number, floors: AppFloor[], style = '2D') => {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n      let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n      let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n      route_path.add(new LineCurve3(from_node, to_node));\n      distance += from_node.distanceTo(to_node);\n    };\n    var geometry: BufferGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n      map: get_route_texture(distance, floor_index, floors),\n      transparent: true,\n      side: DoubleSide,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style === '2D') {\n      route_tube.position.z = -10;\n      route_tube.scale.z = 0.1;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    if (route_tube.geometry.index !== null) {\n      route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    } else {\n      console.warn('route_tube.geometry.index is null');\n    }\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n  }, [getRenderOrder, get_route_texture])\n\n  const create_route_paths = useCallback((from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[], floors: AppFloor[], pathFinderGraph: Graph, style: string, routeCallback = null) => {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n      distance: function (fromNode, toNode, link) {\n        if (link.data) return link.data.weight;\n        return false;\n      },\n      //@ts-ignore\n      debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n      return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n      const routeNode = routeNodes[index];\n      if (floor_routes[allNodesFloor[routeNode.id]]) {\n        floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n      } else {\n        floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n      }\n\n      if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n        // don't consider these middle escalators nodes\n      } else {\n        routeNodesEsclators.push(routeNode);\n      }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n      const routeNode = routeNodesEsclators[index];\n      if (\n        allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n        && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n      ) {\n        const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n        const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n\n        let goToFloor = null;\n\n        if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n          goToFloor = {\n            index: allNodesFloor[routeNodesEsclators[index + 1].id],\n            direction: 'Next',\n          };\n        }\n\n        if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n          goToFloor = {\n            index: allNodesFloor[routeNodesEsclators[index - 1].id],\n            direction: 'Previous',\n          };\n        }\n\n\n        if (goToFloor && escalator_mesh) {\n          escalator_mesh.goToFloor = goToFloor;\n          const escalator_clone = escalator_mesh.clone();\n          escalator_clone.goToFloor = goToFloor;\n          //@ts-ignore\n          floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_clone);\n        }\n      }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n      const floor_route = floor_routes[floor_index];\n      if (floor_route && floor_route.length > 1) {\n        const routePath = create_route_path(floor_route, floor_index, floors, style);\n        routePaths[floor_index] = routePath;\n\n        floors[floor_index].route_active = true;\n        floors[floor_index].routeMeshes = [routePath];\n        if (floor_index === from_route_floor_index) {\n          //@ts-ignore\n          floors[floor_index]?.routeMeshes?.push(from_obj);\n        }\n        if (floor_index === to_route_floor_index) {\n          //@ts-ignore\n          floors[floor_index]?.routeMeshes?.push(to_obj);\n\n        }\n      }\n    }\n\n    return routePaths;\n  }, [create_route_path, get_route_nodes, ngraphPath, delete_route_path])\n\n  const create_route = useCallback((allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: AppFloor[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] => {\n    if (from_mesh_object_id === to_mesh_object_id) {\n      return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n  }, [create_route_paths])\n\n\n\n  //TODO\n  const get_nodes_distance = useCallback((from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) => {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length === 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n      let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n      distance += link?.data.weight || 0;\n    };\n    return distance;\n  }, [])\n\n  const linkFloorEscalators = useCallback(() => {\n    if (floorsData.length > 1) {\n      for (let i = 0; i < (floorsData.length - 1); i++) {\n        const floor_escalators = floorsData[i].escalatorsNodes;\n        Object.keys(floor_escalators as object).forEach(escalator => {\n          if (floorsData[i].escalatorsNodes?.[escalator] != null && floorsData[i + 1].escalatorsNodes?.[escalator] != null) {\n            const nodeIdFrom = floorsData[i].escalatorsNodes?.[escalator];\n            const nodeIdTo = floorsData[i + 1].escalatorsNodes?.[escalator];\n            if (nodeIdFrom && nodeIdTo) {\n              pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n              pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n            }\n          } else {\n            // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n          }\n        })\n      }\n    }\n  }, [floorsData, pathFinderGraph])\n\n  const make_amenity_route = useCallback((kiosk_obj_name: string, amenity_type: string, scene: Scene, escalator_nodes: string[], style: string): Mesh[] => {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    // if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj ? kiosk_obj.route_node_id : '';\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for (let key in allIndexedMapObjects) {\n      const mapObject = allIndexedMapObjects[key];\n      if (\n        mapObject.layer_type === 'amenity'\n        && mapObject.obj_type === 'special'\n        && mapObject.value === amenity_type\n      ) {\n        map_objs.push(key);\n      }\n    }\n    map_objs.forEach((amenity_obj_name: string) => {\n      let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n      const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n          if (link.data) return link.data.weight;\n          return false;\n        },\n        //@ts-ignore\n        debug: true,\n      });\n\n      if (amenity_obj && kiosk_node_name) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n          var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n          if (route_distance && route_distance < shortest_distance) {\n            shortest_distance = route_distance;\n            to_obj_name = amenity_obj_name;\n          }\n        } catch (e: any) {\n          console.warn(`Amenity Path: ${e.message}`);\n        }\n      }\n      if (!kiosk_node_name && amenity_obj) {\n        to_obj_name = amenity_node_name;\n      }\n    });\n    return create_route(allNodesFloor, kiosk_obj_name, to_obj_name ?? '', scene, floorsData, escalator_nodes, pathFinderGraph, style);\n  }, [allIndexedMapObjects, allNodesFloor, create_route, floorsData, get_nodes_distance, ngraphPath, pathFinderGraph])\n\n  const assign_route_nodes_to_stores = useCallback((floor_index: number, escalator_nodes: string[], find_store_node_raycaster: Raycaster) => {\n    const result = new Map();\n    const currentFloor = floorsData[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n      currentFloor.route_points.forEach(point => {\n        let origin_point = new Vector3(point.node.x, point.node.y, -10);\n        let target_direction = new Vector3(0, 0, 1);\n        find_store_node_raycaster.set(origin_point, target_direction);\n        var storeIntersects = find_store_node_raycaster.intersectObjects(floorsData[floor_index].interactiveObjs);\n        if (storeIntersects.length) {\n          //@ts-ignore\n          storeIntersects[0].object.route_node_id = point.name;\n          //@ts-ignore\n          result.set(storeIntersects[0].object.object_id, point.name);\n          // angrej123\n          // if (false && mapConfig.ROLE !== 'PORTAL') {\n          //   //@ts-ignore\n          //   var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n          //   if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n          //     // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n          //   }\n          // }\n        }\n\n        var escalatorIntersects = find_store_node_raycaster.intersectObjects(floorsData[floor_index].escalatorsObjs as Object3D[]);\n        if (escalatorIntersects.length) {\n          const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n          let escalator_obj_id = obj.object_id;\n          const escalatorNodes = floorsData[floor_index].escalatorsNodes;\n          if (escalatorNodes) {\n            escalatorNodes[escalator_obj_id as string] = point.name;\n            allNodesFloor[point.name] = floor_index;\n            escalator_nodes.push(point.name);\n          }\n        }\n      });\n    }\n    return result;\n  }, [allNodesFloor, floorsData])\n\n  return {\n    delete_route_path,\n    create_route,\n    create_route_paths,\n    create_route_path,\n    get_route_nodes,\n    get_nodes_distance,\n    get_route_texture,\n    linkFloorEscalators,\n    make_amenity_route,\n    assign_route_nodes_to_stores\n  }\n}\n\nexport default useRouteHelper;","import { AppFloor } from \"src/interfaces/mapbox\";\nimport type { Vector2 } from \"three\";\n\nexport function next_node_name(node_count: number) {\n  return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: AppFloor[], node_count: number): [string, boolean] {\n  let exists = false;\n  let node_name: string = '-name-not-found-';\n  const currentFloor = floors[floor_index];\n  if (currentFloor.route_points !== undefined) {\n    for (let i = 0; i < currentFloor.route_points.length; i++) {\n      if (vertex.x === currentFloor.route_points[i].node.x && vertex.y === currentFloor.route_points[i].node.y) {\n        exists = true;\n        node_name = currentFloor.route_points[i].name;\n        break;\n      }\n    }\n    if (!exists) {\n      node_name = next_node_name(node_count);\n      // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n  }\n  return [node_name, exists];\n}","import { SVGResult } from \"three-stdlib\";\nimport { IMeshValues } from \"src/interfaces\";\nimport { Raycaster } from \"three\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport useRouteHelper from \"./useRouteHelper\";\nimport useMaterialAndGeometry from \"./useMaterialAndGeometry\";\nimport { useMeshParams } from \"./useMeshParams\";\nimport { useMemo } from \"react\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nconst useLoadFloors = (svgFloors: SVGResult[]): any => {\n  const { mapConfig, pathFinderGraph } = useMapBoxContext();\n  const { getMaterialAndGeometry } = useMaterialAndGeometry();\n  const { getMeshParams } = useMeshParams();\n  const { assign_route_nodes_to_stores, linkFloorEscalators } = useRouteHelper();\n\n  const [GeometriesAndMaterials, escalator_nodes, allSvgObjectIds] = useMemo(() => {\n\n    const allSvgObjectIds: Set<string> = new Set();\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n    const escalator_nodes: string[] = [];\n\n    svgFloors.forEach((svgFloor, floor_index) => {\n      if (svgFloor.paths && svgFloor.paths.length) {\n        const pathIds = [];\n        for (let i = 0; i < svgFloor.paths.length; i++) {\n          pathIds.push(svgFloor.paths[i]?.userData?.node.id);\n        }\n        const paths = svgFloor.paths;\n        for (let i = 0; i < paths.length; i++) {\n          const {\n            mesh_type,\n            layer_color,\n            extrude,\n            z_index,\n            mesh_visible,\n            mesh_draw,\n            mesh_transparent,\n            line_thickness,\n            path,\n            layer_name,\n          } = getMeshParams(\n            paths[i],\n            paths,\n            floor_index,\n            ++node_count,\n          );\n\n          if (mesh_draw) {\n            const meshParams = getMaterialAndGeometry(\n              mesh_type,\n              layer_name,\n              layer_color,\n              mesh_transparent,\n              mesh_visible,\n              z_index,\n              extrude,\n              line_thickness,\n              floor_index,\n              path\n            );\n\n            if (layer_name.startsWith('kiosk-')) {\n              if (mapConfig.ROLE === 'PORTAL') {\n                // meshParams.mesh.visible = false;\n                //@ts-ignore\n                // meshParams.mesh.material.visible = false;\n              }\n            }\n\n            if (!GeometriesAndMaterials[floor_index]) {\n              GeometriesAndMaterials[floor_index] = [];\n            }\n\n            GeometriesAndMaterials[floor_index].push(meshParams);\n          }\n        }\n        const findStoreNodeRaycaster = new Raycaster();\n        const routeNodeIds = assign_route_nodes_to_stores(\n          floor_index,\n          escalator_nodes,\n          findStoreNodeRaycaster\n        );\n\n        if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n          for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n            if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n              GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n            }\n          }\n        }\n\n        linkFloorEscalators();\n      }\n    })\n\n    for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n      const floorGeometries = GeometriesAndMaterials[i];\n      for (let j = 0; j < floorGeometries.length; j++) {\n        allSvgObjectIds.add(floorGeometries[j].object_id);\n      }\n    }\n\n    return [GeometriesAndMaterials, escalator_nodes, allSvgObjectIds]\n\n  }, [assign_route_nodes_to_stores, getMaterialAndGeometry, getMeshParams, linkFloorEscalators, mapConfig.ROLE, svgFloors]);\n  // }, [assign_route_nodes_to_stores, getMaterialAndGeometry, getMeshParams, linkFloorEscalators, mapConfig.ROLE, svgFloors]);\n\n  return {\n    GeometriesAndMaterials,\n    graph: pathFinderGraph,\n    escalator_nodes,\n    allSvgObjectIds\n  }\n}\n\nexport default useLoadFloors;","import { DoubleSide, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3 } from \"three\";\nimport type { Color, Object3D, Scene } from \"three\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh } from \"../../interfaces\";\nimport { hex_to_color } from \"../../helpers/misc.helper\";\nimport { MapObjData, MapRetailer } from \"src/interfaces/mapApiTypes\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport useMaterialAndGeometry from \"./useMaterialAndGeometry\";\nimport { useCallback } from \"react\";\n\nconst useDrawLogoHelper = () => {\n\n  const { allIndexedRetailers, allIndexedMapObjects, floorsData, mapConfig } = useMapBoxContext();\n  const { getRenderOrder } = useMaterialAndGeometry();\n\n  const drawTextLogoStoreOnMap = (allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObjData>, allIndexedRetailers: Record<string, MapRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) => {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n      addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n  }\n\n  const addTextOrLogoOnStore = (map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObjData>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) => {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n      //@ts-ignore\n      add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n  }\n\n  const getMeshGroupBoundingBox = (mesh: Mesh | Array<Mesh>) => {\n    if (!Array.isArray(mesh)) {\n      mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n      if (!obj.geometry.boundingBox) {\n        obj.geometry.computeBoundingBox();\n      }\n      //@ts-ignore\n      box.union(obj.geometry.boundingBox);\n      return box;\n    }, new Box3());\n    return box;\n  }\n\n  const layer_text_logo_position_by_id = (object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) => {\n    let map_obj = allIndexedMapObjects[object_id] as MapObjData | undefined;\n\n    newMeshPos.z = -mesh_size.z;\n\n    newMesh.rotateZ((map_obj?.rotate || 0) * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += (map_obj?.offset_x || 0);\n    newMeshPos.y += (map_obj?.offset_y || 0);\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n  }\n\n  const getImage = (map_obj: Record<string, any>, retailer?: MapRetailer): HTMLImageElement | null => {\n    const img = new Image();\n    img.crossOrigin = 'Anonymous';\n    if (map_obj.obj_type === 'retailer') {\n      if (retailer) {\n        img.src = retailer.logo;\n      } else {\n        console.error('retailer not found');\n        return null;\n      }\n    } else if (map_obj.obj_type === 'special') {\n\n      let svg_image_name = map_obj.value;\n      if (map_obj.layer_type === 'kiosk') svg_image_name = 'kiosk';\n      if (map_obj.layer_type === 'escalator') svg_image_name = 'escalator';\n      if (svg_image_name) {\n        let svg_color = '222222';\n        if (map_obj.text_color != null) {\n          svg_color = map_obj.text_color.replace('#', '');\n        }\n\n        const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n        if (!svg_block) {\n          console.error('svg_block not found', svg_image_name);\n          return null;\n        }\n        const svg_element = svg_block.querySelector(\"svg\");\n        if (!svg_element) {\n          console.error('svg_element not found', svg_image_name);\n          return null;\n        }\n\n        const svgColoredParts = svg_element.querySelectorAll('[fill]');\n        svgColoredParts.forEach((svgColoredPart) => {\n          svgColoredPart.setAttribute('fill', '#' + svg_color);\n        })\n\n        const svgData = (new XMLSerializer()).serializeToString(svg_element);\n        img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n      }\n\n    } else {\n      if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n        img.src = map_obj.custom_image;\n      } else {\n        return null;\n      }\n    }\n\n    return img;\n  }\n\n  const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    img.onload = function () {\n      const c = document.createElement(\"canvas\");\n      const ctx = c.getContext(\"2d\");\n\n      c.width = img.width;\n      c.height = img.height;\n\n      ctx?.drawImage(img, 0, 0);\n\n      let texture = new CanvasTexture(c);\n      texture.colorSpace = 'srgb'\n\n      const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n      const material = new MeshBasicMaterial({\n        map: texture,\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n      });\n\n      if (map_obj.layer_type === 'kiosk') {\n        material.visible = false;\n      }\n\n      afterOnload(geometry, material);\n    };\n  }\n\n  const getImageLogo = useCallback((allIndexedMapObjects: Record<string, MapObjData>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry, object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: { storeLogo: Object3D }) => void): void => {\n    const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n    if (img === null) return;\n\n    processImage(img, map_obj, (geometry, material) => {\n      const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n      // @ts-ignore\n      const floor_index = mesh.floor_index;\n      layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n      logoMesh.object_id = new_object_id;\n      logoMesh.floor_index = floor_index;\n      logoMesh.renderOrder = getRenderOrder('layer-image');\n      floors[floor_index]?.objsGroup.add(logoMesh);\n      handleAsync({ storeLogo: logoMesh });\n    })\n\n  }, [getRenderOrder])\n\n  const get_store_name_logo_geometry = useCallback((\n    geometry: BufferGeometry,\n    object_id: string,\n    floor_index: number,\n    textLogoNamePrefix: string,\n    myFont: any,\n    handleAsync: (meshLogo: any) => void\n  ): { textMesh: IExtMesh } | null | false => {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n      return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    let map_obj: MapObj = allIndexedMapObjects[object_id] ? allIndexedMapObjects[object_id] : { layer_type: object_id.startsWith('escalator') ? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8 };\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n      let text = '';\n      if (map_obj.layer_type === 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n        text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n      } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        text = map_obj.custom_text;\n      } else {\n        text = '';\n      }\n\n      let text_color: Color = mapConfig.STORE_TEXT_COLOR;\n      if (map_obj.text_color) {\n        text_color = hex_to_color(map_obj.text_color);\n      }\n\n      const material_settings = {\n        color: text_color,\n        transparent: false,\n        side: DoubleSide,\n        depthWrite: false,\n        depthTest: false,\n      };\n      let text_material = new MeshBasicMaterial(material_settings);\n      let text_geometry = new TextGeometry(text, {\n        font: myFont,\n        size: parseInt(map_obj.size),\n        height: 0.01,\n        curveSegments: 4,\n      });\n      text_geometry.center();\n\n      const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n      textMesh.userData.debug_name = text;\n      textMesh.userData.font = myFont;\n      layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n      textMesh.object_id = new_object_id;\n      textMesh.floor_index = floor_index;\n      textMesh.renderOrder = getRenderOrder('layer-text');\n      if (map_obj.layer_type === 'retail_name') {\n        textMesh.userData.retail_name = text;\n      }\n\n      floorsData[floor_index].objsGroup.add(textMesh);\n      result = { textMesh };\n    } else if (\n      map_obj.layer_type === 'retail_logo' ||\n      map_obj.layer_type === 'custom_image' ||\n      (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id != null) ||\n      (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '') ||\n      (map_obj.layer_type === 'escalator')\n    ) {\n      getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floorsData, handleAsync);\n    }\n    return result;\n  }, [allIndexedMapObjects, allIndexedRetailers, floorsData, getImageLogo, getRenderOrder, mapConfig.STORE_TEXT_COLOR])\n\n  return {\n    drawTextLogoStoreOnMap,\n    addTextOrLogoOnStore,\n    getMeshGroupBoundingBox,\n    layer_text_logo_position_by_id,\n    getImage,\n    processImage,\n    getImageLogo,\n    get_store_name_logo_geometry\n  }\n}\n\nexport default useDrawLogoHelper;","import { Mesh } from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport fontData from './Montserrat_Regular.typeface.json'\nimport type { IExtMesh, IMeshValues, MeshFloorsProps } from \"../../interfaces\";\nimport { textLogoNamePrefix } from \"../../defaults\";\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { MapObjData } from \"src/interfaces/mapApiTypes\";\nimport { SVGResult } from \"three-stdlib\";\nimport useLoadFloors from \"./useLoadFloors\";\nimport useDrawLogo from \"./useDrawLogoHelper\";\n\nlet allNonIndexedMapObjects: MapObjData[] = [];\n\nconst useMeshFloors = (): MeshFloorsProps => {\n  const { mapConfig, initialFloorsDataIsLoaded, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph, mapApiResponse } = useMapBoxContext();\n\n  const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n  const [textParams, setTextParams] = useState<Array<{ textMesh: IExtMesh }[]>>([]);\n  const [storeLogos, setStoreLogos] = useState<{ storeLogo: Mesh }[][]>([]);\n  const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n\n  let loadedFloors: SVGResult[] = useLoader(SVGLoader, mapApiResponse.floors.map(floor => floor.svgUrl)) as SVGResult[];\n  const { GeometriesAndMaterials, graph, escalator_nodes, allSvgObjectIds } = useLoadFloors(loadedFloors);\n\n  const { get_store_name_logo_geometry } = useDrawLogo();\n\n  const myFont = useFont(fontData as unknown as FontData);\n\n  const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: { storeLogo: Mesh }) => {\n    setStoreLogos((prevLogos) => {\n      if (prevLogos[floorIndex]) {\n        prevLogos[floorIndex].push({ ...meshLogo });\n      } else {\n        prevLogos[floorIndex] = [{ ...meshLogo }];\n      }\n      return [...prevLogos];\n    });\n  }), [])\n\n  const clearScene = useCallback(() => {\n    setMeshParams((meshParams) => {\n      if (meshParams) {\n        meshParams.forEach(floor => {\n          if (floor) {\n            floor.forEach(value => {\n              value.mesh.removeFromParent();\n            })\n          }\n        })\n      }\n      return []\n    });\n    setTextParams((textParams) => {\n      if (textParams) {\n        textParams.forEach(floor => {\n          if (floor) {\n            floor.forEach(value => {\n              value.textMesh.removeFromParent();\n            })\n          }\n        })\n      }\n      return []\n    });\n    setStoreLogos(storeLogos => {\n      if (storeLogos) {\n        storeLogos.forEach(floor => {\n          if (floor) {\n            floor.forEach(value => {\n              value.storeLogo.removeFromParent();\n            })\n          }\n        })\n      }\n      return []\n    });\n  }, [])\n\n  useEffect(() => {\n    if (initialFloorsDataIsLoaded) {\n      return () => {\n        console.log('clearScene')\n        // triggered when we change the apiServices (apiBaseUrl, mapConfig.CENTER_ID)\n        clearScene();\n      }\n    }\n  }, [clearScene, initialFloorsDataIsLoaded])\n\n  useEffect(() => {\n    return () => {\n      clearScene();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!myFont || !loadedFloors) return;\n\n    const TextsAndLogos: Array<{ textMesh: IExtMesh }[]> = [];\n    allNonIndexedMapObjects.forEach((params) => {\n      let values: IMeshValues | undefined;\n      for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n        //@ts-ignore\n        values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n        if (values !== undefined) {\n          break;\n        }\n      }\n      if (!values) return null;\n      const textParams = get_store_name_logo_geometry(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, myFont, handleAsyncStoreLogos(values.floor_index));\n      if (textParams) {\n        if (!TextsAndLogos[values.floor_index]) {\n          TextsAndLogos[values.floor_index] = [];\n        }\n        TextsAndLogos[values.floor_index].push(textParams);\n      }\n    })\n    const GAMCount = GeometriesAndMaterials.reduce((acc: number, item: IMeshValues[]) => {\n      return (acc + item.length);\n    }, 0);\n    const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n    if (countNonIndexedObjs !== 0) {\n      const mapObjNames = new Set<string>();\n      allNonIndexedMapObjects.forEach((item) => {\n        mapObjNames.add(item.map_obj_name);\n      });\n      GeometriesAndMaterials.forEach((items: IMeshValues[]) => {\n        items.forEach(item => {\n          if (!mapObjNames.has(item.object_id)) {\n            const textParams = get_store_name_logo_geometry(\n              item.geometry,\n              item.object_id,\n              item.floor_index,\n              textLogoNamePrefix,\n              myFont,\n              handleAsyncStoreLogos(item.floor_index)\n            );\n            if (textParams) {\n              if (!TextsAndLogos[item.floor_index]) {\n                TextsAndLogos[item.floor_index] = [];\n              }\n              TextsAndLogos[item.floor_index].push(textParams);\n            }\n          }\n        })\n      });\n    }\n    setMeshParams([...GeometriesAndMaterials]);\n    setTextParams(TextsAndLogos);\n    setPathFinderGraph(graph);\n    setEscalatorNodes([...escalator_nodes]);\n\n  }, [loadedFloors, myFont, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, mapConfig, setPathFinderGraph, handleAsyncStoreLogos, GeometriesAndMaterials, get_store_name_logo_geometry, graph, escalator_nodes]);\n\n  return useMemo(() => {\n    return {\n      meshParams: meshParams,\n      textParams,\n      storeLogos,\n      pathFinderGraph,\n      escalator_nodes: escalatorNodes,\n      allSvgObjectIds\n    }\n  }, [meshParams, textParams, storeLogos, pathFinderGraph, escalatorNodes, allSvgObjectIds])\n}\n\nexport default useMeshFloors;","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import { useThree } from \"@react-three/fiber\";\nimport { PerspectiveCamera, Vector3 } from \"three\";\n\ninterface CameraPropertiesProps {\n  far?: number;\n  near?: number;\n  fov?: number;\n  aspectRatio?: number;\n  position?: Vector3;\n}\n\nexport const CameraProperties = (props: CameraPropertiesProps) => {\n  const { camera } = useThree();\n\n  const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n  if (props.far) {\n    camera.far = props.far;\n  }\n  if (props.near) {\n    camera.near = props.near;\n  }\n\n  if (camera instanceof PerspectiveCamera) {\n    if (props.fov) {\n      camera.fov = props.fov;\n    }\n  }\n\n  if (cameraProjectionNeedsUpdate) {\n    camera.updateProjectionMatrix();\n  }\n\n  return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, { useEffect, useRef } from \"react\";\nimport type { Mesh } from \"three\";\nimport { easeInOutCubic } from \"../../helpers/easing.helper\";\nimport { MeshBasicMaterial } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n  mesh?: Mesh;\n}\n\nexport function RouteTube({ mesh }: IRouteTubeProps) {\n  const animateRoute = useRef<Function | null>(null);\n\n  useEffect(() => {\n    if (!mesh) {\n      return;\n    }\n\n    if (!mesh.geometry.index?.count) {\n      console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n      return;\n    }\n\n    if (!(mesh.material instanceof MeshBasicMaterial)) {\n      return;\n    }\n    if (!mesh.material.map) {\n      console.log('NO ROUTE TEXTURE');\n      return;\n    }\n\n    mesh.geometry.setDrawRange(0, 0);\n\n    const end = mesh.geometry.index.count;\n    const animateTube = (\n      () => {\n        const length = 1000;\n        const startTime = performance.now();\n        return () => {\n          const progress = (performance.now() - startTime) / length;\n          const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n          if (progress >= 1) {\n            animateRoute.current = animateTexture;\n          }\n\n          mesh.geometry.setDrawRange(0, drawRangeEnd);\n        }\n      }\n    )();\n\n    const animateTexture = (() => {\n      if (!(mesh.material instanceof MeshBasicMaterial)) {\n        return null;\n      }\n      if (!mesh.material.map) {\n        return null;\n      }\n      const offsetVector = mesh.material.map.offset;\n      const length = 2000;\n      const progressStart = 0.1;\n      const progressLength = 1 + progressStart;\n      const startTime = performance.now();\n      return () => {\n        const progress = (performance.now() - startTime) / length % 1;\n        offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n      }\n    })();\n\n    animateRoute.current = animateTube;\n\n    return () => {\n      animateRoute.current = null;\n      mesh.removeFromParent();\n      if (mesh.material instanceof MeshBasicMaterial) {\n        mesh.material.dispose();\n      }\n      if (mesh.geometry) {\n        mesh.geometry.dispose();\n      }\n    }\n\n  }, [mesh]);\n\n  useFrame(() => {\n    if (animateRoute.current) {\n      try {\n        animateRoute.current();\n      } catch (e: any) {\n        console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n        animateRoute.current = null;\n      }\n    }\n  });\n\n  if (!mesh) return null;\n  return <primitive object={mesh}></primitive>\n}","import { useEffect, useMemo, useState } from \"react\";\nimport { SpriteMaterial, Texture } from \"three\";\nimport styles from './MapCenterMarker.module.scss';\nimport { Html } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\ninterface MapCenterMarketProps {\n  size: number;\n  lockSize?: boolean;\n  blink: boolean;\n  cameraLength: number | undefined;\n  text_color?: string;\n}\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, text_color = \"black\" }: MapCenterMarketProps) => {\n  const { mapConfig } = useMapBoxContext();\n  const [, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - mapConfig.CAMERA.minDistance) / (mapConfig.CAMERA.maxDistance - mapConfig.CAMERA.minDistance))\n    }\n  }, [lockSize, mapConfig, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize, depthTest: false, depthWrite: false, color: text_color });\n    return material;\n  }, [lockSize, texture, text_color])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const svgData = (new XMLSerializer()).serializeToString(svgOrigin);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n    }\n  }, []);\n\n  if (material) {\n    return (\n      <group>\n        <sprite scale={scale} material={material}>\n        </sprite>\n        {blink && <Html><div className={styles.mapCenterMarker}></div></Html>}\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, MeshFloorsProps, IMeshValues } from \"../../interfaces\";\nimport { ThreeEvent } from \"@react-three/fiber\";\nimport React, { useEffect } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from './Map.module.scss';\nimport { MapCenterMarker } from \"./MapCenterMarker\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { getSvgIconHTML } from \"src/helpers/misc.helper\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: MeshFloorsProps;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, currentFloorIndex: number, params?: IMeshValues }) {\n  const { type, mesh, currentFloorIndex } = props;\n  useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      // setUpdate((value) => !value);\n    };\n    return () => mesh.userData.triggerUpdate = undefined\n  }, [mesh.userData]);\n\n  const { cameraLength } = useMapBoxContext();\n\n  // console.warn({update});\n\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} lockSize={mesh.userData.kioskConfig.lockSize} text_color={mesh.userData.kioskConfig.text_color} /> : null}\n        </primitive>\n      } else {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} lockSize={mesh.userData.kioskConfig.lockSize} text_color={mesh.userData.kioskConfig.text_color} /> : null}\n        </>\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n  const { mapConfig, floorsData } = useMapBoxContext();\n\n  const { meshParams, textParams, storeLogos } = meshFloors;\n  const floor = floorsData[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = floorsData[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            //@ts-ignore\n            const baseColor = active ? mapConfig.ACCENT_COLOR : params.mesh.material.colorDefault;\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n\n      {escalatorMeshes?.map((params) => {\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div className={`escalator_elems ${styles.escalator_elems}`}\n              style={{ display: visible ? 'block' : 'none' }}\n              onClick={(e) => {\n                e.stopPropagation()\n                handleChangeFloor(params.goToFloor?.index || 0)\n                return false\n              }}\n              onPointerMove={(e) => e.stopPropagation()}>\n              <div className={`element ${styles.element}`} id={params.object_id as string}>\n                <div className={`svgIcon ${styles.svgIcon}`} dangerouslySetInnerHTML={{ __html: getSvgIconHTML('escalator') as string }}></div>\n                <div className={`label ${styles.label}`}>{params.goToFloor?.direction}: Floor {params.goToFloor ? floorsData.length - params.goToFloor.index : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type { Mesh } from \"three\";\nimport { Box3, Vector3 } from \"three\";\n\nexport function get_camera_focus_object(objs: Mesh[], fov: number, aspectRatio: number, style: string) {\n  // config.STYLE\n  // config.CAMERA.fov\n\n  if (!Array.isArray(objs)) {\n    objs = [objs];\n  }\n  if (!objs.length) {\n    console.warn('get_camera_focus_object: no objects passed');\n    return { position: new Vector3(), target: new Vector3() };\n  }\n\n  const objsBoundingBox = objs.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    if (obj.geometry.boundingBox) {\n      box.union(obj.geometry.boundingBox);\n    }\n    return box;\n  }, new Box3());\n\n  const obj_size = new Vector3();\n  objsBoundingBox.getSize(obj_size);\n\n  const center = new Vector3();\n  objsBoundingBox.getCenter(center);\n\n  objs[0].localToWorld(center);\n\n  let tanFOV = Math.tan(Math.PI * fov / 360);\n  let padding = 1.1;\n  let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n  let new_height = (obj_size.y * padding) / 2 / tanFOV;\n  let new_y = Math.max(new_width, new_height);\n  let new_z = getCameraTiltPosition(new_y, style);\n\n  const target = new Vector3(center.x, 0, center.z);\n  const position = new Vector3(center.x, new_y, center.z + new_z);\n\n  return { position, target };\n}\n\nfunction getCameraTiltPosition(y: number, style: string): number {\n  let angle = 60;\n  if (style === '2D') angle = 89.9;\n  return y / Math.tan(angle * Math.PI / 180);\n}","import { IExtMesh, MapDeviceType, MeshFloorsProps, ZoomData } from \"../../interfaces\";\nimport { Map } from \"./Map\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helper\";\nimport { MapControls } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { mapConfigDefaultVars } from \"src/defaults\";\nimport { MapCameraControlsState } from \"src/interfaces/mapApiTypes\";\nimport useRouteHelper from \"src/Hooks/useMeshFloors/useRouteHelper\";\nimport { AppFloor } from \"src/interfaces/mapbox\";\n\ninterface FloorsMapProps {\n  meshFloors: MeshFloorsProps;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  currKioskObj: Mesh | null;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: ZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  cameraControlsPosition: MapCameraControlsState;\n  handleCameraAndControlsChange?: ({ camera, controls }: MapCameraControlsState) => void;\n  isSelectedRetailerSlug: boolean;\n  setIsCameraInit: Function;\n  handleObjectClick: (object: IExtMesh, targetId: string, softClick?: boolean) => void,\n  triggerClick: boolean,\n  deviceType: MapDeviceType;\n}\n\n\nexport const FloorsMap = forwardRef((params: FloorsMapProps, ref) => {\n  const { mapConfig, allIndexedMapObjects, allNodesFloor, mapApiResponse, pathFinderGraph, setCameraLength, floorsData } = useMapBoxContext();\n  const { make_amenity_route, create_route } = useRouteHelper();\n\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const {\n    meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    handleCameraAndControlsChange,\n    activeObjectId,\n    isSelectedRetailerSlug,\n    setIsCameraInit,\n    handleObjectClick,\n    triggerClick,\n    cameraControlsPosition,\n    deviceType\n  } = params;\n  const [cameraLimits, setCameraLimits] = useState({ min: mapConfig.CAMERA.minDistance, max: mapConfig.CAMERA.maxDistance, initialDistance: 0, needsUpdate: true })\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = mapConfig.STYLE;\n  const accentColor = mapConfig.ACCENT_COLOR;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n  const isUseDefaultsLimits = mapConfig.ROLE === \"PORTAL\" && routeTargetId;\n\n  const resetCamera = useCallback((fullReset: boolean = false) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, mapConfig.ROLE === 'PORTAL' ? '2D' : style);\n\n    let isZeroCCS = true;\n\n    if (cameraControlsPosition) {\n      let cameraV3 = cameraControlsPosition.camera;\n      if (!(cameraV3 instanceof Vector3)) {\n        cameraV3 = new Vector3(cameraV3.x, cameraV3.y, cameraV3.z);\n      }\n      isZeroCCS = (cameraV3 as Vector3).length() === 0;\n    }\n\n    if (!fullReset && cameraControlsPosition && !isZeroCCS && !['PORTAL'].includes(mapConfig.ROLE)) {\n      focus.position.set(cameraControlsPosition.camera.x, cameraControlsPosition.camera.y, cameraControlsPosition.camera.z);\n      focus.target.set(cameraControlsPosition.controls.x, cameraControlsPosition.controls.y, cameraControlsPosition.controls.z);\n    }\n\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: mapConfig.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n    if (['DISPLAY_APP', 'WP_SITE'].includes(mapConfig.ROLE) && cameraLimits.needsUpdate === false && cameraLimits.initialDistance > 0) {\n      setCameraLimits(cl => ({\n        ...cl,\n        min: mapConfig.CAMERA.minDistance < 0.1 ? 0.1 : mapConfig.CAMERA.minDistance,\n        max: mapConfig.CAMERA.maxDistance,\n      }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [camera, cameraLimits.needsUpdate, mapConfig.CAMERA.animSpeed, mapConfig.CAMERA.maxDistance, mapConfig.CAMERA.minDistance, cameraControlsPosition, mapConfig.ROLE, currKioskFloorIndex, meshFloors.meshParams, style]);\n\n  const focusDistance = cameraFocus.current ? cameraFocus.current.position.distanceTo(cameraFocus.current.target) : 0;\n\n  useEffect(() => {\n    if (cameraControlsPosition) {\n      resetCamera()\n    }\n  }, [cameraControlsPosition, resetCamera])\n\n  useEffect(() => {\n\n    if (focusDistance > 0 && cameraLimits.needsUpdate) {\n      setCameraLimits({ min: mapConfig.CAMERA.minDistance < 0.1 ? 0.1 : mapConfig.CAMERA.minDistance, max: mapConfig.CAMERA.maxDistance, initialDistance: focusDistance, needsUpdate: false })\n      setIsCameraInit(true);\n    }\n\n  }, [focusDistance, cameraLimits.needsUpdate, mapConfig.CAMERA, setIsCameraInit])\n\n  useEffect(() => {\n    setCameraLimits((cl) => ({ ...cl, needsUpdate: true }))\n  }, [mapConfig.CAMERA])\n\n  useEffect(() => {\n\n    if (['DISPLAY_APP', 'WP_SITE'].includes(mapConfig.ROLE) && routeTargetId && cameraLimits.initialDistance > 0) {\n      setCameraLimits(cl => {\n        const minDistance = Math.max(Number(mapConfig.SELECTED_ZOOM_LIMIT), mapConfig.CAMERA.minDistance)\n        return {\n          ...cl,\n          needsUpdate: false,\n          min: minDistance < 0.1 ? 0.1 : minDistance,\n          max: mapConfig.CAMERA.maxDistance,\n        }\n      });\n    }\n  }, [mapConfig.SELECTED_ZOOM_LIMIT, routeTargetId, cameraLimits.initialDistance, mapConfig.ROLE, mapConfig.CAMERA.minDistance, mapConfig.CAMERA.maxDistance])\n\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length, resetCamera])\n\n  useEffect(() => {\n    if (!amenityTargetType || mapConfig.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(from ?? '', amenityTargetType, scene, escalatorNodes, style);\n    setRouteTubes(route);\n\n    if (currKioskObj && mapConfig.ROLE === \"DISPLAY_APP\") {\n      handleChangeFloor(currKioskFloorIndex);\n    }\n\n  }, [amenityTargetType, scene, pathFinderGraph, floorsData, escalatorNodes, style, from, mapConfig.ROLE, allNodesFloor, allIndexedMapObjects, make_amenity_route, currKioskObj, handleChangeFloor, currKioskFloorIndex])\n\n  const clearEscalators = useCallback(() => {\n    floorsData.flat().forEach((item) => item.escalatorMeshes = []);\n  }, [floorsData])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || mapConfig.ROLE === 'PORTAL') {\n      if (mapConfig.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          clearEscalators();\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        clearEscalators();\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floorsData.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n    // console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floorsData, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floorsData, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, mapConfig.ROLE, allNodesFloor, triggerClick, create_route, clearEscalators]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (mapConfig.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floorsData[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && (mapConfig.ROLE === 'PORTAL' || isSelectedRetailerSlug)) {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, mapConfig.ROLE === 'PORTAL' || mapConfig.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      isUseDefaultsLimits ? mapConfig.CAMERA.maxDistance : cameraLimits.max,\n      Math.max(\n        isUseDefaultsLimits ? mapConfig.CAMERA.minDistance : cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: mapConfig.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, mapConfig.ROLE, mapConfig.CAMERA.maxDistance, mapConfig.CAMERA.minDistance, mapConfig.CAMERA.animSpeed, floorsData, activeObjectId, amenityTargetType, isSelectedRetailerSlug, isUseDefaultsLimits, cameraLimits.max, cameraLimits.min]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= mapConfig.ZOOM_STEP;\n      } else {\n        cameraDistance += mapConfig.ZOOM_STEP;\n      }\n\n      cameraDistance = Math.min(\n        cameraLimits.max,\n        Math.max(\n          cameraLimits.min,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: mapConfig.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoom])\n\n  const getInitialDistance = () => {\n    return cameraLimits.initialDistance\n  }\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange) {\n        // todo this is an expensive operation that shouldn't be needed\n        handleCameraAndControlsChange({\n          camera: mapControlRef.current.object.position.clone(),\n          controls: mapControlRef.current.target.clone()\n        })\n      }\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const createRouteToStore = useCallback((retailerSlug: string) => {\n    if (retailerSlug.length) {\n      const retailer = mapApiResponse.retailers.find(item => item.slug === retailerSlug);\n      if (retailer) {\n        const mapObj = mapApiResponse.map_objs.find(item => item.retailer_id === retailer.id);\n        if (mapObj) {\n          const obj = scene.getObjectByProperty('object_id', mapObj.map_obj_name);\n          if (obj) {\n            handleObjectClick(obj as IExtMesh, mapObj.map_obj_name, true);\n          }\n        }\n      }\n    }\n  }, [handleObjectClick, mapApiResponse, scene]);\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n    createRouteToStore,\n    getInitialDistance,\n  }))\n\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={isUseDefaultsLimits ? mapConfigDefaultVars.CAMERA.minDistance : cameraLimits.min}\n        maxDistance={isUseDefaultsLimits ? mapConfigDefaultVars.CAMERA.maxDistance : cameraLimits.max}\n        enableZoom={mapConfig.ROLE === \"PORTAL\" || mapConfig.ROLE === \"DISPLAY_APP\" || (mapConfig.ROLE === \"WP_SITE\" && ['mobile', 'tablet'].includes(deviceType))}\n        enableRotate={mapConfig.ROLE !== \"WP_SITE\" && mapConfig.ROLE !== \"PORTAL_RESPONSIVE\" && mapConfig.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floorsData && floorsData.map((value: AppFloor, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={mapConfig.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from './UIComponent.module.scss';\nimport { MapAmenity, MapAmenityID } from \"src/helpers/amenities.helper\";\nimport { getSvgIconHTML } from \"src/helpers/misc.helper\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\nexport interface UIComponentProps {\n  selectedFloorIndex: number;\n  handleFloorChange: (floorIndex: number) => void;\n  amenitiesList: MapAmenity[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: (fullReset?: boolean) => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  onExtractedAmenities?: (amenityIds: MapAmenityID[]) => void\n}\n\nconst UIComponent = ({\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  onExtractedAmenities,\n}: UIComponentProps) => {\n  const { mapConfig, mapApiResponse, floorsData, allMapObjects } = useMapBoxContext();\n\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      if (mapConfig.ROLE === 'PORTAL_RESPONSIVE' || mapConfig.ROLE === 'PORTAL') {\n        reset(true)\n      } else {\n        reset();\n      }\n    }\n  }\n\n  const extractValues = useMemo<MapAmenityID[]>(() => {\n    if (mapApiResponse?.map_objs) {\n      return mapApiResponse?.map_objs\n        .filter(obj => obj.layer_type === \"amenity\" && allMapObjects.includes(obj.map_obj_name))\n        .map(obj => obj.value as MapAmenityID);\n    }\n    return [];\n  }, [mapApiResponse, allMapObjects])\n\n\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floorsData.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              {floorsData.length > 1 && (\n                <div className=\"floors btn_group\">\n                  {floorsData.map((floor: any, index: number) => (\n                    <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                      handleFloorChange(index)\n                    }}>{floor.name}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(mapConfig.ROLE) &&\n          <div className={`amenities ${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`}\n                  className={`amenity ${styles.amenity}`}\n                  onClick={() => handleAmenityClick(amenity.type)}>\n                  <div className={`content ${styles.content}`}>\n                    <div className={`icon ${styles.icon}`} dangerouslySetInnerHTML={{ __html: getSvgIconHTML(amenity.type) as string }}></div>\n                    <div className={`name ${styles.name}`}>{amenity.name}</div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { Form, FormGroup, Modal } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { ChangeEventHandler, useEffect, useState } from \"react\";\nimport styles from './RetailerInfoModal.module.scss';\nimport { MapObjData, MapRetailer } from \"src/interfaces/mapApiTypes\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\ntype RetailerInfoModalProps = {\n  amenity: string,\n  show: boolean,\n  onHide: () => void,\n  mapObjectName?: string,\n  onClickMapObj: (id: string, amenityType?: string) => void,\n  kioskId: number,\n  allSvgObjectIds: Set<string>,\n}\n\nconst RetailerInfoModal = ({ amenity, show, onHide, mapObjectName, onClickMapObj, kioskId, allSvgObjectIds }: RetailerInfoModalProps) => {\n\n  const { allIndexedMapObjects, allIndexedRetailers, apiServices } = useMapBoxContext();\n\n  const [loading, setLoading] = useState<boolean>(true);\n  const [retailerInfo, setRetailerInfo] = useState<MapRetailer>();\n  const [availableRetailersOnMap, setAvailableRetailersOnMap] = useState<MapRetailer[]>([]);\n\n  const [selectedRetailerId, setSelectedRetailerId] = useState<number>(-1);\n\n  useEffect(() => {\n    if (mapObjectName) {\n      setLoading(true);\n      const mapObj = allIndexedMapObjects[mapObjectName];\n      if (mapObj && mapObj.retailer_id) {\n        const retailer = allIndexedRetailers[mapObj.retailer_id];\n        if (retailer) {\n          setRetailerInfo(retailer);\n          setLoading(false);\n        } else {\n          // todo maybe if the slug is available, fetch the retailer info\n          // apiServices.retailersService.getRetailer(slug)\n          //   .finally(() => {\n          //     setLoading(false);\n          //   })\n          //   .then((resp) => {\n          //     setRetailerInfo(resp);\n          //   });\n        }\n      }\n    } else {\n      setLoading(false);\n      setRetailerInfo(undefined);\n    }\n  }, [allIndexedMapObjects, allIndexedRetailers, mapObjectName, apiServices]);\n\n  const onMapItClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let mapObj: MapObjData;\n    if (kioskId) {\n      const filteredMapObjects = Object.values(allIndexedMapObjects).filter(obj => obj.kiosk_id === kioskId && allSvgObjectIds.has(obj.map_obj_name))\n      mapObj = filteredMapObjects[0] as MapObjData;\n    } else {\n      const filteredMapObjects = Object.values(allIndexedMapObjects).filter(obj => obj.retailer_id === selectedRetailerId && allSvgObjectIds.has(obj.map_obj_name))\n      mapObj = filteredMapObjects[0] as MapObjData; // just pick the first one\n    }\n\n    if (!mapObj) {\n      console.error('Map object not found');\n      return;\n    }\n\n    if (amenity) {\n      onClickMapObj(mapObj.map_obj_name, amenity);\n    } else {\n      onClickMapObj(mapObj.map_obj_name);\n    }\n  }\n\n  useEffect(() => {\n    const retailerIds = new Set(\n      Object.values(allIndexedMapObjects)\n        .filter(mapObj => mapObj.retailer_id !== null)\n        .filter((mapObj) => allSvgObjectIds.has(mapObj.map_obj_name))\n        .map(mapObj => mapObj.retailer_id as number)\n    );\n\n    const filteredMapRetailers = Array.from(retailerIds)\n      .map(retailerId => allIndexedRetailers[retailerId])\n      .filter(Boolean) // This filters out undefined values\n      .sort((a, b) => a.retail_name.localeCompare(b.retail_name));\n\n    setAvailableRetailersOnMap(filteredMapRetailers);\n  }, [allIndexedMapObjects, allIndexedRetailers, loading, allSvgObjectIds])\n\n  const onChangeRetailerId: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setSelectedRetailerId(parseInt(e.target.value));\n  }\n\n  return (\n    <Modal show={show} dialogClassName={styles.retailerInfoModal} className=\"px-2\" onHide={onHide} centered>\n      <div className={styles.retailerInfoCloseBtn}>\n        <XCircle onClick={onHide} size={24} color=\"white\" className={styles.closeBtn} />\n      </div>\n      <Modal.Body className=\"p-3\">\n        <div>\n          {loading ? (\n            <div>loading...</div>\n          ) : (\n            <div>\n              {retailerInfo ? (\n                <div>\n                  <div className={styles.retailerLogo}>\n                    <img className={styles.img} src={retailerInfo.logo} alt={retailerInfo.retail_name} />\n                  </div>\n                  <div className={styles.retailerInfoContent} >\n                    <div><b>Retailer:</b> {retailerInfo.retail_name}</div>\n                    {retailerInfo.location && <div><b>Location:</b> {retailerInfo.location}</div>}\n                    {retailerInfo.retailer_phone && <div><b>Phone:</b> {retailerInfo.retailer_phone}</div>}\n                    {retailerInfo.retailer_description && <div dangerouslySetInnerHTML={{ __html: retailerInfo.retailer_description }}></div>}\n                  </div>\n                </div>\n              ) : null}\n\n              <Form className={styles.getDirectionsFrom}>\n                <FormGroup>\n                  <div className=\"d-flex align-items-center gap-3\">\n                    <Form.Select\n                      name=\"retailer\"\n                      onChange={onChangeRetailerId}\n                      value={selectedRetailerId}\n                    >\n                      <option value={-1} disabled>Get direction from ...</option>\n                      {availableRetailersOnMap.map((item, index) => {\n                        if (retailerInfo && item.id === retailerInfo.id) return null;\n                        return (\n                          <option key={index} value={item.id}>{item.retail_name}</option>\n                        )\n                      }\n                      )}\n                    </Form.Select>\n\n                    <button type=\"button\" disabled={selectedRetailerId === -1} onClick={onMapItClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n                  </div>\n                </FormGroup>\n              </Form>\n            </div>\n          )}\n        </div>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default RetailerInfoModal;\n","import { MapObjData } from \"src/interfaces/mapApiTypes\";\nimport { useCallback, useEffect, useRef, useState, useTransition } from \"react\";\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, MeshBasicMaterial, MeshPhongMaterial, PlaneGeometry, Vector3 } from \"three\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh, MeshFloorsProps } from \"src/interfaces\";\nimport textFontInterface from 'src/Hooks/useMeshFloors/Montserrat_Regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport Select, { ActionMeta, SingleValue } from 'react-select';\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { mapObjDefaultVars } from \"src/defaults\";\nimport { MapAmenityOption, MapKioskOption, MapRetailerOption } from \"src/interfaces/portal-sidebar-form\";\nimport useDrawLogoHelper from \"src/Hooks/useMeshFloors/useDrawLogoHelper\";\nimport useMaterialAndGeometry, { MeshType } from \"src/Hooks/useMeshFloors/useMaterialAndGeometry\";\nimport { AllAmenities, MapAmenityID } from \"src/helpers/amenities.helper\";\nimport styles from './PortalSidebarForm.module.scss'\n\ninterface PortalSidebarFormProps {\n  floorIndex: number;\n  meshFloors: MeshFloorsProps;\n  setData: (index: number, data: MapObjData) => void;\n  selectedId: string;\n  onSubmit?: (data: MapObjData, refreshData?: () => void) => void;\n  onResetData?: (data: MapObjData) => void;\n  onChangeData?: (data: MapObjData) => void;\n  onNewData?: (data: MapObjData) => void;\n  triggerSceneUpdate: Function;\n}\n\nconst incDecKeys = ['size', 'rotate', 'offset_x', 'offset_y'] as const;\ntype IncDecKey = (typeof incDecKeys)[number]\n\ntype TIncDecInterval = {\n  [Key in IncDecKey]?: number | null;\n}\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObjData, floorIndex: Number) => void;\n\n\nconst PortalSidebarForm = (params: PortalSidebarFormProps) => {\n\n  const { setData, selectedId, floorIndex, onResetData, onChangeData, onNewData, triggerSceneUpdate } = params;\n  const { mapApiResponse, meshObject, allIndexedRetailers } = useMapBoxContext();\n  const { getImage, processImage, layer_text_logo_position_by_id } = useDrawLogoHelper();\n  const { getMaterial } = useMaterialAndGeometry();\n\n  const textFont = useFont(textFontInterface as unknown as FontData);\n  const [objType, setObjType] = useState<MapObjData['obj_type']>('retailer');\n  const [layerType, setLayerType] = useState<MapObjData['layer_type']>('retail_name');\n\n  const [formData, setFormData] = useState<MapObjData>(mapObjDefaultVars);\n  const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n  const [, startTransition] = useTransition();\n  const intervalRefs = useRef<TIncDecInterval>({});\n\n  const [selectedKiosksId, setSelectedKiosksId] = useState<number[]>([]);\n\n  const recheckSelectedKiosksId = useCallback((mapObjs: any[]) => {\n    if (mapObjs) {\n      const ids = (mapObjs as { kiosk_id: number }[]).reduce<number[]>((prev, cur) => {\n        if (cur.kiosk_id !== null) {\n          return [...prev, cur.kiosk_id];\n        }\n        return prev;\n      }, [])\n      setSelectedKiosksId([...ids]);\n    }\n  }, []);\n\n  useEffect(() => {\n    recheckSelectedKiosksId(mapApiResponse.map_objs);\n  }, [mapApiResponse, recheckSelectedKiosksId])\n\n  const updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData, floorIndex) => {\n    const kioskConfig = obj.userData.kioskConfig;\n    if (kioskConfig) {\n      obj.userData.distanceFactor = formData?.lock_size ? 1500 : undefined;\n      obj.userData.kioskConfig = {\n        ...kioskConfig,\n        lockSize: formData.lock_size,\n        blink: kioskConfig.blink,\n        size: Number(formData.size),\n        floorIndex: floorIndex,\n        text_color: formData.text_color,\n      }\n      // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n    } else {\n      obj.userData.kioskConfig = {\n        lockSize: formData.lock_size,\n        blink: false,\n        size: Number(formData.size),\n        floorIndex: floorIndex,\n        text_color: formData.text_color,\n      }\n    }\n  }\n\n  const makeImage = useCallback((formData: MapObjData, obj: IExtMesh) => {\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let img = null;\n    if (formData.layer_type === 'retail_logo') {\n      img = getImage(formData, allIndexedRetailers[formData.retailer_id || 0]);\n    } else {\n      img = getImage(formData);\n    }\n    if (img instanceof HTMLImageElement) {\n      processImage(img, formData, (geometry: PlaneGeometry, material: MeshBasicMaterial) => {\n        obj.geometry = geometry;\n        obj.material = material;\n\n        const boundingBox = geometry.boundingBox;\n\n        const mesh_center_point = new Vector3();\n        if (boundingBox) {\n          boundingBox.getCenter(mesh_center_point);\n\n          const mesh_size = new Vector3();\n          boundingBox.getSize(mesh_size);\n          if (obj.object_id) {\n            layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n          }\n        }\n      });\n    }\n  }, [getImage, layer_text_logo_position_by_id, oldMapObjName, processImage, allIndexedRetailers])\n\n  const updateTooltip = useCallback((text: string, map_obj_name: string) => {\n    params.meshFloors.meshParams.flat().filter(item => item !== undefined).forEach(item => {\n      if (item.mesh.object_id === map_obj_name) {\n        item.mesh.userData.storeName = text\n      }\n    })\n  }, [params.meshFloors.meshParams])\n\n  const makeTextGeometry = useCallback((obj: IExtMesh, text: string, size: number) => {\n    if (!obj) return;\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let text_geometry = new TextGeometry(text, {\n      font: (obj.userData && obj.userData.font) ? obj.userData.font : textFont,\n      size,\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n    if (obj.geometry) {\n      obj.geometry.dispose();\n    }\n    obj.geometry = text_geometry;\n    updateTooltip(text, formData.map_obj_name);\n  }, [formData?.map_obj_name, textFont, oldMapObjName, updateTooltip])\n\n  const updateData = useCallback((formData: MapObjData, isUserAction: boolean = false) => {\n    const index = mapApiResponse.map_objs.findIndex((value: MapObjData) => value.map_obj_name === formData.map_obj_name);\n    if (index !== -1) {\n      formData.id = mapApiResponse.map_objs[index].id;\n      mapApiResponse.map_objs[index] = { ...formData };\n      setData(index, { ...formData });\n      recheckSelectedKiosksId(mapApiResponse.map_objs);\n      if (isUserAction) {\n        onChangeData?.(formData);\n      }\n    } else {\n      if (isUserAction) {\n        onNewData?.(formData);\n      }\n    }\n  }, [mapApiResponse, setData, recheckSelectedKiosksId, onNewData, onChangeData])\n\n  const clearKioskConfig = () => {\n    if (meshObject) {\n      const obj = meshObject[1];\n      if (obj && obj.userData && obj.userData.kioskConfig) {\n        obj.userData.kioskConfig = null;\n        params.meshFloors.storeLogos.flat().filter(item => item !== undefined).forEach(item => {\n          if (item.storeLogo.object_id === obj.object_id && item.storeLogo.userData.kioskConfig !== undefined) {\n            item.storeLogo.userData.kioskConfig = null;\n          }\n        });\n      }\n    }\n  }\n\n  const onObjTypeChange = (key: MapObjData['obj_type']) => {\n    setObjType(key);\n    formData.obj_type = key;\n    clearKioskConfig();\n\n    if (key === 'retailer') {\n      if (!['retail_name', 'retail_logo', 'retail_text'].includes(layerType)) {\n        onLayerTypeChange('retail_name');\n      }\n      formData.kiosk_id = null;\n    }\n\n    if (key === 'special') {\n      if (!['kiosk', 'amenity'].includes(layerType)) {\n        onLayerTypeChange('kiosk');\n      }\n      formData.retailer_id = null;\n      if (meshObject) {\n        const obj = meshObject[1];\n        makeTextGeometry(obj, '', formData.size);\n        // if (obj) {\n        //   if (!obj.userData) {\n        //     obj.userData = {};\n        //   }\n        //   obj.userData.distanceFactor = formData.lock_size ? 1500 : undefined;\n        //   obj.userData.kioskConfig = {\n        //     lockSize: formData.lock_size,\n        //     blink: false,\n        //     size: Number(formData.size)\n        //   }\n        // }\n      }\n    }\n\n    if (key === 'custom') {\n      if (!['custom_text', 'custom_image'].includes(layerType)) {\n        onLayerTypeChange('custom_text');\n      }\n      formData.retailer_id = null;\n      formData.kiosk_id = null;\n    }\n\n    onValueChange('size', formData.size.toString());\n    onValueChange('text_color', formData.text_color || mapApiResponse.mapSettings.STORE_TEXT_COLOR);\n\n    setFormData({ ...formData });\n    updateData({ ...formData });\n  }\n\n  const onLayerTypeChange = (key: MapObjData['layer_type']) => {\n    if (!formData) return;\n\n    setLayerType(key);\n    formData.layer_type = key;\n    clearKioskConfig();\n\n    if (key === 'retail_name') {\n    } else if (key === 'retail_logo') {\n    } else if (key === 'retail_text') {\n    } else if (key === 'kiosk') {\n      formData.value = '';\n      if (meshObject) {\n        makeImage(formData, meshObject[1]);\n      }\n    } else if (key === 'amenity') {\n      formData.kiosk_id = null;\n    } else if (key === 'custom_text') {\n    } else if (key === 'custom_image') {\n    }\n\n    onValueChange('size', formData.size.toString());\n\n    setFormData({ ...formData });\n    updateData({ ...formData });\n  }\n\n  const handleDelete = () => {\n    if (!formData) return;\n    Object.assign(formData, mapObjDefaultVars, { id: formData.id, map_obj_name: formData.map_obj_name });\n    // setOldMapObjName('');\n    onObjTypeChange('retailer');\n    onLayerTypeChange('retail_name');\n    updateTooltip('', formData.map_obj_name);\n\n    if (onResetData) {\n      onResetData({ ...formData })\n    }\n  };\n\n  const onRetailerChange = (selectedOption: SingleValue<MapRetailerOption>, actionMeta: ActionMeta<MapRetailerOption>) => {\n    if (selectedOption && formData) {\n      formData.retailer_id = selectedOption.value;\n      onLayerTypeChange(formData.layer_type);\n      setFormData({ ...formData });\n      updateData({ ...formData }, true);\n    }\n  };\n\n  const onKioskChange = (selectedOption: SingleValue<MapKioskOption>, actionMeta: ActionMeta<MapKioskOption>) => {\n    if (selectedOption && formData) {\n      formData.kiosk_id = selectedOption.value;\n      setFormData({ ...formData });\n      updateData({ ...formData }, true);\n      meshObject.forEach((obj, index) => {\n        if (index === 0) return;\n        updateMapCenterMarkerFor(obj, formData, floorIndex);\n        triggerSceneUpdate();\n      })\n    }\n  };\n\n  const onAmenityChange = (selectedOption: SingleValue<MapAmenityOption>, actionMeta: ActionMeta<MapAmenityOption>) => {\n    if (selectedOption && formData) {\n      formData.value = selectedOption.value as MapAmenityID;\n      setFormData({ ...formData });\n      updateData({ ...formData }, true);\n      meshObject.forEach((obj, index) => {\n        if (index === 0) return;\n        makeImage(formData, obj);\n      })\n    }\n  };\n\n  const onValueChange = useCallback((name: string, value: string) => {\n    if (!formData) return;\n\n    meshObject.forEach((obj, index) => {\n      if (!obj.userData) {\n        obj.userData = {};\n      }\n      if (!obj.userData.position) {\n        obj.userData.position = new Vector3();\n        if (obj.position) {\n          obj.userData.position.copy(obj.position);\n        }\n      }\n      const position = new Vector3();\n      if (obj.userData.position) {\n        position.copy(obj.userData.position);\n      }\n\n      switch (name) {\n        case 'custom_text':\n          if (index === 0) break;\n          formData.custom_text = value;\n          if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n            makeTextGeometry(obj, formData.custom_text, formData.size);\n          }\n          break;\n\n        case 'custom_image':\n          if (index === 0) break;\n          formData.custom_image = value;\n          makeImage(formData, obj);\n          updateData({ ...formData }, true)\n          break;\n\n        case 'size':\n          if (index === 0) break;\n          formData.size = parseInt(value);\n          if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n            let text: MapObjData['custom_text'] = '';\n            if (formData.layer_type === 'retail_name' && allIndexedRetailers[formData.retailer_id || 0]?.retail_name) {\n              text = allIndexedRetailers[formData.retailer_id || 0]?.retail_name;\n            } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n              text = formData.custom_text;\n            }\n            makeTextGeometry(obj, text || '', formData.size);\n          } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n            makeImage(formData, obj);\n            setTimeout(() => {\n              updateData({ ...formData }, true);\n            }, 300);\n          } else if (formData.layer_type === 'amenity') {\n            makeImage(formData, obj);\n            startTransition(() => {\n              setFormData({ ...formData });\n              updateData({ ...formData }, true);\n            })\n          } else if (formData.kiosk_id && formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n\n        case 'lock_size':\n          formData.lock_size = false;\n          formData.value = value as MapAmenityID;\n          if (formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n\n        case 'rotate':\n          if (index === 0) break;\n          formData.rotate = parseInt(value);\n          obj.rotation.set(\n            obj.rotation.x,\n            obj.rotation.y,\n            formData.rotate * Math.PI / 180\n          );\n          break;\n\n        case 'offset_x':\n          if (index === 0) break;\n          position.x += parseFloat(value);\n          obj.position.setX(position.x);\n          formData.offset_x = parseInt(value);\n          break;\n\n        case 'offset_y':\n          if (index === 0) break;\n          position.y += parseFloat(value);\n          obj.position.setY(position.y);\n          formData.offset_y = parseInt(value);\n          break;\n\n        case 'text_color':\n          if (index === 0) break;\n          formData.text_color = value;\n          if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n            const material_settings = {\n              color: formData.text_color,\n              transparent: true,\n              side: DoubleSide,\n              depthWrite: false,\n              depthTest: false,\n            };\n            let text_material = new MeshPhongMaterial(material_settings);\n            obj.material = text_material;\n          } else if (\n            formData.layer_type === 'retail_logo' ||\n            formData.layer_type === 'custom_image' ||\n            (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n            (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== null)) {\n            makeImage(formData, obj);\n            if (formData.layer_type === 'kiosk') {\n              updateMapCenterMarkerFor(obj, formData, floorIndex);\n            }\n            startTransition(() => {\n              updateData({\n                ...formData,\n                text_color: formData.text_color && formData.text_color.replace('#', ''),\n              }, true);\n            })\n          }\n          break;\n\n        case 'bg_color':\n          if (index !== 0) break;\n          formData.bg_color = value;\n          let meshType: MeshType = 'store';\n          if (obj.object_id?.startsWith('big-store')) {\n            meshType = 'big-store';\n          }\n          obj.material = getMaterial(\n            meshType,\n            formData.map_obj_name,\n            formData.bg_color,\n            formData.transparent\n          );\n          break;\n\n        default:\n          break;\n      }\n      startTransition(() => {\n        setFormData({ ...formData })\n        updateData({ ...formData }, true);\n      });\n\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [floorIndex, formData, getMaterial, makeImage, makeTextGeometry, mapApiResponse.retailers, meshObject, triggerSceneUpdate, updateData])\n\n  const onFieldChange = useCallback((e: any) => {\n    const target = e.target as HTMLInputElement;\n    onValueChange(target.name, target.value);\n  }, [onValueChange])\n\n  useEffect(() => {\n    if (selectedId) {\n      // todo detect when more than 1, do something\n      // const searchRes = mapApiResponse.map_objs.filter((value: any) => value.map_obj_name === selectedId);\n      const index = mapApiResponse.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n      if (index !== -1) {\n        const mapObjData = { ...mapApiResponse.map_objs[index] };\n        setFormData(mapObjData);\n        setObjType(mapObjData.obj_type);\n        setLayerType(mapObjData.layer_type);\n      } else {\n        setFormData({\n          ...mapObjDefaultVars,\n          map_obj_name: selectedId,\n          id: (new Date()).getTime()\n        });\n      }\n    }\n  }, [mapApiResponse, selectedId]);\n\n  useEffect(() => {\n    if (!formData) return;\n    setOldMapObjName(formData.map_obj_name);\n\n    // if (formData.obj_type) {\n    //   setOldMapObjName(formData.map_obj_name);\n    //   onObjTypeChange(formData.obj_type);\n    // }\n    // if (formData.layer_type) {\n    //   onLayerTypeChange(formData.layer_type);\n    //   setOldMapObjName(formData.map_obj_name);\n    // }\n    // don't rerun when onTabChange is changed1\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formData])\n\n  const handleDecrement = (key: IncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      onValueChange(key, (formData[key] - 1).toString());\n    }\n  };\n\n  const handleIncrement = (key: IncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      onValueChange(key, (formData[key] + 1).toString());\n    }\n  };\n\n  const handleRotationInSteps = (key: IncDecKey, angle: number = 45) => {\n    if (!formData) return;\n\n    if (Object.hasOwn(formData, key)) {\n      let value = formData[key];\n      // Adjust the current value to the nearest lower multiple of the angle\n      const remainder = value % angle;\n      if (remainder !== 0) {\n        value -= remainder;\n      }\n\n      // Increment by the angle\n      value += angle;\n\n      if (value > 360) {\n        value = angle;\n      } else if (value === 360) {\n        value = 0;\n      }\n\n      onValueChange(key, value.toString());\n    }\n  };\n\n  const startDecrementing = (key: IncDecKey) => {\n    const id = window.setInterval(() => {\n      handleDecrement(key);\n    }, 200);\n    intervalRefs.current[key] = id;\n  };\n\n  const startIncrementing = (key: IncDecKey) => {\n    const id = window.setInterval(() => {\n      handleIncrement(key);\n    }, 200);\n    intervalRefs.current[key] = id;\n  }\n\n  const stopInterval = (key: IncDecKey) => {\n    if (intervalRefs.current[key]) {\n      clearInterval(intervalRefs.current[key] as number);\n      intervalRefs.current[key] = null;\n    }\n  };\n\n  const retailerOptions: MapRetailerOption[] = mapApiResponse?.retailers.map((retailer) => {\n    return {\n      value: retailer.id,\n      label: retailer.retail_name\n    }\n  }) || [];\n\n  const kioskOptions: MapKioskOption[] = mapApiResponse?.kiosks.map((kiosk) => {\n    return {\n      value: kiosk.id,\n      label: kiosk.name,\n      isDisabled: selectedKiosksId.includes(kiosk.id),\n    }\n  }) || [];\n\n  const amenityOptions: MapAmenityOption[] = AllAmenities.map((amenity) => {\n    return {\n      value: amenity.type as string,\n      label: amenity.name,\n    }\n  }) || [];\n\n  if (!formData) return null;\n\n  return (\n    <div className={`sidebarComp ${styles.sidebarComp}`}>\n\n      <div className={styles.sidebarFields}>\n        <div className={styles.tabOptions}>\n          <div className={styles.mainBtnsGroup}>\n            <div className={styles.btnsGroup}>\n              <button onClick={() => onObjTypeChange('retailer')} className={objType === 'retailer' ? styles.active : ''}>Retailer</button>\n              <button onClick={() => onObjTypeChange('special')} className={objType === 'special' ? styles.active : ''}>Special</button>\n              <button onClick={() => onObjTypeChange('custom')} className={objType === 'custom' ? styles.active : ''}>Custom</button>\n            </div>\n            <button className={styles.deleteBtn} onClick={handleDelete}>Delete</button>\n          </div>\n\n          {objType === 'retailer' && (\n            <>\n              <Select\n                className={styles.selectField}\n                classNamePrefix=\"custom\"\n                menuPortalTarget={document.body}\n                aria-label=\"Choose a Retailer\"\n                options={retailerOptions}\n                isLoading={false}\n                noOptionsMessage={() => 'Retailers not found'}\n                placeholder=\"Choose a Retailer...\"\n                value={retailerOptions.find((option) => option.value === formData.retailer_id) || null}\n                onChange={onRetailerChange}\n              />\n\n              {formData.retailer_id as number > 0 && (\n                <div className={styles.btnsGroup}>\n                  <button onClick={() => onLayerTypeChange('retail_name')} className={layerType === 'retail_name' ? styles.active : ''}>Retail Name</button>\n                  <button onClick={() => onLayerTypeChange('retail_logo')} className={layerType === 'retail_logo' ? styles.active : ''}>Retail Logo</button>\n                  <button onClick={() => onLayerTypeChange('retail_text')} className={layerType === 'retail_text' ? styles.active : ''}>Custom Text</button>\n                </div>\n              )}\n            </>\n          )}\n\n          {objType === 'special' && (\n            <>\n              <div className={styles.btnsGroup}>\n                <button onClick={() => onLayerTypeChange('kiosk')} className={layerType === 'kiosk' ? styles.active : ''}>Kiosk</button>\n                <button onClick={() => onLayerTypeChange('amenity')} className={layerType === 'amenity' ? styles.active : ''}>Amenity</button>\n              </div>\n\n              {layerType === 'kiosk' && (\n                <Select\n                  className={styles.selectField}\n                  classNamePrefix=\"custom\"\n                  aria-label=\"Choose a Kiosk\"\n                  options={kioskOptions}\n                  noOptionsMessage={() => 'Kiosks not found'}\n                  placeholder=\"Choose a Kiosk...\"\n                  value={kioskOptions.find((item) => item.value === formData.kiosk_id) || null}\n                  onChange={onKioskChange}\n                />\n              )}\n\n              {layerType === 'amenity' && (\n                <Select\n                  className={styles.selectField}\n                  classNamePrefix=\"custom\"\n                  aria-label=\"Choose Amenity\"\n                  options={amenityOptions}\n                  noOptionsMessage={() => 'Amenity not found'}\n                  placeholder=\"Choose Amenity...\"\n                  value={amenityOptions.find((item) => item.value === formData.value) || null}\n                  onChange={onAmenityChange}\n                />\n              )}\n            </>\n          )}\n\n          {objType === 'custom' && (\n            <>\n              <div className={styles.btnsGroup}>\n                <button onClick={() => onLayerTypeChange('custom_text')} className={layerType === 'custom_text' ? styles.active : ''}>Text</button>\n                <button onClick={() => onLayerTypeChange('custom_image')} className={layerType === 'custom_image' ? styles.active : ''}>Image</button>\n              </div>\n\n              {layerType === 'custom_image' && (\n                <div className={styles.sidebarField}>\n                  <label className={styles.label}>Image URL</label>\n                  <div className={styles.fieldWrapper}>\n                    <input\n                      name=\"custom_image\"\n                      type=\"text\"\n                      className={styles.textField}\n                      value={formData.custom_image as string}\n                      onChange={onFieldChange}\n                    />\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n\n          {((objType === 'retailer' && layerType === 'retail_text') || (objType === 'custom' && layerType === 'custom_text')) && (\n            <div className={styles.sidebarField}>\n              <label className={styles.label}>Text</label>\n              <div className={styles.fieldWrapper}>\n                <textarea\n                  name=\"custom_text\"\n                  rows={3}\n                  className={styles.textareaField}\n                  value={formData.custom_text as string}\n                  onChange={onFieldChange}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>Size</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.numberFieldGroup}>\n              <button\n                className={`${styles.button} ${styles.decrement}`}\n                onClick={() => handleDecrement('size')}\n                onMouseDown={() => startDecrementing('size')}\n                onMouseUp={() => stopInterval('size')}\n                onMouseLeave={() => stopInterval('size')}\n              >-</button>\n\n              <input\n                type=\"number\"\n                value={formData.size}\n                onChange={(e) => onValueChange('size', e.target.value)}\n                className={styles.input}\n              />\n\n              <button\n                className={`${styles.button} ${styles.increment}`}\n                onClick={() => handleIncrement('size')}\n                onMouseDown={() => startIncrementing('size')}\n                onMouseUp={() => stopInterval('size')}\n                onMouseLeave={() => stopInterval('size')}\n              >+</button>\n            </div>\n\n            {/* <label className=\"checkbox-field\">\n              <input\n                id=\"lock_size\"\n                name=\"lock_size\"\n                type=\"checkbox\"\n                value={formData.value}\n                checked={formData.value ? true : false}\n                onChange={(e) => onValueChange('lock_size', e.target.value)}\n              ></input>\n              <span className=\"tickbox\"></span>\n              <span className=\"tick-label\">Lock</span>\n            </label> */}\n          </div>\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>Rotate</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.numberFieldGroup}>\n              <button\n                className={`${styles.button} ${styles.decrement}`}\n                onClick={() => handleDecrement('rotate')}\n                onMouseDown={() => startDecrementing('rotate')}\n                onMouseUp={() => stopInterval('rotate')}\n                onMouseLeave={() => stopInterval('rotate')}\n              >-</button>\n\n              <input\n                type=\"number\"\n                value={formData.rotate}\n                onChange={(e) => onValueChange('rotate', e.target.value)}\n                className={styles.input}\n              />\n\n              <button\n                className={`${styles.button} ${styles.increment}`}\n                onClick={() => handleIncrement('rotate')}\n                onMouseDown={() => startIncrementing('rotate')}\n                onMouseUp={() => stopInterval('rotate')}\n                onMouseLeave={() => stopInterval('rotate')}\n              >+</button>\n            </div>\n            <button\n              className={styles.rotateButton}\n              onClick={() => handleRotationInSteps('rotate')}\n            >\n              <ArrowClockwise size={24} />\n            </button>\n          </div>\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>Offset X</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.numberFieldGroup}>\n              <button\n                className={`${styles.button} ${styles.decrement}`}\n                onClick={() => handleDecrement('offset_x')}\n                onMouseDown={() => startDecrementing('offset_x')}\n                onMouseUp={() => stopInterval('offset_x')}\n                onMouseLeave={() => stopInterval('offset_x')}\n              >-</button>\n\n              <input\n                type=\"number\"\n                value={formData.offset_x}\n                onChange={(e) => onValueChange('offset_x', e.target.value)}\n                className={styles.input}\n              />\n\n              <button\n                className={`${styles.button} ${styles.increment}`}\n                onClick={() => handleIncrement('offset_x')}\n                onMouseDown={() => startIncrementing('offset_x')}\n                onMouseUp={() => stopInterval('offset_x')}\n                onMouseLeave={() => stopInterval('offset_x')}\n              >+</button>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>Offset Y</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.numberFieldGroup}>\n              <button\n                className={`${styles.button} ${styles.decrement}`}\n                onClick={() => handleDecrement('offset_y')}\n                onMouseDown={() => startDecrementing('offset_y')}\n                onMouseUp={() => stopInterval('offset_y')}\n                onMouseLeave={() => stopInterval('offset_y')}\n              >-</button>\n\n              <input\n                type=\"number\"\n                value={formData.offset_y}\n                onChange={(e) => onValueChange('offset_y', e.target.value)}\n                className={styles.input}\n              />\n\n              <button\n                className={`${styles.button} ${styles.increment}`}\n                onClick={() => handleIncrement('offset_y')}\n                onMouseDown={() => startIncrementing('offset_y')}\n                onMouseUp={() => stopInterval('offset_y')}\n                onMouseLeave={() => stopInterval('offset_y')}\n              >+</button>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>BG Color</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.colorFieldGroup}>\n              <input\n                type=\"color\"\n                name=\"bg_color\"\n                className={styles.colorField}\n                value={formData.bg_color as string}\n                onChange={onFieldChange}\n              />\n              <input\n                type=\"text\"\n                name=\"bg_color\"\n                className={styles.inputField}\n                value={formData.bg_color as string}\n                onChange={onFieldChange}\n              />\n            </div>\n            {/* <label className=\"checkbox-field\">\n              <input\n                id=\"transparent\"\n                name=\"transparent\"\n                type=\"checkbox\"\n                value={formData.transparent ? 1 : 0}\n                checked={formData.value ? true : false}\n                onChange={(e) => onValueChange('lock_size', e.target.value)}\n              ></input>\n              <span className=\"tickbox\"></span>\n              <span className=\"tick-label\">Transparent</span>\n            </label> */}\n          </div>\n        </div>\n\n        {['retail_name', 'custom_text', 'retail_text', 'kiosk', 'amenity'].includes(formData.layer_type) && (\n          <div className={styles.sidebarField}>\n            <label className={styles.label}>{['kiosk', 'amenity'].includes(formData.layer_type) ? 'Icon' : 'Text'} Color</label>\n            <div className={styles.fieldWrapper}>\n              <div className={styles.colorFieldGroup}>\n                <input\n                  name=\"text_color\"\n                  type=\"color\"\n                  className={styles.colorField}\n                  value={formData.text_color as string}\n                  onChange={onFieldChange}\n                />\n                <input\n                  type=\"text\"\n                  name=\"text_color\"\n                  className={styles.inputField}\n                  value={formData.text_color as string}\n                  onChange={onFieldChange}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PortalSidebarForm;\n\n\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState, useTransition } from \"react\";\nimport { Canvas, ThreeEvent } from \"@react-three/fiber\";\nimport useMeshFloors from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { Mesh, Object3D } from \"three\";\nimport { IExtMesh, MeshFloorsProps, IMeshValues, ZoomData, MapDeviceType } from \"src/interfaces\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../UIComponent\";\nimport styles from './SceneComponent.module.scss';\nimport RetailerInfoModal from \"./retailer-info/RetailerInfoModal\";\nimport { AllAmenities, MapAmenityID } from \"src/helpers/amenities.helper\";\nimport { cameraControlsDefaultVars, textLogoNamePrefix } from \"src/defaults\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { MapCameraControlsState, MapObjData } from \"src/interfaces/mapApiTypes\";\nimport PortalSidebarForm from \"./portal-sidebar-form/PortalSidebarForm\";\n\ninterface SceneComponentProps {\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObjData[]) => void;\n  onSubmit?: (data: MapObjData, refreshData?: () => void) => void;\n  onResetData?: (data: MapObjData) => void;\n  onChangeData?: (data: MapObjData) => void;\n  onNewData?: (data: MapObjData) => void;\n  onChangeCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: MapAmenityID[]) => void;\n  handleClickOnRetailer?: (slug: string) => void;\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObjData,\n}\n\nconst SceneComponent = forwardRef((params: SceneComponentProps, ref) => {\n  const [triggerClick, setTriggerClick] = useState<boolean>(false);\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlsPosition, setCameraControlsPosition] = useState<MapCameraControlsState>(cameraControlsDefaultVars);\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const [deviceType, setDeviceType] = useState<MapDeviceType>('desktop');\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, onChangeCameraControlPosition, handleClickOnRetailer } = params;\n  const [IsCameraInit, setIsCameraInit] = useState(false);\n  const [refreshState, setRefreshState] = useState<boolean>(false);\n  const [, startTransition] = useTransition();\n\n  const [selectedRetailerSlug, setSelectedRetailerSlug] = useState<string>('');\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<ZoomData | null>(null);\n\n  const [, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n\n  const floorsMapRef = useRef<{\n    resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null,\n    createRouteToStore: (retailerSlug: string) => void | null,\n    getInitialDistance: () => number,\n  }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const { setMapConfig, refetchMapData, mapApiResponse, mapConfig, floorsData, setMeshObject, indexedKiosks, initialFloorsDataIsLoaded } = useMapBoxContext();\n\n  const handleFloorChange = useCallback((floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }, [setSelectedFloorIndex])\n\n  const meshFloors = useMeshFloors();\n  const { meshParams, storeLogos, textParams, allSvgObjectIds } = meshFloors;\n\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const [, setSceneKey] = useState(0);\n\n  const updateKey = useCallback(() => {\n    setSceneKey((value) => value + 1)\n  }, [])\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n\n  useImperativeHandle(ref, () => ({\n    refetchMapData,\n    createRouteToAmenity: handleAmenityClick,\n    createRouteToStore: floorsMapRef.current?.createRouteToStore,\n    getInitialDistance: floorsMapRef.current?.getInitialDistance,\n    resetMap: resetHandle,\n    setMapConfig: setMapConfig,\n    refreshState: setRefreshState\n  }))\n\n  const setDeviceTypeCallback = useCallback((newCanvasWidth: number) => {\n    if (mapConfig.ROLE === 'DISPLAY_APP') {\n      setDeviceType('display_app');\n    } else if (mapConfig.ROLE === \"PORTAL_RESPONSIVE\") {\n      setDeviceType(mapConfig.DEVICE);\n    } else {\n      if (newCanvasWidth > 1024) {\n        setDeviceType('desktop');\n      } else if (newCanvasWidth > 767) {\n        setDeviceType('tablet');\n      } else {\n        setDeviceType('mobile');\n      }\n    }\n  }, [mapConfig])\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      const newCanvasWidth = statsParentRef.current.offsetWidth\n      setCanvasWidth(newCanvasWidth);\n      setDeviceTypeCallback(newCanvasWidth);\n      const resizeWidth = () => {\n        if (statsParentRef.current) {\n          const newCanvasWidth = statsParentRef.current.offsetWidth\n          setCanvasWidth(newCanvasWidth);\n          setDeviceTypeCallback(newCanvasWidth);\n        }\n      }\n      window.addEventListener('resize', resizeWidth);\n      resizeWidth();\n      return () => {\n        window.removeEventListener('resize', resizeWidth);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statsParentRef.current, refreshState, setDeviceTypeCallback]);\n\n  useEffect(() => {\n    if (mapConfig.ROLE === \"DISPLAY_APP\") {\n      setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.display_app);\n    } else if (mapConfig.ROLE === \"WP_SITE\") {\n      if (deviceType === 'desktop') {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.desktop);\n      } else if (deviceType === 'tablet') {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.tablet);\n      } else {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.mobile);\n      }\n    } else if (mapConfig.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (mapConfig.DEVICE === \"desktop\") {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.desktop);\n      } else if (mapConfig.DEVICE === \"display_app\") {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.display_app);\n      } else if (mapConfig.DEVICE === \"mobile\") {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.mobile);\n      } else if (mapConfig.DEVICE === \"tablet\") {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.tablet);\n      }\n    }\n  }, [deviceType, mapConfig])\n\n  const handleCameraAndControlsChange = useCallback((cameraControlsState: MapCameraControlsState) => {\n    onChangeCameraControlPosition && onChangeCameraControlPosition(cameraControlsState);\n    //this state is unused, it's an expensive update, commenting it out\n    // setCameraControlsPosition(cameraControlsState);\n  }, [onChangeCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = mapConfig.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapData = useCallback((index: number, newData: MapObjData) => {\n    setFormMapObjData((prev) => {\n      const itemIndex = prev.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n      if (itemIndex !== -1) {\n        prev[itemIndex] = { index, data: { ...newData } };\n      } else {\n        prev.push({ index, data: { ...newData } })\n      }\n\n      return [...prev];\n    });\n\n  }, [])\n\n  const handleOnSubmit = useCallback((data: MapObjData) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refetchMapData);\n    }\n  }, [params, refetchMapData])\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = floorsData.length ? floorsData.length - 1 : 0;\n    if (indexedKiosks[mapConfig.KIOSK_ID]) {\n      const kioskMapObjName = indexedKiosks[mapConfig.KIOSK_ID].map_obj_name;\n      const currKioskMeshParams = meshParams?.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (mapConfig.ROLE === 'DEMO') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [mapConfig, meshParams, floorsData, indexedKiosks]);\n\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsData.length ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = useCallback((fullReset: boolean = false) => {\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n    setSelectedRetailerSlug('');\n    handleFloorChange(currKioskFloorIndex);\n\n    if (floorsMapRef.current) {\n      if (mapConfig.ROLE === \"PORTAL_RESPONSIVE\") {\n        floorsMapRef?.current?.resetCamera(fullReset);\n      } else {\n        floorsMapRef?.current?.resetCamera(fullReset);\n      }\n    }\n  }, [currKioskFloorIndex, handleFloorChange, mapConfig.ROLE, setSelectedActiveObjectId])\n\n  useEffect(() => {\n    const kiosks: IMeshValues[] = [];\n    meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n\n    const mapObjectIdToLogo = new Map();\n\n    storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapApiResponse.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        if (logo.userData.kioskConfig !== null) {\n          logo.userData.kioskConfig = {\n            lockSize: mapObj?.lock_size,\n            blink: item.object_id === currKioskId,\n            size: mapObj ? mapObj.size : mapConfig.KIOSK_SIZE,\n            floorIndex: kiosk.floor_index,\n          }\n          // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n          logo.userData.distanceFactor = mapObj?.lock_size ? 1500 : undefined;\n          logo.visible = true;\n        }\n        currKioskLogo.push(logo);\n      }\n    });\n\n  }, [storeLogos, meshParams, currKioskObj, mapConfig, mapApiResponse.map_objs]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObjData[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData, onMapDataUpdate])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (mapConfig?.SELECTED_RETAILER_SLUG && IsCameraInit) {\n      setSelectedRetailerSlug(mapConfig.SELECTED_RETAILER_SLUG);\n    }\n  }, [mapConfig, IsCameraInit])\n\n  useEffect(() => {\n    if (mapConfig && selectedRetailerSlug !== '') {\n      const retailer = mapApiResponse.retailers.find(item => {\n        return item.slug === selectedRetailerSlug;\n      })\n      if (retailer) {\n        const mapObject = mapApiResponse.map_objs.find(item => item.retailer_id === retailer.id);\n        const meshParam = meshParams?.flat().find(item => item.object_id === mapObject?.map_obj_name);\n        if (meshParam) {\n          setSelectedFloorIndex(meshParam.floor_index);\n        }\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [mapConfig, setSelectedActiveObjectId, selectedRetailerSlug, meshParams, mapApiResponse.map_objs, mapApiResponse.retailers])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const singleTextParams = textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object).object_id}`\n    })\n\n    const logoParams = storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object).object_id}`\n    })\n\n    const result = [object];\n\n    if (singleTextParams) {\n      result.push(singleTextParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    setMeshObject([...result]);\n  }, [storeLogos, textParams, setMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshParams && meshParams.length && selectedActiveObjectId) {\n      const object = meshParams[currentFloorIndex]?.find((value) => value.object_id === selectedActiveObjectId)?.mesh;\n      if (object) {\n        handleMeshObjectContext(object);\n      }\n    }\n  }, [meshParams, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (mapConfig.ROLE !== 'PORTAL' && !mapConfig.KIOSK_ID) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [mapConfig.ROLE, mapConfig.KIOSK_ID, setSelectedActiveObjectId]);\n\n  const handleObjectClick = useCallback((object: IExtMesh, targetId: string, softClick?: boolean) => {\n\n    if (!softClick && mapConfig.ROLE === 'DISPLAY_APP' && handleClickOnRetailer && object.mesh_type?.startsWith(\"store\")) {\n\n      const mapObj = mapApiResponse.map_objs.find((item) => item.map_obj_name === object.object_id && item.obj_type === \"retailer\")\n      if (mapObj) {\n        const retailer = mapApiResponse.retailers.find((item) => item.id === mapObj.retailer_id)\n        if (retailer) {\n          handleClickOnRetailer(retailer.slug)\n        }\n      }\n\n      return false;\n    }\n\n    if (mapConfig.ROLE === 'DISPLAY_APP' && currKioskObj) {\n      handleFloorChange(currKioskFloorIndex);\n    }\n\n    startTransition(() => {\n      handleMeshObjectContext(object);\n      setSelectedActiveObjectId(targetId ?? '');\n      setTriggerClick(t => !t);\n      setSelectedRetailerSlug('');\n      setAmenityTargetType('');\n      setFromObjectId('');\n    })\n\n  }, [currKioskFloorIndex, currKioskObj, handleClickOnRetailer, handleFloorChange, handleMeshObjectContext, mapApiResponse.map_objs, mapApiResponse.retailers, mapConfig.ROLE, setSelectedActiveObjectId])\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    if (e.delta > 15) { // dragged 15px before release\n      return // likely a drag motion \n    }\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = mapApiResponse.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value as MapAmenityID);\n      if (mapConfig.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleObjectClick(e.object as IExtMesh, targetId ?? '');\n      if (mapConfig.ROLE !== 'PORTAL' && !mapConfig.KIOSK_ID && mapObj?.retailer_id) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [mapConfig, handleAmenityClick, setSelectedActiveObjectId, handleMeshObjectContext, handleObjectClick, mapApiResponse.map_objs]);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    if (e.object.userData.storeName === '') {\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const startMousePos = useRef<{ x: number | null, y: number | null, distance: number }>({ x: null, y: null, distance: -Infinity });\n\n  const onPointerMove = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    if (e.buttons > 0) {\n      if (startMousePos.current.x === null) {\n        startMousePos.current.x = e.clientX;\n      }\n      if (startMousePos.current.y === null) {\n        startMousePos.current.y = e.clientY;\n      }\n      if (startMousePos.current.x !== null && startMousePos.current.y !== null) {\n        let newDistance = Math.sqrt(Math.pow(startMousePos.current.x - e.clientX, 2) + Math.pow(startMousePos.current.y - e.clientY, 2));\n        if (newDistance > startMousePos.current.distance) {\n          startMousePos.current.distance = newDistance;\n        }\n      }\n    } else {\n      startMousePos.current.x = startMousePos.current.y = null;\n      startMousePos.current.distance = -Infinity;\n    }\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, [])\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n    whiteSpace: 'nowrap'\n  }\n\n  const handleRetailerInfoOnClick = useCallback((retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }, [setFromObjectId, setAmenityTargetType, setShowRetailerInfo])\n\n  if (!initialFloorsDataIsLoaded) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (floorsData.length <= 0) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!meshParams.length) {\n    if (mapConfig.ROLE === 'WP_SITE') {\n      return <div className=\"messageStyle\" style={messageStyle}>No Map for Center</div>\n    }\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div className=\"messageStyle\" style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && mapConfig.ROLE === 'DEMO') {\n    console.error('NO KIOSK OBJECT FOUND');\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: MeshFloorsProps = meshFloors as MeshFloorsProps;\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  return (\n    <>\n      {mapConfig.ROLE === 'PORTAL' &&\n        <div className={`mapBoxSidebar ${styles.mapBoxSidebar} ${selectedActiveObjectId ? styles.active : ''}`}>\n          <div className={`sidebarWrapper ${styles.sidebarWrapper}`}>\n            <div className={`sidebarBox ${styles.sidebarBox}`}>\n              {selectedActiveObjectId ? (\n                <PortalSidebarForm\n                  floorIndex={currentFloorIndex}\n                  meshFloors={meshFloors}\n                  setData={handleChangeMapData}\n                  selectedId={selectedActiveObjectId}\n                  onSubmit={handleOnSubmit}\n                  onResetData={params.onResetData}\n                  onChangeData={params.onChangeData}\n                  onNewData={params.onNewData}\n                  triggerSceneUpdate={updateKey}\n                />\n              ) : (\n                null\n                // <Alert variant=\"light\">Select a store to customize.</Alert>\n              )}\n            </div>\n          </div>\n        </div>\n      }\n\n      <div ref={statsParentRef} className={`mapBox ${styles.mapBox}`}>\n        <UIComponent\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          amenitiesList={AllAmenities}\n          handleAmenityClick={handleAmenityClick}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(mapConfig.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n\n          <SceneProperties background={mapConfig.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={mapConfig.CAMERA.far} fov={mapConfig.CAMERA.fov} />\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n\n          <FloorsMap\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            ref={floorsMapRef}\n            cameraControlsPosition={cameraControlsPosition}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n            isSelectedRetailerSlug={true}\n            setIsCameraInit={setIsCameraInit}\n            handleObjectClick={handleObjectClick}\n            triggerClick={triggerClick}\n            deviceType={deviceType}\n          />\n        </Canvas>\n\n        {mapConfig.ROLE !== 'DISPLAY_APP' && (mapConfig.ROLE !== 'WP_SITE' || !['mobile', 'tablet'].includes(deviceType)) && (\n          <div ref={labelRef}\n            className=\"store-name-placeholder\"\n            style={{\n              position: 'absolute',\n              padding: 10,\n              background: '#ffffff',\n              fontWeight: 600,\n              color: '#000000',\n              fontSize: 16,\n              display: currentHoveredObject ? 'block' : 'none',\n              top: 300,\n              left: 400,\n              opacity: .8,\n            }}\n          >{currentHoveredObject && currentHoveredObject.userData.storeName}</div>\n        )}\n      </div>\n\n      {mapConfig.ROLE !== 'PORTAL' &&\n        <RetailerInfoModal\n          amenity={selectedAmenityType}\n          show={showRetailerInfo}\n          onHide={() => setShowRetailerInfo(false)}\n          mapObjectName={selectedActiveObjectId}\n          onClickMapObj={handleRetailerInfoOnClick}\n          kioskId={mapConfig.KIOSK_ID}\n          allSvgObjectIds={allSvgObjectIds}\n        />\n      }\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { SVGResultPaths } from \"three-stdlib\";\nimport { Color, Vector2, Vector3 } from \"three\";\nimport { get_node_name } from \"./nodesUtils\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { MeshType } from \"./useMaterialAndGeometry\";\nimport { useCallback } from \"react\";\n\nexport const useMeshParams = () => {\n\n  const { mapConfig, floorsData, allNodesFloor, pathFinderGraph } = useMapBoxContext();\n\n  const getMeshParams = useCallback((path: SVGResultPaths, paths: SVGResultPaths[], floor_index: number, nodeCount: number) => {\n    const consolePrefix = 'MeshParams';\n\n    let mesh_type: MeshType = null;\n    var layer_color: Color | string = path.color.clone();\n    var extrude = 0;\n    var z_index = 0;\n    var mesh_visible = true;\n    var mesh_draw = true;\n    var mesh_transparent = false;\n    var line_thickness = mapConfig.WALL_THICKNESS;\n    var interactiveMesh = true;\n    var layer_name = path.userData?.node.id;\n\n    if (layer_name !== undefined) {\n      if (layer_name.startsWith('boundary')) {\n        mesh_type = 'boundary';\n        layer_color = mapConfig.BOUNDARY_COLOR;\n        line_thickness = mapConfig.BOUNDARY_THICKNESS;\n        if (mapConfig.STYLE === '3D') {\n          extrude = 9;\n        }\n      } else if (layer_name.startsWith('wall')) {\n        mesh_type = 'wall';\n        layer_color = mapConfig.WALL_COLOR;\n        if (mapConfig.STYLE === '3D') {\n          extrude = 8.5;\n        }\n      } else if (layer_name.startsWith('outer-wall')) {\n        mesh_type = 'outer-wall';\n        layer_color = mapConfig.WALL_COLOR;\n        if (mapConfig.STYLE === '3D') {\n          mesh_draw = false;\n        }\n      } else if (layer_name.startsWith('base')) {\n        mesh_type = 'base';\n        layer_color = mapConfig.BASE_COLOR;\n      } else if (layer_name.startsWith('store')) {\n        mesh_type = 'store';\n        layer_color = mapConfig.STORE_DEFAULT_COLOR;\n        if (mapConfig.STYLE === '3D') {\n          extrude = mapConfig.STORE_HEIGHT;\n        }\n        if (layer_name.startsWith('store-underlay')) {\n          interactiveMesh = false;\n        }\n        // } else if (layer_name.startsWith('big-store')) {\n        //   mesh_type = 'big-store';\n        //   layer_color = mapConfig.BIG_STORE_DEFAULT_COLOR;\n        //   if (mapConfig.STYLE === '3D') {\n        //     extrude = 16;\n        //   }\n      } else if (layer_name.startsWith('route-path')) {\n        mesh_type = 'route-path';\n        mesh_draw = false;\n        path.subPaths.forEach(subPath => {\n          if (subPath.curves.length === 0) {\n            console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n          }\n\n          subPath.curves.forEach(curve => {\n            //@ts-ignore\n            const v1: Vector2 = curve.v1;\n            //@ts-ignore\n            const v2: Vector2 = curve.v2;\n\n            const [node1_name, exists1] = get_node_name(v1, floor_index, floorsData, nodeCount);\n            if (!exists1) {\n              floorsData[floor_index].route_points?.push({\n                name: node1_name,\n                node: new Vector3(v1.x, v1.y, 1)\n              });\n              allNodesFloor[node1_name] = floor_index;\n            }\n            const [node2_name, exists2] = get_node_name(v2, floor_index, floorsData, nodeCount);\n            if (!exists2) {\n              floorsData[floor_index].route_points?.push({\n                name: node2_name,\n                node: new Vector3(v2.x, v2.y, 1)\n              });\n              allNodesFloor[node2_name] = floor_index;\n            }\n            pathFinderGraph.addNode(node1_name, { ...v1 });\n            pathFinderGraph.addNode(node2_name, { ...v2 });\n\n            // pathFinderGraph.addLink(node1_name, node2_name);\n            pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n            pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n          });\n        });\n      } else if (layer_name.startsWith('escalator-')) {\n        mesh_type = 'escalator';\n        mesh_visible = false;\n        mesh_transparent = true;\n      } else if (layer_name.startsWith('kiosk-')) {\n        mesh_type = 'kiosk';\n        mesh_transparent = true;\n      } else if (layer_name.startsWith('amenity-')) {\n        mesh_type = 'amenity';\n        mesh_transparent = true;\n        z_index = 1;\n      } else if (layer_name.startsWith('overlay')) {\n        mesh_type = 'overlay';\n      } else if (layer_name.startsWith('special-shape')) {\n        mesh_type = 'special-shape';\n      } else {\n        extrude = 1;\n      }\n    } else {\n      console.warn(consolePrefix + 'Layer name is undefined, path', path)\n    }\n\n    const returnData = {\n      mesh_type,\n      layer_color,\n      extrude,\n      z_index,\n      mesh_visible,\n      mesh_draw,\n      mesh_transparent,\n      line_thickness,\n      interactiveMesh,\n      path,\n      layer_name,\n    };\n\n    return returnData;\n  }, [allNodesFloor, floorsData, mapConfig.BASE_COLOR, mapConfig.BOUNDARY_COLOR, mapConfig.BOUNDARY_THICKNESS, mapConfig.STORE_DEFAULT_COLOR, mapConfig.STORE_HEIGHT, mapConfig.STYLE, mapConfig.WALL_COLOR, mapConfig.WALL_THICKNESS, pathFinderGraph])\n\n  return {\n    getMeshParams\n  }\n}","import React, { MutableRefObject, forwardRef, useImperativeHandle } from 'react';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport MapBoxContextProvider, { ProviderInitialData } from './contexts/MapBoxContextProvider';\nimport { AllAmenities, MapAmenityID } from './helpers/amenities.helper';\nimport SVGIcons from './helpers/svgIcons.helper';\nimport { MapAllDataResponse, MapCameraControlsState, MapObjData } from './interfaces/mapApiTypes';\nimport { MapConfigProps } from './interfaces';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/global.scss';\nimport styles from './MapBox.module.scss';\n\n\nexport type MapBoxRefProps = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: MapAmenityID) => void;\n  createRouteToStore: (retailerSlug: string) => void;\n  getInitialDistance: () => number;\n  resetMap: () => void;\n  refreshState: () => void;\n  setMapConfig: React.Dispatch<React.SetStateAction<MapConfigProps>>;\n  refetchMapData: () => void;\n}\n\nexport interface AppProps {\n  config: Partial<MapConfigProps>;\n  webApiURI: string;\n  onSubmit?: (data: MapObjData, refreshData?: () => void) => void;\n  mapBoxRefObj?: MutableRefObject<MapBoxRefProps | null> | undefined,\n  onResetData?: (data: MapObjData) => void;\n  onChangeData?: (data: MapObjData) => void;\n  onNewData?: (data: MapObjData) => void;\n  mapApiResponseRef?: MutableRefObject<MapAllDataResponse | null> | undefined;\n  onChangeCameraControlPosition?: (cameraControlPos: MapCameraControlsState) => void;\n  onExtractedAmenities?: (amenityIds: MapAmenityID[]) => void;\n  handleClickOnRetailer?: (slug: string) => void;\n}\n\nconst MapBox = forwardRef(({\n  config,\n  webApiURI,\n  onSubmit,\n  mapBoxRefObj,\n  onChangeCameraControlPosition,\n  onResetData,\n  onChangeData,\n  onNewData,\n  mapApiResponseRef,\n  onExtractedAmenities,\n  handleClickOnRetailer\n}: AppProps, ref) => {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = React.useState<string>('');\n\n  useImperativeHandle(ref, () => {\n    return {\n      getInitialDistance: mapBoxRefObj?.current?.getInitialDistance\n    }\n  });\n\n  const handleOnSubmit = (data: MapObjData, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  const providerInitialData: ProviderInitialData = {\n    webApiBaseUrl: webApiURI,\n    config\n  }\n\n  return (\n    <MapBoxContextProvider mapApiResponseRef={mapApiResponseRef} initialData={providerInitialData}>\n      <div className={`mapBoxComponent ${styles.mapBoxComponent} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n        <SceneComponent\n          ref={mapBoxRefObj}\n          setSelectedActiveObjectId={setSelectedActiveObjectId}\n          selectedActiveObjectId={selectedActiveObjectId}\n          onSubmit={handleOnSubmit}\n          onResetData={onResetData}\n          onChangeData={onChangeData}\n          onNewData={onNewData}\n          onChangeCameraControlPosition={onChangeCameraControlPosition}\n          onExtractedAmenities={onExtractedAmenities}\n          handleClickOnRetailer={handleClickOnRetailer}\n        />\n\n        <div className={styles.hide}>\n          <div id={`map-special-svg-kiosk`} dangerouslySetInnerHTML={{ __html: SVGIcons.Kiosk }}></div>\n          <div id={`map-special-svg-escalator`} dangerouslySetInnerHTML={{ __html: SVGIcons.Escalator }}></div>\n\n          {AllAmenities.map((amenity, index) => (\n            <div key={index} id={`map-special-svg-${amenity.type}`} dangerouslySetInnerHTML={{ __html: amenity.svgCode }}></div>\n          ))}\n        </div>\n      </div>\n    </MapBoxContextProvider>\n  );\n})\n\nexport default MapBox;\n"],"names":["hex_to_color","hex_code","withoutHex","replace","Color","length","parseInt","getSvgIconHTML","icon","svg","svg_block","document","getElementById","svg_element","querySelector","querySelectorAll","forEach","svgColoredPart","setAttribute","XMLSerializer","serializeToString","mapVector0","x","y","z","cameraControlsDefaultVars","camera","controls","defaultPortalMapSettings","MAP_STYLE","MAP_BACKGROUND_COLOR","ACCENT_COLOR","STORE_DEFAULT_COLOR","STORE_TEXT_COLOR","STORE_HEIGHT","WALL_COLOR","BOUNDARY_COLOR","BASE_COLOR","OVERLAY_COLOR","WALL_THICKNESS","BOUNDARY_THICKNESS","OVERLAY_OPACITY","KIOSK_SIZE","ZOOM_STEP","SELECTED_ZOOM_LIMIT","CAMERA_MAX_DISTANCE","CAMERA_MIN_DISTANCE","mapConfigDefaultVars","ROLE","DEVICE","KIOSK_ID","CENTER_ID","STATS","STYLE","DEBUG","CAMERA_CONTROLS_STATES","display_app","desktop","tablet","mobile","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","fov","far","minDistance","maxDistance","animSpeed","mapObjDefaultVars","id","retailer_id","kiosk_id","map_obj_name","obj_type","layer_type","value","custom_text","custom_image","bg_color","transparent","text_color","size","rotate","offset_x","offset_y","lock_size","textLogoNamePrefix","SVGIcons","AllAmenities","name","type","svgCode","MapBoxContext","createContext","undefined","MapBoxContextProvider","children","initialData","mapApiResponseRef","apiBaseUrl","webApiBaseUrl","loading","setLoading","useState","initialFloorsDataIsLoaded","setInitialFloorsDataIsLoaded","mapConfig","setMapConfig","config","mapApiResponse","setMapApiResponse","floors","kiosks","map_objs","retailers","mapSettings","current","appData","setAppData","AMENITIES","FLOORS","KIOSKS","RETAILERS","meshByObjectId","setMeshByObjectId","Map","allMapObjects","setAllMapObjects","allIndexedMapObjects","setAllIndexedMapObjects","allIndexedRetailers","setAllIndexedRetailers","indexedKiosks","setIndexedKiosks","floorsData","setFloorsData","allNodesFloor","setAllNodesFloor","pathFinderGraph","setPathFinderGraph","createGraph","ngraphPath","setNgraphPath","path","meshObject","setMeshObject","cameraLength","setCameraLength","apiServices","useMemo","createApiServices","baseApiUrl","center_id","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","response","use","error","console","mapApiService","defaults","getMapData","Promise","resolve","reject","then","mapDataItems","data","items","item","push","catch","err","getMapFloors","title","svgUrl","getMapKiosks","getMapSettings","settings","dbSettings","parseFloat","settingsToReturn","apiResponse","responseConfig","getMapResponsiveSettings","createMapApiService","retailersService","getAllRetailers","fetchData","currentPage","count","retail_name","slug","retailer_description","description","location","retailer_phone","logo","media","url","getRetailer","resp","opening_hours","createRetailersService","useEffect","refetchMapData","useCallback","all","mapData","mapFloors","mapKiosks","responsiveSettings","mapObjNames","map","map_obj","filter","index","indexOf","reduce","acc","retailer","kiosk","mapObj","find","floor","objsGroup","Group","scale","lookAt","interactiveObjs","escalatorsObjs","escalatorsNodes","escalatorMeshes","route_points","route_tube","route_texture","routeMeshes","route_active","_jsx","jsx","Provider","useMapBoxContext","context","useContext","Error","renderOrders","escalator","underlay","overlay","base","store","wall","boundary","amenity","useMaterialAndGeometry","getRenderOrder","mesh_type","getMaterial","layer_name","layer_color","mesh_transparent","material_settings","color","side","DoubleSide","depthWrite","depthTest","opacity","includes","material","MeshLambertMaterial","colorDefault","active","getGeometry","extrude","line_thickness","consolePrefix","extrude_meshes","shapes","toShapes","geometry","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","subPaths","subPath","curves","curve","shape_extend","shape1","thickness","wallShape","Shape","point1","Vector3","v1","point2","v2","dir","clone","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","distanceTo","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","warn","mergeGeometries","ShapeGeometry","attributes","position","userData","node","e","message","getMaterialAndGeometry","mesh_visible","z_index","floor_index","mesh","Mesh","object_id","visible","storeName","renderOrder","escalator_id","route_node_id","useRouteHelper","delete_route_path","dispose","remove","get_route_nodes","from_node_name","to_node_name","aStarPathFinder","routeNodes","get_route_texture","ctx","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","create_route_path","style","route_path","CurvePath","i","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","setDrawRange","create_route_paths","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","routeCallback","routePaths","from_obj","getObjectByProperty","to_obj","from_route_floor_index","to_route_floor_index","aStar","fromNode","toNode","link","weight","debug","routeNodesEsclators","floor_routes","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","escalator_clone","floor_route","routePath","create_route","get_nodes_distance","getLink","linkFloorEscalators","nodeIdFrom","nodeIdTo","addLink","make_amenity_route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","assign_route_nodes_to_stores","find_store_node_raycaster","result","currentFloor","point","origin_point","target_direction","set","storeIntersects","intersectObjects","object","escalatorIntersects","escalatorNodes","get_node_name","vertex","node_count","exists","node_name","next_node_name","useDrawLogoHelper","addTextOrLogoOnStore","myFont","add_store_name_logo","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","rotateZ","Math","PI","getImage","img","Image","crossOrigin","src","svg_image_name","svg_color","svgData","window","btoa","unescape","encodeURIComponent","startsWith","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","getImageLogo","new_object_id","mesh_center_point","handleAsync","logoMesh","storeLogo","get_store_name_logo_geometry","boundingBox","computeBoundingBox","getCenter","getSize","text","text_material","text_geometry","TextGeometry","font","curveSegments","center","textMesh","debug_name","drawTextLogoStoreOnMap","allNonIndexedMapObjects","textLogoLayerAddedIndex","getMeshGroupBoundingBox","Array","isArray","box","obj","union","Box3","SceneProperties","params","useThree","background","CameraProperties","props","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","animateTexture","offsetVector","removeFromParent","useFrame","MapCenterMarker","lockSize","blink","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","svgOrigin","svgBlob","Blob","URL","createObjectURL","svgTexture","Texture","needsUpdate","_jsxs","Html","className","MapObject","currentFloorIndex","triggerUpdate","kioskConfig","floorIndex","htmlContent","pointerEvents","distanceFactor","uuid","_Fragment","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","meshParams","textParams","storeLogos","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","jsxs","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","React","Fragment","boundingSphere","display","stopPropagation","dangerouslySetInnerHTML","__html","get_camera_focus_object","objs","aspectRatio","target","objsBoundingBox","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","isSelectedRetailerSlug","setIsCameraInit","handleObjectClick","triggerClick","cameraControlsPosition","deviceType","cameraLimits","setCameraLimits","min","initialDistance","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","isUseDefaultsLimits","resetCamera","fullReset","selectedFloorMeshParams","meshes","focus","aspect","isZeroCCS","cameraV3","cameraDistance","setLength","fromPosition","fromTarget","animationStartTime","duration","cl","focusDistance","Number","route","clearEscalators","flat","targetMesh","currentActiveObject","getInitialDistance","onCameraMove","vector","animationTime","animationProgress","lerpVectors","createRouteToStore","retailerSlug","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","UIComponent","selectedFloorIndex","handleFloorChange","amenitiesList","zoomIn","zoomOut","reset","handleAmenityClick","onExtractedAmenities","extractValues","styles","map_controls","preventDefault","Function","amenities","content","RetailerInfoModal","show","onHide","mapObjectName","onClickMapObj","kioskId","allSvgObjectIds","retailerInfo","setRetailerInfo","availableRetailersOnMap","setAvailableRetailersOnMap","selectedRetailerId","setSelectedRetailerId","retailerIds","Set","values","has","filteredMapRetailers","retailerId","Boolean","sort","a","localeCompare","Modal","dialogClassName","retailerInfoModal","centered","retailerInfoCloseBtn","XCircle","closeBtn","Body","retailerLogo","alt","retailerInfoContent","Form","getDirectionsFrom","FormGroup","Select","disabled","PortalSidebarForm","setData","selectedId","onResetData","onChangeData","onNewData","triggerSceneUpdate","textFont","useFont","textFontInterface","objType","setObjType","layerType","setLayerType","formData","setFormData","oldMapObjName","setOldMapObjName","startTransition","useTransition","intervalRefs","selectedKiosksId","setSelectedKiosksId","recheckSelectedKiosksId","mapObjs","ids","prev","cur","updateMapCenterMarkerFor","makeImage","HTMLImageElement","updateTooltip","makeTextGeometry","updateData","isUserAction","findIndex","clearKioskConfig","onObjTypeChange","onLayerTypeChange","onValueChange","toString","setTimeout","setX","setY","MeshPhongMaterial","meshType","onFieldChange","mapObjData","Date","getTime","handleDecrement","hasOwn","handleIncrement","startDecrementing","setInterval","startIncrementing","stopInterval","clearInterval","retailerOptions","label","kioskOptions","isDisabled","amenityOptions","handleDelete","assign","classNamePrefix","menuPortalTarget","body","options","isLoading","noOptionsMessage","placeholder","option","onRetailerChange","selectedOption","actionMeta","onKioskChange","onAmenityChange","rows","onMouseDown","onMouseUp","onMouseLeave","handleRotationInSteps","remainder","ArrowClockwise","SceneComponent","setTriggerClick","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","setCameraControlsPosition","canvasWidth","setCanvasWidth","setDeviceType","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","onChangeCameraControlPosition","handleClickOnRetailer","IsCameraInit","refreshState","setRefreshState","selectedRetailerSlug","setSelectedRetailerSlug","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","floorsMapRef","useMeshFloors","setMeshParams","setTextParams","setStoreLogos","setEscalatorNodes","loadedFloors","useLoader","SVGLoader","GeometriesAndMaterials","graph","svgFloors","getMeshParams","useMeshParams","paths","nodeCount","mesh_draw","interactiveMesh","node1_name","exists1","node2_name","exists2","addNode","returnData","svgFloor","findStoreNodeRaycaster","Raycaster","routeNodeIds","get","floorGeometries","j","useLoadFloors","useDrawLogo","fontData","handleAsyncStoreLogos","meshLogo","prevLogos","clearScene","TextsAndLogos","labelRef","currentHoveredObject","setCurrentHoveredObject","setSceneKey","updateKey","showRetailerInfo","setShowRetailerInfo","createRouteToAmenity","resetMap","resetHandle","setDeviceTypeCallback","newCanvasWidth","offsetWidth","resizeWidth","addEventListener","removeEventListener","cameraControlsState","activeFromObjectId","handleChangeMapData","newData","itemIndex","handleOnSubmit","onSubmit","cursor","kioskError","kioskMapObjName","currKioskMeshParams","mapObjectIdToLogo","currKioskId","SELECTED_RETAILER_SLUG","meshParam","handleMeshObjectContext","singleTextParams","logoParams","targetId","softClick","t","delta","startMousePos","Infinity","buttons","clientX","clientY","newDistance","sqrt","top","offsetY","left","offsetX","messageStyle","transform","whiteSpace","handleRetailerInfoOnClick","amenityType","meshFloorsChecked","Canvas","Stats","parent","intensity","padding","fontWeight","fontSize","MapBox","_ref","webApiURI","mapBoxRefObj","refreshData"],"mappings":"47vXAEgB,SAAAA,EAAaC,GAC3B,MAAMC,EAAaD,EAASE,QAAQ,IAAK,IACzC,OAAO,IAAIC,EAAKA,MAAuB,IAAtBF,EAAWG,OAAeC,SAAS,KAAOJ,EAAY,IAAMA,EAC/E,CAEO,MAAMK,EAAkBC,IAC7B,IAAIC,EACJ,MAAMC,EAAYC,SAASC,eAAe,mBAAmBJ,KAC7D,GAAIE,EAAW,CACb,MAAMG,EAAcH,EAAUI,cAAc,OACxCD,IACsBA,EAAYE,iBAAiB,UACrCC,QAASC,IACvBA,EAAeC,aAAa,OAAQ,UACtC,GACAT,GAAO,IAAIU,eAAiBC,kBAAkBP,GAEjD,CACD,OAAOJ,GCfHY,EAA6B,CAAEC,EAAG,EAAGC,EAAG,EAAGC,EAAG,GAEvCC,EAAoD,CAC/DC,OAAQL,EACRM,SAAUN,GAGCO,EAAmD,CAC9DC,UAAW,KACXC,qBAAsB,UACtBC,aAAc,UACdC,oBAAqB,UACrBC,iBAAkB,UAClBC,aAAc,GACdC,WAAY,UACZC,eAAgB,UAChBC,WAAY,UACZC,cAAe,UACfC,eAAgB,GAChBC,mBAAoB,GACpBC,gBAAiB,GACjBC,WAAY,GACZC,UAAW,IACXC,oBAAqB,KACrBC,oBAAqB,IACrBC,oBAAqB,KAGVC,EAAuC,CAClDjB,qBAAsB9B,EAAa4B,EAAyBE,sBAC5DkB,KAAM,OACNC,OAAQ,cACRC,SAAU,EACVC,UAAW,EACXC,OAAO,EACPC,MAAOzB,EAAyBC,UAChCyB,OAAO,EACPvB,aAAc/B,EAAa4B,EAAyBG,cACpDC,oBAAqBhC,EAAa4B,EAAyBI,qBAC3DE,aAAcN,EAAyBM,aACvCK,eAAgBX,EAAyBW,eACzCC,mBAAoBZ,EAAyBY,mBAC7CL,WAAYnC,EAAa4B,EAAyBO,YAClDC,eAAgBpC,EAAa4B,EAAyBQ,gBACtDC,WAAYrC,EAAa4B,EAAyBS,YAClDJ,iBAAkBjC,EAAa4B,EAAyBK,kBACxDK,cAAetC,EAAa4B,EAAyBU,eACrDG,gBAAiBb,EAAyBa,gBAC1Cc,uBAAwB,CACtBC,YAAa/B,EACbgC,QAAShC,EACTiC,OAAQjC,EACRkC,OAAQlC,GAEVmC,yBAA0B,KAC1BC,wBAAyB,KACzBC,wBAAyB,KACzBC,uBAAwB,KACxBC,OAAQ,CACNC,IAAK,GACLC,IAAK,IACLC,YAAa,GACbC,YAAa,IACbC,UAAW,IAEb3B,WAAYd,EAAyBc,WACrCC,UAAWf,EAAyBe,UACpCC,oBAAqBhB,EAAyBgB,qBAGnC0B,EAAgC,CAC3CC,GAAI,EACJC,YAAa,KACbC,SAAU,KACVC,aAAc,GACdC,SAAU,WACVC,WAAY,cACZC,MAAO,GACPC,YAAa,GACbC,aAAc,GACdC,SAAU,GACVC,aAAa,EACbC,WAAY,GACZC,KAAM,EACNC,OAAQ,EACRC,SAAU,EACVC,SAAU,EACVC,WAAW,GAGAC,EAAqB,gBC/F5BC,EAIO,o2BCMAC,EAA6B,CACxC,CACEC,KAAM,MACNC,KAAM,MACNC,QDPG,61CCSL,CACEF,KAAM,aACNC,KAAM,aACNC,QDPU,64DCSZ,CACEF,KAAM,YACNC,KAAM,WACNC,QDRQ,mmDCUV,CACEF,KAAM,WACNC,KAAM,WACNC,QDNQ,upDCQV,CACEF,KAAM,kBACNC,KAAM,kBACNC,QDHc,yyECKhB,CACEF,KAAM,WACNC,KAAM,WACNC,QDAQ,8sECEV,CACEF,KAAM,WACNC,KAAM,WACNC,QDCQ,s3BCCV,CACEF,KAAM,YACNC,KAAM,YACNC,QAASJ,GAEX,CACEE,KAAM,iBACNC,KAAM,iBACNC,QDJa,srCCMf,CACEF,KAAM,kBACNC,KAAM,kBACNC,QDHc,0gECKhB,CACEF,KAAM,SACNC,KAAM,SACNC,QDQM,o0CCNR,CACEF,KAAM,mBACNC,KAAM,mBACNC,QDWe,srBCTjB,CACEF,KAAM,aACNC,KAAM,aACNC,QDWU,qqBElBRC,EAAgBC,EAAaA,mBAAgCC,GAa7DC,EAAwBA,EAAGC,WAAUC,cAAaC,wBACtD,MAAMC,EAAaF,EAAYG,eAIxBC,EAASC,GAAcC,EAAAA,UAAuC,IAC9DC,EAA2BC,GAAgCF,YAAyD,IACpHG,EAAWC,GAAgBJ,EAAAA,SAAyC,IAAK1D,KAAyBoD,EAAYW,UAC9GC,EAAgBC,GAAqBP,EAAQA,SAAsC,CACxFQ,OAAQ,GACRC,OAAQ,GACRC,SAAU,GACVC,UAAW,GACXC,YAAazF,IAGXwE,IACFA,EAAkBkB,QAAUP,GAI9B,MAAOQ,EAASC,GAAcf,EAAAA,SAAuC,CACnEgB,UAAW/B,EACXgC,OAAQ,GACRC,OAAQ,CAAE,EACVC,UAAW,CAAA,KAGNC,EAAgBC,GAAqBrB,EAAAA,SAA8C,IAAIsB,MAEvFC,EAAeC,GAAoBxB,EAAQA,SAAqC,KAChFyB,EAAsBC,GAA2B1B,EAAAA,SAAoD,CAAA,IACrG2B,EAAqBC,GAA0B5B,EAAAA,SAAmD,CAAA,IAClG6B,EAAeC,GAAoB9B,WAA6C,CAAA,IAChF+B,EAAYC,GAAiBhC,EAAQA,SAAkC,KAEvEiC,EAAeC,GAAoBlC,WAA6C,CAAA,IAEhFmC,EAAiBC,GAAsBpC,EAAAA,SAA+CqC,EAAAA,YACtFC,EAAYC,GAAiBvC,EAAQA,SAAkCwC,EAAI,UAE3EC,EAAYC,GAAiB1C,EAAAA,SAA0C,KACvE2C,EAAcC,GAAmB5C,EAAAA,WAElC6C,EAAgCC,UAAQ,ICnHtBC,EAACC,EAAoBC,KAC7C,MAAMC,EAAgBC,EAAK,QAACC,OAAO,CACjCC,QAASL,EACTM,QAAS,IACTC,QAAS,CACP,eAAgB,mBAChBN,UAAaA,KASjBC,EAAcM,aAAaC,SAASC,IACjCD,GAAaA,EALUE,IACxBC,QAAQD,MAAM,4BAA6BA,EAAMF,SACnD,GAQA,MAAMI,ECfqBX,KAC3B,MAAMxG,EAAYwG,EAAcY,SAASP,QAAmB,UAwJ5D,MAAO,CACLQ,WAvJiBA,IACN,IAAAC,QAAQ,CAACC,EAASC,KAC3BhB,EAAc,mBACXiB,KAAMV,IACL,MAAMW,EAA6B,GACnC,GAAIX,GAAUY,MAAMC,MAClB,IAAK,MAAMC,KAAQd,GAAUY,MAAMC,MACjCF,EAAaI,KAAK,CAChB1G,GAAIyG,EAAKzG,GACTC,YAAawG,EAAKxG,YAClBC,SAAUuG,EAAKvG,SACfC,aAAcsG,EAAKtG,aACnBC,SAAUqG,EAAKrG,SACfC,WAAYoG,EAAKpG,WACjBC,MAAOmG,EAAKnG,MACZC,YAAakG,EAAKlG,YAClBC,aAAciG,EAAKjG,aACnBC,SAAUgG,EAAKhG,SACfC,YAAa+F,EAAK/F,YAClBC,WAAY8F,EAAK9F,WACjBC,KAAM7E,SAAS0K,EAAK7F,MACpBC,OAAQ9E,SAAS0K,EAAK5F,QACtBC,SAAU/E,SAAS0K,EAAK3F,UACxBC,SAAUhF,SAAS0K,EAAK1F,UACxBC,WAAW,IAIjBmF,EAAQG,EACV,GACCK,MAAOC,IACNd,QAAQD,MAAM,mCAAoCe,GAClDT,EAAQ,GAAE,EACX,GAuHLU,aAnHmBA,IACR,IAAAX,QAAQ,CAACC,EAASC,KAC3BhB,EAAc,wCACXiB,KAAMV,IACL,MAAMjD,EAAqB,GAC3B,GAAIiD,GAAUY,MAAMC,MAClB,IAAK,MAAMC,KAAQd,GAAUY,MAAMC,MACjC9D,EAAOgE,KAAK,CACV1G,GAAIyG,EAAKzG,GACToB,KAAMqF,EAAKK,MACXC,OAAQN,EAAKvK,MAInBiK,EAAQzD,EAAM,GAEfiE,MAAOC,IACNd,QAAQD,MAAM,qCAAsCe,GACpDT,EAAQ,GACV,EACJ,GAgGAa,aA7FmBA,IACZ,IAAId,QAAQ,CAACC,EAASC,KAC3BhB,EAAc,yDACXiB,KAAMV,IACL,MAAMhD,EAAqB,GAC3B,GAAIgD,GAAUY,MAAMC,MAClB,IAAK,MAAMC,KAAQd,GAAUY,MAAMC,MACjC7D,EAAO+D,KAAK,CACV1G,GAAIyG,EAAKzG,GACToB,KAAMqF,EAAKK,QAIjBX,EAAQxD,EAAM,GAEfgE,MAAOC,IACNd,QAAQD,MAAM,qCAAsCe,GACpDT,EAAQ,GACV,EACJ,GA2EAc,eAxEqBA,IACd,IAAIf,QAAQ,CAACC,EAASC,KAC3BhB,EAAc,uBAAuBxG,KAClCyH,KAAMV,IACL,MAAMuB,EAA2B,IAAK1I,GACtC,IAAI2I,EAA8C9J,EAC9CsI,GAAUY,MAAMW,WAClBC,EAAaxB,GAAUY,MAAMW,SACzBC,EAAiC,uBAAGD,EAAS3J,qBAAuB9B,EAAa0L,EAAiC,uBAClHA,EAAgC,sBAAGD,EAASzJ,oBAAsBhC,EAAa0L,EAAgC,sBAC/GA,EAAyB,eAAGD,EAAS1J,aAAe/B,EAAa0L,EAAyB,eAC1FA,EAAuB,aAAGD,EAASpJ,WAAarC,EAAa0L,EAAuB,aACpFA,EAA2B,iBAAGD,EAASrJ,eAAiBpC,EAAa0L,EAA2B,iBAChGA,EAAuB,aAAGD,EAASpJ,WAAarC,EAAa0L,EAAuB,aACpFA,EAAuB,aAAGD,EAAStJ,WAAanC,EAAa0L,EAAuB,aACpFA,EAA6B,mBAAGD,EAASxJ,iBAAmBjC,EAAa0L,EAA6B,mBACtGA,EAA0B,gBAAGD,EAASnJ,cAAgBtC,EAAa0L,EAA0B,gBAG7FA,EAA+B,qBAAGD,EAASjJ,mBAAqBkJ,EAA+B,oBAC/FA,EAA2B,iBAAGD,EAASlJ,eAAiBmJ,EAA2B,gBACnFA,EAA4B,kBAAGD,EAAShJ,gBAAkBiJ,EAA4B,iBACtFA,EAAuB,aAAGD,EAAS/I,WAAagJ,EAAuB,YACvEA,EAAsB,YAAGD,EAAS9I,UAAY+I,EAAsB,WACpEA,EAAgC,sBAAGD,EAAS7I,oBAAsB8I,EAAgC,qBAEtGD,EAASzH,OAAOG,YAAcuH,EAAgC,oBAAIA,EAAgC,oBAAID,EAASzH,OAAOG,YACtHsH,EAASzH,OAAOI,YAAcsH,EAAgC,oBAAIA,EAAgC,oBAAID,EAASzH,OAAOI,YAEtHqH,EAASzH,OAAS,IAAKyH,EAASzH,SAElCyH,EAAStI,UAAYwI,WAAWxI,GAChC,MAAMyI,EAA4C,IAAKH,UAEhDG,EAAiB5I,KACxB0H,EAAQ,CACNmB,YAAaH,EACbI,eAAgBF,GACjB,GAEFV,MAAOC,IACNd,QAAQD,MAAM,qCAAsCe,GACpDT,EAAQ,CACNmB,YAAajK,EACbkK,eAAgB/I,GAEpB,EACJ,GA0BAgJ,yBAvB+BA,IACxB,IAAItB,QAAQ,CAACC,EAASC,KAC3BhB,EAAc,yBAAyBxG,KACpCyH,KAAMV,IACL,MAAMuB,EAAkC,IAAK1I,EAAqBQ,wBAC9D2G,EAASY,KAAKtH,cAAaiI,EAASjI,YAAc0G,EAASY,KAAKtH,aAChE0G,EAASY,KAAKrH,UAASgI,EAAShI,QAAUyG,EAASY,KAAKrH,SACxDyG,EAASY,KAAKpH,SAAQ+H,EAAS/H,OAASwG,EAASY,KAAKpH,QACtDwG,EAASY,KAAKnH,SAAQ8H,EAAS9H,OAASuG,EAASY,KAAKnH,QAC1D+G,EAAQe,EACV,GACCP,MAAOC,IACNd,QAAQD,MAAM,qCAAsCe,GACpDT,EAAQ3H,EAAqBQ,uBAAsB,EACpD,KDtI8ByI,CAAoBrC,GACnDsC,EEvBwBtC,KAsEvB,CACLuC,gBArEsBA,QACXzB,QAAQ,CAACC,EAASC,KAC3B,IAAII,EAAe,GAEnB,MAAMoB,EAAYA,CAACC,EAAsB,KACvCzC,EAAc,gCAAgCyC,KAC3CxB,KAAMV,IACL,GAAIA,GAAUY,MAAMC,MAElB,GADAA,EAAQ,IAAIA,KAAUb,EAASY,KAAKC,OAChCb,EAASY,KAAKuB,MAAQtB,EAAM1K,OAC9B8L,EAAUC,EAAc,OACnB,CACL,MAAMhF,EAA2B,GAEjC,IAAK,MAAM4D,KAAQD,EACjB3D,EAAU6D,KAAK,CACb1G,GAAIyG,EAAKzG,GACT+H,YAAatB,EAAKrF,KAClB4G,KAAMvB,EAAKuB,KACXC,qBAAsBxB,EAAKyB,YAC3BC,SAAU1B,EAAK0B,SACfC,eAAgB3B,EAAK2B,eACrBC,KAAM5B,EAAK6B,MAAMC,KAAO,GACxBpI,aAAc,KAGlBgG,EAAQtD,EACT,CACF,GAEF8D,MAAOC,IACNd,QAAQD,MAAM,2BAA4Be,GAC1CT,EAAQ,GACV,IAGJyB,GAAS,GAkCXY,YA9BmBR,OACR9B,QAAQ,CAACC,EAASC,KAC3BhB,EAAc,iBAAiB4C,KAC5B3B,KAAMV,IACL,GAAIA,GAAUY,MAAMvG,GAAI,CACtB,MAAMyI,EAAO9C,GAAUY,KAavBJ,EAZoC,CAClCnG,GAAIyI,EAAKzI,GACT+H,YAAaU,EAAKrH,KAClB4G,KAAMS,EAAKT,KACXC,qBAAsBQ,EAAKP,YAC3BC,SAAUM,EAAKN,SACfC,eAAgBK,EAAKL,eACrBC,KAAMI,EAAKH,MAAMC,KAAO,GACxBpI,aAAc,GACduI,cAAeD,EAAKC,eAIvB,IAEF/B,MAAOC,IACNd,QAAQD,MAAM,2BAA4Be,GAC1CR,EAAOQ,EAAG,EAEhB,KF5CyC+B,CAAuBvD,GAElE,MAAO,CACLW,gBACA2B,qBD0FOzC,CAAkBnD,EAAYO,EAAUzD,WAC9C,CAACkD,EAAYO,EAAUzD,YAI1BgK,YAAU,KACRtG,EAAcC,IACL,IAAKA,KAAWX,EAAYW,SACpC,EACA,CAACX,EAAYW,OAAQX,EAAYW,OAAO3D,YAE3C,MAAMiK,EAAiBC,EAAWA,YAAC,KACjC5C,QAAQ6C,IAAI,CACVhE,EAAY2C,iBAAiBC,kBAC7B5C,EAAYgB,cAAcE,aAC1BlB,EAAYgB,cAAcc,eAC1B9B,EAAYgB,cAAciB,eAC1BjC,EAAYgB,cAAckB,iBAC1BlC,EAAYgB,cAAcyB,6BAEzBnB,KAAK,EACJxD,EACAmG,EACAC,EACAC,EACApG,EACAqG,MAIA,MAAMC,EAAcJ,EAAQK,IAAIC,GAAWA,EAAQnJ,cACnD6I,EAAUA,EAAQO,OAAO,CAACD,EAASE,IAAUJ,EAAYK,QAAQH,EAAQnJ,gBAAkBqJ,GAE3F/G,EAAkB,CAChBI,YACAD,SAAUoG,EACVtG,OAAQuG,EACRtG,OAAQuG,EACRpG,YAAaA,EAAYwE,cAG3BhF,EAAcC,IACL,IAAKA,KAAWO,EAAYyE,eAAgBvI,uBAAwBmK,KAG7ErF,EAAuBjB,EAAU6G,OAC/B,CAACC,EAAKC,KACJD,EAAIC,EAAS5J,IAAM4J,EACZD,GAET,CAAiC,IAGnC3F,EAAiBkF,EAAUQ,OACzB,CAACC,EAAKE,KACJF,EAAIE,EAAM7J,IAAM6J,EAChB,MAAMC,EAASd,EAAQe,KAAKtD,GAAQA,EAAKvG,WAAa2J,EAAM7J,IAI5D,OAHI8J,IACFH,EAAIE,EAAM7J,IAAIG,aAAe2J,EAAO3J,cAE/BwJ,GAET,KAGF/F,EAAwBoF,EAAQU,OAC9B,CAACC,EAAKG,KACJH,EAAIG,EAAO3J,cAAgB,IAAKJ,KAAsB+J,GAC/CH,GAET,CAAgC,IAGlCzF,EAAc+E,EAAUI,IAAIW,IAC1B,MAAMC,EAAY,IAAIC,EAAAA,MAItB,OAHAD,EAAUE,MAAMnN,IAAM,EACtBiN,EAAUG,OAAO,EAAG,EAAG,GAEhB,IACFJ,EACHC,UAAWA,EACXI,gBAAiB,GACjBC,eAAgB,GAChBC,gBAAiB,CAAA,EACjBC,gBAAiB,GACjBC,aAAc,GACdC,gBAAYjJ,EACZkJ,cAAe,KACfC,YAAa,GACbC,cAAc,MAGlBzI,GAA6B,EAAI,GAGlCuE,MAAMd,IACLC,QAAQD,MAAM,kDAAmDA,GAEjEzD,GAA6B,EAC/B,EACJ,EAAG,CAAC2C,IAiDJ,OA/CA6D,EAAAA,UAAU,KACRxG,GAA6B,GAC7ByG,GAAc,EACb,CAACA,IA6CFiC,EAAAC,IAACxJ,EAAcyJ,SAAQ,CAAC1K,MA3Cc,CACtCwB,aACA+G,iBACA9D,cAEA/C,UACAC,aACAE,4BACAC,+BACAC,YACAC,eACAE,iBACAC,oBACAO,UACAC,aAEAK,iBACAC,oBACAE,gBACAC,mBACAC,uBACAC,0BACAC,sBACAC,yBACAC,gBACAC,mBACAC,aACAC,gBAEAC,gBACAC,mBACAC,kBACAC,qBACAE,aACAC,gBAEAE,aACAC,gBACAC,eACAC,mBAI2CnD,SACxCA,GAAQ,EAKC,SAAAsJ,IACd,MAAMC,EAAUC,aAAW5J,GAE3B,QAAgBE,IAAZyJ,EACF,MAAM,IAAIE,MAAM,8DAGlB,OAAOF,CACT,CIxRa,MAAAG,EAAe,CAC1B,aAAc,EACdC,UAAa,EACbC,SAAY,EACZC,QAAW,EACX,gBAAiB,EACjBC,KAAQ,EACRC,MAAS,EACT,YAAa,EACb7B,MAAS,EACT8B,KAAQ,EACR,aAAc,EACdC,SAAY,EACZC,QAAW,EACX,cAAe,GACf,aAAc,GACd,aAAc,GACd,gBAAiB,IAKbC,EAAyBA,KAE7B,MAAMzJ,UAAEA,EAASoB,cAAEA,EAAaE,qBAAEA,EAAoBE,oBAAEA,EAAmBI,WAAEA,GAAegH,IAEtFc,EAAiBjD,EAAAA,YAAakD,GAC9BA,cAA6EvK,IAA5B4J,EAAaW,GACzDX,EAAaW,GAIxB,EAAG,IAEGC,EAAcnD,EAAAA,YAAY,CAACkD,EAAqBE,EAAoBC,EAA6BC,KACrG,MAAMC,EAAoB,CACxBC,MAAOH,aAAuBtQ,EAAAA,MAAQsQ,EAAc1Q,EAAa0Q,GACjEI,KAAMC,EAAAA,WACN9L,aAAa,EACb+L,YAAY,EACZC,WAAW,EACXC,QAAS,GAEa,OAApBtK,EAAUvD,OAAgC,SAAdkN,GAAqC,MAAbA,GACpC,aAAdA,IACFK,EAAkBI,YAAa,EAC/BJ,EAAkBK,WAAY,GAGhB,YAAdV,IACFK,EAAkBC,MAAQjK,EAAUtE,cACpCsO,EAAkBM,QAAUtK,EAAUnE,iBAEpC8N,GAAa,CAAC,QAAS,YAAa,SAASY,SAASZ,IAAiC,WAAnB3J,EAAU5D,MAAqBkF,EAAqBuI,IAAevI,EAAqBuI,GAAYxL,cAC1K2L,EAAkBM,QAAU,GAE9B,IAAIE,EAAW,IAAIC,EAAAA,oBAAoBT,GAmBvC,OAlBIL,GAAa,CAAC,QAAS,YAAa,QAAS,WAAWY,SAASZ,KAEnEa,EAASE,aAAeF,EAASP,MAC7B3I,EAAqBuI,IAA6D,KAA9CvI,EAAqBuI,GAAYzL,WACvEoM,EAASP,MAAQ7Q,EAAakI,EAAqBuI,GAAYzL,UAE/DoM,EAASE,aAAeF,EAASP,OAGnCO,EAASG,QAAS,GAEG,WAAnB3K,EAAU5D,MAAqB2N,IACjCS,EAASF,QAAU,EACnBE,EAASnM,aAAc,GAGzBmM,EAASnM,YAAmC,IAArBmM,EAASF,QAEzBE,GACN,CAAClJ,EAAsBtB,EAAUtE,cAAesE,EAAUnE,gBAAiBmE,EAAU5D,KAAM4D,EAAUvD,QAElGmO,EAAcnE,cAAY,CAACkD,EAAqBE,EAAoBgB,EAAiBC,EAAwBzI,KACjH,MAAM0I,EAAgB,sBAEtB,IAGIC,EAHAC,EAAS5I,EAAK6I,UAAS,GAY3B,IAAIC,EACJ,GAREH,EADsB,OAApBhL,EAAUvD,MACK,CAAC,iBAED,CAAC,QAAS,YAAa,OAAQ,iBAM9CkN,GAAaqB,EAAeT,SAASZ,GACvCwB,EAAW,IAAIC,EAAAA,gBAAgBH,EAAQ,CACrCI,OAAQR,EACRS,cAAc,SAEX,GAAI3B,GARO,CAAC,OAAQ,aAAc,YAQLY,SAASZ,GAAY,CAEvD,IAAI4B,EAAkB,GAEtBlJ,EAAKmJ,SAASpR,QAAQqR,IAEpBA,EAAQC,OAAOtR,QAAQuR,IACrB,GAAmB,cAAfA,EAAM3M,KAAsB,CAC9B,IAAI4M,EAAe,EACD,aAAdjC,IACFiC,EAAe,GAIjB,IAAIC,WCxHaF,EAAkBG,EAAY,EAAGF,EAAe,GACzE,IAAIG,EAAY,IAAIC,EAAAA,MAChBC,EAAS,IAAIC,UAAQP,EAAMQ,GAAGzR,EAAGiR,EAAMQ,GAAGxR,EAAG,GAC7CyR,EAAS,IAAIF,EAAOA,QAACP,EAAMU,GAAG3R,EAAGiR,EAAMU,GAAG1R,EAAG,GAG7C2R,EAAMF,EAAOG,QAAQC,IAAIP,GAAQQ,YAAYC,gBAAgBZ,EAAYF,GACzEe,EAAgBV,EAAOM,QAAQK,IAAIN,GAEvCA,EAAML,EAAOM,QAAQC,IAAIJ,GAAQK,YAAYC,gBAAgBZ,EAAYF,GACzE,IAAIiB,EAAgBT,EAAOG,QAAQK,IAAIN,GAEnCQ,EAAWb,EAAOc,WAAWF,GAE7BG,EAAe,CACftS,EAAGiS,EAAcjS,GAAK0R,EAAOzR,EAAIgS,EAAchS,GAAKmR,EAAYgB,EAChEnS,EAAGgS,EAAchS,GAAKgS,EAAcjS,EAAI0R,EAAO1R,GAAKoR,EAAYgB,GAEhEG,EAAe,CACfvS,EAAGiS,EAAcjS,GAAK0R,EAAOzR,EAAIgS,EAAchS,GAAKmR,EAAYgB,EAChEnS,EAAGgS,EAAchS,GAAKgS,EAAcjS,EAAI0R,EAAO1R,GAAKoR,EAAYgB,GAGhEI,EAAe,CACfxS,EAAGmS,EAAcnS,GAAKuR,EAAOtR,EAAIkS,EAAclS,GAAKmR,EAAYgB,EAChEnS,EAAGkS,EAAclS,GAAKkS,EAAcnS,EAAIuR,EAAOvR,GAAKoR,EAAYgB,GAEhEK,EAAe,CACfzS,EAAGmS,EAAcnS,GAAKuR,EAAOtR,EAAIkS,EAAclS,GAAKmR,EAAYgB,EAChEnS,EAAGkS,EAAclS,GAAKkS,EAAcnS,EAAIuR,EAAOvR,GAAKoR,EAAYgB,GAapE,OAVAf,EAAUqB,OAAOJ,EAAatS,EAAGsS,EAAarS,GAC9CoR,EAAUsB,OAAOJ,EAAavS,EAAGuS,EAAatS,GAC9CoR,EAAUsB,OAAOF,EAAazS,EAAGyS,EAAaxS,GAC9CoR,EAAUsB,OAAOH,EAAaxS,EAAGwS,EAAavS,GAOvCoR,CACX,CD6EyBuB,CAAa3B,EAAOb,EAAgBc,GAC7C2B,EAAgB,IAAInC,kBAAgBS,EAAQ,CAC9CR,OAAQR,EACRS,cAAc,IAEhBC,EAAgBlH,KAAKkJ,EACtB,MACC9J,QAAQ+J,KAAKzC,EAAgB,wCAAyCY,EAAM3M,KAAM6K,EACnF,EAEL,GAE+B,IAA3B0B,EAAgB9R,OAElB0R,EAAWI,EAAgB,GAClBA,EAAgB9R,OAAS,EAElC0R,EAAWsC,EAAAA,sBAAgBlC,GAE3B9H,QAAQ+J,KAAKzC,EAAgB,gCAAiClB,EAEjE,KAAM,CACLsB,EAAW,IAAIuC,gBAAczC,GAC7B,IAE6C,IAAvCE,EAASwC,WAAWC,SAASnI,OAC/BhC,QAAQ+J,KAAKzC,EAAgB,8BAA+BlB,EAAYxH,EAAKwL,SAASC,KAEzF,CAAC,MAAOC,GACPtK,QAAQD,MAAMuK,EAAEC,QACjB,CACF,CAED,OAAO7C,GACN,CAACnL,EAAUvD,QAERwR,EAAyBxH,cAAY,CACzCkD,EACAE,EACAC,EACAC,EACAmE,EACAC,EACAtD,EACAC,EACAsD,EACA/L,KAGA,MAAMmI,EAAWZ,EAAYD,EAAWE,EAAYC,EAAaC,GAC3DoB,EAAWP,EAAYjB,EAAWE,EAAYgB,EAASC,EAAgBzI,GAEvEgM,EAAO,IAAIC,OAAKnD,EAAUX,GAChC6D,EAAKE,UAAY1E,EACjBwE,EAAK1E,UAAYA,EACjB0E,EAAKD,YAAcA,EACnBC,EAAKG,QAAUN,EACfG,EAAKT,SAAShT,EAAIuT,EAElB,IAAIM,EAA2B,GAE/B,GAAI,CAAC,cAAe,cAAe,cAAe,cAAe,WAAWlE,SAASjJ,EAAqBuI,IAAa7L,YACrH,GAAIsD,EAAqBuI,GAAY7L,YAAc,CAAC,cAAe,eAAeuM,SAASjJ,EAAqBuI,GAAY7L,aAAesD,EAAqBuI,GAAYjM,aAAe4D,EAAoBF,EAAqBuI,IAAajM,aAAe,GAC9P6Q,EAAYjN,EAAoBF,EAAqBuI,GAAYjM,aAAuB8H,oBAC/E,CAAC,cAAe,eAAe6E,SAASjJ,EAAqBuI,GAAY7L,YAClFyQ,EAAYnN,EAAqBuI,GAAY3L,YAC3B,KAAduQ,GAAoBnN,EAAqBuI,GAAYjM,aAAe4D,EAAoBF,EAAqBuI,GAAYjM,eAC3H6Q,EAAYjN,EAAoBF,EAAqBuI,GAAYjM,aAAuB8H,kBAEjF,GAAA,CAAC,WAAW6E,SAASjJ,EAAqBuI,GAAY7L,cAC/DyQ,EAAYnN,EAAqBuI,GAAY5L,MACzCwQ,GAAW,CACb,MAAMjF,EAAU1K,EAAa4I,KAAKtD,GAAQA,EAAKpF,OAASyP,GACpDjF,IACFiF,EAAYjF,EAAQzK,KAEvB,CA+CL,OA5CAsP,EAAKR,SAASY,UAAYA,EACF,OAApBzO,EAAUvD,QACZ4R,EAAKK,YAAchF,EAAeC,GAC9BE,GAAcA,EAAWU,SAAS,cACpC8D,EAAKK,YAAchF,EAAe,cAItC9H,EAAWwM,GAAaxG,UAAUgF,IAAIyB,GAEpB,cAAd1E,IACF/H,EAAWwM,GAAalG,gBAAgB2B,GAAc,KACtDjI,EAAWwM,GAAanG,eAAe5D,KAAKgK,GAC5CA,EAAKM,aAAeP,EAAc,IAAMvE,GAGtCF,GAAa,CAAC,QAAS,YAAa,QAAS,WAAWY,SAASZ,KAEnE0E,EAAKO,cAAgB,KAUrBxN,EAAciD,KAAKwF,IAGG,WAAnB7J,EAAU5D,MAAmC,UAAduN,GACZ,WAAnB3J,EAAU5D,MAAwC,iBAAnB4D,EAAU5D,MAA2BkF,EAAqBuI,IAA6D,aAA9CvI,EAAqBuI,GAAY9L,UAA2E,MAAhDuD,EAAqBuI,GAAYjM,aAClL,WAAnBoC,EAAU5D,MAAwC,iBAAnB4D,EAAU5D,MAA2BkF,EAAqBuI,IAA6D,WAA9CvI,EAAqBuI,GAAY9L,UAA0E,KAAjDuD,EAAqBuI,GAAY3L,aAChL,WAAnB8B,EAAU5D,MAAwC,iBAAnB4D,EAAU5D,MAA2BkF,EAAqBuI,IAA+D,YAAhDvI,EAAqBuI,GAAY7L,YAAuE,OAA3CsD,EAAqBuI,GAAY5L,OACnL,WAAnB+B,EAAU5D,MAAsBkF,EAAqBuI,KAA+D,YAA9CvI,EAAqBuI,GAAY9L,UAAwE,WAA9CuD,EAAqBuI,GAAY9L,WAC/I,WAAnBiC,EAAU5D,MAAqB,CAAC,QAAS,QAAS,WAAWmO,SAAS8D,EAAK1E,WAAa,KAG7D,WAAnB3J,EAAU5D,OADnBwF,EAAWwM,GAAapG,gBAAgB3D,KAAKgK,IAM1C,CACLA,OACAlD,WACAX,WACA+D,UAAW1E,EACXF,YACAyE,cACAI,QAASN,EACTQ,YAAaL,EAAKK,cAGnB,CAACpN,EAAsBE,EAAqBJ,EAAeQ,EAAYgJ,EAAahB,EAAaF,EAAgB1J,EAAU5D,KAAM4D,EAAUvD,QAE9I,MAAO,CACLiN,iBACAE,cACAgB,cACAqD,2BE7PElD,EAAgB,UAEhB8D,EAAiBA,KACrB,MAAMjN,WAAEA,EAAUE,cAAEA,EAAaK,WAAEA,EAAUH,gBAAEA,EAAeV,qBAAEA,GAAyBsH,KACnFc,eAAEA,GAAmBD,IAErBqF,EAAoBrI,EAAWA,YAAEpG,IACrC,IAAK,IAAI+N,EAAc,EAAGA,EAAc/N,EAAO5G,OAAQ2U,IAAe,CACpE,MAAMzG,EAAQtH,EAAO+N,GACrBzG,EAAMa,cAAe,EAEG,MAApBb,EAAMU,aACRV,EAAMU,WAAW8C,SAAS4D,UAE1BpH,EAAMU,WAAWmC,SAASuE,UAC1BpH,EAAMC,WAAWoH,OAAOrH,EAAMU,aAGhCV,EAAMU,gBAAajJ,EACnBuI,EAAMW,cAAgB,KACtBX,EAAMQ,gBAAkB,EACzB,GACA,IAEG8G,EAAkBxI,EAAAA,YAAY,CAACyI,EAAwBC,EAAsBC,KACjF,IAAIC,EAAaD,EAAgB1H,KAAKyH,EAAcD,GACpD,OAA0B,IAAtBG,EAAW5V,QACR4V,GACN,IAEGC,EAAoB7I,cAAY,CAACqG,EAAkBsB,EAAqB/N,KAC5E,IACIkP,EADSxV,SAASyV,cAAc,UACnBC,WAAW,MAC5B,GAAIF,EAAK,CACPA,EAAIG,OAAOC,MAAQ7C,EACnByC,EAAIG,OAAOE,OAAS,GAEpBL,EAAIM,UAAY,UAChBN,EAAIO,SAAS,EAAG,EAAGhD,EAAU,IAE7B,IAAIiD,EAAY,GAAMjD,EACtB,MAAMkD,EAAgB,GAChBC,EAAgB,IAClBF,EAAYC,IAAeD,EAAYC,GACvCD,EAAYE,IAAeF,EAAYE,GAE3C,IAAIC,EAAMX,EAAIY,qBAAqB,EAAG,EAAGJ,EAAW,GACpDG,EAAIE,aAAa,EAAG,WACpBF,EAAIE,aAAa,GAAK,SACtBF,EAAIE,aAAa,GAAK,SACtBF,EAAIE,aAAa,EAAG,WAEpBb,EAAIM,UAAYK,EAChBX,EAAIO,SAAS,GAAI,EAAGC,EAAW,IAE/B,IAAIzH,EAAgB,IAAI+H,EAAaA,cAACd,EAAIG,QAM1C,OALApH,EAAcgI,OAAO5V,EAAI,EACzB4N,EAAciI,WAAa,OAE3BlQ,EAAO+N,GAAa9F,cAAgBA,EAE7BA,CACR,CAEA,EACA,IAEGkI,EAAoB/J,EAAAA,YAAY,CAAC4I,EAAyBjB,EAAqB/N,EAAoBoQ,EAAQ,QAC/G,IAAI3D,EAAW,EACX4D,EAAa,IAAIC,EAAAA,UACrB,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAW5V,OAAQmX,IAAK,CAC1C,IAAIC,EAAY,IAAI3E,EAAOA,QAACmD,EAAWuB,EAAI,GAAG1M,KAAKxJ,EAAG2U,EAAWuB,EAAI,GAAG1M,KAAKvJ,EAAG,GAC5EmW,EAAU,IAAI5E,EAAAA,QAAQmD,EAAWuB,GAAG1M,KAAKxJ,EAAG2U,EAAWuB,GAAG1M,KAAKvJ,EAAG,GACtE+V,EAAW9D,IAAI,IAAImE,EAAAA,WAAWF,EAAWC,IACzChE,GAAY+D,EAAU9D,WAAW+D,EAClC,CACD,IAAI3F,EAA2B,IAAI6F,EAAYA,aAACN,EAAY,IAAK,EAAG,GACpEvF,GAAW,IAAI8F,EAAcA,gBAAGC,KAAK/F,GACrC,IAAIX,EAAW,IAAI2G,EAAAA,kBAAkB,CACnCnK,IAAKsI,EAAkBxC,EAAUsB,EAAa/N,GAC9ChC,aAAa,EACb6L,KAAMC,EAAUA,WAChBE,WAAW,EACXD,YAAY,IAGd,IAAI/B,EAAa,IAAIiG,EAAIA,KAACnD,EAAUX,GAkBpC,MAjBc,OAAViG,IACFpI,EAAWuF,SAAShT,GAAK,GACzByN,EAAWP,MAAMlN,EAAI,IAEvByN,EAAWuF,SAAShT,EAAI,EACxByN,EAAWqG,YAAchF,EAAe,cACxCrB,EAAWsB,UAAY,aACW,OAA9BtB,EAAW8C,SAAShE,MACtBkB,EAAW8C,SAASiG,aAAa,EAAG/I,EAAW8C,SAAShE,MAAM1B,OAE9DhC,QAAQ+J,KAAK,qCAIfnN,EAAO+N,GAAa/F,WAAaA,EACjChI,EAAO+N,GAAaxG,WAAWgF,IAAIvE,GAE5BA,GACN,CAACqB,EAAgB4F,IAEd+B,EAAqB5K,EAAWA,YAAC,CAAC6K,EAA6BC,EAA2BC,EAAc1P,EAAuC2P,EAAwBpR,EAAoB2B,EAAwByO,EAAeiB,EAAgB,QAEtP,MAAMC,EAAa,GACnB7C,EAAkBzO,GAClB,IAAIuR,EAAWJ,EAAMK,oBAAoB,YAAaP,GAClDQ,EAASN,EAAMK,oBAAoB,YAAaN,GAChDrC,EAAiB0C,EAAShD,cAC1BO,EAAe2C,EAAOlD,cAK1B,GAHKM,GAAgBzL,QAAQD,MAAMuH,EAAgB,sCAAuCuG,GACrFnC,GAAc1L,QAAQD,MAAMuH,EAAgB,sCAAuCwG,IAEnFrC,IAAmBC,EAAc,OAAOwC,EAE7C,MAAMI,EAAyBH,EAASxD,YAClC4D,EAAuBF,EAAO1D,YAE9BgB,EAAkBjN,EAAW8P,MAAMjQ,EAAiB,CACxD8K,SAAU,SAAUoF,EAAUC,EAAQC,GACpC,QAAIA,EAAKlO,MAAakO,EAAKlO,KAAKmO,MAElC,EAEAC,OAAO,IAEHjD,EAAaJ,EAAgBC,EAAgBC,EAAcC,GAC3DmD,EAAsB,GAC5B,IAAKlD,EACH,MAAO,GAET,MAAMmD,EAAe,GAErB,IAAK,IAAIrL,EAAQ,EAAGA,EAAQkI,EAAW5V,OAAQ0N,IAAS,CACtD,MAAMsL,EAAYpD,EAAWlI,GACzBqL,EAAa1Q,EAAc2Q,EAAU9U,KACvC6U,EAAa1Q,EAAc2Q,EAAU9U,KAAK0G,KAAKoO,GAE/CD,EAAa1Q,EAAc2Q,EAAU9U,KAAO,CAAC8U,GAG3ChB,EAAgBlH,SAASkI,EAAU9U,KAAO8T,EAAgBlH,SAAS8E,EAAWlI,EAAQ,GAAGxJ,KAAO8T,EAAgBlH,SAAS8E,EAAWlI,EAAQ,GAAGxJ,KAGjJ4U,EAAoBlO,KAAKoO,EAE5B,CACD,IAAK,IAAItL,EAAQ,EAAGA,EAAQoL,EAAoB9Y,OAAQ0N,IAAS,CAC/D,MAAMsL,EAAYF,EAAoBpL,GACtC,GACErF,EAAcyQ,EAAoB,GAAG5U,MAAQmE,EAAcyQ,EAAoBA,EAAoB9Y,OAAS,GAAGkE,KAC5G8T,EAAgBlH,SAASkI,EAAU9U,IACtC,CACA,MAAMgR,EAAe+D,OAAOC,KAAKtS,EAAOyB,EAAc2Q,EAAU9U,KAAKuK,iBAA2BR,KAAKkL,GAAOvS,EAAOyB,EAAc2Q,EAAU9U,MAAMuK,kBAAkB0K,KAASH,EAAU9U,IAChLkV,EAA2BrB,EAAMK,oBAAoB,eAAgB/P,EAAc2Q,EAAU9U,IAAM,IAAMgR,GAE/G,IAAImE,EAAY,KAiBhB,GAfIhR,EAAc2Q,EAAU9U,MAAQmE,EAAcyQ,EAAoBpL,EAAQ,GAAGxJ,KAAO8T,EAAgBlH,SAASgI,EAAoBpL,EAAQ,GAAGxJ,MAC9ImV,EAAY,CACV3L,MAAOrF,EAAcyQ,EAAoBpL,EAAQ,GAAGxJ,IACpDoV,UAAW,SAIXjR,EAAc2Q,EAAU9U,MAAQmE,EAAcyQ,EAAoBpL,EAAQ,GAAGxJ,KAAO8T,EAAgBlH,SAASgI,EAAoBpL,EAAQ,GAAGxJ,MAC9ImV,EAAY,CACV3L,MAAOrF,EAAcyQ,EAAoBpL,EAAQ,GAAGxJ,IACpDoV,UAAW,aAKXD,GAAaD,EAAgB,CAC/BA,EAAeC,UAAYA,EAC3B,MAAME,EAAkBH,EAAetG,QACvCyG,EAAgBF,UAAYA,EAE5BzS,EAAOyB,EAAc2Q,EAAU9U,MAAMwK,iBAAiB9D,KAAK2O,EAC5D,CACF,CAEF,CACD,IAAK,IAAI5E,EAAc,EAAGA,EAAcoE,EAAa/Y,OAAQ2U,IAAe,CAC1E,MAAM6E,EAAcT,EAAapE,GACjC,GAAI6E,GAAeA,EAAYxZ,OAAS,EAAG,CACzC,MAAMyZ,EAAY1C,EAAkByC,EAAa7E,EAAa/N,EAAQoQ,GACtEkB,EAAWvD,GAAe8E,EAE1B7S,EAAO+N,GAAa5F,cAAe,EACnCnI,EAAO+N,GAAa7F,YAAc,CAAC2K,GAC/B9E,IAAgB2D,GAElB1R,EAAO+N,IAAc7F,aAAalE,KAAKuN,GAErCxD,IAAgB4D,GAElB3R,EAAO+N,IAAc7F,aAAalE,KAAKyN,EAG1C,CACF,CAED,OAAOH,GACN,CAACnB,EAAmBvB,EAAiB9M,EAAY2M,IAE9CqE,EAAe1M,EAAAA,YAAY,CAAC3E,EAAuCwP,EAA6BC,EAA2BC,EAAcnR,EAAoBoR,EAA2BzP,EAAwByO,KACpN,GAAIa,IAAwBC,EAC1B,MAAO,GAET,MAAMI,EAAaN,EAAmBC,EAAqBC,EAAmBC,EAAO1P,EAAe2P,EAAiBpR,EAAQ2B,EAAiByO,GAG9I,OAFKkB,EAAWlY,QAAQgK,QAAQ+J,KAAKzC,EAAgB,0CAA2CuG,EAAqBC,GAE9GI,GACN,CAACN,IAKE+B,EAAqB3M,EAAWA,YAAC,CAACyI,EAAwBC,EAAsBC,EAAkCpN,KACtH,IAAI8K,EAAW,EAEXuC,EAAaD,EAAgB1H,KAAKyH,EAAcD,GACpD,GAA0B,IAAtBG,EAAW5V,OAAc,OAAY,EAEzC,IAAK,IAAImX,EAAI,EAAGA,EAAIvB,EAAW5V,OAAQmX,IAAK,CAC1C,IAAIwB,EAAOpQ,EAAgBqR,QAAQhE,EAAWuB,EAAI,GAAGjT,GAAI0R,EAAWuB,GAAGjT,IACvEmP,GAAYsF,GAAMlO,KAAKmO,QAAU,CAClC,CACD,OAAOvF,GACN,IAEGwG,EAAsB7M,EAAAA,YAAY,KACtC,GAAI7E,EAAWnI,OAAS,EACtB,IAAK,IAAImX,EAAI,EAAGA,EAAKhP,EAAWnI,OAAS,EAAImX,IAE3C8B,OAAOC,KADkB/Q,EAAWgP,GAAG1I,iBACC9N,QAAQ6O,IAC9C,GAAkD,MAA9CrH,EAAWgP,GAAG1I,kBAAkBe,IAAwE,MAAlDrH,EAAWgP,EAAI,GAAG1I,kBAAkBe,GAAoB,CAChH,MAAMsK,EAAa3R,EAAWgP,GAAG1I,kBAAkBe,GAC7CuK,EAAW5R,EAAWgP,EAAI,GAAG1I,kBAAkBe,GACjDsK,GAAcC,IAChBxR,EAAgByR,QAAQF,EAAYC,EAAU,CAAEnB,OAAQ,IACxDrQ,EAAgByR,QAAQD,EAAUD,EAAY,CAAElB,OAAQ,IAE3D,GAKN,EACA,CAACzQ,EAAYI,IAEV0R,EAAqBjN,EAAWA,YAAC,CAACkN,EAAwBC,EAAsBpC,EAAcC,EAA2BhB,KAC7H,IAAIoD,EAAsBrC,EAAMK,oBAAoB,YAAa8B,GAE7DG,EAAkBD,EAAYA,EAAUjF,cAAgB,GAE5D,IAAImF,EAAc,KAEdC,EAAoB,KAExB,MAAMzT,EAAqB,GAC3B,IAAK,IAAIqS,KAAOtR,EAAsB,CACpC,MAAM2S,EAAY3S,EAAqBsR,GAEZ,YAAzBqB,EAAUjW,YACgB,YAAvBiW,EAAUlW,UACVkW,EAAUhW,QAAU2V,GAEvBrT,EAAS8D,KAAKuO,EAEjB,CA6BD,OA5BArS,EAASnG,QAAS8Z,IAChB,IAAIC,EAAwB3C,EAAMK,oBAAoB,YAAaqC,GAEnE,MAAM9E,EAAkBjN,EAAW8P,MAAMjQ,EAAiB,CACxD8K,SAAU,SAAUoF,EAAUC,EAAQC,GACpC,QAAIA,EAAKlO,MAAakO,EAAKlO,KAAKmO,MAElC,EAEAC,OAAO,IAGT,GAAI6B,GAAeL,EAAiB,CAClC,IAAIM,EAAoBD,EAAYvF,cACpC,IACE,IAAIyF,EAAiBjB,EAAmBU,GAAmB,GAAIM,GAAqB,GAAIhF,EAAiBpN,GACrGqS,GAAkBA,EAAiBL,IACrCA,EAAoBK,EACpBN,EAAcG,EAEjB,CAAC,MAAOnG,GACPtK,QAAQ+J,KAAK,iBAAiBO,EAAEC,UACjC,CACF,EACI8F,GAAmBK,IACtBJ,EAAcK,EACf,GAEIjB,EAAarR,EAAe6R,EAAgBI,GAAe,GAAIvC,EAAO5P,EAAY6P,EAAiBzP,EAAiByO,EAAK,EAC/H,CAACnP,EAAsBQ,EAAeqR,EAAcvR,EAAYwR,EAAoBjR,EAAYH,IAE7FsS,EAA+B7N,EAAWA,YAAC,CAAC2H,EAAqBqD,EAA2B8C,KAChG,MAAMC,EAAS,IAAIrT,IACbsT,EAAe7S,EAAWwM,GAmChC,OAlCIqG,GAAgBA,EAAarM,cAC/BqM,EAAarM,aAAahO,QAAQsa,IAChC,IAAIC,EAAe,IAAIzI,EAAOA,QAACwI,EAAM5G,KAAKpT,EAAGga,EAAM5G,KAAKnT,GAAI,IACxDia,EAAmB,IAAI1I,EAAOA,QAAC,EAAG,EAAG,GACzCqI,EAA0BM,IAAIF,EAAcC,GAC5C,IAAIE,EAAkBP,EAA0BQ,iBAAiBnT,EAAWwM,GAAapG,iBACrF8M,EAAgBrb,SAElBqb,EAAgB,GAAGE,OAAOpG,cAAgB8F,EAAM3V,KAEhDyV,EAAOK,IAAIC,EAAgB,GAAGE,OAAOzG,UAAWmG,EAAM3V,OAWxD,IAAIkW,EAAsBV,EAA0BQ,iBAAiBnT,EAAWwM,GAAanG,gBAC7F,GAAIgN,EAAoBxb,OAAQ,CAG9B,MAAMyb,EAAiBtT,EAAWwM,GAAalG,gBAC3CgN,IACFA,EAJoBD,EAAoB,GAAGD,OAClBzG,WAGoBmG,EAAM3V,KACnD+C,EAAc4S,EAAM3V,MAAQqP,EAC5BqD,EAAgBpN,KAAKqQ,EAAM3V,MAE9B,IAGEyV,GACN,CAAC1S,EAAeF,IAEnB,MAAO,CACLkN,oBACAqE,eACA9B,qBACAb,oBACAvB,kBACAmE,qBACA9D,oBACAgE,sBACAI,qBACAY,0CCzWYa,EAAcC,EAAiBhH,EAAqB/N,EAAoBgV,GACtF,IAAIC,GAAS,EACTC,EAAoB,mBACxB,MAAMd,EAAepU,EAAO+N,GAC5B,QAAkChP,IAA9BqV,EAAarM,aAA4B,CAC3C,IAAK,IAAIwI,EAAI,EAAGA,EAAI6D,EAAarM,aAAa3O,OAAQmX,IACpD,GAAIwE,EAAO1a,IAAM+Z,EAAarM,aAAawI,GAAG9C,KAAKpT,GAAK0a,EAAOza,IAAM8Z,EAAarM,aAAawI,GAAG9C,KAAKnT,EAAG,CACxG2a,GAAS,EACTC,EAAYd,EAAarM,aAAawI,GAAG7R,KACzC,KACD,CAEEuW,IACHC,EAjBU,SAAeF,GAC7B,MAAO,QAAUA,CACnB,CAekBG,CAAeH,GAG9B,CACD,MAAO,CAACE,EAAWD,EACrB,CCfA,IAAID,EAAa,EAEjB,MCFMI,EAAoBA,KAExB,MAAMjU,oBAAEA,EAAmBF,qBAAEA,EAAoBM,WAAEA,EAAU5B,UAAEA,GAAc4I,KACvEc,eAAEA,GAAmBD,IAQrBiM,EAAuBA,CAACzO,EAAcuK,EAAc5S,EAA4B0C,EAAkDE,EAAuCtB,EAA0ByV,EAAatV,KAEpN,IAAIgO,EAAOmD,EAAMK,oBAAoB,YAAa5K,EAAQnJ,cACtDuQ,GAEFuH,oBAAoBvH,EAAMzP,EAAoB0C,EAAsBE,EAAqBtB,EAAQyV,EAAQtV,EAAQmR,EAClH,EAkBGqE,EAAiCA,CAACtH,EAAmBuH,EAAqBC,EAAoBC,EAAe1U,KACjH,IAAI2F,EAAU3F,EAAqBiN,GAEnCuH,EAAWlb,GAAKmb,EAAUnb,EAE1Bob,EAAQC,SAAShP,GAASzI,QAAU,GAAK0X,KAAKC,GAAK,KAEnDH,EAAQlO,MAAMnN,IAAM,EAEpBmb,EAAWpb,GAAMuM,GAASxI,UAAY,EACtCqX,EAAWnb,GAAMsM,GAASvI,UAAY,EAEtCsX,EAAQpI,SAASiH,IAAIiB,EAAWpb,EAAGob,EAAWnb,EAAGmb,EAAWlb,EAAI,EAClE,EAEMwb,EAAWA,CAACnP,EAA8BM,KAC9C,MAAM8O,EAAM,IAAIC,MAEhB,GADAD,EAAIE,YAAc,YACO,aAArBtP,EAAQlJ,SAAyB,CACnC,IAAIwJ,EAIF,OADA9D,QAAQD,MAAM,2BAFd6S,EAAIG,IAAMjP,EAASvB,IAKtB,MAAUiB,GAAqB,YAArBA,EAAQlJ,SAAwB,CAEzC,IAAI0Y,EAAiBxP,EAAQhJ,MAG7B,GAF2B,UAAvBgJ,EAAQjJ,aAAwByY,EAAiB,SAC1B,cAAvBxP,EAAQjJ,aAA4ByY,EAAiB,aACrDA,EAAgB,CAClB,IAAIC,EAAY,SACU,MAAtBzP,EAAQ3I,aACVoY,EAAYzP,EAAQ3I,WAAW/E,QAAQ,IAAK,KAG9C,MAAMO,EAAYC,SAASC,eAAe,mBAAqByc,GAC/D,IAAK3c,EAEH,OADA2J,QAAQD,MAAM,sBAAuBiT,QAGvC,MAAMxc,EAAcH,EAAUI,cAAc,OAC5C,IAAKD,EAEH,OADAwJ,QAAQD,MAAM,wBAAyBiT,GAExC,KAEuBxc,EAAYE,iBAAiB,UACrCC,QAASC,IACvBA,EAAeC,aAAa,OAAQ,IAAMoc,EAAS,GAGrD,MAAMC,GAAW,IAAIpc,eAAiBC,kBAAkBP,GACxDoc,EAAIG,IAAM,6BAA+BI,OAAOC,KAAKC,SAASC,mBAAmBJ,IAClF,CAEF,KAAM,CACL,GAA6B,KAAzB1P,EAAQ9I,eAAuB8I,GAAS9I,cAAc6Y,WAAW,QAGnE,OAAO,KAFPX,EAAIG,IAAMvP,EAAQ9I,YAIrB,CAED,OAAOkY,GAGHY,EAAeA,CAACZ,EAAuBpP,EAA8BiQ,KACzEb,EAAIc,OAAS,WACX,MAAMC,EAAIrd,SAASyV,cAAc,UAC3BD,EAAM6H,EAAE3H,WAAW,MAEzB2H,EAAEzH,MAAQ0G,EAAI1G,MACdyH,EAAExH,OAASyG,EAAIzG,OAEfL,GAAK8H,UAAUhB,EAAK,EAAG,GAEvB,IAAIiB,EAAU,IAAIjH,EAAAA,cAAc+G,GAChCE,EAAQ/G,WAAa,OAErB,MAAMpF,EAAW,IAAIoM,EAAaA,cAACtQ,EAAQ1I,KAAM0I,EAAQ1I,KAAO8X,EAAIzG,OAASyG,EAAI1G,OAC3EnF,EAAW,IAAI2G,EAAAA,kBAAkB,CACrCnK,IAAKsQ,EACLjZ,aAAa,EACb6L,KAAMC,EAAUA,WAChBE,WAAW,EACXD,YAAY,IAGa,UAAvBnD,EAAQjJ,aACVwM,EAASgE,SAAU,GAGrB0I,EAAY/L,EAAUX,EACxB,GAGIgN,EAAe/Q,EAAWA,YAAC,CAACnF,EAAkDE,EAA0CyF,EAA8BoH,EAAsBE,EAAmBkJ,EAA8BC,EAA4B3B,EAAoB1V,EAAasX,KAC9R,MAAMtB,EAAMD,EAASnP,EAASzF,EAAoByF,EAAQrJ,cAE9C,OAARyY,GAEJY,EAAaZ,EAAKpP,EAAS,CAACkE,EAAUX,KACpC,MAAMoN,EAAW,IAAItJ,EAAIA,KAACnD,EAAUX,GAG9B4D,EAAcC,EAAKD,YACzByH,EAA+BtH,EAAWmJ,EAAmB3B,EAAW6B,EAAUtW,GAClFsW,EAASrJ,UAAYkJ,EACrBG,EAASxJ,YAAcA,EACvBwJ,EAASlJ,YAAchF,EAAe,eACtCrJ,EAAO+N,IAAcxG,UAAUgF,IAAIgL,GACnCD,EAAY,CAAEE,UAAWD,GAAU,EAGvC,EAAG,CAAClO,IAEEoO,EAA+BrR,EAAWA,YAAC,CAC/C0E,EACAoD,EACAH,EACAxP,EACA+W,EACAgC,KAEA,MAAMF,EAAgB7Y,EAAqB2P,EAE3C,IAAIiG,EAAS,KAKb,GAHKrJ,EAAS4M,aACZ5M,EAAS6M,sBAEN7M,EAAS4M,YACZ,YAGF,MAAMA,EAAc5M,EAAS4M,YAEvBL,EAAoB,IAAIxL,EAAAA,QAC9B6L,EAAYE,UAAUP,GAEtB,MAAM3B,EAAY,IAAI7J,EAASA,QAC/B6L,EAAYG,QAAQnC,GAGpB,IAAI9O,EAAkB3F,EAAqBiN,GAAajN,EAAqBiN,GAAa,CAAEvQ,WAAYuQ,EAAUyI,WAAW,aAAe,YAAc,cAAe9Y,YAAe,GAAIK,KAAQ,GAEpM,GAAI,CAAC,cAAe,cAAe,eAAegM,SAAStD,EAAQjJ,YAAa,CAC9E,IAAIma,EAAO,GAETA,EADyB,gBAAvBlR,EAAQjJ,YAAgCiJ,EAAQrJ,aAAe4D,EAAoByF,EAAQrJ,aACtF4D,EAAoByF,EAAQrJ,aAAa8H,YACvC,CAAC,cAAe,eAAe6E,SAAStD,EAAQjJ,YAClDiJ,EAAQ/I,YAER,GAGT,IAAII,EAAoB0B,EAAU3E,iBAC9B4L,EAAQ3I,aACVA,EAAalF,EAAa6N,EAAQ3I,aAUpC,IAAI8Z,EAAgB,IAAIjH,EAAiBA,kBAPf,CACxBlH,MAAO3L,EACPD,aAAa,EACb6L,KAAMC,aACNC,YAAY,EACZC,WAAW,IAGTgO,EAAgB,IAAIC,EAAAA,aAAaH,EAAM,CACzCI,KAAM5C,EACNpX,KAAM7E,SAASuN,EAAQ1I,MACvBqR,OAAQ,IACR4I,cAAe,IAEjBH,EAAcI,SAEd,MAAMC,EAAW,IAAIpK,OAAK+J,EAAeD,GACzCM,EAAS7K,SAAS8K,WAAaR,EAC/BO,EAAS7K,SAAS0K,KAAO5C,EACzBE,EAA+BtH,EAAWmJ,EAAmB3B,EAAW2C,EAAUpX,GAClFoX,EAASnK,UAAYkJ,EACrBiB,EAAStK,YAAcA,EACvBsK,EAAShK,YAAchF,EAAe,cACX,gBAAvBzC,EAAQjJ,aACV0a,EAAS7K,SAASnI,YAAcyS,GAGlCvW,EAAWwM,GAAaxG,UAAUgF,IAAI8L,GACtClE,EAAS,CAAEkE,WACZ,MACwB,gBAAvBzR,EAAQjJ,YACe,iBAAvBiJ,EAAQjJ,YACc,YAArBiJ,EAAQlJ,UAAiD,UAAvBkJ,EAAQjJ,YAA8C,MAApBiJ,EAAQpJ,UACvD,YAArBoJ,EAAQlJ,UAAiD,YAAvBkJ,EAAQjJ,YAA8C,KAAlBiJ,EAAQhJ,OACvD,cAAvBgJ,EAAQjJ,aAETwZ,EAAalW,EAAsBE,EAAqByF,EAASkE,EAAUoD,EAAWkJ,EAAeC,EAAmB3B,EAAWnU,EAAY+V,GAEjJ,OAAOnD,GACN,CAAClT,EAAsBE,EAAqBI,EAAY4V,EAAc9N,EAAgB1J,EAAU3E,mBAEnG,MAAO,CACLud,uBA1O6BA,CAACC,EAA6CrH,EAAc5S,EAA4B0C,EAAkDE,EAAkDtB,EAA0ByV,EAAatV,KAChQ,IAAK,IAAIyY,EAA0B,EAAGA,EAA0BD,EAAwBpf,OAAQqf,IAC9FpD,EAAqBmD,EAAwBC,GAA0BtH,EAAO5S,EAAoB0C,EAAsBE,EAAqBtB,EAAQyV,EAAQtV,EAC9J,EAwODqV,uBACAqD,wBA7N+B1K,IAC1B2K,MAAMC,QAAQ5K,KACjBA,EAAO,CAACA,IAEEA,EAAKhH,OAAO,CAAC6R,EAAKC,KACvBA,EAAIhO,SAAS4M,aAChBoB,EAAIhO,SAAS6M,qBAGfkB,EAAIE,MAAMD,EAAIhO,SAAS4M,aAChBmB,GACN,IAAIG,SAmNPxD,iCACAO,WACAa,eACAO,eACAM,iCClPJ,IAAIe,EAAwC,GAE5C,MCTaS,EAAmBC,IAC5B,MAAM/H,MAAEA,GAAUgI,EAAAA,WAIlB,OAHID,EAAOE,aACPjI,EAAMiI,WAAa,IAAIjgB,EAAAA,MAAM+f,EAAOE,aAEjC,MCDEC,EAAoBC,IAC/B,MAAM7e,OAAEA,GAAW0e,EAAQA,WAErBI,EAA8BD,EAAMrc,KAAOqc,EAAME,MAAQF,EAAMtc,IAkBrE,OAjBIsc,EAAMrc,MACRxC,EAAOwC,IAAMqc,EAAMrc,KAEjBqc,EAAME,OACR/e,EAAO+e,KAAOF,EAAME,MAGlB/e,aAAkBgf,EAAiBA,mBACjCH,EAAMtc,MACRvC,EAAOuC,IAAMsc,EAAMtc,KAInBuc,GACF9e,EAAOif,yBAGF,eChCOC,EAAetf,GAC3B,OAAOA,EAAI,GAAM,EAAIA,EAAIA,EAAIA,EAAI,EAAIwb,KAAK+D,KAAK,EAAIvf,EAAI,EAAG,GAAK,CACnE,CCQgB,SAAAwf,GAAU7L,KAAEA,IAC1B,MAAM8L,EAAeC,SAAwB,MAoF7C,OAlFA7T,EAAAA,UAAU,KACR,IAAK8H,EACH,OAGF,IAAKA,EAAKlD,SAAShE,OAAO1B,MAExB,YADAhC,QAAQ4W,IAAI,sCAId,KAAMhM,EAAK7D,oBAAoB2G,EAAAA,mBAC7B,OAEF,IAAK9C,EAAK7D,SAASxD,IAEjB,YADAvD,QAAQ4W,IAAI,oBAIdhM,EAAKlD,SAASiG,aAAa,EAAG,GAE9B,MAAMkJ,EAAMjM,EAAKlD,SAAShE,MAAM1B,MAC1B8U,EAAc,MAEhB,MACMC,EAAYC,YAAYC,MAC9B,MAAO,KACL,MAAMC,GAAYF,YAAYC,MAAQF,GAHzB,IAIPI,EAAe1E,KAAKvO,MAAMqS,EAAeW,GAAYL,GAEvDK,GAAY,IACdR,EAAazZ,QAAUma,GAGzBxM,EAAKlD,SAASiG,aAAa,EAAGwJ,EAChC,CACD,EAdiB,GAiBdC,EAAiB,MACrB,KAAMxM,EAAK7D,oBAAoB2G,qBAC7B,OAAO,KAET,IAAK9C,EAAK7D,SAASxD,IACjB,OAAO,KAET,MAAM8T,EAAezM,EAAK7D,SAASxD,IAAIsJ,OAIjCkK,EAAYC,YAAYC,MAC9B,MAAO,KACL,MAAMC,GAAYF,YAAYC,MAAQF,GALzB,IAK+C,EAC5DM,EAAapgB,EALO,GACC,IAI6Bsf,EAAeW,GAEpE,EAhBsB,GAoBvB,OAFAR,EAAazZ,QAAU6Z,EAEhB,KACLJ,EAAazZ,QAAU,KACvB2N,EAAK0M,mBACD1M,EAAK7D,oBAAoB2G,EAAAA,mBAC3B9C,EAAK7D,SAASuE,UAEZV,EAAKlD,UACPkD,EAAKlD,SAAS4D,SACf,CACH,EAEC,CAACV,IAEJ2M,EAAAA,SAAS,KACP,GAAIb,EAAazZ,QACf,IACEyZ,EAAazZ,SACd,CAAC,MAAOqN,GACPtK,QAAQD,MAAM,wBAAwBuK,EAAEC,WACxCmM,EAAazZ,QAAU,IACxB,CACF,GAGE2N,EACE5F,EAAAA,IAAW,YAAA,CAAAuM,OAAQ3G,QAC5B,CCnFa,MAAA4M,EAAkBA,EAAG1c,OAAM2c,WAAUC,QAAO3Y,eAAclE,aAAa,YAClF,MAAM0B,UAAEA,GAAc4I,KAChB,CAAGwS,GAAiBvb,WAAiB,IAEpCyX,EAAS+D,GAAcxb,EAAQA,SAAiB,MACjDiI,EAAQoT,EAAW,EAAI3c,EAAO,IAAM,EAAIA,EAE9CgI,EAASA,UAAC,KACH2U,QAA6B9b,IAAjBoD,GACf4Y,EAAc,GAAK5Y,EAAexC,EAAU5C,OAAOG,cAAgByC,EAAU5C,OAAOI,YAAcwC,EAAU5C,OAAOG,aACpH,EACA,CAAC2d,EAAUlb,EAAWwC,IAEzB,MAAMgI,EAAW7H,UAAQ,IAClB2U,EAIY,IAAIgE,EAAcA,eAAC,CAAEtU,IAAKsQ,EAASiE,iBAAkBL,EAAU7Q,WAAW,EAAOD,YAAY,EAAOH,MAAO3L,IAF3H,KAIA,CAAC4c,EAAU5D,EAAShZ,IAwBvB,OArBAiI,YAAU,KACR,MAAMiV,EAAYzhB,SAASC,eAAe,0BAA0BE,cAAc,OAClF,GAAIshB,EAAW,CACb,MAAM7E,GAAW,IAAIpc,eAAiBC,kBAAkBghB,GAClDC,EAAU,IAAIC,KAAK,CAAC/E,GAAU,CAAE3X,KAAM,kBACtC0F,EAASiX,IAAIC,gBAAgBH,GAC7B/L,EAAS3V,SAASyV,cAAc,UACtCE,EAAOC,MAAQ,IACfD,EAAOE,OAAS,IAChB,MAAML,EAAMG,EAAOD,WAAW,MACxB4G,EAAMtc,SAASyV,cAAc,OACnC6G,EAAIG,IAAM9R,EACV2R,EAAIc,OAAS,KACX5H,GAAK8H,UAAUhB,EAAK,GAAI,EAAG,GAAI,KAC/B,MAAMwF,EAAa,IAAIC,UAAQpM,GAC/BmM,EAAWE,aAAc,EACzBV,EAAWQ,EAAU,CAExB,GACA,IAECrR,EAEAwR,OACE,QAAA,CAAA1c,SAAA,CAAAmJ,EAAAC,IAAA,SAAA,CAAQZ,MAAOA,EAAO0C,SAAUA,IAE/B2Q,GAAS1S,MAACwT,EAAAA,KAAI,CAAA3c,SAACmJ,MAAK,MAAA,CAAAyT,0BAK1B,IAAA,EC9BH,SAASC,EAAUxC,GACjB,MAAM3a,KAAEA,EAAIqP,KAAEA,EAAI+N,kBAAEA,GAAsBzC,EAC1CpT,EAASA,UAAC,KACR8H,EAAKR,SAASwO,cAAgB,OAGvB,IAAMhO,EAAKR,SAASwO,mBAAgBjd,GAC1C,CAACiP,EAAKR,WAET,MAAMrL,aAAEA,GAAiBoG,IAIzB,OAAQ5J,GACN,IAAK,YACH,OAESyJ,EAAAA,IAA2B,YAFhC4F,EAAKR,SAASyO,aAAejO,EAAKR,SAASyO,YAAYC,aAAeH,EAEtC,CAAApH,OAAQ3G,WACvCA,EAAKR,SAASyO,YAAc7T,MAACwS,EAAe,CAAC1c,KAAM8P,EAAKR,SAASyO,YAAY/d,KAAM4c,MAAO9M,EAAKR,SAASyO,YAAYnB,MAAO3Y,aAAcA,EAAc0Y,SAAU7M,EAAKR,SAASyO,YAAYpB,SAAU5c,WAAY+P,EAAKR,SAASyO,YAAYhe,aAAiB,MAGxP,CAA2B0W,OAAQ3G,WACvCA,EAAKR,SAAS2O,YAAc/T,MAACwT,EAAIA,KAAA,CAACxL,MAAO,CAAEgM,cAAe,QAAUC,eAAgBrO,EAAKR,SAAS6O,eAAcpd,SAAG+O,EAAKR,SAAS2O,cAAsB,MALnInO,EAAKsO,MAQhC,IAAK,QACH,OAAItO,EAAKR,SAASyO,aAAejO,EAAKR,SAASyO,YAAYC,aAAeH,EACjE3T,EAAAA,IACJmU,EAAAA,SAAA,CAAAtd,SAAA+O,EAAKR,SAASyO,YAAc7T,EAAAA,IAACwS,EAAe,CAAC1c,KAAM8P,EAAKR,SAASyO,YAAY/d,KAAM4c,MAAO9M,EAAKR,SAASyO,YAAYnB,MAAO3Y,aAAcA,EAAc0Y,SAAU7M,EAAKR,SAASyO,YAAYpB,SAAU5c,WAAY+P,EAAKR,SAASyO,YAAYhe,aAAiB,OAGxP,KAEX,QACE,OACH,KACH,CAEa,MAAA6C,EAAOoY,IAClB,MAAMsD,WAAEA,EAAUC,UAAEA,EAASP,WAAEA,EAAUH,kBAAEA,EAAiBW,eAAEA,EAAcC,cAAEA,EAAaxO,QAAEA,EAAOyO,kBAAEA,GAAsB1D,GACtHvZ,UAAEA,EAAS4B,WAAEA,GAAegH,KAE5BsU,WAAEA,EAAUC,WAAEA,EAAUC,WAAEA,GAAeP,EACzClV,EAAQ/F,EAAW2a,GAEnBc,EAAgB9D,EAAO8D,cACvBC,EAAgB/D,EAAOgE,eACvBC,EAAejE,EAAOkE,eACtBC,EAAUnE,EAAOmE,QAEjBC,EAAkBT,EAAWX,GAC7BqB,EAAkBT,EAAWZ,GAC7BsB,EAAkBT,EAAWb,GAC7BpU,EAAkBvG,EAAW2a,GAAYpU,gBAE/C,OACE6T,EAAA8B,KAAA,QAAA,CAAOtP,QAASA,EAAOlP,SAAA,CACpBqe,GAAiB3W,IAAKuS,IACrB,IAAKA,EAAOlL,KAAM,OAAO,KAEzB,MAAM0P,EAAevP,GAAW+K,EAAOlL,KAAKG,SAAW7G,EAAMK,iBAAmBL,EAAMK,gBAAgBuC,SAASgP,EAAOlL,MAChH2P,EAAUhB,GAAiBzD,EAAOlL,KAAKE,YAAcyO,EACrDrS,EAASoS,GAAkBxD,EAAOlL,KAAKE,YAAcwO,EAC3D,GAAIgB,EAEF,IAAKpT,GAAUqT,KAAazE,EAAOlL,KAAK7D,oBAAoBC,EAAAA,qBAAuB8O,EAAOlL,KAAK7D,oBAAoByT,EAAAA,sBAAuB,CAExI,MAAMC,EAAYvT,EAAS3K,EAAU7E,aAAeoe,EAAOlL,KAAK7D,SAASE,aACzE6O,EAAOlL,KAAK7D,SAASP,MAAQ+T,EA/EjB/T,KACtB,GAAIA,EAAO,CACT,IAAIkU,EAAW,IAAKlU,GAIpB,OAHAkU,EAASC,EAAc,IAAVnU,EAAMmU,EACnBD,EAASE,EAAc,IAAVpU,EAAMoU,EACnBF,EAASG,EAAc,IAAVrU,EAAMqU,EACZH,CACR,CACD,OAAO,MAuE0CI,CAAeL,GAAaA,CACpE,MAEC3E,EAAOlL,KAAK7D,SAASP,MAAQsP,EAAOlL,KAAK7D,SAASE,aAItD,OAAOjC,EAAkCC,IAAA,QAAA,IAACqV,EAAc,CAAET,gBAAeD,gBAAeG,eAAcE,WAAY,CAAA,EAChHpe,SAAAmJ,EAAAC,IAAA,YAAA,CAAWsM,OAAQuE,EAAOlL,QADTkL,EAAOlL,KAAKsO,KAAI,GAIpCiB,GAAiB5W,IAAKuS,GAChBA,EAAOb,SAEVjQ,EAAAA,IAAC+V,EAAAA,QAAMC,SAEL,CAAAnf,SAAAmJ,EAAAA,IAAA,YAAA,CAAWuM,OAAQuE,EAAOb,SAAQpZ,SAE/Bia,EAAOb,SAAS7K,SAASyO,YAAc7T,EAAAA,IAAC0T,EAA0B,CAAA9N,KAAMkL,EAAOb,SAAU0D,kBAAmBA,EAAmBpd,KAAM,QAASwP,QAASA,QAAhGpP,GAA8G,QAJrJma,EAAOb,SAASiE,MAFV,MAW9BkB,GAAiB7W,IAAKuS,GAChBA,EAAO1B,UACLpP,MAAC0T,EAAS,CAA6B9N,KAAMkL,EAAO1B,UAAWuE,kBAAmBA,EAAmBpd,KAAM,YAAawP,QAASA,GAAjH+K,EAAO1B,UAAU8E,MADV,MAI/BxU,GAAiBnB,IAAKuS,GACd9Q,EAAAA,IAAA,YAAA,CAAiDuM,OAAQuE,EAAMja,SACpEmJ,EAAAA,IAACwT,EAAAA,KAAI,CAACzN,SAAS,EAAMZ,SAAU2L,EAAOpO,SAASuT,gBAAgBjG,OAAMnZ,SACnEmJ,EAAAA,IAAK,MAAA,CAAAyT,UAAW,yBACdzL,MAAO,CAAEkO,QAASnQ,EAAU,QAAU,QACtCkP,QAAU3P,IACRA,EAAE6Q,kBACF3B,EAAkB1D,EAAOzG,WAAW3L,OAAS,IAE/C,GACAkW,cAAgBtP,GAAMA,EAAE6Q,kBAAiBtf,SACzC0c,cAAKE,UAAW,iBAA6Bve,GAAI4b,EAAOhL,UAAmBjP,SAAA,CACzEmJ,EAAAA,WAAKyT,UAAW,iBAA6B2C,wBAAyB,CAAEC,OAAQnlB,EAAe,gBAC/FqiB,EAAA8B,KAAA,MAAA,CAAK5B,UAAW,eAA0B5c,SAAA,CAAAia,EAAOzG,WAAWC,UAAmB,WAAAwG,EAAOzG,UAAYlR,EAAWnI,OAAS8f,EAAOzG,UAAU3L,MAAQ,cAZhI,aAAaoS,EAAOhL,cAmB7C9F,EAAAC,IAACwR,EAAS,CAAC7L,KAAMyO,MACX,ECxJN,SAAUiC,EAAwBC,EAAc3hB,EAAa4hB,EAAqBxO,GAOtF,GAHKuI,MAAMC,QAAQ+F,KACjBA,EAAO,CAACA,KAELA,EAAKvlB,OAER,OADAgK,QAAQ+J,KAAK,8CACN,CAAEI,SAAU,IAAI1B,UAAWgT,OAAQ,IAAIhT,WAGhD,MAAMiT,EAAkBH,EAAK3X,OAAO,CAAC6R,EAAKC,KACnCA,EAAIhO,SAAS4M,aAChBoB,EAAIhO,SAAS6M,qBAEXmB,EAAIhO,SAAS4M,aACfmB,EAAIE,MAAMD,EAAIhO,SAAS4M,aAElBmB,GACN,IAAIG,QAED+F,EAAW,IAAIlT,EAASA,QAC9BiT,EAAgBjH,QAAQkH,GAExB,MAAM3G,EAAS,IAAIvM,EAASA,QAC5BiT,EAAgBlH,UAAUQ,GAE1BuG,EAAK,GAAGK,aAAa5G,GAErB,IAAI6G,EAASpJ,KAAKqJ,IAAIrJ,KAAKC,GAAK9Y,EAAM,KAIlCmiB,EAAQtJ,KAAKuJ,IAHH,IACGL,EAAS1kB,EAAe,GAAK4kB,EAASL,GADzC,IAEIG,EAASzkB,EAAe,EAAI2kB,GAE1CI,EAQN,SAA+B/kB,EAAW8V,GACxC,IAAIkP,EAAQ,GAEZ,MADc,OAAVlP,IAAgBkP,EAAQ,MACrBhlB,EAAIub,KAAKqJ,IAAII,EAAQzJ,KAAKC,GAAK,IACxC,CAZcyJ,CAAsBJ,EAAO/O,GAEzC,MAAMyO,EAAS,IAAIhT,EAAAA,QAAQuM,EAAO/d,EAAG,EAAG+d,EAAO7d,GAG/C,MAAO,CAAEgT,SAFQ,IAAI1B,UAAQuM,EAAO/d,EAAG8kB,EAAO/G,EAAO7d,EAAI8kB,GAEtCR,SACrB,OCHaW,EAAYC,EAAUA,WAAC,CAACvG,EAAwBwG,KAC3D,MAAM/f,UAAEA,EAASsB,qBAAEA,EAAoBQ,cAAEA,EAAa3B,eAAEA,EAAc6B,gBAAEA,EAAeS,gBAAEA,EAAeb,WAAEA,GAAegH,KACnH8K,mBAAEA,EAAkBP,aAAEA,GAAiBtE,KAEtCmR,EAAWC,GAAgBpgB,EAAAA,UAAkB,IAC9Cgd,WACJA,EAAUT,kBACVA,EAAiB8D,aACjBA,EAAYC,oBACZA,EAAmBC,cACnBA,EAAaC,kBACbA,EAAiBC,kBACjBA,EAAiBrD,kBACjBA,EAAiB/H,eACjBA,EAAcqL,KACdA,EAAIC,mBACJA,EAAkBC,8BAClBA,EAA6B1D,eAC7BA,EAAc2D,uBACdA,EAAsBC,gBACtBA,EAAeC,kBACfA,EAAiBC,aACjBA,EAAYC,uBACZA,EAAsBC,WACtBA,GACExH,GACGyH,EAAcC,GAAmBphB,WAAS,CAAEqhB,IAAKlhB,EAAU5C,OAAOG,YAAakiB,IAAKzf,EAAU5C,OAAOI,YAAa2jB,gBAAiB,EAAGpF,aAAa,IAEpJqF,EAAWhH,EAAAA,OAAc,OACxBiH,EAAYC,GAAiBzhB,EAAAA,SAAiB,IAC/C0hB,EAAgBnH,EAAAA,OAAY,OAC5Btf,OAAEA,EAAM0W,MAAEA,GAAUgI,aACpBgI,EAAcpH,EAAMA,OAIhB,MAGJ3J,EAAQzQ,EAAUvD,MAClBglB,EAAczhB,EAAU7E,aACxBumB,EAAOxB,EAAgBA,EAA0B3R,UACrD8R,QAAwCjhB,EACpCuiB,GAAyC,WAAnB3hB,EAAU5D,MAAqBgkB,EAErDwB,GAAcnb,cAAY,CAACob,GAAqB,KACpD,KAAM/mB,aAAkBgf,EAAAA,mBAEtB,YADArW,QAAQD,MAAM,qCAGhB,MAAMse,EAA0BjF,EAAWK,WAAWiD,GACtD,IAAK2B,GAAyBroB,OAE5B,YADAgK,QAAQ+J,KAAK,0BAIf,IAAIuU,EACJA,EAASD,EAAwB9a,IAAI5C,GAAQA,EAAKiK,MAGlD,MAAM2T,EAAQjD,EAAwBgD,EAAQjnB,EAAOuC,IAAKvC,EAAOmnB,OAA2B,WAAnBjiB,EAAU5D,KAAoB,KAAOqU,GAE9G,IAAIyR,GAAY,EAEhB,GAAIpB,EAAwB,CAC1B,IAAIqB,EAAWrB,EAAuBhmB,OAChCqnB,aAAoBjW,YACxBiW,EAAW,IAAIjW,EAAAA,QAAQiW,EAASznB,EAAGynB,EAASxnB,EAAGwnB,EAASvnB,IAE1DsnB,EAA+C,IAAlCC,EAAqB1oB,QACnC,CAEIooB,IAAaf,GAA2BoB,GAAc,CAAC,UAAU3X,SAASvK,EAAU5D,QACvF4lB,EAAMpU,SAASiH,IAAIiM,EAAuBhmB,OAAOJ,EAAGomB,EAAuBhmB,OAAOH,EAAGmmB,EAAuBhmB,OAAOF,GACnHonB,EAAM9C,OAAOrK,IAAIiM,EAAuB/lB,SAASL,EAAGomB,EAAuB/lB,SAASJ,EAAGmmB,EAAuB/lB,SAASH,IAGzH,MAAMwnB,EAAiBlM,KAAKgL,IAC1BF,EAAavB,IACbvJ,KAAKuJ,IACHuB,EAAaE,IACbc,EAAMpU,SAASb,WAAWiV,EAAM9C,UAGpC8C,EAAMpU,SAASpB,IAAIwV,EAAM9C,QAAQmD,UAAUD,GAAgBxV,IAAIoV,EAAM9C,QAErEsC,EAAY9gB,QAAU,IACjBshB,EACHM,aAAcf,EAAc7gB,QAAQsU,OAAOpH,SAASrB,QACpDgW,WAAYhB,EAAc7gB,QAAQwe,OAAO3S,QACzCiW,mBAAoB/H,YAAYC,MAChC+H,SAAUziB,EAAU5C,OAAOK,WAEzB,CAAC,cAAe,WAAW8M,SAASvK,EAAU5D,QAAsC,IAA7B4kB,EAAajF,aAAyBiF,EAAaG,gBAAkB,GAC9HF,EAAgByB,IAAO,IAClBA,EACHxB,IAAKlhB,EAAU5C,OAAOG,YAAc,GAAM,GAAMyC,EAAU5C,OAAOG,YACjEkiB,IAAKzf,EAAU5C,OAAOI,cAEzB,EAGA,CAAC1C,EAAQkmB,EAAajF,YAAa/b,EAAU5C,OAAOK,UAAWuC,EAAU5C,OAAOI,YAAawC,EAAU5C,OAAOG,YAAaujB,EAAwB9gB,EAAU5D,KAAM+jB,EAAqBtD,EAAWK,WAAYzM,IAE5MkS,GAAgBnB,EAAY9gB,QAAU8gB,EAAY9gB,QAAQkN,SAASb,WAAWyU,EAAY9gB,QAAQwe,QAAU,EAElH3Y,EAAAA,UAAU,KACJua,GACFc,IACD,EACA,CAACd,EAAwBc,KAE5Brb,EAAAA,UAAU,KAEJoc,GAAgB,GAAK3B,EAAajF,cACpCkF,EAAgB,CAAEC,IAAKlhB,EAAU5C,OAAOG,YAAc,GAAM,GAAMyC,EAAU5C,OAAOG,YAAakiB,IAAKzf,EAAU5C,OAAOI,YAAa2jB,gBAAiBwB,GAAe5G,aAAa,IAChL4E,GAAgB,GACjB,EAEA,CAACgC,GAAe3B,EAAajF,YAAa/b,EAAU5C,OAAQujB,IAE/Dpa,YAAU,KACR0a,EAAiByB,IAAE,IAAWA,EAAI3G,aAAa,IAAO,EACrD,CAAC/b,EAAU5C,SAEdmJ,EAASA,UAAC,KAEJ,CAAC,cAAe,WAAWgE,SAASvK,EAAU5D,OAASgkB,GAAiBY,EAAaG,gBAAkB,GACzGF,EAAgByB,IACd,MAAMnlB,EAAc2Y,KAAKuJ,IAAImD,OAAO5iB,EAAUhE,qBAAsBgE,EAAU5C,OAAOG,aACrF,MAAO,IACFmlB,EACH3G,aAAa,EACbmF,IAAK3jB,EAAc,GAAM,GAAMA,EAC/BkiB,IAAKzf,EAAU5C,OAAOI,cAG3B,EACA,CAACwC,EAAUhE,oBAAqBokB,EAAeY,EAAaG,gBAAiBnhB,EAAU5D,KAAM4D,EAAU5C,OAAOG,YAAayC,EAAU5C,OAAOI,cAG/I+I,EAAAA,UAAU,KACJsW,EAAWK,WAAWzjB,OAAS,GACjCmoB,IACD,EACA,CAAC/E,EAAWK,WAAWzjB,OAAQmoB,KAElCrb,EAAAA,UAAU,KACR,IAAK+Z,GAAwC,WAAnBtgB,EAAU5D,KAElC,YADAklB,EAAc,IAGhB,MAAMuB,EAAQnP,EAAmBgO,GAAQ,GAAIpB,EAAmB9O,EAAO0D,EAAgBzE,GACvF6Q,EAAcuB,GAEV3C,GAAmC,gBAAnBlgB,EAAU5D,MAC5B6gB,EAAkBkD,EACnB,EAEA,CAACG,EAAmB9O,EAAOxP,EAAiBJ,EAAYsT,EAAgBzE,EAAOiR,EAAM1hB,EAAU5D,KAAM0F,EAAeR,EAAsBoS,EAAoBwM,EAAcjD,EAAmBkD,IAElM,MAAM2C,GAAkBrc,cAAY,KAClC7E,EAAWmhB,OAAO3oB,QAASgK,GAASA,EAAK+D,gBAAkB,GAC7D,EAAG,CAACvG,IAEJ2E,EAASA,UAAC,KAER,IAAKmb,IAAStB,GAAoC,WAAnBpgB,EAAU5D,KAAmB,CAC1D,GAAuB,WAAnB4D,EAAU5D,KACZ,GAAIgkB,EAAe,CACjB,MAAM4C,EAAaxR,EAAMK,oBAAoB,YAAauO,GACtD4C,GACF1B,EAAc,CAAC0B,GAElB,MACCF,KACAxB,EAAc,SAENhB,IACVwC,KACAxB,EAAc,KAEhB,MACD,CACIhB,GACH1e,EAAWxH,QAAQuN,IACjBA,EAAMQ,gBAAkB,KAQ5B,MAAM0a,EAAQ1P,EAAarR,EAAe4f,EAAMtB,EAAe5O,EAAO5P,EAAYib,EAAWpL,gBAAiBzP,EAAiByO,GAE/H6Q,EAAcuB,EAAK,EAElB,CAACnB,EAAMtB,EAAe5O,EAAO1W,EAAQ8G,EAAY6f,EAAazf,EAAiByO,EAAOoM,EAAWpL,gBAAiB6O,EAAmBtgB,EAAU5D,KAAM0F,EAAe+e,EAAc1N,EAAc2P,KAEnM,MAAMhB,GAA0BjF,EAAWK,WAAWd,GACtD7V,EAAAA,UAAU,KACR,GAAuB,sBAAnBvG,EAAU5D,KAA8B,OAE5C,KAAMtB,aAAkBgf,EAAiBA,mBAEvC,YADArW,QAAQD,MAAM,qCAGhB,IAAKse,IAAyBroB,OAE5B,YADAgK,QAAQ+J,KAAK,0BAIf,IAAIjF,EAAc3G,EAAWwa,IAAoB7T,YAEjD,IAAKwU,IAAmBuD,EACtB,OAGF,IAAIyB,EAAiB,GACrB,GAAIV,EAAWjF,IAAsB7T,GAAa9O,OAEhDsoB,EAAS,IAAIxZ,QACJwU,GAAAA,IAAsC,WAAnB/c,EAAU5D,MAAqBskB,GAAyB,CACpF,MAAMuC,EAAsB7C,GAAiB0B,GAAwBpa,KAAKtD,GAAQA,EAAKiK,KAAKE,YAAc6R,GACtG6C,IACFlB,EAAS,CAACkB,EAAoB5U,MAEjC,CACI0T,EAAOtoB,SACVsoB,EAASD,GAAwB9a,IAAI5C,GAAQA,EAAKiK,OAGpD,MAAM2T,EAAQjD,EAAwBgD,EAAQjnB,EAAOuC,IAAKvC,EAAOmnB,OAA2B,WAAnBjiB,EAAU5D,MAAwC,YAAnB4D,EAAU5D,KAAqB,KAAOqU,GACxI2R,EAAiBlM,KAAKgL,IAC1BS,GAAsB3hB,EAAU5C,OAAOI,YAAcwjB,EAAavB,IAClEvJ,KAAKuJ,IACHkC,GAAsB3hB,EAAU5C,OAAOG,YAAcyjB,EAAaE,IAClEc,EAAMpU,SAASb,WAAWiV,EAAM9C,UAGpC8C,EAAMpU,SAASpB,IAAIwV,EAAM9C,QAAQmD,UAAUD,GAAgBxV,IAAIoV,EAAM9C,QACrEsC,EAAY9gB,QAAU,IACjBshB,EACHM,aAAcf,EAAc7gB,QAAQsU,OAAOpH,SAASrB,QACpDgW,WAAYhB,EAAc7gB,QAAQwe,OAAO3S,QACzCiW,mBAAoB/H,YAAYC,MAChC+H,SAAUziB,EAAU5C,OAAOK,YAM5B,CAAC4jB,EAAYS,GAAyB1F,EAAmB3L,EAAO3V,EAAQslB,EAAepgB,EAAU5D,KAAM4D,EAAU5C,OAAOI,YAAawC,EAAU5C,OAAOG,YAAayC,EAAU5C,OAAOK,UAAWmE,EAAYmb,EAAgBuD,EAAmBI,EAAwBiB,GAAqBX,EAAavB,IAAKuB,EAAaE,MAE7T3a,EAASA,UAAC,KACR,GAAIga,GAAMxN,WAAawO,EAAc7gB,QAAS,CAC5C,KAAM5F,aAAkBgf,qBAEtB,YADArW,QAAQD,MAAM,qCAIhB,IAAKse,GAAwBroB,OAE3B,YADAgK,QAAQ+J,KAAK,0BAIf,IAAIuU,EACJ,GAAIV,EAAWjF,GAAoB,CACjC2F,EAAS,CAACV,EAAWjF,IAErB,MAAM6G,EAAsB7C,GAAiB0B,GAAwBpa,KAAKtD,GAAQA,EAAKiK,KAAKE,YAAc6R,GACtG6C,GACFlB,EAAO1d,KAAK4e,EAAoB5U,KAEnC,MACC0T,EAASD,GAAwB9a,IAAI5C,GAAQA,EAAKiK,MAEpD,MAAM2T,EAAQ,CACZpU,SAAU2T,EAAc7gB,QAAQsU,OAAOpH,SAASrB,QAChD2S,OAAQqC,EAAc7gB,QAAQwe,OAAO3S,SAGvC,IAAI6V,EAAiBJ,EAAMpU,SAASb,WAAWiV,EAAM9C,QAE9B,OAAnBqB,EAAKxN,UACPqP,GAAkBpiB,EAAUjE,UAE5BqmB,GAAkBpiB,EAAUjE,UAG9BqmB,EAAiBlM,KAAKgL,IACpBF,EAAavB,IACbvJ,KAAKuJ,IACHuB,EAAaE,IACbkB,IAIJJ,EAAMpU,SAASpB,IAAIwV,EAAM9C,QAAQmD,UAAUD,GAAgBxV,IAAIoV,EAAM9C,QAErEsC,EAAY9gB,QAAU,IACjBshB,EACHM,aAAcf,EAAc7gB,QAAQsU,OAAOpH,SAASrB,QACpDgW,WAAYhB,EAAc7gB,QAAQwe,OAAO3S,QACzCiW,mBAAoB/H,YAAYC,MAChC+H,SAAUziB,EAAU5C,OAAOK,UAE9B,GAEA,CAAC8iB,IAEJ,MAAM2C,GAAqBA,IAClBlC,EAAaG,gBAGhBgC,GAAe1c,EAAWA,YAAEsH,IAChC,GAAIyS,EAAoB,CACtB,MAAM4C,EAAS,IAAIlX,EAAAA,QACnBkX,EAAOlS,KAAKnD,EAAEmR,OAAOlK,OAAOpH,UAC5BwV,EAAO5W,IAAI+U,EAAc7gB,QAAQwe,QACjCsB,EAAmB4C,EAAO3pB,UAC1BgJ,EAAgB2gB,EAAO3pB,UACnBgnB,GAEFA,EAA8B,CAC5B3lB,OAAQymB,EAAc7gB,QAAQsU,OAAOpH,SAASrB,QAC9CxR,SAAUwmB,EAAc7gB,QAAQwe,OAAO3S,SAG5C,GACA,CAACiU,EAAoBC,EAA+Bhe,IAEvDuY,EAAQA,SAAC,KACP,GAAIwG,EAAY9gB,SAAS+hB,UAAYjB,EAAY9gB,SAAS+hB,SAAW,EAAG,CACjEzC,IACHC,GAAa,GACbuB,EAAY9gB,QAAQ+hB,SAAW,GAEjC,MAAMT,EAAQR,EAAY9gB,QACpB2iB,GAAiB5I,YAAYC,MAAQsH,EAAMQ,oBAAsB,IAEjEc,EAAoBpN,KAAKgL,IAAI,EAAGmC,EAAgBrB,GAAOS,UAC7DlB,EAAc7gB,QAAQsU,OAAOpH,SAAS2V,YAAYvB,EAAMM,aAAcN,EAAMpU,SAAU0V,GACtF/B,EAAc7gB,QAAQwe,OAAOqE,YAAYvB,GAAOO,WAAYP,EAAM9C,OAAQoE,GAE1E/B,EAAc7gB,QAAQsU,OAAO+E,yBACzBuJ,GAAqB,IACvB9B,EAAY9gB,QAAU,KAEzB,IAGH,MAAM8iB,GAAqB/c,cAAagd,IACtC,GAAIA,EAAahqB,OAAQ,CACvB,MAAM8N,EAAWpH,EAAeK,UAAUkH,KAAKtD,GAAQA,EAAKuB,OAAS8d,GACrE,GAAIlc,EAAU,CACZ,MAAME,EAAStH,EAAeI,SAASmH,KAAKtD,GAAQA,EAAKxG,cAAgB2J,EAAS5J,IAClF,GAAI8J,EAAQ,CACV,MAAM0R,EAAM3H,EAAMK,oBAAoB,YAAapK,EAAO3J,cACtDqb,GACFyH,EAAkBzH,EAAiB1R,EAAO3J,cAAc,EAE3D,CACF,CACF,GACA,CAAC8iB,EAAmBzgB,EAAgBqR,IASvC,OAPAkS,EAAAA,oBAAoB3D,EAAK,KAAO,CAC9B6B,eACA4B,sBACAN,yBAIMza,EAAOC,IAAA,QAAA,CAAAib,SAAU,CAACzN,KAAKC,GAAK,EAAG,EAAG,GAAI4J,IAAKqB,EACjD9hB,SAAA0c,EAAAA,KAAAY,EAAA6B,SAAA,CAAAnf,SAAA,CACEmJ,EAAAA,IAACmb,EAAAA,YACC,CAAAC,aACA,EAAAC,SAAUX,GACVpD,IAAKwB,EACLwC,cAAe7N,KAAKC,GAAK,EACzB5Y,YAAaokB,GAAsBxlB,EAAqBiB,OAAOG,YAAcyjB,EAAaE,IAC1F1jB,YAAamkB,GAAsBxlB,EAAqBiB,OAAOI,YAAcwjB,EAAavB,IAC1FuE,WAA+B,WAAnBhkB,EAAU5D,MAAwC,gBAAnB4D,EAAU5D,MAA8C,YAAnB4D,EAAU5D,MAAsB,CAAC,SAAU,UAAUmO,SAASwW,GAC9IkD,aAAiC,YAAnBjkB,EAAU5D,MAAyC,sBAAnB4D,EAAU5D,MAAmD,gBAAnB4D,EAAU5D,KAClG8nB,cAAe,KAGhBtiB,GAAcA,EAAWoF,IAAI,CAAC/I,EAAiBkJ,IAC9CsB,EAAAA,IAACtH,EAEC,CAAAqN,QAAS4N,IAAsBjV,EAC/BoV,WAAYpV,EACZiV,kBAAmBA,EACnB8D,aAAc3G,EAAO2G,aACrBnD,eAAgBxD,EAAOwD,eACvBC,cAAezD,EAAOyD,cACtBH,WAAYA,EACZC,UAA8B,WAAnB9c,EAAU5D,KAAoBilB,GAAcA,EAAWla,QAAS/H,EAC3Eme,eAAgBhE,EAAOgE,eACvBE,eAAgBlE,EAAOkE,eACvBJ,cAAe9D,EAAO8D,cACtBK,QAASnE,EAAOmE,QAChBT,kBAAmBA,GAbd,OAAO9V,UAiBZ,wKC/aV,MAAMgd,EAAcA,EAClBC,qBACAC,oBACAC,gBACAC,SACAC,UACAC,QAEAC,qBACAC,2BAEA,MAAM3kB,UAAEA,EAASG,eAAEA,EAAcyB,WAAEA,EAAUR,cAAEA,GAAkBwH,IAa3Dgc,EAAgBjiB,UAAwB,IACxCxC,GAAgBI,SACXJ,GAAgBI,SACpB2G,OAAOiS,GAA0B,YAAnBA,EAAInb,YAA4BoD,EAAcmJ,SAAS4O,EAAIrb,eACzEkJ,IAAImS,GAAOA,EAAIlb,OAEb,GACN,CAACkC,EAAgBiB,IASpB,OANAmF,EAASA,UAAC,KACJoe,GACFA,EAAqBC,EACtB,EACA,CAACD,EAAsBC,IAGxBnc,EAAAA,IAAK,MAAA,CAAA9K,GAAIknB,EAAO,uBACdvlB,SAAA0c,EAAAA,KAAA,MAAA,CAAKre,GAAIknB,EAAO,yBACbjjB,EAAWnI,OAAS,GACnBgP,EAAAA,WAAKyT,UAAW,gBAAgB2I,EAAOC,wBACrC9I,EAAK8B,KAAA,MAAA,CAAA5B,UAAU,uBAAsB5c,SAAA,CAClCsC,EAAWnI,OAAS,GACnBgP,EAAAA,IAAA,MAAA,CAAKyT,UAAU,mBACZ5c,SAAAsC,EAAWoF,IAAI,CAACW,EAAYR,IAC3BsB,EAAiBC,IAAA,MAAA,CAAAwT,UAAW,sBAAqB/U,IAAUid,EAAqB,SAAW,IAAM1G,QAASA,KACxG2G,EAAkBld,EACpB,WAAIQ,EAAM5I,MAFAoI,MAOhB6U,EAAAA,KAAA,MAAA,CAAKE,UAAU,uBACbzT,MAAK,MAAA,CAAAiV,QA5C0B3P,IAC3CA,EAAEgX,iBACEN,aAAiBO,WACI,sBAAnBhlB,EAAU5D,MAAmD,WAAnB4D,EAAU5D,KACtDqoB,GAAM,GAENA,IAEH,EAoC2CvI,UAAU,wBAAuB5c,SAAA,UAEjE0c,OAAK,MAAA,CAAAE,UAAU,sBACbzT,EAAAA,IAAK,MAAA,CAAAiV,QAAS8G,EAAStI,UAAU,uBAA8B5c,SAAA,MAC/DmJ,EAAAA,WAAKiV,QAAS6G,EAAQrI,UAAU,sBAA6B5c,SAAA,iBAOvEmJ,EAAAA,IAAA,MAAA,CAAKyT,UAAW,eAAe2I,EAAa,OAAsCvlB,SAAA,iCAEhF,CAAC,SAAU,eAAeiL,SAASvK,EAAU5D,OAC7CqM,EAAKC,IAAA,MAAA,CAAAwT,UAAW,aAAa2I,EAAOI,YAAaxU,MAAO,CAAEkO,QAAS,SAChErf,SAAAglB,EAActd,IAAI,CAACwC,EAASrC,IACtByd,EAAcra,SAASf,EAAQxK,MAIlCyJ,EACEC,IAAA,MAAA,CAAAwT,UAAW,WAAW2I,EAAOrb,UAC7BkU,QAASA,IAAMgH,EAAmBlb,EAAQxK,MAC1CM,SAAA0c,EAAAA,KAAA,MAAA,CAAKE,UAAW,WAAW2I,EAAOK,oBAChCzc,EAAAA,IAAK,MAAA,CAAAyT,UAAW,QAAQ2I,EAAOjrB,OAAQilB,wBAAyB,CAAEC,OAAQnlB,EAAe6P,EAAQxK,SACjGyJ,MAAK,MAAA,CAAAyT,UAAW,QAAQ2I,EAAO9lB,OAASO,SAAAkK,EAAQzK,WAL1C,WAAWyK,EAAQzK,QAAQoI,KAFtC,YAcH,qJC1FZ,MAAMge,GAAoBA,EAAG3b,UAAS4b,OAAMC,SAAQC,gBAAeC,gBAAeC,UAASC,sBAEzF,MAAMnkB,qBAAEA,EAAoBE,oBAAEA,EAAmBkB,YAAEA,GAAgBkG,KAE5DjJ,EAASC,GAAcC,EAAAA,UAAkB,IACzC6lB,EAAcC,GAAmB9lB,EAAAA,YACjC+lB,EAAyBC,GAA8BhmB,WAAwB,KAE/EimB,EAAoBC,GAAyBlmB,EAAQA,UAAU,GAwEtE,OAtEA0G,EAAAA,UAAU,KACR,GAAI+e,EAAe,CACjB1lB,GAAW,GACX,MAAM6H,EAASnG,EAAqBgkB,GACpC,GAAI7d,GAAUA,EAAO7J,YAAa,CAChC,MAAM2J,EAAW/F,EAAoBiG,EAAO7J,aACxC2J,IACFoe,EAAgBpe,GAChB3H,GAAW,GAWd,CACF,MACCA,GAAW,GACX+lB,OAAgBvmB,EACjB,EACA,CAACkC,EAAsBE,EAAqB8jB,EAAe5iB,IA0B9D6D,EAASA,UAAC,KACR,MAAMyf,EAAc,IAAIC,IACtBvT,OAAOwT,OAAO5kB,GACX4F,OAAOO,GAAiC,OAAvBA,EAAO7J,aACxBsJ,OAAQO,GAAWge,EAAgBU,IAAI1e,EAAO3J,eAC9CkJ,IAAIS,GAAUA,EAAO7J,cAGpBwoB,EAAuBpN,MAAM0I,KAAKsE,GACrChf,IAAIqf,GAAc7kB,EAAoB6kB,IACtCnf,OAAOof,SACPC,KAAK,CAACC,EAAGlI,IAAMkI,EAAE9gB,YAAY+gB,cAAcnI,EAAE5Y,cAEhDmgB,EAA2BO,EAAoB,EAC9C,CAAC9kB,EAAsBE,EAAqB7B,EAAS8lB,IAOtDzJ,EAAC8B,KAAA4I,EAAKA,MAAC,CAAAtB,KAAMA,EAAMuB,gBAAiB9B,EAAO+B,kBAAmB1K,UAAU,OAAOmJ,OAAQA,EAAQwB,UAAQ,EAAAvnB,SAAA,CACrGmJ,EAAAA,IAAK,MAAA,CAAAyT,UAAW2I,EAAOiC,qBAAoBxnB,SACzCmJ,EAACC,IAAAqe,EAAOA,SAACrJ,QAAS2H,EAAQ9mB,KAAM,GAAI0L,MAAM,QAAQiS,UAAW2I,EAAOmC,aAEtEve,EAAAA,IAACie,EAAAA,MAAMO,KAAK,CAAA/K,UAAU,eACpBzT,EACGC,IAAA,MAAA,CAAApJ,SAAAK,EACC8I,qCAEAuT,OAAA,MAAA,CAAA1c,SAAA,CACGomB,EACC1J,EACE8B,KAAA,MAAA,CAAAxe,SAAA,CAAAmJ,EAAAA,IAAA,MAAA,CAAKyT,UAAW2I,EAAOqC,aACrB5nB,SAAAmJ,EAAAC,IAAA,MAAA,CAAKwT,UAAW2I,EAAOxO,IAAKG,IAAKkP,EAAa1f,KAAMmhB,IAAKzB,EAAahgB,gBAExEsW,EAAAA,KAAK,MAAA,CAAAE,UAAW2I,EAAOuC,oBAAmB9nB,SAAA,CACxC0c,EAAAA,KAAK,MAAA,CAAA1c,SAAA,CAAAmJ,EAAAC,IAAA,IAAA,CAAApJ,SAAA,kBAAkBomB,EAAahgB,eACnCggB,EAAa5f,UAAYkW,EAAAA,KAAK,MAAA,CAAA1c,SAAA,CAAAmJ,MAAA,IAAA,CAAAnJ,SAAA,cAAkB,IAAAomB,EAAa5f,YAC7D4f,EAAa3f,gBAAkBiW,EAAAA,KAAK,MAAA,CAAA1c,SAAA,CAAAmJ,EAAAC,IAAA,IAAA,CAAApJ,SAAA,WAAe,IAAAomB,EAAa3f,kBAChE2f,EAAa9f,sBAAwB6C,EAAAA,IAAA,MAAA,CAAKoW,wBAAyB,CAAEC,OAAQ4G,EAAa9f,8BAG7F,KAEJ6C,EAACC,IAAA2e,EAAIA,KAAC,CAAAnL,UAAW2I,EAAOyC,kBAAiBhoB,SACvCmJ,EAAAA,IAAC8e,EAAAA,oBACCvL,EAAAA,KAAK,MAAA,CAAAE,UAAU,kCACb5c,SAAA,CAAA0c,OAACqL,EAAAA,KAAKG,OACJ,CAAAzoB,KAAK,WACL+kB,SAlC+C/V,IACjEgY,EAAsBrsB,SAASqU,EAAEmR,OAAOjhB,OAAM,EAkC5BA,MAAO6nB,EAEPxmB,SAAA,CAAAmJ,EAAAC,IAAA,SAAA,CAAQzK,OAAQ,EAAGwpB,UAAQ,EAAAnoB,SAAA,2BAC1BsmB,EAAwB5e,IAAI,CAAC5C,EAAM+C,IAC9Bue,GAAgBthB,EAAKzG,KAAO+nB,EAAa/nB,GAAW,KAEtD8K,EAAAA,IAAA,SAAA,CAAoBxK,MAAOmG,EAAKzG,GAAK2B,SAAA8E,EAAKsB,aAA7ByB,OAMnBsB,EAAAA,IAAA,SAAA,CAAQzJ,KAAK,SAASyoB,UAAkC,IAAxB3B,EAA2BpI,QAvFvD3P,IAGpB,IAAItG,EAFJsG,EAAEgX,iBACFhX,EAAE6Q,kBAIAnX,EAFE+d,EACyB9S,OAAOwT,OAAO5kB,GAAsB4F,OAAOiS,GAAOA,EAAItb,WAAa2nB,GAAWC,EAAgBU,IAAIhN,EAAIrb,eACrG,GAED4U,OAAOwT,OAAO5kB,GAAsB4F,OAAOiS,GAAOA,EAAIvb,cAAgBkoB,GAAsBL,EAAgBU,IAAIhN,EAAIrb,eACnH,GAGzB2J,EAKD+B,EACF+b,EAAc9d,EAAO3J,aAAc0L,GAEnC+b,EAAc9d,EAAO3J,cAPrB2F,QAAQD,MAAM,uBAQf,EAkEiG0Y,UAAU,kEAO7F,8KC5GnB,MAAMwL,GAAqBnO,IAEzB,MAAMoO,QAAEA,EAAOC,WAAEA,EAAUrL,WAAEA,EAAUsL,YAAEA,EAAWC,aAAEA,EAAYC,UAAEA,EAASC,mBAAEA,GAAuBzO,GAChGpZ,eAAEA,EAAcmC,WAAEA,EAAUd,oBAAEA,GAAwBoH,KACtDwN,SAAEA,EAAQa,aAAEA,EAAYpB,+BAAEA,GAAmCJ,KAC7D7L,YAAEA,GAAgBH,IAElBwe,EAAWC,EAAAA,QAAQC,IAClBC,EAASC,GAAcxoB,EAAAA,SAAiC,aACxDyoB,EAAWC,GAAgB1oB,EAAAA,SAAmC,gBAE9D2oB,EAAUC,GAAe5oB,EAAAA,SAAqBnC,IAC9CgrB,EAAeC,GAAoB9oB,EAAQA,SAAgB,OAC5D,CAAG+oB,GAAmBC,EAAAA,gBACtBC,EAAe1O,EAAMA,OAAkB,KAEtC2O,EAAkBC,GAAuBnpB,WAAmB,IAE7DopB,EAA0BxiB,EAAWA,YAAEyiB,IAC3C,GAAIA,EAAS,CACX,MAAMC,EAAOD,EAAmC7hB,OAAiB,CAAC+hB,EAAMC,IACjD,OAAjBA,EAAIxrB,SACC,IAAIurB,EAAMC,EAAIxrB,UAEhBurB,EACN,IACHJ,EAAoB,IAAIG,GACzB,GACA,IAEH5iB,YAAU,KACR0iB,EAAwB9oB,EAAeI,SAAQ,EAC9C,CAACJ,EAAgB8oB,IAEpB,MAAMK,EAAqDA,CAACnQ,EAAKqP,EAAUjM,KACzE,MAAMD,EAAcnD,EAAItL,SAASyO,YAC7BA,GACFnD,EAAItL,SAAS6O,eAAiB8L,GAAU7pB,UAAY,UAAOS,EAC3D+Z,EAAItL,SAASyO,YAAc,IACtBA,EACHpB,SAAUsN,EAAS7pB,UACnBwc,MAAOmB,EAAYnB,MACnB5c,KAAMqkB,OAAO4F,EAASjqB,MACtBge,WAAYA,EACZje,WAAYkqB,EAASlqB,aAIvB6a,EAAItL,SAASyO,YAAc,CACzBpB,SAAUsN,EAAS7pB,UACnBwc,OAAO,EACP5c,KAAMqkB,OAAO4F,EAASjqB,MACtBge,WAAYA,EACZje,WAAYkqB,EAASlqB,WAExB,EAGGirB,EAAY9iB,EAAAA,YAAY,CAAC+hB,EAAsBrP,KACnD,GAAIuP,IAAkBF,GAAU1qB,aAAc,OAC9C,IAAIuY,EAAM,KAERA,EAD0B,gBAAxBmS,EAASxqB,WACLoY,EAASoS,EAAUhnB,EAAoBgnB,EAAS5qB,aAAe,IAE/DwY,EAASoS,GAEbnS,aAAemT,kBACjBvS,EAAaZ,EAAKmS,EAAU,CAACrd,EAAyBX,KACpD2O,EAAIhO,SAAWA,EACfgO,EAAI3O,SAAWA,EAEf,MAAMuN,EAAc5M,EAAS4M,YAEvBL,EAAoB,IAAIxL,UAC9B,GAAI6L,EAAa,CACfA,EAAYE,UAAUP,GAEtB,MAAM3B,EAAY,IAAI7J,EAAAA,QACtB6L,EAAYG,QAAQnC,GAChBoD,EAAI5K,WACNsH,EAA+BsD,EAAI5K,UAAWmJ,EAAmB3B,EAAWoD,EAAK,CAAE,CAACA,EAAI5K,WAAY,IAAKia,IAE5G,GAEJ,EACA,CAACpS,EAAUP,EAAgC6S,EAAezR,EAAczV,IAErEioB,EAAgBhjB,EAAWA,YAAC,CAAC0R,EAAcra,KAC/Cyb,EAAOsD,WAAWK,WAAW6F,OAAO7b,OAAO9C,QAAiBhF,IAATgF,GAAoBhK,QAAQgK,IACzEA,EAAKiK,KAAKE,YAAczQ,IAC1BsG,EAAKiK,KAAKR,SAASY,UAAY0J,EAChC,EACF,EACA,CAACoB,EAAOsD,WAAWK,aAEhBwM,EAAmBjjB,cAAY,CAAC0S,EAAehB,EAAc5Z,KACjE,IAAK4a,EAAK,OACV,GAAIuP,IAAkBF,GAAU1qB,aAAc,OAC9C,IAAIua,EAAgB,IAAIC,EAAAA,aAAaH,EAAM,CACzCI,KAAOY,EAAItL,UAAYsL,EAAItL,SAAS0K,KAAQY,EAAItL,SAAS0K,KAAO0P,EAChE1pB,OACAqR,OAAQ,IACR4I,cAAe,IAEjBH,EAAcI,SACVU,EAAIhO,UACNgO,EAAIhO,SAAS4D,UAEfoK,EAAIhO,SAAWkN,EACfoR,EAActR,EAAMqQ,EAAS1qB,aAC/B,EAAG,CAAC0qB,GAAU1qB,aAAcmqB,EAAUS,EAAee,IAE/CE,EAAaljB,EAAWA,YAAC,CAAC+hB,EAAsBoB,GAAwB,KAC5E,MAAMziB,EAAQhH,EAAeI,SAASspB,UAAW5rB,GAAsBA,EAAMH,eAAiB0qB,EAAS1qB,eACxF,IAAXqJ,GACFqhB,EAAS7qB,GAAKwC,EAAeI,SAAS4G,GAAOxJ,GAC7CwC,EAAeI,SAAS4G,GAAS,IAAKqhB,GACtCb,EAAQxgB,EAAO,IAAKqhB,IACpBS,EAAwB9oB,EAAeI,UACnCqpB,GACF9B,IAAeU,IAGboB,GACF7B,IAAYS,EAEf,EACA,CAACroB,EAAgBwnB,EAASsB,EAAyBlB,EAAWD,IAE3DgC,EAAmBA,KACvB,GAAIxnB,EAAY,CACd,MAAM6W,EAAM7W,EAAW,GACnB6W,GAAOA,EAAItL,UAAYsL,EAAItL,SAASyO,cACtCnD,EAAItL,SAASyO,YAAc,KAC3B/C,EAAOsD,WAAWO,WAAW2F,OAAO7b,OAAO9C,QAAiBhF,IAATgF,GAAoBhK,QAAQgK,IACzEA,EAAKyT,UAAUtJ,YAAc4K,EAAI5K,gBAAqDnP,IAAxCgF,EAAKyT,UAAUhK,SAASyO,cACxElY,EAAKyT,UAAUhK,SAASyO,YAAc,KACvC,GAGN,GAGGyN,EAAmBnX,IACvByV,EAAWzV,GACX4V,EAASzqB,SAAW6U,EACpBkX,IAEY,aAARlX,IACG,CAAC,cAAe,cAAe,eAAerI,SAAS+d,IAC1D0B,EAAkB,eAEpBxB,EAAS3qB,SAAW,MAGV,YAAR+U,IACG,CAAC,QAAS,WAAWrI,SAAS+d,IACjC0B,EAAkB,SAEpBxB,EAAS5qB,YAAc,KACnB0E,IAEFonB,EADYpnB,EAAW,GACD,GAAIkmB,EAASjqB,MAe3B,WAARqU,IACG,CAAC,cAAe,gBAAgBrI,SAAS+d,IAC5C0B,EAAkB,eAEpBxB,EAAS5qB,YAAc,KACvB4qB,EAAS3qB,SAAW,MAGtBosB,EAAc,OAAQzB,EAASjqB,KAAK2rB,YACpCD,EAAc,aAAczB,EAASlqB,YAAc6B,EAAeM,YAAYpF,kBAE9EotB,EAAY,IAAKD,IACjBmB,EAAW,IAAKnB,GAClB,EAEMwB,EAAqBpX,IACpB4V,IAELD,EAAa3V,GACb4V,EAASxqB,WAAa4U,EACtBkX,IAEY,gBAARlX,GACe,gBAARA,GACQ,gBAARA,IACQ,UAARA,GACT4V,EAASvqB,MAAQ,GACbqE,GACFinB,EAAUf,EAAUlmB,EAAW,KAEhB,YAARsQ,IACT4V,EAAS3qB,SAAW,OAKtBosB,EAAc,OAAQzB,EAASjqB,KAAK2rB,YAEpCzB,EAAY,IAAKD,IACjBmB,EAAW,IAAKnB,IAClB,EAiDMyB,EAAgBxjB,EAAAA,YAAY,CAAC1H,EAAcd,KAC1CuqB,GAELlmB,EAAWlI,QAAQ,CAAC+e,EAAKhS,KAClBgS,EAAItL,WACPsL,EAAItL,SAAW,CAAA,GAEZsL,EAAItL,SAASD,WAChBuL,EAAItL,SAASD,SAAW,IAAI1B,UACxBiN,EAAIvL,UACNuL,EAAItL,SAASD,SAASsD,KAAKiI,EAAIvL,WAGnC,MAAMA,EAAW,IAAI1B,EAAAA,QAKrB,OAJIiN,EAAItL,SAASD,UACfA,EAASsD,KAAKiI,EAAItL,SAASD,UAGrB7O,GACN,IAAK,cACH,GAAc,IAAVoI,EAAa,MACjBqhB,EAAStqB,YAAcD,EACnB,CAAC,cAAe,eAAesM,SAASie,EAASxqB,aACnD0rB,EAAiBvQ,EAAKqP,EAAStqB,YAAasqB,EAASjqB,MAEvD,MAEF,IAAK,eACH,GAAc,IAAV4I,EAAa,MACjBqhB,EAASrqB,aAAeF,EACxBsrB,EAAUf,EAAUrP,GACpBwQ,EAAW,IAAKnB,IAAY,GAC5B,MAEF,IAAK,OACH,GAAc,IAAVrhB,EAAa,MAEjB,GADAqhB,EAASjqB,KAAO7E,SAASuE,GACnB,CAAC,cAAe,QAAS,UAAW,gBAAgBsM,SAASie,EAASxqB,YAQzC,gBAAxBwqB,EAASxqB,YAAwD,iBAAxBwqB,EAASxqB,YAC3DurB,EAAUf,EAAUrP,GACpBgR,WAAW,KACTR,EAAW,IAAKnB,IAAY,EAAI,EAC/B,MAC8B,YAAxBA,EAASxqB,YAClBurB,EAAUf,EAAUrP,GACpByP,EAAgB,KACdH,EAAY,IAAKD,IACjBmB,EAAW,IAAKnB,IAAY,EAAI,IAEzBA,EAAS3qB,UAAoC,UAAxB2qB,EAASxqB,aACvCsrB,EAAyBnQ,EAAKqP,EAAUjM,GACxCyL,SArBwF,CACxF,IAAI7P,EAAkC,GACV,gBAAxBqQ,EAASxqB,YAAgCwD,EAAoBgnB,EAAS5qB,aAAe,IAAI8H,YAC3FyS,EAAO3W,EAAoBgnB,EAAS5qB,aAAe,IAAI8H,YAC9C,CAAC,cAAe,eAAe6E,SAASie,EAASxqB,cAC1Dma,EAAOqQ,EAAStqB,aAElBwrB,EAAiBvQ,EAAKhB,GAAQ,GAAIqQ,EAASjqB,KAC5C,CAeD,MAEF,IAAK,YACHiqB,EAAS7pB,WAAY,EACrB6pB,EAASvqB,MAAQA,EACW,UAAxBuqB,EAASxqB,aACXsrB,EAAyBnQ,EAAKqP,EAAUjM,GACxCyL,KAEF,MAEF,IAAK,SACH,GAAc,IAAV7gB,EAAa,MACjBqhB,EAAShqB,OAAS9E,SAASuE,GAC3Bkb,EAAIwK,SAAS9O,IACXsE,EAAIwK,SAASjpB,EACbye,EAAIwK,SAAShpB,EACb6tB,EAAShqB,OAAS0X,KAAKC,GAAK,KAE9B,MAEF,IAAK,WACH,GAAc,IAAVhP,EAAa,MACjByG,EAASlT,GAAKqK,WAAW9G,GACzBkb,EAAIvL,SAASwc,KAAKxc,EAASlT,GAC3B8tB,EAAS/pB,SAAW/E,SAASuE,GAC7B,MAEF,IAAK,WACH,GAAc,IAAVkJ,EAAa,MACjByG,EAASjT,GAAKoK,WAAW9G,GACzBkb,EAAIvL,SAASyc,KAAKzc,EAASjT,GAC3B6tB,EAAS9pB,SAAWhF,SAASuE,GAC7B,MAEF,IAAK,aACH,GAAc,IAAVkJ,EAAa,MAEjB,GADAqhB,EAASlqB,WAAaL,EAClB,CAAC,cAAe,cAAe,eAAesM,SAASie,EAASxqB,YAAa,CAQ/E,IAAIoa,EAAgB,IAAIkS,oBAPE,CACxBrgB,MAAOue,EAASlqB,WAChBD,aAAa,EACb6L,KAAMC,EAAAA,WACNC,YAAY,EACZC,WAAW,IAGb8O,EAAI3O,SAAW4N,CAChB,MACyB,gBAAxBoQ,EAASxqB,YACe,iBAAxBwqB,EAASxqB,YACc,YAAtBwqB,EAASzqB,UAAkD,UAAxByqB,EAASxqB,YAA+C,MAArBwqB,EAAS3qB,UACzD,YAAtB2qB,EAASzqB,UAAkD,YAAxByqB,EAASxqB,YAA+C,OAAnBwqB,EAASvqB,SAClFsrB,EAAUf,EAAUrP,GACQ,UAAxBqP,EAASxqB,YACXsrB,EAAyBnQ,EAAKqP,EAAUjM,GAE1CqM,EAAgB,KACde,EAAW,IACNnB,EACHlqB,WAAYkqB,EAASlqB,YAAckqB,EAASlqB,WAAW/E,QAAQ,IAAK,MACnE,EACL,IAEF,MAEF,IAAK,WACH,GAAc,IAAV4N,EAAa,MACjBqhB,EAASpqB,SAAWH,EACpB,IAAIssB,EAAqB,QACrBpR,EAAI5K,WAAWyI,WAAW,eAC5BuT,EAAW,aAEbpR,EAAI3O,SAAWZ,EACb2gB,EACA/B,EAAS1qB,aACT0qB,EAASpqB,SACToqB,EAASnqB,aAOfuqB,EAAgB,KACdH,EAAY,IAAKD,IACjBmB,EAAW,IAAKnB,IAAY,EAC9B,IAED,EAEA,CAACjM,EAAYiM,EAAU5e,EAAa2f,EAAWG,EAAkBvpB,EAAeK,UAAW8B,EAAY0lB,EAAoB2B,IAExHa,EAAgB/jB,EAAAA,YAAasH,IACjC,MAAMmR,EAASnR,EAAEmR,OACjB+K,EAAc/K,EAAOngB,KAAMmgB,EAAOjhB,MACpC,EAAG,CAACgsB,IAEJ1jB,EAASA,UAAC,KACR,GAAIqhB,EAAY,CAGd,MAAMzgB,EAAQhH,EAAeI,SAASspB,UAAW5rB,GAAeA,EAAMH,eAAiB8pB,GACvF,IAAe,IAAXzgB,EAAc,CAChB,MAAMsjB,EAAa,IAAKtqB,EAAeI,SAAS4G,IAChDshB,EAAYgC,GACZpC,EAAWoC,EAAW1sB,UACtBwqB,EAAakC,EAAWzsB,WACzB,MACCyqB,EAAY,IACP/qB,EACHI,aAAc8pB,EACdjqB,IAAK,IAAI+sB,MAAQC,WAGtB,GACA,CAACxqB,EAAgBynB,IAEpBrhB,EAAAA,UAAU,KACHiiB,GACLG,EAAiBH,EAAS1qB,aAY5B,EAAG,CAAC0qB,IAEJ,MAAMoC,EAAmBhY,IAClB4V,GACD9V,OAAOmY,OAAOrC,EAAU5V,IAC1BqX,EAAcrX,GAAM4V,EAAS5V,GAAO,GAAGsX,WACxC,EAGGY,EAAmBlY,IAClB4V,GACD9V,OAAOmY,OAAOrC,EAAU5V,IAC1BqX,EAAcrX,GAAM4V,EAAS5V,GAAO,GAAGsX,WACxC,EA2BGa,GAAqBnY,IACzB,MAAMjV,EAAKiZ,OAAOoU,YAAY,KAC5BJ,EAAgBhY,EAAG,EAClB,KACHkW,EAAapoB,QAAQkS,GAAOjV,CAC9B,EAEMstB,GAAqBrY,IACzB,MAAMjV,EAAKiZ,OAAOoU,YAAY,KAC5BF,EAAgBlY,EAAG,EAClB,KACHkW,EAAapoB,QAAQkS,GAAOjV,GAGxButB,GAAgBtY,IAChBkW,EAAapoB,QAAQkS,KACvBuY,cAAcrC,EAAapoB,QAAQkS,IACnCkW,EAAapoB,QAAQkS,GAAO,KAC7B,EAGGwY,GAAuCjrB,GAAgBK,UAAUwG,IAAKO,IACnE,CACLtJ,MAAOsJ,EAAS5J,GAChB0tB,MAAO9jB,EAAS7B,gBAEd,GAEA4lB,GAAiCnrB,GAAgBG,OAAO0G,IAAKQ,IAC1D,CACLvJ,MAAOuJ,EAAM7J,GACb0tB,MAAO7jB,EAAMzI,KACbwsB,WAAYxC,EAAiBxe,SAAS/C,EAAM7J,QAE1C,GAEA6tB,GAAqC1sB,EAAakI,IAAKwC,IACpD,CACLvL,MAAOuL,EAAQxK,KACfqsB,MAAO7hB,EAAQzK,SAEb,GAEN,OAAKypB,EAGH/f,EAAAA,WAAKyT,UAAW,qBAAmC5c,SAEjD0c,cAAKE,6BACHF,EAAAA,KAAK,MAAA,CAAAE,6BACHF,EAAK8B,KAAA,MAAA,CAAA5B,mBACH5c,SAAA,CAAA0c,EAAA8B,KAAA,MAAA,CAAK5B,UAAW2I,GACdvlB,SAAA,CAAAmJ,MAAA,SAAA,CAAQiV,QAASA,IAAMqM,EAAgB,YAAa7N,UAAuB,aAAZkM,EAAyBvD,GAAgB,GAAEvlB,SAAA,aAC1GmJ,EAAAA,IAAQ,SAAA,CAAAiV,QAASA,IAAMqM,EAAgB,WAAY7N,UAAuB,YAAZkM,EAAwBvD,GAAgB,GAAoBvlB,SAAA,YAC1HmJ,EAAAA,cAAQiV,QAASA,IAAMqM,EAAgB,UAAW7N,UAAuB,WAAZkM,EAAuBvD,GAAgB,0BAEtGpc,EAAAA,IAAQ,SAAA,CAAAyT,mBAA6BwB,QA/U1B+N,KACdjD,IACL9V,OAAOgZ,OAAOlD,EAAU9qB,EAAmB,CAAEC,GAAI6qB,EAAS7qB,GAAIG,aAAc0qB,EAAS1qB,eAErFisB,EAAgB,YAChBC,EAAkB,eAClBP,EAAc,GAAIjB,EAAS1qB,cAEvB+pB,GACFA,EAAY,IAAKW,IAClB,yBAwUkB,aAAZJ,GACCpM,EAAAA,KACEY,EAAAA,SAAA,CAAAtd,SAAA,CAAAmJ,EAAAC,IAAC8e,EAAM,QACL,CAAAtL,UAAW2I,GACX8G,gBAAgB,SAChBC,iBAAkB7xB,SAAS8xB,KAChB,aAAA,oBACXC,QAASV,GACTW,WAAW,EACXC,iBAAkBA,IAAM,sBACxBC,YAAY,uBACZhuB,MAAOmtB,GAAgB1jB,KAAMwkB,GAAWA,EAAOjuB,QAAUuqB,EAAS5qB,cAAgB,KAClFkmB,SAjVWqI,CAACC,EAAgDC,KACpED,GAAkB5D,IACpBA,EAAS5qB,YAAcwuB,EAAenuB,MACtC+rB,EAAkBxB,EAASxqB,YAC3ByqB,EAAY,IAAKD,IACjBmB,EAAW,IAAKnB,IAAY,GAC7B,IA8UUA,EAAS5qB,YAAwB,GAChCoe,EAAA8B,KAAA,MAAA,CAAK5B,UAAW2I,GAAgBvlB,SAAA,CAC9BmJ,gBAAQiV,QAASA,IAAMsM,EAAkB,eAAgB9N,UAAyB,gBAAdoM,EAA8BzD,GAAgB,4BAClHpc,EAAAC,IAAA,SAAA,CAAQgV,QAASA,IAAMsM,EAAkB,eAAgB9N,UAAyB,gBAAdoM,EAA8BzD,GAAgB,GAAEvlB,SAAA,gBACpHmJ,EAAAA,IAAA,SAAA,CAAQiV,QAASA,IAAMsM,EAAkB,eAAgB9N,UAAyB,gBAAdoM,EAA8BzD,GAAgB,GAAEvlB,SAAA,sBAM/G,YAAZ8oB,GACCpM,EAAA8B,KAAAlB,EAAA6B,SAAA,CAAAnf,SAAA,CACE0c,OAAK,MAAA,CAAAE,UAAW2I,GAAgBvlB,SAAA,CAC9BmJ,EAAAA,cAAQiV,QAASA,IAAMsM,EAAkB,SAAU9N,UAAyB,UAAdoM,EAAwBzD,GAAgB,sBACtGpc,EAAAC,IAAA,SAAA,CAAQgV,QAASA,IAAMsM,EAAkB,WAAY9N,UAAyB,YAAdoM,EAA0BzD,GAAgB,GAAEvlB,SAAA,eAG/F,UAAdgpB,GACC7f,MAAC+e,EAAAA,QAAM,CACLtL,UAAW2I,GACX8G,gBAAgB,SAAQ,aACb,iBACXG,QAASR,GACTU,iBAAkBA,IAAM,mBACxBC,YAAY,oBACZhuB,MAAOqtB,GAAa5jB,KAAMtD,GAASA,EAAKnG,QAAUuqB,EAAS3qB,WAAa,KACxEimB,SArWMwI,CAACF,EAA6CC,KAC9DD,GAAkB5D,IACpBA,EAAS3qB,SAAWuuB,EAAenuB,MACnCwqB,EAAY,IAAKD,IACjBmB,EAAW,IAAKnB,IAAY,GAC5BlmB,EAAWlI,QAAQ,CAAC+e,EAAKhS,KACT,IAAVA,IACJmiB,EAAyBnQ,EAAKqP,EAAUjM,GACxCyL,IACF,GACD,IA+VwB,YAAdM,GACC7f,EAAAA,IAAC+e,EAAAA,QACC,CAAAtL,UAAW2I,GACX8G,gBAAgB,SACL,aAAA,iBACXG,QAASN,GACTQ,iBAAkBA,IAAM,oBACxBC,YAAY,oBACZhuB,MAAOutB,GAAe9jB,KAAMtD,GAASA,EAAKnG,QAAUuqB,EAASvqB,QAAU,KACvE6lB,SArWQyI,CAACH,EAA+CC,KAClED,GAAkB5D,IACpBA,EAASvqB,MAAQmuB,EAAenuB,MAChCwqB,EAAY,IAAKD,IACjBmB,EAAW,IAAKnB,IAAY,GAC5BlmB,EAAWlI,QAAQ,CAAC+e,EAAKhS,KACT,IAAVA,GACJoiB,EAAUf,EAAUrP,EAAG,GAE1B,OAkWkB,WAAZiP,GACCpM,EAAAA,KAAAY,EAAA6B,SAAA,CAAAnf,SAAA,CACE0c,EAAAA,YAAKE,UAAW2I,aACdpc,EAAAA,IAAQ,SAAA,CAAAiV,QAASA,IAAMsM,EAAkB,eAAgB9N,UAAyB,gBAAdoM,EAA8BzD,GAAgB,GAAiBvlB,SAAA,SACnImJ,EAAQC,IAAA,SAAA,CAAAgV,QAASA,IAAMsM,EAAkB,gBAAiB9N,UAAyB,iBAAdoM,EAA+BzD,GAAgB,GAAkBvlB,SAAA,aAGzH,iBAAdgpB,GACCtM,EAAAA,KAAK,MAAA,CAAAE,UAAW2I,GAAmBvlB,SAAA,CACjCmJ,EAAAA,IAAO,QAAA,CAAAyT,UAAW2I,GAA+BvlB,SAAA,cACjDmJ,EAAAA,WAAKyT,UAAW2I,GAAmBvlB,SACjCmJ,EAAAA,aACE1J,KAAK,eACLC,KAAK,OACLkd,mBACAje,MAAOuqB,EAASrqB,aAChB2lB,SAAU0G,aAQP,aAAZpC,GAAwC,gBAAdE,GAA6C,WAAZF,GAAsC,gBAAdE,IACpFtM,OAAA,MAAA,CAAKE,UAAW2I,GAAmBvlB,SAAA,CACjCmJ,EAAAA,IAAO,QAAA,CAAAyT,UAAW2I,GAAYvlB,SAAA,SAC9BmJ,EAAAA,IAAK,MAAA,CAAAyT,UAAW2I,GAAmBvlB,SACjCmJ,MACE,WAAA,CAAA1J,KAAK,cACLytB,KAAM,EACNtQ,mBACAje,MAAOuqB,EAAStqB,YAChB4lB,SAAU0G,YAOpBxO,EAAA8B,KAAA,MAAA,CAAK5B,UAAW2I,GAAmBvlB,SAAA,CACjCmJ,MAAO,QAAA,CAAAyT,UAAW2I,GAAYvlB,SAAA,SAC9BmJ,EAAKC,IAAA,MAAA,CAAAwT,UAAW2I,GAAmBvlB,SACjC0c,EAAK8B,KAAA,MAAA,CAAA5B,UAAW2I,GACdvlB,SAAA,CAAAmJ,EAAAC,IAAA,SAAA,CACEwT,UAAW,GAAG2I,MAAiBA,KAC/BnH,QAASA,IAAMkN,EAAgB,QAC/B6B,YAAaA,IAAM1B,GAAkB,QACrC2B,UAAWA,IAAMxB,GAAa,QAC9ByB,aAAcA,IAAMzB,GAAa,QAAO5rB,SAAA,MAG1CmJ,EACEC,IAAA,QAAA,CAAA1J,KAAK,SACLf,MAAOuqB,EAASjqB,KAChBulB,SAAW/V,GAAMkc,EAAc,OAAQlc,EAAEmR,OAAOjhB,OAChDie,UAAW2I,KAGbpc,MACE,SAAA,CAAAyT,UAAW,GAAG2I,MAAiBA,KAC/BnH,QAASA,IAAMoN,EAAgB,QAC/B2B,YAAaA,IAAMxB,GAAkB,QACrCyB,UAAWA,IAAMxB,GAAa,QAC9ByB,aAAcA,IAAMzB,GAAa,QAAO5rB,SAAA,cAmBhD0c,EAAAA,KAAA,MAAA,CAAKE,UAAW2I,aACdpc,EAAOC,IAAA,QAAA,CAAAwT,UAAW2I,GAAYvlB,SAAA,WAC9B0c,EAAA8B,KAAA,MAAA,CAAK5B,UAAW2I,GAAmBvlB,SAAA,CACjC0c,cAAKE,UAAW2I,GAAuBvlB,SAAA,CACrCmJ,EAAAA,cACEyT,UAAW,GAAG2I,MAAiBA,KAC/BnH,QAASA,IAAMkN,EAAgB,UAC/B6B,YAAaA,IAAM1B,GAAkB,UACrC2B,UAAWA,IAAMxB,GAAa,UAC9ByB,aAAcA,IAAMzB,GAAa,yBAGnCziB,EAAAC,IAAA,QAAA,CACE1J,KAAK,SACLf,MAAOuqB,EAAShqB,OAChBslB,SAAW/V,GAAMkc,EAAc,SAAUlc,EAAEmR,OAAOjhB,OAClDie,UAAW2I,KAGbpc,MAAA,SAAA,CACEyT,UAAW,GAAG2I,MAAiBA,KAC/BnH,QAASA,IAAMoN,EAAgB,UAC/B2B,YAAaA,IAAMxB,GAAkB,UACrCyB,UAAWA,IAAMxB,GAAa,UAC9ByB,aAAcA,IAAMzB,GAAa,4BAGrCziB,gBACEyT,mBACAwB,QAASA,IA/PSkP,EAACha,EAAgB+M,EAAgB,MAC7D,GAAK6I,GAED9V,OAAOmY,OAAOrC,EAAU5V,GAAM,CAChC,IAAI3U,EAAQuqB,EAAS5V,GAErB,MAAMia,EAAY5uB,EAAQ0hB,EACR,IAAdkN,IACF5uB,GAAS4uB,GAIX5uB,GAAS0hB,EAEL1hB,EAAQ,IACVA,EAAQ0hB,EACW,MAAV1hB,IACTA,EAAQ,GAGVgsB,EAAcrX,EAAK3U,EAAMisB,WAC1B,GA0OwB0C,CAAsB,mBAErCnkB,MAACqkB,EAAAA,eAAe,CAAAvuB,KAAM,aAK5Byd,EAAAA,KAAA,MAAA,CAAKE,UAAW2I,GACdvlB,SAAA,CAAAmJ,EAAAA,IAAA,QAAA,CAAOyT,UAAW2I,GAAYvlB,SAAA,aAC9BmJ,EAAKC,IAAA,MAAA,CAAAwT,UAAW2I,YACd7I,EAAAA,KAAK,MAAA,CAAAE,UAAW2I,GACdvlB,SAAA,CAAAmJ,EAAAA,IAAA,SAAA,CACEyT,UAAW,GAAG2I,MAAiBA,KAC/BnH,QAASA,IAAMkN,EAAgB,YAC/B6B,YAAaA,IAAM1B,GAAkB,YACrC2B,UAAWA,IAAMxB,GAAa,YAC9ByB,aAAcA,IAAMzB,GAAa,YAAW5rB,SAAA,MAG9CmJ,EAAAA,IAAA,QAAA,CACEzJ,KAAK,SACLf,MAAOuqB,EAAS/pB,SAChBqlB,SAAW/V,GAAMkc,EAAc,WAAYlc,EAAEmR,OAAOjhB,OACpDie,UAAW2I,KAGbpc,EAAAA,IACE,SAAA,CAAAyT,UAAW,GAAG2I,MAAiBA,KAC/BnH,QAASA,IAAMoN,EAAgB,YAC/B2B,YAAaA,IAAMxB,GAAkB,YACrCyB,UAAWA,IAAMxB,GAAa,YAC9ByB,aAAcA,IAAMzB,GAAa,YAAW5rB,SAAA,cAMpD0c,cAAKE,UAAW2I,aACdpc,EAAAA,IAAO,QAAA,CAAAyT,UAAW2I,yBAClBpc,MAAA,MAAA,CAAKyT,UAAW2I,GAAmBvlB,SACjC0c,EAAK8B,KAAA,MAAA,CAAA5B,UAAW2I,GAAuBvlB,SAAA,CACrCmJ,gBACEyT,UAAW,GAAG2I,MAAiBA,KAC/BnH,QAASA,IAAMkN,EAAgB,YAC/B6B,YAAaA,IAAM1B,GAAkB,YACrC2B,UAAWA,IAAMxB,GAAa,YAC9ByB,aAAcA,IAAMzB,GAAa,2BAGnCziB,EAAAC,IAAA,QAAA,CACE1J,KAAK,SACLf,MAAOuqB,EAAS9pB,SAChBolB,SAAW/V,GAAMkc,EAAc,WAAYlc,EAAEmR,OAAOjhB,OACpDie,UAAW2I,KAGbpc,EAAAA,IAAA,SAAA,CACEyT,UAAW,GAAG2I,MAAiBA,KAC/BnH,QAASA,IAAMoN,EAAgB,YAC/B2B,YAAaA,IAAMxB,GAAkB,YACrCyB,UAAWA,IAAMxB,GAAa,YAC9ByB,aAAcA,IAAMzB,GAAa,YAAW5rB,SAAA,cAMpD0c,EAAK8B,KAAA,MAAA,CAAA5B,UAAW2I,aACdpc,MAAO,QAAA,CAAAyT,UAAW2I,GAA8BvlB,SAAA,aAChDmJ,EAAKC,IAAA,MAAA,CAAAwT,UAAW2I,GAAmBvlB,SACjC0c,cAAKE,UAAW2I,GACdvlB,SAAA,CAAAmJ,MAAA,QAAA,CACEzJ,KAAK,QACLD,KAAK,WACLmd,UAAW2I,GACX5mB,MAAOuqB,EAASpqB,SAChB0lB,SAAU0G,IAEZ/hB,EAAAA,IAAA,QAAA,CACEzJ,KAAK,OACLD,KAAK,WACLmd,UAAW2I,GACX5mB,MAAOuqB,EAASpqB,SAChB0lB,SAAU0G,YAkBjB,CAAC,cAAe,cAAe,cAAe,QAAS,WAAWjgB,SAASie,EAASxqB,aACnFge,EAAAA,KAAK,MAAA,CAAAE,UAAW2I,aACd7I,EAAO8B,KAAA,QAAA,CAAA5B,UAAW2I,GAAevlB,SAAA,CAAA,CAAC,QAAS,WAAWiL,SAASie,EAASxqB,YAAc,OAAS,OAAM,YACrGyK,EAAKC,IAAA,MAAA,CAAAwT,UAAW2I,GAAmBvlB,SACjC0c,EAAK8B,KAAA,MAAA,CAAA5B,UAAW2I,GACdvlB,SAAA,CAAAmJ,EAAAC,IAAA,QAAA,CACE3J,KAAK,aACLC,KAAK,QACLkd,UAAW2I,GACX5mB,MAAOuqB,EAASlqB,WAChBwlB,SAAU0G,IAEZ/hB,EAAAA,IAAA,QAAA,CACEzJ,KAAK,OACLD,KAAK,aACLmd,UAAW2I,GACX5mB,MAAOuqB,EAASlqB,WAChBwlB,SAAU0G,iBAlTJ,IAyTd,ECz1BJuC,GAAiBjN,EAAUA,WAAC,CAACvG,EAA6BwG,KAC9D,MAAOc,EAAcmM,GAAmBntB,EAAAA,UAAkB,IACnDotB,EAAcC,GAAmBrtB,EAAQA,SAAS,KAClDme,EAASmP,GAActtB,EAAQA,UAAU,IACzCukB,EAAoBgJ,GAAyBvtB,EAAQA,UAAU,IAC/DwtB,EAAgBC,GAAqBztB,EAAQA,SAAoB,KACjEihB,EAAwByM,GAA6B1tB,EAAAA,SAAiChF,IACtF2yB,EAAaC,GAAkB5tB,EAAAA,SAA6B,IAC5DkhB,EAAY2M,GAAiB7tB,EAAAA,SAAwB,YACtD8tB,uBAAEA,EAAsBC,0BAAEA,EAAyBC,gBAAEA,EAAeC,8BAAEA,EAA6BC,sBAAEA,GAA0BxU,GAC9HyU,EAAcrN,GAAmB9gB,EAAAA,UAAS,IAC1CouB,EAAcC,GAAmBruB,YAAkB,IACpD,CAAG+oB,GAAmBC,EAAaA,iBAElCsF,EAAsBC,GAA2BvuB,EAAAA,SAAiB,KAElEygB,EAAmB+N,GAAwBxuB,EAAQA,SAAS,KAC5DyuB,EAAqBC,IAA0B1uB,EAAQA,SAAS,KAChE0gB,GAAMiO,IAAW3uB,EAAQA,SAAkB,QAEzC4C,IAAmB5C,EAAAA,SAAiB,GAEvC4uB,GAAiBrU,EAAMA,OAAwB,MAC9BA,SAAkC,MAC1C1Z,QAAU8sB,EAEzB,MAAMkB,GAAetU,SAIlB,MAEGoG,GAAqB/Z,EAAWA,YAAEhN,IACtCgJ,GAAgBhJ,EAAM,EACrB,KAEGwG,aAAEA,GAAYuG,eAAEA,GAAcrG,eAAEA,GAAcH,UAAEA,GAAS4B,WAAEA,GAAUW,cAAEA,GAAab,cAAEA,GAAa5B,0BAAEA,IAA8B8I,IAEnIyb,GAAoB5d,EAAAA,YAAa8V,IACrC6Q,EAAsB7Q,IACrB,CAAC6Q,IAEEvQ,GZ9Dc8R,MACpB,MAAM3uB,UAAEA,EAASF,0BAAEA,EAAyBwB,qBAAEA,EAAoBE,oBAAEA,EAAmBJ,cAAEA,EAAaU,cAAEA,EAAaE,gBAAEA,EAAeC,mBAAEA,EAAkB9B,eAAEA,GAAmByI,KAExKsU,EAAY0R,GAAiB/uB,WAA0B,KACvDsd,EAAY0R,GAAiBhvB,EAAAA,SAA0C,KACvEud,EAAY0R,GAAiBjvB,EAAAA,SAAkC,KAC/DqV,EAAgB6Z,GAAqBlvB,EAAAA,SAAmB,IAE/D,IAAImvB,EAA4BC,EAASA,UAACC,YAAW/uB,EAAeE,OAAO2G,IAAIW,GAASA,EAAMjD,SAC9F,MAAMyqB,uBAAEA,EAAsBC,MAAEA,EAAK3d,gBAAEA,EAAegU,gBAAEA,GFbnC4J,KACrB,MAAMrvB,UAAEA,EAASgC,gBAAEA,GAAoB4G,KACjCqF,uBAAEA,GAA2BxE,KAC7B6lB,cAAEA,GeRmBC,MAE3B,MAAMvvB,UAAEA,EAAS4B,WAAEA,EAAUE,cAAEA,EAAaE,gBAAEA,GAAoB4G,IAE5D0mB,EAAgB7oB,EAAAA,YAAY,CAACpE,EAAsBmtB,EAAyBphB,EAAqBqhB,KACrG,MAAM1kB,EAAgB,aAEtB,IAAIpB,EAAsB,KAC1B,IAAIG,EAA8BzH,EAAK4H,MAAMsC,QACzC1B,EAAU,EACVsD,EAAU,EACVD,GAAe,EACfwhB,GAAY,EACZ3lB,GAAmB,EACnBe,EAAiB9K,EAAUrE,eAC3Bg0B,GAAkB,EAClB9lB,EAAaxH,EAAKwL,UAAUC,KAAKnQ,GAkHrC,YAhHmByB,IAAfyK,EACEA,EAAWmN,WAAW,aACxBrN,EAAY,WACZG,EAAc9J,EAAUxE,eACxBsP,EAAiB9K,EAAUpE,mBACH,OAApBoE,EAAUvD,QACZoO,EAAU,IAEHhB,EAAWmN,WAAW,SAC/BrN,EAAY,OACZG,EAAc9J,EAAUzE,WACA,OAApByE,EAAUvD,QACZoO,EAAU,MAEHhB,EAAWmN,WAAW,eAC/BrN,EAAY,aACZG,EAAc9J,EAAUzE,WACA,OAApByE,EAAUvD,QACZizB,GAAY,IAEL7lB,EAAWmN,WAAW,SAC/BrN,EAAY,OACZG,EAAc9J,EAAUvE,YACfoO,EAAWmN,WAAW,UAC/BrN,EAAY,QACZG,EAAc9J,EAAU5E,oBACA,OAApB4E,EAAUvD,QACZoO,EAAU7K,EAAU1E,cAElBuO,EAAWmN,WAAW,oBACxB2Y,GAAkB,IAQX9lB,EAAWmN,WAAW,eAC/BrN,EAAY,aACZ+lB,GAAY,EACZrtB,EAAKmJ,SAASpR,QAAQqR,IACU,IAA1BA,EAAQC,OAAOjS,QACjBgK,QAAQ+J,KAAKzC,EAAgB,8DAA+DlB,GAG9F4B,EAAQC,OAAOtR,QAAQuR,IAErB,MAAMQ,EAAcR,EAAMQ,GAEpBE,EAAcV,EAAMU,IAEnBujB,EAAYC,GAAW1a,EAAchJ,EAAIiC,EAAaxM,EAAY6tB,GACpEI,IACHjuB,EAAWwM,GAAahG,cAAc/D,KAAK,CACzCtF,KAAM6wB,EACN9hB,KAAM,IAAI5B,EAAAA,QAAQC,EAAGzR,EAAGyR,EAAGxR,EAAG,KAEhCmH,EAAc8tB,GAAcxhB,GAE9B,MAAO0hB,EAAYC,GAAW5a,EAAc9I,EAAI+B,EAAaxM,EAAY6tB,GACpEM,IACHnuB,EAAWwM,GAAahG,cAAc/D,KAAK,CACzCtF,KAAM+wB,EACNhiB,KAAM,IAAI5B,UAAQG,EAAG3R,EAAG2R,EAAG1R,EAAG,KAEhCmH,EAAcguB,GAAc1hB,GAE9BpM,EAAgBguB,QAAQJ,EAAY,IAAKzjB,IACzCnK,EAAgBguB,QAAQF,EAAY,IAAKzjB,IAGzCrK,EAAgByR,QAAQmc,EAAYE,EAAY,CAAEzd,OAAQlG,EAAGY,WAAWV,KACxErK,EAAgByR,QAAQqc,EAAYF,EAAY,CAAEvd,OAAQlG,EAAGY,WAAWV,IAC1E,MAEOxC,EAAWmN,WAAW,eAC/BrN,EAAY,YACZuE,GAAe,EACfnE,GAAmB,GACVF,EAAWmN,WAAW,WAC/BrN,EAAY,QACZI,GAAmB,GACVF,EAAWmN,WAAW,aAC/BrN,EAAY,UACZI,GAAmB,EACnBoE,EAAU,GACDtE,EAAWmN,WAAW,WAC/BrN,EAAY,UACHE,EAAWmN,WAAW,iBAC/BrN,EAAY,gBAEZkB,EAAU,EAGZpH,QAAQ+J,KAAKzC,EAAgB,gCAAiC1I,GAG7C,CACjBsH,YACAG,cACAe,UACAsD,UACAD,eACAwhB,YACA3lB,mBACAe,iBACA6kB,kBACAttB,OACAwH,aAGKomB,EACN,CAACnuB,EAAeF,EAAY5B,EAAUvE,WAAYuE,EAAUxE,eAAgBwE,EAAUpE,mBAAoBoE,EAAU5E,oBAAqB4E,EAAU1E,aAAc0E,EAAUvD,MAAOuD,EAAUzE,WAAYyE,EAAUrE,eAAgBqG,IAErO,MAAO,CACLstB,kBf9HwBC,IACpBjb,6BAAEA,EAA4BhB,oBAAEA,GAAwBzE,KAEvDsgB,EAAwB1d,EAAiBgU,GAAmB9iB,EAAOA,QAAC,KAEzE,MAAM8iB,EAA+B,IAAIQ,IACnCkJ,EAA+C,GAC/C1d,EAA4B,GAElC4d,EAAUj1B,QAAQ,CAAC81B,EAAU9hB,KAC3B,GAAI8hB,EAASV,OAASU,EAASV,MAAM/1B,OAAQ,CAK3C,MAAM+1B,EAAQU,EAASV,MACvB,IAAK,IAAI5e,EAAI,EAAGA,EAAI4e,EAAM/1B,OAAQmX,IAAK,CACrC,MAAMjH,UACJA,EAASG,YACTA,EAAWe,QACXA,EAAOsD,QACPA,EAAOD,aACPA,EAAYwhB,UACZA,EAAS3lB,iBACTA,EAAgBe,eAChBA,EAAczI,KACdA,EAAIwH,WACJA,GACEylB,EACFE,EAAM5e,GACN4e,EACAphB,IACEiH,GAGJ,GAAIqa,EAAW,CACb,MAAMxS,EAAajP,EACjBtE,EACAE,EACAC,EACAC,EACAmE,EACAC,EACAtD,EACAC,EACAsD,EACA/L,GAGEwH,EAAWmN,WAAW,UAQrBmY,EAAuB/gB,KAC1B+gB,EAAuB/gB,GAAe,IAGxC+gB,EAAuB/gB,GAAa/J,KAAK6Y,EAC1C,CACF,CACD,MAAMiT,EAAyB,IAAIC,EAAWA,UACxCC,EAAe/b,EACnBlG,EACAqD,EACA0e,GAGF,GAAIE,EAAa9xB,MAAQ4wB,EAAuB/gB,GAAa3U,OAC3D,IAAK,IAAImX,EAAI,EAAGA,EAAIue,EAAuB/gB,GAAa3U,OAAQmX,IAC1Dyf,EAAalK,IAAIgJ,EAAuB/gB,GAAawC,GAAGvC,KAAKE,aAC/D4gB,EAAuB/gB,GAAawC,GAAGvC,KAAKO,cAAgByhB,EAAaC,IAAInB,EAAuB/gB,GAAawC,GAAGvC,KAAKE,YAK/H+E,GACD,IAGH,IAAK,IAAI1C,EAAI,EAAGA,EAAIue,EAAuB11B,OAAQmX,IAAK,CACtD,MAAM2f,EAAkBpB,EAAuBve,GAC/C,IAAK,IAAI4f,EAAI,EAAGA,EAAID,EAAgB92B,OAAQ+2B,IAC1C/K,EAAgB7Y,IAAI2jB,EAAgBC,GAAGjiB,UAE1C,CAED,MAAO,CAAC4gB,EAAwB1d,EAAiBgU,EAAe,EAE/D,CAACnR,EAA8BrG,EAAwBqhB,EAAehc,EAAqBtT,EAAU5D,KAAMizB,IAG9G,MAAO,CACLF,yBACAC,MAAOptB,EACPyP,kBACAgU,oBEzF0EgL,CAAczB,IAEpFlX,6BAAEA,GAAiC4Y,IAEnC/a,EAASuS,UAAQyI,GAEjBC,EAAwBnqB,EAAAA,YAAa8V,GAAyBsU,IAClE/B,EAAegC,IACTA,EAAUvU,GACZuU,EAAUvU,GAAYlY,KAAK,IAAKwsB,IAEhCC,EAAUvU,GAAc,CAAC,IAAKsU,IAEzB,IAAIC,IAEf,EAAI,IAEEC,EAAatqB,cAAY,KAC7BmoB,EAAe1R,IACTA,GACFA,EAAW9iB,QAAQuN,IACbA,GACFA,EAAMvN,QAAQ6D,IACZA,EAAMoQ,KAAK0M,oBAEd,GAGE,KAET8T,EAAe1R,IACTA,GACFA,EAAW/iB,QAAQuN,IACbA,GACFA,EAAMvN,QAAQ6D,IACZA,EAAMya,SAASqC,oBAElB,GAGE,KAET+T,EAAc1R,IACRA,GACFA,EAAWhjB,QAAQuN,IACbA,GACFA,EAAMvN,QAAQ6D,IACZA,EAAM4Z,UAAUkD,kBAClB,EACD,GAGE,IACR,EACA,IA8EH,OA5EAxU,EAAAA,UAAU,KACR,GAAIzG,EACF,MAAO,KACL2D,QAAQ4W,IAAI,cAEZ0W,GAAU,CAEb,EACA,CAACA,EAAYjxB,IAEhByG,EAASA,UAAC,IACD,KACLwqB,KAGD,IAEHxqB,EAASA,UAAC,KACR,IAAKoP,IAAWqZ,EAAc,OAE9B,MAAMgC,EAAiD,GAuBvD,GAtBAnY,EAAwBze,QAASmf,IAC/B,IAAI2M,EACJ,IAAK,IAAItV,EAAI,EAAGA,EAAIue,EAAuB11B,SAEzCysB,EAASiJ,EAAuBve,GAAGlJ,KAAKtD,GAAQA,EAAKmK,YAAcgL,EAAOzb,mBAC3DsB,IAAX8mB,GAH6CtV,KAOnD,IAAKsV,EAAQ,OAAW,KACxB,MAAM/I,EAAarF,EAA6BoO,EAAO/a,SAAUoO,EAAOzb,aAAcooB,EAAO9X,YAAaxP,EAAoB+W,EAAQib,EAAsB1K,EAAO9X,cAC/J+O,IACG6T,EAAc9K,EAAO9X,eACxB4iB,EAAc9K,EAAO9X,aAAe,IAEtC4iB,EAAc9K,EAAO9X,aAAa/J,KAAK8Y,GACxC,GAMyB,GAJXgS,EAAuB9nB,OAAO,CAACC,EAAalD,IACnDkD,EAAMlD,EAAK3K,OAClB,GACoCof,EAAwBpf,OAChC,CAC7B,MAAMsN,EAAc,IAAIkf,IACxBpN,EAAwBze,QAASgK,IAC/B2C,EAAY6F,IAAIxI,EAAKtG,aAAY,GAEnCqxB,EAAuB/0B,QAAS+J,IAC9BA,EAAM/J,QAAQgK,IACZ,IAAK2C,EAAYof,IAAI/hB,EAAKmK,WAAY,CACpC,MAAM4O,EAAarF,EACjB1T,EAAK+G,SACL/G,EAAKmK,UACLnK,EAAKgK,YACLxP,EACA+W,EACAib,EAAsBxsB,EAAKgK,cAEzB+O,IACG6T,EAAc5sB,EAAKgK,eACtB4iB,EAAc5sB,EAAKgK,aAAe,IAEpC4iB,EAAc5sB,EAAKgK,aAAa/J,KAAK8Y,GAExC,GAEL,EACD,CACDyR,EAAc,IAAIO,IAClBN,EAAcmC,GACd/uB,EAAmBmtB,GACnBL,EAAkB,IAAItd,KAErB,CAACud,EAAcrZ,EAAQrU,EAAsBE,EAAqBJ,EAAeU,EAAeE,EAAiBhC,EAAWiC,EAAoB2uB,EAAuBzB,EAAwBrX,EAA8BsX,EAAO3d,IAEhO9O,EAAOA,QAAC,KACN,CACLua,WAAYA,EACZC,aACAC,aACApb,kBACAyP,gBAAiByD,EACjBuQ,oBAED,CAACvI,EAAYC,EAAYC,EAAYpb,EAAiBkT,EAAgBuQ,GAAgB,EYxFtEkJ,IACbzR,WAAEA,GAAUE,WAAEA,GAAUD,WAAEA,GAAUsI,gBAAEA,IAAoB5I,GAE1DoU,GAAW7W,EAAAA,OAAuB,OACjC8W,GAAsBC,IAA2BtxB,EAAQA,SAAkB,QACzEuxB,IAAevxB,EAAAA,SAAS,GAE3BwxB,GAAY5qB,EAAWA,YAAC,KAC5B2qB,GAAanzB,GAAUA,EAAQ,EAAC,EAC/B,KAEIqzB,GAAkBC,IAAuB1xB,EAAQA,UAAU,GAElE6jB,EAAAA,oBAAoB3D,EAAK,MACvBvZ,kBACAgrB,qBAAsB9M,GACtBlB,mBAAoBkL,GAAahuB,SAAS8iB,mBAC1CN,mBAAoBwL,GAAahuB,SAASwiB,mBAC1CuO,SAAUC,GACVzxB,aAAcA,GACdguB,aAAcC,KAGhB,MAAMyD,GAAwBlrB,EAAAA,YAAamrB,IAEvClE,EADqB,gBAAnB1tB,GAAU5D,KACE,cACc,sBAAnB4D,GAAU5D,KACL4D,GAAU3D,OAEpBu1B,EAAiB,KACL,UACLA,EAAiB,IACZ,SAEA,SAEjB,EACA,CAAC5xB,KAEJuG,EAASA,UAAC,KACR,GAAIkoB,GAAe/tB,QAAS,CAC1B,MAAMkxB,EAAiBnD,GAAe/tB,QAAQmxB,YAC9CpE,EAAemE,GACfD,GAAsBC,GACtB,MAAME,EAAcA,KAClB,GAAIrD,GAAe/tB,QAAS,CAC1B,MAAMkxB,EAAiBnD,GAAe/tB,QAAQmxB,YAC9CpE,EAAemE,GACfD,GAAsBC,EACvB,GAIH,OAFAhb,OAAOmb,iBAAiB,SAAUD,GAClCA,IACO,KACLlb,OAAOob,oBAAoB,SAAUF,EACvC,CACD,GAEA,CAACrD,GAAe/tB,QAASutB,EAAc0D,KAE1CprB,EAASA,UAAC,KACe,gBAAnBvG,GAAU5D,KACZmxB,EAA0BvtB,GAAUrD,uBAAuBC,aAC/B,YAAnBoD,GAAU5D,KAEjBmxB,EADiB,YAAfxM,EACwB/gB,GAAUrD,uBAAuBE,QACnC,WAAfkkB,EACiB/gB,GAAUrD,uBAAuBG,OAEjCkD,GAAUrD,uBAAuBI,QAEjC,sBAAnBiD,GAAU5D,OACM,YAArB4D,GAAU3D,OACZkxB,EAA0BvtB,GAAUrD,uBAAuBE,SAC7B,gBAArBmD,GAAU3D,OACnBkxB,EAA0BvtB,GAAUrD,uBAAuBC,aAC7B,WAArBoD,GAAU3D,OACnBkxB,EAA0BvtB,GAAUrD,uBAAuBI,QAC7B,WAArBiD,GAAU3D,QACnBkxB,EAA0BvtB,GAAUrD,uBAAuBG,QAE9D,EACA,CAACikB,EAAY/gB,KAEhB,MAAMygB,GAAgCha,EAAAA,YAAawrB,IACjDnE,GAAiCA,EAA8BmE,EAGjE,EAAG,CAACnE,IAGJ,IAAIoE,GAAqB,GACrBnV,GAAiB/c,GAAU7C,wBAA0B,GACrDwwB,GACF5Q,GAAiB4Q,EACjBuE,GAAqBjF,GACZ3M,IACTvD,GAAiB,GACjBmV,GAAqBjF,GAIvB,MAAMkF,GAAsB1rB,EAAWA,YAAC,CAACU,EAAeirB,KACtD9E,EAAmBlE,IACjB,MAAMiJ,EAAYjJ,EAAKS,UAAWzlB,GAASA,EAAKF,KAAKpG,eAAiBs0B,EAAQt0B,cAQ9E,OANmB,IAAfu0B,EACFjJ,EAAKiJ,GAAa,CAAElrB,QAAOjD,KAAM,IAAKkuB,IAEtChJ,EAAK/kB,KAAK,CAAE8C,QAAOjD,KAAM,IAAKkuB,KAGzB,IAAIhJ,EAAI,EAChB,EAEA,IAEGkJ,GAAiB7rB,EAAAA,YAAavC,IAC9BqV,EAAOgZ,UACThZ,EAAOgZ,SAASruB,EAAMsC,GACvB,EACA,CAAC+S,EAAQ/S,KAEZD,EAAAA,UAAU,KACRxM,SAAS8xB,KAAKpb,MAAM+hB,OAAStB,GAAuB,UAAY,SAClE,EAAG,CAACA,KAEJ,MAAOhR,GAAcC,GAAqBsS,IAA6C9vB,EAAAA,QAAQ,KAC7F,IACIud,EAA4B,KAC5BC,EAAsBve,GAAWnI,OAASmI,GAAWnI,OAAS,EAAI,EACtE,GAAIiI,GAAc1B,GAAU1D,UAAW,CACrC,MAAMo2B,EAAkBhxB,GAAc1B,GAAU1D,UAAUwB,aACpD60B,EAAsBzV,IAAY6F,OAAOrb,KAAK2G,GAAQA,EAAKE,YAAcmkB,GAC3EC,IACFzS,EAAeyS,EAAoBtkB,KACnC8R,EAAsBwS,EAAoBvkB,YAE7C,KACwB,SAAnBpO,GAAU5D,MAEZqH,QAAQD,MAAM,6BAKlB,MAAO,CAAC0c,EAAcC,EAlBL,GAkBoC,EACpD,CAACngB,GAAWkd,GAAYtb,GAAYF,KAEjC0a,GAAoBgI,GAAsB,GAAKA,EAAqBxiB,GAAWnI,OAAS2qB,EAAqBjE,GAE7GuR,GAAcjrB,EAAAA,YAAY,CAACob,GAAqB,KACpD+L,EAA0B,IAC1BV,EAAgB,IAChBmB,EAAqB,IACrBD,EAAwB,IACxB/J,GAAkBlE,IAEduO,GAAahuB,SAEbguB,IAAchuB,SAASkhB,YAAYC,EAItC,EACA,CAAC1B,GAAqBkE,GAAmBrkB,GAAU5D,KAAMwxB,IAE5DrnB,EAAAA,UAAU,KACR,MAAMjG,EAAwB,GAC9B4c,GAAW9iB,QAAQuN,IACjBA,EAAMvN,QAAQgK,IACY,UAApBA,GAAMuF,WACRrJ,EAAO+D,KAAKD,EACb,EACF,GAGH,MAAMwuB,EAAoB,IAAIzxB,IAE9Bic,GAAWlW,OAAO9C,QAAiBhF,IAATgF,GAAoBhK,QAAQuN,IACpDA,EAAMvN,QAAQgK,IACZwuB,EAAkB/d,IAAIzQ,EAAKyT,UAAUtJ,UAAWnK,EAAKyT,UAAS,EAC/D,GAGH,MAAMgb,EAAe3S,IAA2B3R,UAEhDjO,EAAOlG,QAAQgK,IACb,MAAMoD,EAAQpD,EAAKiK,KACbrI,EAAO4sB,EAAkBtC,IAAI,gBAAkBlsB,EAAKmK,WACpD9G,EAAStH,GAAeI,SAASmH,KAAKtD,GAAQA,EAAKtG,eAAiB0J,EAAM+G,WAC5E/G,GAASxB,GACuB,OAA9BA,EAAK6H,SAASyO,cAChBtW,EAAK6H,SAASyO,YAAc,CAC1BpB,SAAUzT,GAAQ9I,UAClBwc,MAAO/W,EAAKmK,YAAcskB,EAC1Bt0B,KAAMkJ,EAASA,EAAOlJ,KAAOyB,GAAUlE,WACvCygB,WAAY/U,EAAM4G,aAGpBpI,EAAK6H,SAAS6O,eAAiBjV,GAAQ9I,UAAY,UAAOS,EAC1D4G,EAAKwI,SAAU,EAGlB,IAGF,CAAC4O,GAAYF,GAAYgD,GAAclgB,GAAWG,GAAeI,WAGpEgG,EAASA,UAAC,KACJsnB,GAGFR,EAAejzB,QAAS6D,MAGzB,EACA,CAACovB,EAAgBQ,IAEpBtnB,YAAU,KACRxM,SAAS8xB,KAAKpb,MAAM+hB,OAASxU,EAAU,UAAY,MAErD,EAAG,CAACA,IAEJzX,EAAAA,UAAU,KACJvG,IAAW8yB,wBAA0B9E,GACvCI,EAAwBpuB,GAAU8yB,uBACnC,EACA,CAAC9yB,GAAWguB,IAEfznB,EAAAA,UAAU,KACR,GAAIvG,IAAsC,KAAzBmuB,EAA6B,CAC5C,MAAM5mB,EAAWpH,GAAeK,UAAUkH,KAAKtD,GACtCA,EAAKuB,OAASwoB,GAEvB,GAAI5mB,EAAU,CACZ,MAAM0M,EAAY9T,GAAeI,SAASmH,KAAKtD,GAAQA,EAAKxG,cAAgB2J,EAAS5J,IAC/Eo1B,EAAY7V,IAAY6F,OAAOrb,KAAKtD,GAAQA,EAAKmK,YAAc0F,GAAWnW,cAC5Ei1B,GACF3F,EAAsB2F,EAAU3kB,aAE9B6F,GACF2Z,EAA0B3Z,EAAUnW,aAEvC,CACF,GACA,CAACkC,GAAW4tB,EAA2BO,EAAsBjR,GAAY/c,GAAeI,SAAUJ,GAAeK,YAGpH,MAAMwyB,GAA0BvsB,cAAauO,IAC3C,MAAMie,EAAmB9V,GAAWf,KAAoB1U,KAAKzJ,GACpDA,EAAMya,SAASnK,YAAc,GAAG3P,IAAsBoW,EAAQzG,aAGjE2kB,EAAa9V,GAAWhB,KAAoB1U,KAAKzJ,GAC9CA,EAAM4Z,UAAUtJ,YAAc,GAAG3P,IAAsBoW,EAAQzG,aAGlEiG,EAAS,CAACQ,GAEZie,GACFze,EAAOnQ,KAAK4uB,EAAiBva,UAG3Bwa,GACF1e,EAAOnQ,KAAK6uB,EAAWrb,WAGzBtV,GAAc,IAAIiS,KACjB,CAAC4I,GAAYD,GAAY5a,GAAe6Z,KAE3C7V,YAAU,KACR,GAAI2W,IAAcA,GAAWzjB,QAAUk0B,EAAwB,CAC7D,MAAM3Y,EAASkI,GAAWd,KAAoB1U,KAAMzJ,GAAUA,EAAMsQ,YAAcof,IAAyBtf,KACvG2G,GACFge,GAAwBhe,EAE3B,GACA,CAACkI,GAAY8V,GAAyBrF,EAAwBvR,KAEjE,MAAMsI,GAAqBje,EAAAA,YAAazH,IACtC4uB,EAA0B,IAC1BV,EAAgB,IACO,WAAnBltB,GAAU5D,MAAsB4D,GAAU1D,SAI5C+xB,EAAqBrvB,IAHrBuvB,GAAuBvvB,GACvBuyB,IAAoB,GAGrB,EACA,CAACvxB,GAAU5D,KAAM4D,GAAU1D,SAAUsxB,IAElChN,GAAoBna,cAAY,CAACuO,EAAkBme,EAAkBC,KAEzE,IAAKA,GAAgC,gBAAnBpzB,GAAU5D,MAA0B2xB,GAAyB/Y,EAAOrL,WAAWqN,WAAW,SAAU,CAEpH,MAAMvP,EAAStH,GAAeI,SAASmH,KAAMtD,GAASA,EAAKtG,eAAiBkX,EAAOzG,WAA+B,aAAlBnK,EAAKrG,UACrG,GAAI0J,EAAQ,CACV,MAAMF,EAAWpH,GAAeK,UAAUkH,KAAMtD,GAASA,EAAKzG,KAAO8J,EAAO7J,aACxE2J,GACFwmB,EAAsBxmB,EAAS5B,KAElC,CAED,OACD,CAAA,CAEsB,gBAAnB3F,GAAU5D,MAA0B8jB,IACtCmE,GAAkBlE,IAGpByI,EAAgB,KACdoK,GAAwBhe,GACxB4Y,EAA0BuF,GAAY,IACtCnG,EAAgBqG,IAAMA,GACtBjF,EAAwB,IACxBC,EAAqB,IACrBnB,EAAgB,GAClB,IAEC,CAAC/M,GAAqBD,GAAc6N,EAAuB1J,GAAmB2O,GAAyB7yB,GAAeI,SAAUJ,GAAeK,UAAWR,GAAU5D,KAAMwxB,IAEvKlQ,GAAUjX,EAAWA,YAAEsH,IAE3B,GADAA,EAAE6Q,kBACE7Q,EAAEulB,MAAQ,GACZ,OAGF,MAAMH,EAAYplB,EAAEiH,OAAoBzG,UAClC9G,EAAStH,GAAeI,SAASmH,KAAKtD,GAAQA,EAAKtG,eAAiBq1B,GACtE1rB,GAAgC,YAAtBA,EAAOzJ,YACnB0mB,GAAmBjd,EAAOxJ,OACH,WAAnB+B,GAAU5D,OACZ42B,GAAwBjlB,EAAEiH,QAC1B4Y,EAA0BuF,GAAY,OAGxCvS,GAAkB7S,EAAEiH,OAAoBme,GAAY,IAC7B,WAAnBnzB,GAAU5D,OAAsB4D,GAAU1D,UAAYmL,GAAQ7J,aAChE2zB,IAAoB,GAEvB,EACA,CAACvxB,GAAW0kB,GAAoBkJ,EAA2BoF,GAAyBpS,GAAmBzgB,GAAeI,WAEnHgd,GAAiB9W,EAAAA,YAAasH,IAClCA,EAAE6Q,kBAEFuO,GAAW,GACyB,KAAhCpf,EAAEiH,OAAOnH,SAASY,WAGtB0iB,GAAwBpjB,EAAEiH,OAAM,EAC/B,IAEGyI,GAAiBhX,EAAWA,YAAEsH,IAClCA,EAAE6Q,kBACFuS,GAAwB,MACxBhE,GAAW,GACP8D,IAAYA,GAASvwB,UACvBuwB,GAASvwB,QAAQ+P,MAAMkO,QAAU,OAClC,EACA,IAEG4U,GAAgBnZ,EAAAA,OAAiE,CAAE1f,EAAG,KAAMC,EAAG,KAAMmS,UAAW0mB,WAEhHnW,GAAgB5W,EAAAA,YAAasH,IAEjC,GADAA,EAAE6Q,kBACE7Q,EAAE0lB,QAAU,GAOd,GANgC,OAA5BF,GAAc7yB,QAAQhG,IACxB64B,GAAc7yB,QAAQhG,EAAIqT,EAAE2lB,SAEE,OAA5BH,GAAc7yB,QAAQ/F,IACxB44B,GAAc7yB,QAAQ/F,EAAIoT,EAAE4lB,SAEE,OAA5BJ,GAAc7yB,QAAQhG,GAA0C,OAA5B64B,GAAc7yB,QAAQ/F,EAAY,CACxE,IAAIi5B,EAAc1d,KAAK2d,KAAK3d,KAAK+D,IAAIsZ,GAAc7yB,QAAQhG,EAAIqT,EAAE2lB,QAAS,GAAKxd,KAAK+D,IAAIsZ,GAAc7yB,QAAQ/F,EAAIoT,EAAE4lB,QAAS,IACzHC,EAAcL,GAAc7yB,QAAQoM,WACtCymB,GAAc7yB,QAAQoM,SAAW8mB,EAEpC,OAEDL,GAAc7yB,QAAQhG,EAAI64B,GAAc7yB,QAAQ/F,EAAI,KACpD44B,GAAc7yB,QAAQoM,UAAY0mB,SAGhCvC,IAAYA,GAASvwB,SAAWqN,EAAEiH,OAAOnH,SAASY,WAA6C,KAAhCV,EAAEiH,OAAOnH,SAASY,WACnFwiB,GAASvwB,QAAQ+P,MAAMqjB,IAAS/lB,EAAEgmB,QAAU,GAAf,KAC7B9C,GAASvwB,QAAQ+P,MAAMujB,KAAO,GAAGjmB,EAAEkmB,YACnChD,GAASvwB,QAAQ+P,MAAMkO,QAAU,SACxBsS,GAASvwB,UAClBuwB,GAASvwB,QAAQ+P,MAAMkO,QAAU,OAClC,EACA,IAEGuV,GAA8B,CAClCtmB,SAAU,WACVkmB,IAAK,MACLE,KAAM,MACNG,UAAW,uBACXC,WAAY,UAGRC,GAA4B5tB,EAAAA,YAAY,CAAC4f,EAAoBiO,KAC5DA,GAGHpH,EAAgB7G,GAChBgI,EAAqBiG,IAHrBpH,EAAgB7G,GAKlBkL,IAAoB,EACtB,EAAG,CAACrE,EAAiBmB,EAAsBkD,KAE3C,IAAKzxB,GACH,OAAO2I,EAAAC,IAAA,MAAA,CAAKwT,UAAU,eAAezL,MAAOyjB,GAAY50B,SAAA,gCAG1D,GAAIsC,GAAWnI,QAAU,EACvB,OAAOgP,EAAAA,IAAA,MAAA,CAAKyT,UAAU,eAAezL,MAAOyjB,GAAY50B,SAAA,gCAG1D,IAAK4d,GAAWzjB,OACd,OACSgP,EAAAA,IAAA,MADc,YAAnBzI,GAAU5D,KACL,CAAK8f,UAAU,eAAezL,MAAOyjB,GAAY50B,SAAA,qBAEnD,CAAK4c,UAAU,eAAezL,MAAOyjB,GAAY50B,SAAA,gCAG1D,GAAImzB,GACF,OAAOhqB,EAAAA,IAAA,MAAA,CAAKyT,UAAU,eAAezL,MAAOyjB,GAAY50B,SAAGmzB,KAGxDvS,IAAmC,SAAnBlgB,GAAU5D,MAC7BqH,QAAQD,MAAM,yBAIhB,MAAM+wB,GAAqC1X,GAE3C,IACIG,GAAgB,GAKpB,OANkBkU,OAEa3iB,YAC7ByO,GAHgBkU,GAGY3iB,WAI5ByN,OACGY,EAAAA,SAAA,CAAAtd,SAAA,CAAmB,WAAnBU,GAAU5D,MACTqM,EAAKC,IAAA,MAAA,CAAAwT,UAAW,yBAAyCyR,WAAyC,aAChGllB,EAAKC,IAAA,MAAA,CAAAwT,UAAW,iCACdzT,EAAKC,IAAA,MAAA,CAAAwT,UAAW,6BACbyR,EACCllB,MAACif,GAAiB,CAChBnL,WAAYH,GACZS,WAAYA,GACZ8K,QAASwK,GACTvK,WAAY+F,EACZ4E,SAAUD,GACVzK,YAAatO,EAAOsO,YACpBC,aAAcvO,EAAOuO,aACrBC,UAAWxO,EAAOwO,UAClBC,mBAAoBqJ,KAGtB,WAQVrV,cAAK+D,IAAK0O,GAAgBvS,UAAW,0BACnCzT,EAAAA,IAAC0b,GACCC,mBAAoBhI,GACpBiI,kBAAmBA,GACnBI,MAAOiN,GACPnN,OAAQA,IAAMiK,GAAQ,CAAEzb,UAAW,OACnCyR,QAASA,IAAMgK,GAAQ,CAAEzb,UAAW,QACpCuR,cAAexlB,EACf4lB,mBAAoBA,GACpBC,qBAAsBpL,EAAOoL,uBAG/B3I,EAAAA,KAACwY,EAAAA,QAAO/jB,MAAO,CAAE7C,SAAU,WAAYkmB,IAAK,EAAGE,KAAM,GAAKjR,MACvD,EAAAzjB,SAAA,CAAAsjB,OAAO5iB,GAAUxD,OAASiM,EAAAC,IAAC+rB,QAAM,CAAAvY,mBAAyBwY,OAAQjG,KAAqB,KAExFhmB,EAAAC,IAAC4Q,EAAgB,CAAAG,WAAYzZ,GAAU9E,uBACvCuN,EAAAA,IAACiR,EAAgB,CAACG,KAAM,EAAGvc,IAAK0C,GAAU5C,OAAOE,IAAKD,IAAK2C,GAAU5C,OAAOC,MAE5EoL,EAAAA,IAAc,eAAA,CAAAksB,UAAW,EAAG1qB,MAAO,YACnCxB,EAAAC,IAAA,mBAAA,CAAkBkF,SAAU,CAAC,EAAG,IAAK,GAAI3D,MAAO,UAAW0qB,UAAW,KACtElsB,EAAAC,IAAA,mBAAA,CAAkBkF,SAAU,CAAC,EAAG,EAAG,KAAM3D,MAAO,UAAW0qB,UAAW,KACtElsB,EAAkBC,IAAA,mBAAA,CAAAkF,SAAU,CAAC,EAAG,GAAI,KAAM3D,MAAO,UAAW0qB,UAAW,KAEvElsB,EAAAA,IAACoX,GACChD,WAAY0X,GACZxX,eAAgBA,GAChBC,cAAeA,GACfkD,aAAcA,GACdC,oBAAqBA,GACrBC,cAAerD,GACfsD,kBAAmB6R,GACnB9V,kBAAmBA,GACnBmB,eAAgBA,GAChBE,eAAgBA,GAChBJ,cAAeA,GACfK,QAASA,GACTT,kBAAmBoH,GACnB/D,kBAAmBA,EACnBpL,eAAgB2H,GAAWpL,gBAC3B8O,KAAMA,GACNC,mBAAoBA,GACpBT,IAAK2O,GACL5N,uBAAwBA,EACxBL,8BAA+BA,GAC/BC,wBAAwB,EACxBC,gBAAiBA,EACjBC,kBAAmBA,GACnBC,aAAcA,EACdE,WAAYA,OAII,gBAAnB/gB,GAAU5D,OAA8C,YAAnB4D,GAAU5D,OAAuB,CAAC,SAAU,UAAUmO,SAASwW,KACnGtY,aAAKsX,IAAKkR,GACR/U,UAAU,yBACVzL,MAAO,CACL7C,SAAU,WACVgnB,QAAS,GACTnb,WAAY,UACZob,WAAY,IACZ5qB,MAAO,UACP6qB,SAAU,GACVnW,QAASuS,GAAuB,QAAU,OAC1C4C,IAAK,IACLE,KAAM,IACN1pB,QAAS,IACVhL,SACD4xB,IAAwBA,GAAqBrjB,SAASY,eAIxC,WAAnBzO,GAAU5D,MACTqM,EAAAC,IAACyc,GACC,CAAA3b,QAAS8kB,EACTlJ,KAAMkM,GACNjM,OAAQA,IAAMkM,IAAoB,GAClCjM,cAAeqI,EACfpI,cAAe8O,GACf7O,QAASxlB,GAAU1D,SACnBmpB,gBAAiBA,OACjB,GEhlBJsP,GAASjV,EAAUA,WAAC,CAAAkV,EAYbjV,KAAO,IAZO7f,OACzBA,EAAM+0B,UACNA,EAAS1C,SACTA,EAAQ2C,aACRA,EAAYpH,8BACZA,EAA6BjG,YAC7BA,EAAWC,aACXA,EAAYC,UACZA,EAASvoB,kBACTA,EAAiBmlB,qBACjBA,EAAoBoJ,sBACpBA,GACSiH,EACT,MAAOrH,EAAwBC,GAA6BpP,UAAM3e,SAAiB,IAmBnF,OAjBA6jB,EAAAA,oBAAoB3D,EAAK,KAChB,CACLmD,mBAAoBgS,GAAcx0B,SAASwiB,sBAgB7Cza,EAACC,IAAArJ,EAAsB,CAAAG,kBAAmBA,EAAmBD,YANd,CAC/CG,cAAeu1B,EACf/0B,UAKEZ,SAAA0c,EAAA8B,KAAA,MAAA,CAAK5B,UAAW,mCAAsDhc,EAAO9D,QAAwB,WAAhB8D,EAAO9D,cAAkC,KAAIkD,SAAA,CAChImJ,MAACskB,GAAc,CACbhN,IAAKmV,EACLtH,0BAA2BA,EAC3BD,uBAAwBA,EACxB4E,SAlBeD,CAACpuB,EAAkBixB,KACpC5C,GACFA,EAASruB,EAAMixB,EAChB,EAgBKtN,YAAaA,EACbC,aAAcA,EACdC,UAAWA,EACX+F,8BAA+BA,EAC/BnJ,qBAAsBA,EACtBoJ,sBAAuBA,IAGzB/R,EAAA8B,KAAA,MAAA,CAAK5B,mBACH5c,SAAA,CAAAmJ,EAAAA,IAAA,MAAA,CAAK9K,GAAI,wBAAyBkhB,wBAAyB,CAAEC,O1BrF9D,iV0BsFCrW,EAAAC,IAAA,MAAA,CAAK/K,GAAI,4BAA6BkhB,wBAAyB,CAAEC,OAAQjgB,KAExEC,EAAakI,IAAI,CAACwC,EAASrC,IAC1BsB,EAAiBC,IAAA,MAAA,CAAA/K,GAAI,mBAAmB6L,EAAQxK,OAAQ6f,wBAAyB,CAAEC,OAAQtV,EAAQvK,UAAzFkI,WAGV"}