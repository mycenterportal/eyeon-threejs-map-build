{"version":3,"file":"index.cjs","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/components/Amenities/ATM.tsx","../src/components/Amenities/Management.tsx","../src/components/Amenities/PlayArea.tsx","../src/components/Amenities/Restroom.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Amenities/Elevator.tsx","../src/components/Amenities/Security.tsx","../src/components/Icons/DogPoopStation.tsx","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/contexts/MapBoxContextProvider.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/components/MapboxForm/MapboxForm.tsx","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type {Vector2} from \"three\";\nimport {IFloorData} from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n    return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string , boolean] {\n    let exists = false;\n    let node_name:string = '-name-not-found-';\n    const currentFloor = floors[floor_index];\n    if (currentFloor.route_points !== undefined) {\n        for (let i = 0; i < currentFloor.route_points.length; i++) {\n            if (vertex.x == currentFloor.route_points[i].node.x && vertex.y == currentFloor.route_points[i].node.y) {\n                exists = true;\n                node_name = currentFloor.route_points[i].name;\n                break;\n            }\n        }\n        if (!exists) {\n            node_name = next_node_name(node_count);\n            // draw_points([{ x: vertex.x, y: vertex.y }]);\n        }\n    }\n    return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport {Graph} from \"ngraph.graph\";\nimport {Color, LineCurve, Vector2, Vector3} from \"three\";\nimport {get_node_name} from \"./nodesUtils\";\nimport {MeshType} from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n    const consolePrefix = 'MeshParams';\n    let mesh_type:MeshType = null;\n    var layer_color: Color | string = path.color.clone();\n    var extrude = 0;\n    var z_index = 0;\n    var mesh_visible = true;\n    var mesh_draw = true;\n    var mesh_transparent = false;\n    var line_thickness = config.WALL_THICKNESS;\n    var interactiveMesh = true;\n    var layer_name = path.userData?.node.id;\n    if (layer_name != undefined) {\n        if (layer_name.startsWith('boundary')) {\n            mesh_type = 'boundary';\n            layer_color = config.BOUNDARY_COLOR;\n            line_thickness = config.BOUNDARY_THICKNESS;\n            if (config.STYLE == '3D') {\n                extrude = 9;\n            }\n        } else if (layer_name.startsWith('wall')) {\n            mesh_type = 'wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 8.5;\n            }\n        } else if (layer_name.startsWith('outer-wall')) {\n            mesh_type = 'outer-wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                mesh_draw = false;\n            }\n        } else if (layer_name.startsWith('building-base')) {\n            mesh_type = 'building-base';\n            layer_color = config.BUILDING_BASE_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 12;\n                z_index = -12;\n            }\n        } else if (layer_name.startsWith('base')) {\n            mesh_type = 'base';\n            layer_color = config.BASE_COLOR;\n        } else if (layer_name.startsWith('store')) {\n            mesh_type = 'store';\n            layer_color = config.STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = parseInt(config.STORE_HEIGHT);\n            }\n            if (layer_name.startsWith('store-underlay')) {\n                interactiveMesh = false;\n            }\n        } else if (layer_name.startsWith('big-store')) {\n            mesh_type = 'big-store';\n            layer_color = config.BIG_STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 16;\n            }\n        } else if (layer_name.startsWith('route-path')) {\n            mesh_type = 'route-path';\n            mesh_draw = false;\n            path.subPaths.forEach(subPath => {\n                if (subPath.curves.length == 0) {\n                    console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n                }\n\n                subPath.curves.forEach(curve => {\n                    //@ts-ignore\n                    const v1:Vector2 = curve.v1;\n                    //@ts-ignore\n                    const v2:Vector2 = curve.v2;\n\n                    const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n                    if (!exists1) {\n                        floors[floor_index].route_points?.push({\n                            name: node1_name,\n                            node: new Vector3(v1.x, v1.y, 1)\n                        });\n                        allNodesFloor[node1_name] = floor_index;\n                    }\n                    const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n                    if (!exists2) {\n                        floors[floor_index].route_points?.push({\n                            name: node2_name,\n                            node: new Vector3(v2.x, v2.y, 1)\n                        });\n                        allNodesFloor[node2_name] = floor_index;\n                    }\n                    pathFinderGraph.addNode(node1_name, { ...v1 });\n                    pathFinderGraph.addNode(node2_name, { ...v2 });\n\n                    // pathFinderGraph.addLink(node1_name, node2_name);\n                    pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n                    pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n                });\n            });\n        } else if (layer_name.startsWith('escalator-')) {\n            mesh_type = 'escalator';\n            mesh_visible = false;\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('kiosk-')) {\n            mesh_type = 'kiosk';\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('amenity-')) {\n            mesh_type = 'amenity';\n            mesh_transparent = true;\n            z_index = 1;\n        } else if (layer_name.startsWith('overlay')) {\n            mesh_type = 'overlay';\n        } else if (layer_name.startsWith('special-shape')) {\n            mesh_type = 'special-shape';\n        } else {\n            extrude = 1;\n        }\n    } else {\n        console.warn(consolePrefix + 'Layer name is undefined, path', path)\n    }\n\n\n    /*console.debug({\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    })*/\n    return {\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    }\n}","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import ATMIcon from \"src/components/Amenities/ATM\";\nimport ElevatorIcon from \"src/components/Amenities/Elevator\";\nimport ManagementIcon from \"src/components/Amenities/Management\";\nimport PlayAreaIcon from \"src/components/Amenities/PlayArea\";\nimport RestroomIcon from \"src/components/Amenities/Restroom\";\nimport SecurityIcon from \"src/components/Amenities/Security\";\nimport DogPoopStation from \"src/components/Icons/DogPoopStation\";\nimport FamilyRestroom from \"src/components/Icons/FamilyRestroom\";\nimport { IAmenitiesInteractiveList } from \"src/types\";\n\nexport const amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        icon: ATMIcon,\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        icon: ManagementIcon,\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        icon: PlayAreaIcon,\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        icon: RestroomIcon,\n    },\n    {\n        name: 'Family Restroom',\n        type: 'family-restroom',\n        icon: FamilyRestroom,\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        icon: ElevatorIcon,\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        icon: SecurityIcon,\n    },\n    {\n        name: 'Dog Poop Station',\n        type: 'dog-poop-station',\n        icon: DogPoopStation,\n    },\n] \n\n","const ATMIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ATMIcon;","\nconst ManagementIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default ManagementIcon;","\nconst PlayAreaIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default PlayAreaIcon;","\nconst RestroomIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default RestroomIcon;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst ElevatorIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ElevatorIcon;","\nconst SecurityIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default SecurityIcon;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","import {BackSide, Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry, Vector3} from \"three\";\nimport {getWallShape} from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\n// import {allMapObjects} from \"../../globals\";\nimport {IConfig, IExtMesh, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {hex_to_color} from \"../../helpers/misc\";\n\nimport {IRetailer, MapObj} from \"../../mapitApiTypes\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n    'route-path': 0,\n    'escalator': 0,\n    'underlay': 0,\n    'overlay': 1,\n    'building-base': 1,\n    'base': 2,\n    'store': 3,\n    'big-store': 4,\n    'kiosk': 5,\n    'wall': 6,\n    'outer-wall': 7,\n    'boundary': 8,\n    'amenity': 9,\n    'layer-image': 10,\n    'layer-text': 11,\n    'route-tube': 12,\n    'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n        return renderOrders[mesh_type];\n    }\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\n    return 0;\n}\n\nexport const getMaterial = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    layer_color: Color | string,\n    mesh_transparent: boolean,\n    allIndexedMapObjects: Record<string, MapObj>,\n) => {\n    const material_settings = {\n        color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n        side: DoubleSide,\n        transparent: false,\n        depthWrite: true,\n        depthTest: true,\n        opacity: 1,\n    }\n    if (config.STYLE == '2D' || mesh_type == 'base' || mesh_type == null) {\n        if (mesh_type != 'boundary') {\n            material_settings.depthWrite = false;\n            material_settings.depthTest = false;\n        }\n    }\n    if (mesh_type == 'overlay') {\n        material_settings.color = config.OVERLAY_COLOR;\n        material_settings.opacity = config.OVERLAY_OPACITY;\n    }\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE != 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent == 1) {\n        material_settings.opacity = 0;\n    }\n    var material = new MeshLambertMaterial(material_settings);\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        material.colorDefault = material.color;\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color != '') {\n            material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n            //@ts-ignore\n            material.colorDefault = material.color;\n        }\n        //@ts-ignore\n        material.active = false;\n    }\n    if (config.ROLE != 'PORTAL' && mesh_transparent) {\n        material.opacity = 0;\n        material.transparent = true;\n    }\n\n    material.transparent = material.opacity !== 1;\n\n    return material;\n}\n\nexport const getGeometry = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    extrude: number,\n    line_thickness: number,\n    path: any,\n) => {\n    const consolePrefix = 'MaterialAndGeometry';\n\n    let shapes = path.toShapes(true);\n\n    // shapes.forEach((shape, index) => {\n    let extrude_meshes;\n    if (config.STYLE == '2D') {\n        extrude_meshes = ['building-base'];\n    } else {\n        extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n    }\n\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n    var geometry;\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\n        geometry = new ExtrudeGeometry(shapes, {\n            depth: -extrude,\n            bevelEnabled: false,\n        });\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n        //@ts-ignore\n        let wall_geometries = [];\n        //@ts-ignore\n        path.subPaths.forEach(subPath => {\n            //@ts-ignore\n            subPath.curves.forEach(curve => {\n                if (curve.type == 'LineCurve') {\n                    let shape_extend = 0;\n                    if (mesh_type == 'boundary') {\n                        shape_extend = 1;\n                    } else if (mesh_type == 'wall') {\n                        // shape_extend = 1 / 3;\n                    }\n                    let shape1 = getWallShape(curve, line_thickness, shape_extend);\n                    let wall_geometry = new ExtrudeGeometry(shape1, {\n                        depth: -extrude,\n                        bevelEnabled: false,\n                    });\n                    wall_geometries.push(wall_geometry);\n                } else {\n                    console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n                }\n            });\n        });\n\n        if (wall_geometries.length == 1) {\n            //@ts-ignore\n            geometry = wall_geometries[0];\n        } else if (wall_geometries.length > 1) {\n            //@ts-ignore\n            geometry = mergeGeometries(wall_geometries);\n        } else {\n            console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n        }\n    } else {\n        geometry = new ShapeGeometry(shapes);\n        try {\n            //@ts-ignore\n            if (geometry.attributes.position.count == 0) {\n                console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n            }\n        } catch (e: any) {\n            console.error(e.message);\n        }\n    }\n\n    return geometry;\n}\n\nexport const getMaterialAndGeometry = (allMapObjects: string[], config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n    \n    const material = getMaterial(\n        config,\n        mesh_type,\n        layer_name,\n        layer_color,\n        mesh_transparent,\n        allIndexedMapObjects\n    );\n\n    const geometry = getGeometry(\n        config,\n        mesh_type,\n        layer_name,\n        extrude,\n        line_thickness,\n        path\n    );\n\n    const mesh = new Mesh(geometry, material) as IExtMesh;\n    mesh.object_id = layer_name;\n    mesh.mesh_type = mesh_type;\n    mesh.floor_index = floor_index;\n    mesh.visible = mesh_visible;\n    mesh.position.z = z_index;\n    let storeName = '';\n    if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n        if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type == 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n            storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].custom_text;\n            if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n                storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n            }\n        } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].value;\n            if (storeName.length > 1) {\n                const amenity = amenitiesList.find(item => item.type === storeName)\n                if (amenity) {\n                    storeName = amenity.name;\n                }\n            }\n        }\n    }\n    mesh.userData.storeName = storeName;\n    if (config.STYLE == '2D') {\n        mesh.renderOrder = getRenderOrder(mesh_type);\n        if (layer_name && layer_name.includes('underlay')) {\n            mesh.renderOrder = getRenderOrder('underlay');\n        }\n    }\n\n    floors[floor_index].objsGroup.add(mesh);\n\n    if (mesh_type == 'escalator') {\n        floors[floor_index].escalatorsNodes[layer_name] = null;\n        floors[floor_index].escalatorsObjs.push(mesh);\n        mesh.escalator_id = floor_index + '-' + layer_name;\n    }\n\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        mesh.route_node_id = null;\n\n        // add floor_index to the kiosks\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'kiosk') {\n            var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n            /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n                ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n            }*/\n        }\n\n        if (config.ROLE === 'PORTAL') {\n            allMapObjects.push(layer_name);\n        }\n        if (\n            (config.ROLE !== 'PORTAL' && mesh_type == 'kiosk') ||\n            (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type == 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n            (config.ROLE !== 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'amenity' && allIndexedMapObjects[layer_name].value != '') ||\n            (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n            (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type?? ''))\n        ) {\n            // if (interactiveMesh) {\n            floors[floor_index].interactiveObjs.push(mesh);\n            // }\n        } else if (\n            (config.ROLE === 'PORTAL')\n        ) {\n            floors[floor_index].interactiveObjs.push(mesh);\n        }\n    }\n\n    // if (['store', 'big-store'].includes(mesh_type as string)) {\n    //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n    // }\n\n    return {\n        mesh,\n        geometry,\n        material,\n        object_id: layer_name,\n        mesh_type,\n        floor_index,\n        visible: mesh_visible,\n        renderOrder: mesh.renderOrder,\n    }\n    // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n    BufferGeometry,\n    CanvasTexture,\n    Color,\n    CurvePath,\n    DoubleSide,\n    LineCurve3,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    Raycaster,\n    Scene,\n    TubeGeometry,\n    Vector3,\n} from \"three\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\n// import {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport {PathFinder} from \"ngraph.path\";\nimport {IRetailer, MapObj} from \"../mapitApiTypes\";\nimport {IExtMesh, IFloorData} from \"../types\";\nimport {Graph, Node} from \"ngraph.graph\";\n// import { allNodesFloor } from \"src/globals\";\n\nconst consolePrefix = 'ROUTE: ';\nlet route_exists = null;\nlet activeMapObjectName: string | null = null;\n\nfunction makeObjectActive(object_id: string | null = null, accentColor: string | Color, scene: Scene) {\n    clearActiveEffect(scene);\n    if (object_id != null) activeMapObjectName = object_id;\n    let obj = scene.getObjectByProperty('object_id', activeMapObjectName as string) as IExtMesh;\n    // obj.material.color = config.ACCENT_COLOR;\n    //@ts-ignore\n    obj.material.color = new Color(`#${accentColor}`);\n    //@ts-ignore\n    obj.material.active = true;\n    return obj;\n}\n\nfunction clearActiveEffect(scene: Scene) {\n    if (activeMapObjectName) {\n        let obj = scene.getObjectByProperty('object_id', activeMapObjectName) as IExtMesh;\n        //@ts-ignore\n        obj.material.color = { ...obj.material.colorDefault };\n        //@ts-ignore\n        obj.material.active = false;\n        activeMapObjectName = null;\n    }\n}\n\nexport function delete_route_path(floors: IFloorData[]) {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n        const floor = floors[floor_index];\n        floor.route_active = false;\n\n        if (floor.route_tube != null) {\n            floor.route_tube.geometry.dispose();\n            //@ts-ignore\n            floor.route_tube.material.dispose();\n            floor.objsGroup?.remove(floor.route_tube);\n        }\n\n        floor.route_tube = undefined;\n        floor.route_texture = null;\n        floor.escalatorMeshes = [];\n    }\n}\n\nexport function create_route(allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n    if (from_mesh_object_id === to_mesh_object_id) {\n        return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[] , floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    // console.log({\n    //     from_mesh_object_id,\n    //     to_mesh_object_id,\n    //     from_obj,\n    //     to_obj,\n    //     from_node_name,\n    //     to_node_name,\n    // })\n\n    // from_node_name = 'node-147';\n    // to_node_name = 'node-221';\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n        return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n        const routeNode = routeNodes[index];\n        if (floor_routes[allNodesFloor[routeNode.id]]) {\n            floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n        } else {\n            floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n        }\n\n        if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n            // don't consider these middle escalators nodes\n        } else {\n            routeNodesEsclators.push(routeNode);\n        }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n        const routeNode = routeNodesEsclators[index];\n        if (\n            allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n            && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n        ) {\n            const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n            const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n            let goToFloor = null;\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index + 1].id],\n                    direction: 'Next',\n                };\n            }\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index - 1].id],\n                    direction: 'Previous',\n                };\n            }\n\n            if (goToFloor && escalator_mesh) {\n                escalator_mesh.goToFloor = goToFloor;\n                //@ts-ignore\n                floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n            }\n        }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n        const floor_route = floor_routes[floor_index];\n        if (floor_route && floor_route.length > 1) {\n            const routePath = create_route_path(floor_route, floor_index, floors, style);\n            routePaths[floor_index] = routePath;\n\n            floors[floor_index].route_active = true;\n            floors[floor_index].routeMeshes = [ routePath ];\n            if (floor_index === from_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(from_obj);\n            }\n            if (floor_index === to_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(to_obj);\n\n            }\n        }\n    }\n\n    // setTimeout(function () {\n    //     //TODO openFloorMap functionality\n    //     // openFloorMap(from_route_floor_index);\n    // });\n\n    return routePaths;\n}\n\nfunction create_route_path(\n    routeNodes: Node<any>[],\n    floor_index: number,\n    floors: IFloorData[],\n    style = '2D',// config.STYLE\n) {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n        let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n        let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n        route_path.add(new LineCurve3(from_node, to_node));\n        distance += from_node.distanceTo(to_node);\n    };\n    var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    //@ts-ignore\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n        map: get_route_texture(distance, floor_index, floors),\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style === '2D') {\n        route_tube.position.z = -10;\n        route_tube.scale.z = 0.1;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n    return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n        let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n        distance += link?.data.weight || 0;\n    };\n    return distance;\n}\n\nfunction draw_route_tube(route_tube: IExtMesh, total_faces: number) {\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, total_faces);\n    /*createjs.Ticker.framerate = 60;\n    createjs.Tween.get({ x: 0 },\n        {\n            onChange: function (event) {\n                route_tube.geometry.setDrawRange(0, event.target.target.x);\n            },\n            onComplete: function () {\n                animate_route_path(floors);\n            }\n        })\n        .to({ x: total_faces }, 1000, createjs.Ease.cubicInOut);\n    */\n}\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n        ctx.canvas.width = distance;\n        ctx.canvas.height = 80;\n\n        ctx.fillStyle = \"#4ea5ff\";\n        ctx.fillRect(0, 0, distance, 80);\n\n        let grd_width = 0.1 * distance;\n        const min_grd_width = 60;\n        const max_grd_width = 120;\n        if (grd_width < min_grd_width) grd_width = min_grd_width;\n        if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n        let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n        grd.addColorStop(0, \"#4ea5ff\");\n        grd.addColorStop(0.4, \"white\");\n        grd.addColorStop(0.6, \"white\");\n        grd.addColorStop(1, \"#4ea5ff\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n        floors[floor_index].route_texture = route_texture;\n\n        return route_texture;\n    } else {\n        return undefined;\n    }\n}\n\n//TODO\nfunction animate_route_path(floors: IFloorData[]) {\n    /*floors.forEach(floor => {\n        if (floor.route_texture != null) {\n            createjs.Ticker.framerate = 60;\n            createjs.Tween.get(floor.route_texture.offset, { loop: true })\n                .to({ x: -1 }, 2000, createjs.Ease.cubicInOut)\n        }\n    });*/\n}\n\nexport function assign_route_nodes_to_stores(\n    floor_index: number,\n     floors: IFloorData[],\n     allIndexedMapObjects: Record<string, MapObj>,\n     allIndexedRetailers: Record<string, IRetailer>,\n     allNodesFloor: Record<string, number>,\n     escalator_nodes: string[],\n     find_store_node_raycaster: Raycaster,\n     role: string, //config.ROLE\n     ) {\n    const result = new Map();\n    const currentFloor = floors[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n        currentFloor.route_points.forEach(point => {\n            let origin_point = new Vector3(point.node.x, point.node.y, -10);\n            let target_direction = new Vector3(0, 0, 1);\n            find_store_node_raycaster.set(origin_point, target_direction);\n            //@ts-ignore\n            var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n            if (storeIntersects.length) {\n                //@ts-ignore\n                storeIntersects[0].object.route_node_id = point.name;\n                //@ts-ignore\n                result.set(storeIntersects[0].object.object_id, point.name);\n                if (false && role != 'PORTAL') {\n                    //@ts-ignore\n                    var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n                    if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n                        var retailer_index = allIndexedRetailers[retailer_id].index;\n                        // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n                    }\n                }\n            }\n\n            var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n            if (escalatorIntersects.length) {\n                const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n                let escalator_obj_id = obj.object_id;\n                const escalatorNodes = floors[floor_index].escalatorsNodes;\n                if (escalatorNodes) {\n                    escalatorNodes[escalator_obj_id as string] = point.name;\n                    allNodesFloor[point.name] = floor_index;\n                    escalator_nodes.push(point.name);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n    // console.log('linkFloorEscalators', floors)\n    if (floors.length > 1) {\n        for(let i=0; i < (floors.length-1); i++) {\n            // console.log('floors[i]',i, floors[i])\n            const floor_escalators = floors[i].escalatorsNodes;\n            // console.log('floor_escalators', floor_escalators);\n            Object.keys(floor_escalators as object).forEach(escalator => {\n                if (floors[i].escalatorsNodes?.[escalator] != null && floors[i+1].escalatorsNodes?.[escalator] != null) {\n                    // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n                    const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n                    const nodeIdTo = floors[i+1].escalatorsNodes?.[escalator];\n                    if (nodeIdFrom && nodeIdTo) {\n                        pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                        pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n                    }\n                } else {\n                    // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n                }\n            })\n        }\n    }\n}\n\nexport function make_amenity_route(allNodesFloor: Record<string, number>, kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string ): Mesh[] {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    // if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj? kiosk_obj.route_node_id : '';\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for(let key in allIndexedMapObjects) {\n        const mapObject = allIndexedMapObjects[key];\n        if (\n            mapObject.layer_type === 'amenity'\n            && mapObject.obj_type === 'special'\n            && mapObject.value === amenity_type\n        ) {\n            map_objs.push(key);\n        }\n    }\n    map_objs.forEach((amenity_obj_name: string, index: number) => {\n        let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n            var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n            if (route_distance && route_distance < shortest_distance) {\n                shortest_distance = route_distance;\n                to_obj_name = amenity_obj_name;\n            }\n        } catch(e: any) {\n            console.warn(`Amenity Path: ${e.message}`);\n        }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n        to_obj_name = amenity_node_name;\n    }\n    });\n    return create_route(allNodesFloor, kiosk_obj_name, to_obj_name?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import {getMeshParams} from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport {IConfig, IFloorData, IMeshValues, TMapMode, TRoles} from \"src/types\";\n// import {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport {getMaterialAndGeometry} from \"./getMaterialAndGeometry\";\nimport {Raycaster} from \"three\";\nimport {assign_route_nodes_to_stores, linkFloorEscalators} from \"src/helpers/route.helpers\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { Graph } from \"ngraph.graph\";\nimport {EventedType} from \"ngraph.events\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, allMapObjects: string[], allNodesFloor: Record<string, number>, pathFinderGraph: Graph<any, any> & EventedType, floors:IFloorData[], config:IConfig, results:SVGResult[], role?: TRoles) {\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n    const escalator_nodes: string[] = [];\n    results.forEach((result, floor_index) => {\n        if (result.paths && result.paths.length) {\n            const pathIds = [];\n            for (let i = 0; i < result.paths.length; i++) {\n                pathIds.push(result.paths[i]?.userData?.node.id);\n            }\n            const paths = result.paths;\n            for (let i = 0; i < paths.length; i++) {\n                const {\n                    mesh_type,\n                    layer_color,\n                    extrude,\n                    z_index,\n                    mesh_visible,\n                    mesh_draw,\n                    mesh_transparent,\n                    line_thickness,\n                    interactiveMesh,\n                    path,\n                    layer_name,\n                } = getMeshParams(\n                    paths[i],\n                    paths,\n                    floors,\n                    floor_index,\n                    config,\n                    ++node_count,\n                    //@ts-ignore\n                    allNodesFloor,\n                    pathFinderGraph\n                );\n\n                if (mesh_draw) {\n                    const meshParams = getMaterialAndGeometry(\n                        allMapObjects,\n                        config,\n                        mesh_type,\n                        layer_name,\n                        layer_color,\n                        mesh_transparent,\n                        mesh_visible,\n                        z_index,\n                        extrude,\n                        line_thickness,\n                        floors,\n                        floor_index,\n                        allIndexedMapObjects,\n                        allIndexedRetailers,\n                        path,\n                        role\n                    );\n\n                    if (layer_name.startsWith('kiosk-')) {\n                        if (role === 'PORTAL') {\n                            // meshParams.mesh.visible = false;\n                            //@ts-ignore\n                            // meshParams.mesh.material.visible = false;\n                        }\n                    }\n\n                    if (!GeometriesAndMaterials[floor_index]) {\n                        GeometriesAndMaterials[floor_index] = [];\n                    }\n\n                    GeometriesAndMaterials[floor_index].push(meshParams);\n                }\n            }\n            const findStoreNodeRaycaster = new Raycaster();\n            const routeNodeIds = assign_route_nodes_to_stores(\n                floor_index,\n                floors,\n                allIndexedMapObjects,\n                allIndexedRetailers,\n                allNodesFloor,\n                escalator_nodes,\n                findStoreNodeRaycaster,\n                config.ROLE\n            );\n            \n            if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n                for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n                    if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n                        GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n                    }\n                }\n            }\n\n            linkFloorEscalators(floors, pathFinderGraph);\n\n        }\n    })\n\n    return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes};\n}","import {IJsonConfig} from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n    ROLE: 'WEBSITE',\n    DEVICE: 'display_app',\n    CENTER_ID: '',\n    KIOSK: '',\n    STYLE: '3D',\n    DEFAULT_SELECTED_STORE: '',\n    DEBUG: '1',\n\n    MAP_BACKGROUND_COLOR: \"FFFFFF\",\n    ACCENT_COLOR: \"4EA5FF\",\n    STORE_DEFAULT_COLOR: \"E2E2E2\",\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n    WALL_THICKNESS: '0.6',\n    WALL_COLOR: \"888888\",\n    BOUNDARY_THICKNESS: '0.8',\n    BOUNDARY_COLOR: \"888888\",\n    BASE_COLOR: \"25292B\",\n    STORE_TEXT_COLOR: \"222222\",\n    OVERLAY_COLOR: \"FFFFFF\",\n    OVERLAY_OPACITY: '0.7',\n    // AMENITIES_NAV_BG_COLOR: \"000000\",\n    // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    }\n}\n\nexport const defaultVars: IJsonConfig = {\n    MAP_BACKGROUND_COLOR: '',\n    ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n    DEVICE: 'display_app',\n    KIOSK: '',\n    FLOORS: [],\n    KIOSKS: {},\n    CENTER_ID: null,\n    STATS: 'false',\n    STYLE: '3D', // 2D, 3D\n    DEBUG: '0',\n    ACCENT_COLOR: '4EA5FF',\n    STORE_DEFAULT_COLOR: 'E2E2E2',\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n    WALL_THICKNESS: '0.6',\n    BOUNDARY_THICKNESS: '0.8',\n    WALL_COLOR: '888888',\n    BOUNDARY_COLOR: '888888',\n    BASE_COLOR: '25292B',\n    BUILDING_BASE_COLOR: 'DADADA',\n    STORE_TEXT_COLOR: '222222',\n    OVERLAY_COLOR: 'FFFFFF',\n    OVERLAY_OPACITY: '0.7',\n    CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n    ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n    DEFAULT_CAMERA_POSITION: null, // custom default camera position\n    DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n    DEFAULT_SELECTED_STORE: null,\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    },\n    KIOSK_SIZE: '15',\n    ZOOM_STEP: '100',\n};","// import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3, Color, SphereGeometry } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport {IExtMesh} from \"../types\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {hex_to_color} from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n        addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n        //@ts-ignore\n        add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n}\n\nfunction deleteMeshByObjectID(object_id: string, scene: Scene, floors: Record<any, any>) {\n    if (object_id) {\n        let mesh = scene.getObjectByProperty('object_id', object_id);\n        if (mesh) {\n            //@ts-ignore\n            mesh.geometry.dispose();\n            //@ts-ignore\n            mesh.material.dispose();\n            //@ts-ignore\n            floors[mesh.floor_index].objsGroup.remove(mesh);\n        }\n    }\n}\n\nfunction getCenterPoint(mesh: Mesh) {\n    var mesh_center_point = new Vector3();\n    getMeshGroupBoundingBox(mesh).getCenter(mesh_center_point);\n    return mesh_center_point;\n}\n\nfunction getMeshSize(mesh: Mesh) {\n    var point = new Vector3();\n    //@ts-ignore\n    getMeshGroupBoundingBox(mesh).getSize(point);\n    return point;\n}\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n    if (!Array.isArray(mesh)) {\n        mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        //@ts-ignore\n        box.union(obj.geometry.boundingBox);\n        return box;\n    }, new Box3());\n    return box;\n}\n\nfunction layer_text_logo_position(mesh: Mesh, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    const object_id = (mesh as IExtMesh).object_id;\n    if (!object_id) return;\n    return layer_text_logo_position_by_id(object_id, newMeshPos, mesh_size, newMesh, allIndexedMapObjects);\n}\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    let map_obj = allIndexedMapObjects[object_id];\n\n    if (!map_obj) {\n        map_obj = {\n            offsetX: \"0\",\n            offsetY: \"0\",\n            rotate: \"0\",\n        }\n    }\n\n    let offsetX = parseInt(map_obj.offsetX);\n    let offsetY = parseInt(map_obj.offsetY);\n\n    newMeshPos.z = -mesh_size.z;\n\n    //@ts-ignore\n    newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n    //@ts-ignore\n    newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += offsetX;\n    newMeshPos.y += offsetY;\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n        const img = new Image();\n        img.crossOrigin = 'Anonymous';\n        if (map_obj.obj_type == 'retailer') {\n            if (retailer) {\n                img.src = retailer.logo;\n            } else {\n                console.error('retailer not found');\n                return null;\n            }\n        } else if (map_obj.obj_type == 'special') {\n    \n            let svg_image_name = map_obj.value;\n            if (map_obj.layer_type == 'kiosk') svg_image_name = 'kiosk';\n            if (map_obj.layer_type == 'escalator') svg_image_name = 'escalator';\n            if (svg_image_name) {\n                let svg_color = '222222';\n                if (map_obj.text_color != null) {\n                    svg_color = map_obj.text_color;\n                }\n    \n                const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n                if (!svg_block) {\n                    console.error('svg_block not found', svg_image_name);\n                    return null;\n                }\n                const svg_element = svg_block.querySelector(\"svg\");\n                if (!svg_element) {\n                    console.error('svg_element not found', svg_image_name);\n                    return null;\n                }\n    \n                const svgColoredParts = svg_element.querySelectorAll('[fill]');\n                svgColoredParts.forEach((svgColoredPart) => {\n                    svgColoredPart.setAttribute('fill', '#' + svg_color);\n                })\n    \n                const svgData = (new XMLSerializer()).serializeToString(svg_element);\n                img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n            }\n    \n        } else {\n            if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n                img.src = map_obj.custom_image;\n            } else {\n                return null;\n            }\n        }\n\n        return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    img.onload = function () {\n        const c = document.createElement(\"canvas\");\n        const ctx = c.getContext(\"2d\");\n\n        c.width = img.width;\n        c.height = img.height;\n\n        ctx?.drawImage(img, 0, 0);\n\n        let texture = new CanvasTexture(c);\n        texture.colorSpace = 'srgb'\n\n        const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n        const material = new MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            side: DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        if (map_obj.layer_type === 'kiosk') {\n            material.visible = false;\n        }\n        \n        afterOnload(geometry, material);\n    };\n}\n\nfunction getImageLogo(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry,object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: {storeLogo: Object3D}) => void): void {\n    const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n    if (img === null) return;\n\n    processImage(img, map_obj, (geometry, material) => {\n        const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n        // @ts-ignore\n        const floor_index = mesh.floor_index;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n        logoMesh.object_id = new_object_id;\n        logoMesh.floor_index = floor_index;\n        logoMesh.renderOrder = getRenderOrder('layer-image');\n        floors[floor_index]?.objsGroup.add(logoMesh);\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        logoMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        //@ts-ignore\n        BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        \n        handleAsync({storeLogo: BoundingSphereMesh});\n        */\n        handleAsync({storeLogo: logoMesh});\n    })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id:string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): {textMesh: IExtMesh} | null | false {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n        return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    let map_obj: MapObj = allIndexedMapObjects[object_id]? allIndexedMapObjects[object_id] : {layer_type: object_id.startsWith('escalator')? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8};\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            text = '';\n        }\n\n        let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n        if (map_obj.text_color) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n        textMesh.userData.font = myFont;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        textMesh.object_id = new_object_id;\n        textMesh.floor_index = floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        if (map_obj.layer_type === 'retail_name') {\n            textMesh.userData.retail_name = text;\n        }\n\n        floors[floor_index].objsGroup.add(textMesh);\n\n        //scene.add(textMesh);\n        //console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        */\n        result = { textMesh };\n    }\n\n    else if (\n       map_obj.layer_type == 'retail_logo' ||\n       map_obj.layer_type == 'custom_image' ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'kiosk' && map_obj.kiosk_id != null) ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'amenity' && map_obj.value != '')\n       || (map_obj.layer_type == 'escalator')\n   ) {\n        getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n   }\n   return result;\n}","import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport type {Mesh} from \"three\";\nimport path from \"ngraph.path\";\nimport {EventedType} from \"ngraph.events\";\n\n\ntype MapBoxContextType = {\n    meshByObjectId: Map<string, Mesh>;\n    setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>> | Function;\n    allMapObjects: Array<string>;\n    setAllMapObjects: Dispatch<SetStateAction<Array<string>>> | Function;\n    allIndexedMapObjects: Record<string, MapObj>;\n    setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObj>>> | Function;\n    allIndexedRetailers: Record<string, IRetailer>;\n    setAllIndexedRetailers: Dispatch<SetStateAction<Record<string, IRetailer>>> | Function;\n    allNodesFloor: Record<string, number>;\n    setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>> | Function;\n    pathFinderGraph: Graph<any, any> & EventedType\n    setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>> | Function;\n    ngraphPath: typeof path;\n    setNgraphPath: Dispatch<SetStateAction<typeof path>> | Function;\n}\nconst MapBoxContext = createContext<MapBoxContextType>({\n    meshByObjectId: new Map<string, Mesh>(),\n    setMeshByObjectId: () => null,\n    allMapObjects: [],\n    setAllMapObjects: () => null,\n    allIndexedMapObjects: {},\n    setAllIndexedMapObjects: () => null,\n    allIndexedRetailers: {},\n    setAllIndexedRetailers: () => null,\n    allNodesFloor: {},\n    setAllNodesFloor: () => null,\n    pathFinderGraph: createGraph(),\n    setPathFinderGraph: () => null,\n    ngraphPath: path,\n    setNgraphPath: () => null,\n})\n\nconst MapBoxContextProvider = ({children}: {children: ReactNode}) => {\n\nconst [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string,Mesh>());\nconst [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\nconst [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\nconst [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\nconst [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n//<{ x:number, y:number }, { weight: number }>\nconst [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\nconst [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n\nreturn (\n    <MapBoxContext.Provider value={{\n        meshByObjectId,\n        setMeshByObjectId,\n        allMapObjects,\n        setAllMapObjects,\n        allIndexedMapObjects,\n        setAllIndexedMapObjects,\n        allIndexedRetailers,\n        setAllIndexedRetailers,\n        allNodesFloor,\n        setAllNodesFloor,\n        pathFinderGraph,\n        setPathFinderGraph,\n        ngraphPath,\n        setNgraphPath,\n    }}\n    >\n        {children}\n    </MapBoxContext.Provider>\n)\n\n} \n\nexport function useMapBoxContext() {\n    const context = useContext(MapBoxContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n    }\n\n    return context;\n}\n\nexport default MapBoxContextProvider;\n","import {\n    Group,\n    Scene,\n    Object3D,\n    Mesh,\n    BufferGeometry,\n    Color,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport {loadFloors} from \"./loadFloors\";\nimport type {IConfig, IExtMesh, IFloorData, IMeshParams, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {defaultVars, mapit2DefaultVars} from \"../../defaults\";\n// import {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport {drawTextLogoStoreOnMap, get_store_name_logo_geo} from \"src/helpers/draw.logo.helpers\";\nimport { FontLoader, Font } from \"three-stdlib\";\nimport { IJsonConfig, IMeshParamsTmp} from \"../../types\";\nimport {hex_to_color} from \"src/helpers/misc\";\nimport {Kiosk, Floor, MapIt2Response, MapObj, IRetailer} from \"../../mapitApiTypes\";\nimport { EventedType } from \"ngraph.events\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars}\n\nconst defaultMapObjValues = {\n\tid: null,\n\tcenter_id: config.CENTER_ID,\n\tretailer_id: null,\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: 8,\n\trotate: 0,\n\toffsetX: 0,\n\toffsetY: 0,\n} as Record<string, string | number | null| undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\nconst extraMapObjects = []\nlet activeMapObjectName = null;\nconst floorsData:IFloorData[] = [];\nconst floors = [] as Floor[];\nlet floors_loaded = 0;\nlet MEDIA_STORAGE_URI: string = '';\n\nfunction select<T>(...values: T[]) {\n    return values.find(value => value !== '' && value != null) || values.at(-1);\n}\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n\tfor (let key in obj) {\n\t\tdelete obj[key];\n\t}\n}\n\nfunction makeIndexedMapObjects(allIndexedMapObjects: Record<string, MapObj>,map_objs: MapObj[]) {\n\tclearObject(allIndexedMapObjects);\n\n    allNonIndexedMapObjects = map_objs;\n\n    for (let i = 0; i < map_objs.length; i++) {\n        const obj = map_objs[i];\n        allIndexedMapObjects[obj.map_obj_name] = obj;\n        for (let key in defaultMapObjValues) {\n            const value = defaultMapObjValues[key];\n            //@ts-ignore\n            if (value != null && obj[key] == null) {\n                //@ts-ignore\n                allIndexedMapObjects[obj.map_obj_name][key] = value;\n            }\n        }\n    }\n}\n\nconst init = (allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: IJsonConfig, floors:IFloorData[], response: MapIt2Response) => {\n    const KIOSKS:Record<string, Kiosk> = {};\n\n    response.kiosks.forEach((kiosk) => {\n        const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n        if (mapObj) {\n            kiosk.map_obj_name = mapObj.map_obj_name;\n        }\n        KIOSKS[kiosk.id] = kiosk;\n    });\n\n\n    for (let index in response.retailers) {\n        const retailer = response.retailers[index];\n        allIndexedRetailers[retailer.id] = retailer;\n        allIndexedRetailers[retailer.id].index = index;\n    }\n\n    // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n    // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n    makeIndexedMapObjects(allIndexedMapObjects, response.map_objs);\n\n    floors.length = 0;\n    response.floors.forEach((value: IFloorData, index: number) => {\n        const objsGroup = new Group();\n        objsGroup.scale.y *= -1;\n        objsGroup.lookAt(0, 1, 0);\n\n        floors.push({\n            id: value.id,\n            // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n            svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n            title: value.title,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n        });\n    });\n    const DEFAULT_CAMERA_FOV = 75;\n    const WP_SITE_CAMERA_FOV = 30;\n    const DEFAULT_CAMERA_FAR = 10000;\n    config.CAMERA.far = DEFAULT_CAMERA_FAR;\n    config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n    const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n    config.CAMERA.maxDistance *= fovCorrection;\n    config.CAMERA.far *= fovCorrection;\n\n    const processedConfig: IConfig = {\n        ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n        BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n        BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n        BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n        BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n        BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n        CAMERA: {\n            ...config.CAMERA,\n            minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE)? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n            maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE)? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n        },\n        CAMERA_CONTROLS_STATES: response.camera_controls_states[config.DEVICE],\n        CENTER_ID: config.CENTER_ID,\n        CONTROLS: null,\n        DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n        DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n        DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n        DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n        DEVICE: config.DEVICE,\n        KIOSK: config.KIOSK? config.KIOSK : '',\n        KIOSKS: KIOSKS,\n        MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n        ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n        OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n        OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n        ROLE: config.ROLE,\n        SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n        STATS: config.STATS === 'true' || config.STATS === '1',\n        STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n        STORE_HEIGHT: response.settings.STORE_HEIGHT? response.settings.STORE_HEIGHT : config.STORE_HEIGHT? config.STORE_HEIGHT : '8',\n        STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n        STYLE: response.settings.STYLE? response.settings.STYLE : config.STYLE? config.STYLE : '3D',\n        WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n        WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n        FLOORS: response.floors,\n        AMENITIES: response.amenities,\n        RETAILERS: response.retailers,\n        AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n        AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n        KIOSK_SIZE: response.settings.KIOSK_SIZE? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n        ZOOM_STEP: response.settings.ZOOM_STEP? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n    };\n\n    // AMENITIES_NAV_BG_COLOR: string;\n    // AMENITIES_NAV_ICON_COLOR: string;\n\n    return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response|null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n    const {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph} = useMapBoxContext();\n    const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n    const [textParams, setTextParams] = useState<Array<{textMesh:IExtMesh}[]>>([]);\n    const [storeLogos, setStoreLogos] = useState<{storeLogo: Mesh}[][]>([]);\n    // const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n    const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n    const [urls, setUrls] = useState<string[]>([]);\n    const [ processedConfig, setProcessedConfig ] = useState<IConfig|null>(null);\n    let result = useLoader(SVGLoader, urls);\n\n    MEDIA_STORAGE_URI = useMemo(() => {\n        const r = /\\/$/;\n        if (mediaStorageURI) {\n            return mediaStorageURI?.replace(r, '');\n        }\n\n        return '';\n\n    }, [mediaStorageURI])\n\n    const consolePrefix = 'MAPIT2';\n    // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n    const myFont = useFont(fontData as unknown as FontData);\n\n    // const getWallShape = (...params: any): Shape | Shape[] => {\n    //     return []\n    // }\n\n\n    const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: {storeLogo: Mesh}) => {\n        setStoreLogos((prevLogos) => {\n            // console.debug({floorIndex});\n            if (prevLogos[floorIndex]) {\n                prevLogos[floorIndex].push({...meshLogo});\n            } else {\n                prevLogos[floorIndex] = [{...meshLogo}];\n            }\n            // console.debug({prevLogos});\n            return [...prevLogos];\n        });\n    }), [])\n\n\n    useEffect(() => {\n        if (!data) return;\n\n\n        // console.log('useMeshFloors[data]', {data})\n\n        const processedConfig = init(allIndexedMapObjects, allIndexedRetailers, jsonConfig ? {...config, ...jsonConfig} : config, floorsData, data as MapIt2Response);\n        const values: string[] = [];\n        processedConfig.FLOORS.forEach((value) => {\n            // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n            //@ts-ignore\n            values.push(`${value.svg}`);\n        });\n\n        setProcessedConfig(processedConfig);\n        setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n    return () => {\n        if (meshParams) {\n            meshParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.mesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (textParams) {\n            textParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.textMesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (storeLogos) {\n            storeLogos.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.storeLogo.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        setMeshParams([]);\n        setTextParams([]);\n        setStoreLogos([]);\n    }\n    }, [data]);\n\n    useEffect(() => {\n        if (!processedConfig || !urls.length || !myFont || !result) return;\n\n        const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph,floorsData, processedConfig, result, role);\n        const TextsAndLogos:Array<{textMesh:IExtMesh}[]> = [];\n        allNonIndexedMapObjects.forEach((params) => {\n            let values: IMeshValues | undefined;\n            for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n                //@ts-ignore\n                values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n                if (values !== undefined) {\n                    break;\n                } \n            }\n            if (!values) return null;\n            const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n            if (textParams) {\n                if (!TextsAndLogos[values.floor_index]) {\n                    TextsAndLogos[values.floor_index] = [];\n                }\n                TextsAndLogos[values.floor_index].push(textParams);\n            }\n        })\n        const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n            return (acc + item.length);\n        }, 0);\n        const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n        if (countNonIndexedObjs !== 0) {\n            const mapObjNames = new Set<string>();\n            allNonIndexedMapObjects.forEach((item) => {\n                mapObjNames.add(item.map_obj_name);\n            });\n            GeometriesAndMaterials.forEach((items) => {\n                items.forEach(item => {\n                    if (!mapObjNames.has(item.object_id)) {\n                        const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n                        if (textParams) {\n                            if (!TextsAndLogos[item.floor_index]) {\n                                TextsAndLogos[item.floor_index] = [];\n                            }\n                            TextsAndLogos[item.floor_index].push(textParams);\n                        }\n                    }\n                })\n            });\n        }\n        setMeshParams(GeometriesAndMaterials);\n        setTextParams(TextsAndLogos);\n        setPathFinderGraph(graph);\n        setEscalatorNodes([...escalator_nodes]);\n\n    }, [processedConfig, urls, result, myFont]);\n\n    return useMemo(() => {\n        return {\n            config: processedConfig,\n            meshParams,\n            textParams,\n            storeLogos,\n            floors: floorsData,\n            pathFinderGraph,\n            escalator_nodes: escalatorNodes,\n        }\n    }, [ processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes ])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useEffect, useState } from \"react\"\nimport { Object3D } from \"three\";\nimport { IConfig, IExtMesh } from \"src/types\";\n\n\nexport type TMeshObjectContext = {\n    MeshObject: IExtMesh[] | null;\n    SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n    cameraLength: number | undefined,\n    setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n    config: IConfig | undefined,\n    setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n    MeshObject: null,\n    SetMeshObject: () => null,\n    cameraLength: undefined,\n    setCameraLength: () => null,\n    config: undefined,\n    setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({children}: {children: React.ReactNode}) {\n    const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n    const [config, setConfig] = useState<IConfig | undefined>();\n    const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n    return (\n        <MeshObjectContext.Provider\n            value={{\n                MeshObject,\n                SetMeshObject,\n                cameraLength,\n                setCameraLength,\n                config,\n                setConfig\n            }}\n        >\n            {children}\n        </MeshObjectContext.Provider>\n    )\n}\n\nexport function useMeshObjectContext() {\n    const context = useContext(MeshObjectContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n    }\n\n    return context;\n}\n","import React, { useContext, useEffect, useMemo, useState } from \"react\";\nimport styles from '../../MapBox.module.css';\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { IConfig } from \"src/types\";\nimport { SphereGeometry, SpriteMaterial, Texture } from \"three\";\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, config }: { size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined }) => {\n  const [sizeFactor, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && config !== undefined && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n    }\n  }, [lockSize, config, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize });\n    return material;\n  }, [lockSize, texture])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const svgData = (new XMLSerializer()).serializeToString(svgOrigin);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      const svgSize = svgOrigin.getBoundingClientRect();\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n\n    }\n  }, []);\n\n  if (material) {\n    // console.debug('RENDER SPRITE', lockSize2)\n    return (\n      <group>\n        <sprite scale={scale} material={material}>\n        </sprite>\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, IMeshParams, IMeshValues, TRoles } from \"../../types\";\nimport { ThreeEvent, context, useThree } from \"@react-three/fiber\";\nimport React, { MouseEventHandler, useEffect } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB, BoxHelper } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from '../../MapBox.module.scss';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: IMeshParams;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, currentFloorIndex: number, params?: IMeshValues }) {\n  const [update, setUpdate] = React.useState(false);\n  const { type, mesh, currentFloorIndex, params } = props;\n  const { camera } = useThree();\n  React.useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      setUpdate((value) => !value);\n    };\n  }, [mesh.userData, setUpdate]);\n\n  const { config, cameraLength } = useMeshObjectContext();\n\n  // console.warn({update});\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </primitive>\n      } else {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </>\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n\n  const { config, meshParams, textParams, storeLogos } = meshFloors;\n  const floor = meshFloors.floors[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            // @ts-ignore\n            const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n            //console.log('Map', {baseColor, active, hovered})\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n      {escalatorMeshes?.map((params) => {\n        //@ts-ignore\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div onClick={() => handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n              <div className={styles.element} id={params.object_id as string}>\n                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type {Mesh} from \"three\";\nimport {Box3, Vector3} from \"three\";\n\nexport function get_camera_focus_object(objs:Mesh[], fov:number, aspectRatio: number, style: string) {\n    // config.STYLE\n    // config.CAMERA.fov\n\n    if (!Array.isArray(objs)) {\n        objs = [objs];\n    }\n    if (!objs.length) {\n        console.warn('get_camera_focus_object: no objects passed');\n        return { position: new Vector3(), target: new Vector3() };\n    }\n\n    const objsBoundingBox = objs.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        if (obj.geometry.boundingBox) {\n            box.union(obj.geometry.boundingBox);\n        }\n        return box;\n    }, new Box3());\n\n    const obj_size = new Vector3();\n    objsBoundingBox.getSize(obj_size);\n\n    const center = new Vector3();\n    objsBoundingBox.getCenter(center);\n\n    objs[0].localToWorld(center);\n\n    // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n    // var padding = max_length * 0.2;\n    // if (padding > 50) padding = 50;\n    // max_length += padding;\n    // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n    let tanFOV = Math.tan(Math.PI * fov / 360);\n    let padding = 1.1;\n    let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n    let new_height = (obj_size.y * padding) / 2 / tanFOV;\n    let new_y = Math.max(new_width, new_height);\n    let new_z = getCameraTiltPosition(new_y, style);\n\n    const target = new Vector3(center.x, 0, center.z);\n    const position = new Vector3(center.x, new_y, center.z + new_z);\n\n    // createjs.Ticker.framerate = 60;\n    // createjs.Tween.get(config.CONTROLS.target)\n    //     .to({ x: center.x, z: center.z }, 400);\n    // createjs.Tween.get(config.CAMERA.position)\n    //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n    return {position, target};\n}\n\nfunction getCameraTiltPosition(y:number, style:string): number {\n    let angle = 60;\n    if (style == '2D') angle = 89.9;\n    return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IJsonConfig, IMeshParams, TMapMode } from \"../../types\";\nimport { Map } from \"./Map\";\nimport React, { MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\n// import { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { defaultVars } from \"src/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n// import { allNodesFloor } from \"src/globals\";\n\ninterface IFloorsMapProps {\n  meshFloors: IMeshParams;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  onCameraMove?: (e: any) => void;\n  currKioskObj: Mesh;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: IZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  config: IConfig;\n  cameraPos?: { x: number, y: number, z: number } | undefined | null;\n  controlPos?: { x: number, y: number, z: number } | undefined | null;\n  handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n  const { allIndexedMapObjects, allNodesFloor } = useMapBoxContext();\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const { meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    config,\n    cameraPos,\n    controlPos,\n    handleCameraAndControlsChange,\n    activeObjectId } = params;\n  const { floors } = meshFloors;\n\n  const { setCameraLength } = useMeshObjectContext();\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = meshFloors.config.STYLE;\n  const accentColor = meshFloors.config.ACCENT_COLOR;\n  const pathFinderGraph = meshFloors.pathFinderGraph;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length])\n\n  useEffect(() => {\n    if (!amenityTargetType || config.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(allNodesFloor, from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n    setRouteTubes(route);\n  }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n      if (config.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floors.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n\n    console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    // TODO: activate object (moved out of create_route function)\n    // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n    // TODO: focus object (moved out of create_route function)\n    // if (!routePaths.length) {\n    //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n    //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n    //     camera.position.copy(position);\n    // }\n\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n\n    if (!selectedFloorMeshParams.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && config.ROLE == 'PORTAL') {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      config.CAMERA.maxDistance,\n      Math.max(\n        config.CAMERA.minDistance,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n      const zoomStep = config.ZOOM_STEP ? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= zoomStep;\n      } else {\n        cameraDistance += zoomStep;\n      }\n\n      cameraDistance = Math.min(\n        config.CAMERA.maxDistance,\n        Math.max(\n          config.CAMERA.minDistance,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n  }, [zoom])\n\n  // useEffect(() => {\n  //     if (mapControlRef.current) {\n\n  //         // Set initial camera position\n  //         if (cameraPos)\n  //             mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n  //         // Set initial controls target\n  //         if (controlPos)\n  //             mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n  //         mapControlRef.current.update();\n  //     }\n  // }, [mapControlRef]);\n\n  // useEffect(() => {\n  //     if (mapControlRef.current) {\n  //         if (cameraPos)\n  //             mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n  //         // Set initial controls target\n  //         if (controlPos)\n  //             mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n  //         mapControlRef.current.update();\n  //     }\n  // }, [cameraPos, controlPos]);\n\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange)\n        handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const resetCamera = (fullReset: boolean = false, cameraControlsStates?: any) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n    const cameraDistance = Math.min(\n      config.CAMERA.maxDistance,\n      Math.max(\n        config.CAMERA.minDistance,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    if (config.CAMERA_CONTROLS_STATES && !['PORTAL', 'PORTAL_RESPONSIVE'].includes(config.ROLE)) {\n      focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n      focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n    }\n\n    // if (cameraPos && controlPos && !['PORTAL', 'PORTAL_RESPONSIVE'].includes(config.ROLE)) {\n    //     focus.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n    //     focus.target.set(controlPos.x, controlPos.y, controlPos.z);\n    // }\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n  };\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n  }))\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={config.CAMERA.minDistance}\n        maxDistance={config.CAMERA.maxDistance}\n        enableZoom={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floors && floors.map((value: IFloorData, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.scss';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\n\nconst UIComponent = ({\n  floors,\n  accentColor,\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  role,\n  mapObjs,\n  onExtractedAmenities,\n}: IFloorSelectorProps & {\n  amenitiesList: IAmenitiesInteractiveList[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: () => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  role?: TRoles,\n  mapObjs?: MapObj[],\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      reset();\n    }\n  }\n\n  const extractValues = useMemo<AmenityID[]>(() => {\n\n    if (!mapObjs) {\n      return [];\n    }\n\n    return mapObjs\n      .filter(obj => obj.layer_type === \"amenity\")\n      .map(obj => obj.value as AmenityID);\n  }, [mapObjs])\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [mapObjs, onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floors.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              <div className=\"floors btn_group\">\n                {floors.map((floor: any, index: number) => (\n                  <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                    console.log(floor, index);\n                    handleFloorChange(index)\n                  }}>{floor.title}</div>\n                ))}\n              </div>\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(role as string) &&\n          <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                  <div className={styles.img}>\n                    {/* <img src={amenity.icon} alt={amenity.name} /> */}\n                    <amenity.icon />\n                  </div>\n                  <div className={`${styles.name}`}>{amenity.name}</div>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { useCallback, useMemo, useState } from \"react\";\n\ntype GetRetailersParams = {\n    centerId: string | number,\n    apiURI?: string,\n    limit?: number,\n    page?: number,\n}\n\ntype Data = {\n    isError: boolean,\n    error: string | null,\n    items: any[],\n    count: number,\n}\n\nconst defaultData: Data = {\n    isError: false,\n    error: null,\n    items: [],\n    count: 0,\n}\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n    const { centerId, apiURI, limit, page } = params;\n\n    const fetchRetailers = useCallback((search: string) => {\n        const r = /\\/$/;\n        const uri = apiURI?.replace(r, '');\n        const url = `${uri}/v1/retailers?limit=${limit ? limit : 100}&page=${page ? page : 1}&search=${search ? search : ''}`;\n\n        return fetch(url, {\n            headers: {\n                center_id: centerId.toString(),\n            },\n        }).then(response => {\n            if (!response.ok) {\n                return {\n                    ...defaultData,\n                    isError: true,\n                    error: `Server error: [${response.status}] [${response.statusText}] [${response.url}]`,\n                    items: [],\n                };\n            }\n            return (async () => {\n                return await response.json().then(retailers => {\n                    return {\n                        ...defaultData,\n                        items: retailers.items,\n                        count: retailers.count,\n                    }\n                });\n            })()\n        }).catch((e: any) => {\n            return {\n                ...defaultData,\n                isError: true,\n                error: e.message ? e.message : 'useGetRetailer: something went wrong!',\n                items: [],\n            };\n        })\n    }\n        , [centerId, limit, page, apiURI]);\n\n    return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor, hex_to_color } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { MouseEventHandler, SyntheticEvent, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, FormControl, FormControlProps, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, Euler, MeshBasicMaterial, MeshPhongMaterial, Object3D, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { Geometry, TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IJsonConfig, IMeshParamsTmp } from \"src/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useGetRetailers from \"./useGetRetailersBySearch\";\nimport { MapCenterMarker } from \"../SceneComponent/MapCenterMarker\";\n\n\ninterface IMapboxForm {\n    floorIndex: number;\n    meshFloors: IMeshParamsTmp;\n    config: IConfig;\n    data: any;\n    setData: (index: number, data: MapObj) => void;\n    selectedId: string;\n    centerId: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    apiURI?: string;\n    onResetData?: (data: MapObj) => void;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n    [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n\tid: '',\n\tcenter_id: centerId,\n\tretailer_id: '',\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: '8',\n    lock_size: '0',\n\trotate: '0',\n\toffsetX: '0',\n\toffsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData) => {\n    const kioskConfig = obj.userData.kioskConfig;\n    if (kioskConfig) {\n        //TODO use 'value' until api with lock_size will be working\n        obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n        obj.userData.kioskConfig = {\n            ...kioskConfig,\n            lockSize: formData.value === '1',\n            blink: kioskConfig.blink,\n            size: Number(formData.size)\n        }\n        // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n        obj.userData.triggerUpdate?.();\n    }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n    const {data, setData, selectedId, centerId, config, floorIndex, meshFloors, onResetData} = params;\n\n    const myFont = useFont(fontData as unknown as FontData);\n    const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n    const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n    const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n    const [formData, setFormData] = useState<MapObj | null>(null);\n    const [rotation, setRotation] = useState<number | undefined>(undefined);\n    const context = useMeshObjectContext();\n    const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [, startTransition] = useTransition();\n    const intervalRefs = useRef<TIncDecInterval>({});\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const fetchRetailers = useGetRetailers({centerId, apiURI: params.apiURI});\n\n    const loadOptions = (inputValue: string, callback: (options: any[]) => void) => {\n        setIsLoading(true);\n        const retailersData = fetchRetailers(inputValue);\n        retailersData.then(data => {\n            setIsLoading(false);\n            let result: any = [];\n            if (!data) return result;\n            if (!data.isError) {\n                result = data.items.map((item: any) => {\n                    return {\n                        value: item.id,\n                        label: item.name,\n                    }\n                })\n            } else {\n                console.error(`Fetch Retailers error: ${data.error}`)\n            }\n            callback(result);\n        })\n    }\n\n    useEffect(() => {\n        switch(mainTabKey) {\n            case 'retailer':\n                handleChangeTab(retailerTabsKey);\n                break;\n        }\n    }, [formData, mainTabKey, retailerTabsKey])\n\n    const handleChangeTab = (k:  any | null) => {\n        if (!formData) return;\n        const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n        if (key !== null) {\n            if (isTMainTabsKey(key)) {\n                setMainTabKey(key);\n                if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n                    formData.obj_type = key;\n                    if (key === 'retailer') {\n                        formData.layer_type = 'retail_name';\n                        clearKioskConfig(context);\n                    } else if (key === 'special') {\n                        formData.layer_type = 'kiosk';\n                        formData.retailer_id = '';\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            if (obj) {\n                                if (!obj.userData) {\n                                    obj.userData = {};\n                                }\n                                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                                obj.userData.kioskConfig = {\n                                    lockSize: formData.value === '1',\n                                    blink: false,\n                                    size: Number(formData.size)\n                                }\n                                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n                            }\n                        }\n                    } else if (key === 'custom') {\n                        formData.layer_type = 'custom_text';\n                        formData.retailer_id = '';\n                        clearKioskConfig(context);\n                    }\n                    setMainTabKey('');\n                    setRetailerTabsKey('');\n                    setSpecialTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    });\n                }\n            } else if (isTRetailerTabsKey(key)) {\n                setRetailerTabsKey(key);\n                clearKioskConfig(context);\n                if (formData.id && retailerTabsKey && key) {\n                    formData.layer_type = key;\n                    if (formData.layer_type !== key) {\n                        setFormData({ ...formData });\n                    }\n                    updateData({\n                        ...formData,\n                    })\n                    if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n                        let text = '';\n                        switch (key) {\n                            case 'retail_name':\n                               \n                                if(!formData.retailer_id)\n                                {\n                                    break;\n                                }\n\n                                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                               \n                                if (retailIndex !== -1) {\n                                    text = data.retailers[retailIndex].retail_name;\n\n                                }\n                                break;\n                            case 'retail_text':\n                            case 'custom_text':\n                                text = formData.custom_text;\n                                break;\n                        }\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            makeTextGeometry(obj, text, formData.size);\n                        }\n                    }\n\n                    if (['retail_logo', 'custom_image'].includes(key)) {\n                        context?.MeshObject?.forEach((obj, index) => {\n                            if (index === 0) return;\n\n                            makeImage(formData, obj);\n                        })\n                    }\n                }\n            } else if (isTSpecialTabsKey(key)) {\n                setSpecialTabsKey(key);\n                formData.layer_type = key;\n                if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n                    if (key !== 'kiosk') {\n                        clearKioskConfig(context);\n                    }\n                    formData.layer_type = key;\n                    formData.kiosk_id = '';\n                    formData.retailer_id = '';\n                    formData.value = '';\n                    setFormData({ ...formData });\n                    updateData({ ...formData });\n                }\n            }\n        }\n    }\n\n    const handleRotateChange = (e: any) => {\n        if (!formData) return;\n        formData.rotate = e.target.value;\n        setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = {...formData};\n            setData(index, {...data});\n        }\n    }\n\n    const handleReset = () => {\n        if (!formData) return;\n        const defaultValues = getDefaultMapOjbValues(formData.center_id);\n        if (onResetData) {\n            onResetData({\n                ...formData,\n            })\n        }\n        setFormData({\n            ...defaultValues,\n            id: formData.id,\n        });\n        updateData({\n            ...defaultValues,\n            id: formData.id,\n        });\n    }\n\n    const updateData = (formData: MapObj) => {\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = { ...formData };\n            setData(index, { ...formData });\n        }\n    }\n\n    const handleChangeRetailer = ({value}: {value: string}) => {\n        if (value && formData) {\n            formData.retailer_id = value;\n            formData.kiosk_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeKiosk = (e: any) => {\n        if (e.target.value && formData) {\n            formData.kiosk_id = e.target.value;\n            formData.retailer_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                updateMapCenterMarkerFor(obj, formData);\n            })\n        }\n    }\n\n    const handleChangeAmenity = (e: any) => {\n        if (e.target.value && formData) {\n            formData.value = e.target.value; \n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const makeTextGeometry = (obj: IExtMesh, text: string, size: string) => {\n        if (!obj) return;\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let text_geometry = new TextGeometry(text, {\n            font: (obj.userData && obj.userData.font)? obj.userData.font : myFont,\n            size: parseInt(size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n        if (obj.geometry) {\n            obj.geometry.dispose();\n        }\n        obj.geometry = text_geometry;\n    }\n\n    const makeImage = (formData: MapObj, obj: IExtMesh) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let img = null;\n        if (formData.layer_type === 'retail_logo') {\n            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n            if (retailIndex !== -1) {\n                img = getImage(formData, data.retailers[retailIndex]);\n            }\n        } else {\n            img = getImage(formData);\n        }\n        if (img instanceof HTMLImageElement) {\n            processImage(img, formData, (geometry, material) => {\n                obj.geometry = geometry;\n                obj.material = material;\n\n                const boundingBox = geometry.boundingBox;\n\n                const mesh_center_point = new Vector3();\n                if (boundingBox) {\n                    boundingBox.getCenter(mesh_center_point);\n\n                    const mesh_size = new Vector3();\n                    boundingBox.getSize(mesh_size);\n                    if (obj.object_id) {\n                        layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n                    }\n                }\n            });\n        }\n    }\n\n    const changeValue = (name: string, value: string) => {\n        if (!formData) return;\n        // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n        //     formData.custom_image = value;\n        //     setFormData({...formData});\n        //     updateData({...formData});\n        // }\n\n        context?.MeshObject?.forEach((obj, index) => {\n            if (!obj.userData) {\n                obj.userData = {};\n            }\n            if (!obj.userData.position) {\n                obj.userData.position = new Vector3();\n                if (obj.position) {\n                    obj.userData.position.copy(obj.position);\n                }\n            }\n            const position = new Vector3();\n            if (obj.userData.position){\n                position.copy(obj.userData.position);\n            }\n            switch (name) {\n                case 'custom_text':\n                    if (index === 0) break;\n                    formData.custom_text = value;\n                    if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        makeTextGeometry(obj, formData.custom_text, formData.size);\n                    }\n                    break;\n                case 'custom_image':\n                    if (index === 0) break;\n                    formData.custom_image = value;\n                    makeImage(formData, obj);\n                    updateData({\n                        ...formData,\n                    })\n                    break;\n                case 'size':\n                    if (index === 0) break;\n                    formData.size = value;\n                    if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n                        let text = '';\n                        if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n                            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                            if (retailIndex !== -1) {\n                                text = data.retailers[retailIndex].retail_name;\n                            }\n                        } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                            text = formData.custom_text;\n                        }\n                        makeTextGeometry(obj, text, formData.size);\n                    } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n                        makeImage(formData, obj);\n                        if (timeoutRef.current) {\n                            clearInterval(timeoutRef.current);\n                        }\n                        timeoutRef.current = setTimeout(() => {\n                            updateData({ ...formData });\n                        }, 300);\n                    } else if (['amenity'].includes(formData.layer_type)) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            setFormData({ ...formData });\n                            updateData({ ...formData });\n                        })\n                    } else if (['kiosk'].includes(formData.layer_type)) {\n                        updateMapCenterMarkerFor(obj, formData);\n                    }\n                    break;\n                case 'lock_size':\n                    formData.lock_size = value;\n                    //TODO use 'value' until api with lock_size will be working\n                    formData.value = value;\n                    if (formData.layer_type === 'kiosk') {\n                        updateMapCenterMarkerFor(obj, formData);\n                    }\n                    break;\n                case 'rotate':\n                    if (index === 0) break;\n                    formData.rotate = value;\n                    obj.rotation.set(\n                        obj.rotation.x,\n                        obj.rotation.y,\n                        parseFloat(formData.rotate) * Math.PI / 180\n                    );\n                    break;\n\n                case 'offsetX':\n                    if (index === 0) break;\n                    position.x += parseFloat(value);\n                    obj.position.setX(position.x);\n                    formData.offsetX = value;\n                    break;\n\n                case 'offsetY':\n                    if (index === 0) break;\n                    position.y += parseFloat(value);\n                    obj.position.setY(position.y);\n                    formData.offsetY = value;\n                    break;\n\n                case 'text_color':\n                    if (index === 0) break;\n                    formData.text_color = value;\n                    if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        const material_settings = {\n                            // color: hex_to_color(formData.text_color),\n                            color: formData.text_color,\n                            transparent: true,\n                            side: DoubleSide,\n                            depthWrite: false,\n                            depthTest: false,\n                        };\n                        let text_material = new MeshPhongMaterial(material_settings);\n                        obj.material = text_material;\n                    } else if (\n                        formData.layer_type === 'retail_logo' ||\n                        formData.layer_type === 'custom_image' ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            updateData({\n                                ...formData,\n                                text_color: formData.text_color.replace('#', ''),\n                            });\n                        })\n                    }\n                    break;\n\n                case 'bg_color':\n                    if (index !== 0) break;\n                    formData.bg_color = value;\n                    let meshType: MeshType = 'store';\n                    if (obj.object_id?.startsWith('big-store')) {\n                        meshType = 'big-store';\n                    }\n                    obj.material = getMaterial(\n                        config,\n                        meshType,\n                        formData.map_obj_name,\n                        formData.bg_color,\n                        formData.transparent === \"1\"? true : false,\n                        {[formData.map_obj_name]: {...formData}}\n                        );\n                    // updateData({...formData});\n                    break;\n            \n                default:\n                    break;\n            }\n            startTransition(() => {\n                setFormData({ ...formData })\n                updateData({ ...formData });\n            });\n\n        })\n    }\n    const handleChange = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value;\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    const handleChangeLock = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value === '0'? '1' : '0';\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    useEffect(() => {\n        if (data && data.map_objs && selectedId) {\n            const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n            if (index !== -1) {\n                setFormData({...data.map_objs[index]});\n            } else {\n                setFormData({\n                    ...getDefaultMapOjbValues(centerId),\n                    id: 'new-' + (new Date()).getTime(),\n                });\n            }\n        }\n        return () => {\n            setRetailerTabsKey('');\n        }\n    }, [data, selectedId])\n\n    useEffect(() => {\n        if (!formData) return;\n        if (formData.obj_type) {\n            handleChangeTab(formData.obj_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n        if (formData.layer_type) {\n            handleChangeTab(formData.layer_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n    }, [formData])\n\n    const decrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value -= 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const incrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const rotateByFixedAngle = (key:TIncDecKey, angle: number) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += angle;\n            if (value > 360) {\n                value = angle;\n            } else if (value === 360) {\n                value = 0;\n            }\n\n            changeValue(key, value.toString());\n        }\n    }\n\n    const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            rotateByFixedAngle(key, angle);\n        }, 100);\n    } \n\n    const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            decrementValue(key);\n        }, 100);\n    }\n\n    const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            incrementValue(key);\n        }, 100);\n    }\n\n    const stopIntervals = () => {\n        let key:TIncDecKey;\n        for (key in intervalRefs.current) {\n            if (intervalRefs.current[key])\n                clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n                intervalRefs.current[key] = null;\n        }\n    }\n\n    const handleOnSubmit = () => {\n        if (params.onSubmit && context && context.MeshObject && formData) {\n            formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n            const kioskId = formData.kiosk_id !== null? parseInt(formData.kiosk_id) : null;\n            params.onSubmit({...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId});\n        }\n    }\n\n    if (!formData) return null;\n\n    return (\n        <>\n            <Tab.Container activeKey={mainTabKey}>\n                <Col>\n                    <Row>\n                        <Col sm=\"9\">\n                            <Nav\n                                variant=\"tabs\"\n                                className=\"flex-row\"\n                                // activeKey={mainTabKey}\n                                onSelect={handleChangeTab}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col sm=\"3\" className=\"px-0\">\n                            {/* \n                //@ts-ignore */}\n                            <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Tab.Content>\n                                <Tab.Pane eventKey={\"retailer\"}>\n                            <AsyncSelect\n                                className=\"mb-3\"\n                                aria-label=\"Choose a Retailer\"\n                                loadOptions={loadOptions}\n                                noOptionsMessage={() => 'Retailers not found'}\n                                placeholder=\"Choose a Retailer...\"\n                                value={data.retailers?.filter((item: IRetailer) => item.id === formData.retailer_id)?.map((item: IRetailer) => ({\n                                    value: item.id,\n                                    label: `${item.retail_name}${item.location && item.location.length > 1 ? item.location : ''}`,\n                                }))}\n                                defaultOptions={data.retailers?.map((item: any) => ({value: item.id, label: `${item.retail_name}${item.location && item.location.length > 1? item.location : ''}`}))}\n                                onChange={handleChangeRetailer}\n\n                            />\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"retail-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                    >\n                        <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                        <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                        <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"custom_text\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"special\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"special-tab-form\"\n                        activeKey={specialTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.kiosk_id?? ''} onChange={handleChangeKiosk}>\n                                <option value={''} disabled hidden>Choose a Kiosk...</option>\n                                {data.kiosks?.map((value: any, index: number) => <option key={`kiosk-${value.id}-${index}`} value={value.id}>{value.title}</option>)}\n                            </Form.Select>\n                        </Tab>\n                        <Tab eventKey=\"amenity\" title=\"Amenity\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                                <option value={''} disabled hidden>Choose Amenity...</option>\n                                {Object.keys(data.amenities)?.map((value: string) => (\n                                    <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                                ))}\n                            </Form.Select>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"custom\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"custom-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"custom_text\" title=\"Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            name=\"custom_text\"\n                                            as=\"textarea\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"custom_image\" title=\"Image\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            type=\"string\"\n                                            name=\"custom_image\"\n                                            value={formData.custom_image}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Col>\n            </Tab.Container>\n            <Form.Group className=\"mb-3 mt-3\">\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Size</Form.Label>\n                    </Col>\n                    <Col>\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('size')}\n                                    onMouseDown={handleDecrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"size\"\n                                    type=\"text\"\n                                    value={formData.size}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('size')}\n                                    onMouseDown={handleIncrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >+</Button>\n                            </div>\n                            <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                                <Row>\n                                    <Col sm=\"4\">\n                                        <Form.Check\n                                            name=\"lock_size\"\n                                            id=\"lock_size\"\n                                            type=\"checkbox\"\n                                            //TODO use 'value' until api with lock_size will be working\n                                            value={formData.value}\n                                            checked={formData.value === '1'}\n                                            onChange={handleChangeLock}\n                                        />\n                                    </Col>\n                                    <Col sm=\"8\" className=\"p-0\">\n                                        <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Rotate</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('rotate')}\n                                    onMouseDown={handleDecrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"rotate\"\n                                    type=\"number\"\n                                    value={rotation ?? formData.rotate}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('rotate')}\n                                    onMouseDown={handleIncrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                            <div style={{maxWidth: 50, height: 50}}>\n                                <Button\n                                    onClick={() => rotateByFixedAngle('rotate', 45)}\n                                    onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >\n                                    <ArrowClockwise size={'1rem'} />\n                                </Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset X</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetX')}\n                                    onMouseDown={handleDecrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n\n                                <Form.Control\n                                    name=\"offsetX\"\n                                    type=\"number\"\n                                    value={formData.offsetX}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetX')}\n                                    onMouseDown={handleIncrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetY')}\n                                    onMouseDown={handleDecrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"offsetY\"\n                                    type=\"number\"\n                                    value={formData.offsetY}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetY')}\n                                    onMouseDown={handleIncrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"3\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">BG Color</Form.Label>\n                    </Col>\n                    <Col sm=\"3\" className=\"p-0\">\n                        <Form.Control\n                            name=\"bg_color\"\n                            type=\"string\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"2\">\n                        <Form.Control\n                            type=\"color\"\n                            name=\"bg_color\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Row>\n                            <Col sm=\"3\">\n                                <input\n                                        name=\"transparent\"\n                                        id=\"transparent\"\n                                        type=\"checkbox\"\n                                        value={formData.transparent}\n                                        onChange={handleChange}\n                                ></input>\n                            </Col>\n                            <Col sm=\"9\" className=\"p-0\">\n                                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                            <Form.Label className=\"mb-0\">Text Color</Form.Label>\n                        </Col>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                name=\"text_color\"\n                                type=\"color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                {['kiosk', 'amenity'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                type=\"color\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                <Row className=\"justify-content-center px-5 py-5\">\n                    <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-')? 'Save' : 'Update'}</button>\n                </Row>\n            </Form.Group>\n        </>\n    );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext) {\n    if (context && context.MeshObject) {\n        const obj = context.MeshObject[1];\n        if (obj && obj.userData && obj.userData.kioskConfig) {\n            obj.userData.kioskConfig = undefined;\n        }\n    }\n}\n\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n    centerId: string,\n    slug: string,\n    webApiURI: string,\n}\n\nexport type RetailerData = {\n    data: IRetailer | null,\n    isLoading: boolean,\n    isError: boolean,\n    error: string | null,\n}\n\nconst defaultData: RetailerData = {\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n} \nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n    const {centerId, slug, webApiURI} = props;\n    const [data, setData] = useState<RetailerData>(defaultData);\n\n    useMemo(() => {\n        if (!slug || !centerId) {\n            setData({...defaultData});\n            return false;\n        }\n\n        let apiURI = webApiURI;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            setData({\n                isLoading: true,\n                data: null,\n                isError: false,\n                error: null,\n            })\n            fetch(`${apiURI}/v1/retailers/${slug}`, {\n                headers: {\n                    center_id: centerId,\n                }\n            }).then(\n                (response) => response.json()\n            ).then(data => {\n                setData({\n                    isLoading: false,\n                    isError: false,\n                    error: null,\n                    data: {\n                        id: data.id,\n                        retail_name: data.name,\n                        slug: data.slug,\n                        location: data.location && data.location !== '-'? data.location : '',\n                        retailer_phone: data.retailer_phone,\n                        retailer_description: data.global_retailer.description,\n                        logo: data.media.url,\n                        map_obj_name: '',\n                    }\n                });\n            }).catch((e: any) => {\n                setData({\n                    data: null,\n                    isLoading: false,\n                    isError: true,\n                    error: `Error fetch retaler data: ${e.message}`,\n                })\n            })\n        } else {\n            setData({\n                isLoading: false,\n                isError: true,\n                error: 'webApiURI not provided!',\n                data: null,\n            })\n        }\n\n    }, [centerId, slug, webApiURI]);\n\n    return data;\n\n}\n\nexport default useRetailerData;\n","import { Col, Form, FormGroup, Modal, Placeholder, Row, Spinner  } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { XCircleFill } from \"react-bootstrap-icons\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { CSSProperties, ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n    amenity: string,\n    show: boolean,\n    onHide: () => void,\n    centerId: string,\n    retailers?: IRetailer[],\n    mapObjs?: MapObj[],\n    mapObjectName?: string,\n    webApiURI: string,\n    onClick?: (id: string, amenityType?: string) => void,\n    kioskId: string,\n}\n\nconst RetailerInfoList = ({retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId}: {retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string}) => {\n    const [retailerId, setRetailerId] = useState<string>('');\n\n    const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n        e.preventDefault();\n        if (onClick) {\n            onClick(retailerId);\n        }\n    }\n\n    const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n        setRetailerId(e.target.value);\n    }\n\n    const filterRetailers = (retailers:IRetailer[], arrayObjects:MapObj[]) => {\n        return retailers.filter(retailer => \n            arrayObjects.some(obj => obj.retailer_id === retailer.id)\n        );\n    }\n\n    if (!isAmenity && (isLoading || !retailer )) {\n        return (\n        <div>\n            <div className={styles['retailer-info-spinner']} >\n                <Spinner animation=\"border\" role=\"status\" variant=\"secondary\"/>\n            </div>\n            <div className={styles['retailer-info-content']} >\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={5} /> <Placeholder bg=\"secondary\"  xs={3} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={7} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            {!!retailer && (\n                <>\n                    <div className={styles['retailer-logo']}>\n                        <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n                    </div>\n                    <div className={styles['retailer-info-content']} >\n                        <div>\n                            <b>Retailer:</b> {retailer.retail_name}\n                        </div>\n                        {retailer.location &&\n                            <div>\n                                <b>Location:</b> {retailer.location}\n                            </div>\n                        }\n                        {retailer.retailer_phone &&\n                            <div>\n                                <b>Phone:</b> {retailer.retailer_phone}\n                            </div>\n                        }\n                        {retailer.retailer_description &&\n                            <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n                        }\n                    </div>\n                </>\n            )}\n            <Form className={styles['get-directions-from']}>\n                <FormGroup>\n                    <div className=\"d-flex align-items-center gap-3\">\n                        {!kioskId.length ?\n                            <>\n                                <Form.Select\n                                    name=\"retailer\"\n                                    onChange={onChange}\n                                    value={retailerId}\n                                >\n                                    <option value={''} disabled>Get direction from ...</option>\n                                    {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                                        if (retailer && item.id === retailer.id) return null;\n                                        return (\n                                            <option key={index} value={item.id}>{item.retail_name}</option>\n                                        )\n                                    }\n                                    )}\n                                </Form.Select>\n                                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n                            </>\n                            : null\n                        }\n                    </div>\n                </FormGroup>\n            </Form>\n        </div>\n    );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n    const {\n        amenity,\n        show,\n        onHide,\n        centerId,\n        retailers,\n        mapObjs,\n        mapObjectName,\n        webApiURI,\n        onClick,\n        kioskId,\n    } = props;\n    const slug = useMemo(() => {\n        if (centerId && mapObjs && retailers && mapObjectName) {\n            const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n            if (mapObj && mapObj.retailer_id) {\n                const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n                if (retailer) {\n                    return retailer.slug;\n                }\n            }\n        }\n        return '';\n    }, [centerId, mapObjectName, mapObjs, retailers]);\n    const data = useRetailerData({ centerId, slug, webApiURI });\n    const handleOnClick = (retailerId: string) => {\n        if (!onClick) return;\n        let mapObj = null;\n        if (kioskId) {\n            mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id?? '') === parseInt(kioskId));\n        } else {\n            mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n        }\n\n        let mapObjectName = '';\n\n\n        if (mapObj) {\n            mapObjectName = mapObj.map_obj_name;\n        }\n\n        if (amenity) {\n            onClick(mapObjectName, amenity);\n        } else {\n            onClick(mapObjectName);\n        }\n    }\n\n    const isAmenity = (amenity !== '' || (mapObjectName? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n    return (\n        <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n            <div className={styles['retailerInfoCloseBtn']}>\n                <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n            </div>\n            <Modal.Body className=\"p-3\">\n                <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from \"react\";\nimport { Canvas, ThreeEvent, context, useThree } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { DoubleSide, Mesh, MeshLambertMaterial, Object3D } from \"three\";\nimport { IAmenitiesInteractiveList, IExtMesh, IJsonConfig, IMeshParams, IMeshValues, TMapMode, TMapSettingsProps } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\nimport { delete_route_path } from \"src/helpers/route.helpers\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.scss';\nimport { Alert } from 'react-bootstrap';\nimport { hex_to_color } from \"src/helpers/misc\";\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { Vector3 } from \"three\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { AmenityID } from \"src/MapBox\";\nimport { defaultVars } from \"src/defaults\";\n\ninterface ISceneComponentProps {\n  mapitData?: MapIt2Response;\n  config: Partial<IJsonConfig>;\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObj[]) => void;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n}\n\nexport interface IZoomData {\n  direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n  const { data, refreshData } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlState, setCameraControlState] = useState<any>(null);\n  const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition } = params;\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n  const [cameraLength, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n  const cameraControlStateRef = useRef<any>(null);\n  cameraControlStateRef.current = cameraControlState;\n  const deviceTypeRef = useRef<string | undefined | null>(null);\n  deviceTypeRef.current = deviceType;\n  // console.log('DEVICE TYPE', deviceType);\n  const floorsMapRef = useRef<{ resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const handleFloorChange = (floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }\n\n  const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n  const mapCenterMarkerRef = useRef(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const context = useMeshObjectContext();\n  const { SetMeshObject } = context;\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n  const config = meshFloors.config;\n  const floors = meshFloors.floors;\n  const meshParams = meshFloors.meshParams;\n\n  const { setConfig: setCxtConfig } = context;\n\n  useEffect(() => {\n    if (context && meshFloors && meshFloors.config) {\n      setCxtConfig(meshFloors.config);\n    }\n  }, [meshFloors, setCxtConfig])\n\n  useImperativeHandle(ref, () => ({\n    refreshData,\n    createRouteToAmenity: handleAmenityClick,\n  }))\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      const resizeWidth = () => {\n        setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      }\n      window.addEventListener('resize', () => {\n        resizeWidth();\n        // Update your map or camera settings based on newWidth\n      });\n      resizeWidth();\n    }\n  }, [statsParentRef.current]);\n\n  useEffect(() => {\n    if (data && data.camera_controls_states) {\n      setCameraControlState(data.camera_controls_states);\n      setCameraControlPos(data.camera_controls_states);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    if (cameraControlStateRef.current) {\n      setCameraControlPos(cameraControlStateRef.current);\n    }\n  }, [deviceType, canvasWidth])\n\n  const setCameraControlPos = (camera_controls_states: any) => {\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraPos(camera_controls_states.display_app.camera)\n      setControlPos(camera_controls_states.display_app.controls)\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n      if (canvasWidth > 1024) {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (canvasWidth > 600) {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      } else {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraPos(camera_controls_states.display_app.camera)\n        setControlPos(camera_controls_states.display_app.controls)\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      }\n    }\n  }\n  const { onSettingsLoading } = params;\n  useEffect(() => {\n    if (data && meshFloors.config && onSettingsLoading) {\n      onSettingsLoading?.(\n        {\n          ...data,\n          settings: {\n            ...data.settings,\n            STYLE: meshFloors.config.STYLE,\n            ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n            AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n            AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n            BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n            BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n            BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n            BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n            MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n            OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n            OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n            STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n            STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n            WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n            WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n            KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n            STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n            CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n            CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n            ZOOM_STEP: meshFloors.config.ZOOM_STEP ?? defaultVars.ZOOM_STEP ?? '100',\n          }\n        });\n    }\n  }, [data, meshFloors, onSettingsLoading])\n\n  const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n    if (canvasWidthRef.current === 0) return;\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n      if (canvasWidthRef.current > 1024) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (canvasWidthRef.current > 600) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      } else {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      }\n    }\n  }, [config?.ROLE])\n\n  useEffect(() => {\n    if (cameraControlStateRef.current && setCameraControlPosition) {\n      setCameraControlPosition(cameraControlStateRef.current);\n    }\n  }, [cameraControlState, setCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapitData = (index: number, newData: MapObj) => {\n    const itemIndex = formMapObjData.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n    if (itemIndex !== -1) {\n      formMapObjData[itemIndex] = { index, data: { ...newData } };\n    } else {\n      formMapObjData.push({ index, data: { ...newData } })\n    }\n\n    setFormMapObjData([...formMapObjData]);\n  }\n\n  const getMapitData = useCallback((): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }, [data, formMapObjData])\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refreshData);\n    }\n  }\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    if (!config) {\n      return [null, 0, ''] // not an error - loading/initializing\n    }\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = 0;\n    if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n      const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n      const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (config.ROLE === 'WEBSITE') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n      }\n      if (config.ROLE === 'WEBSITE') {\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [config, meshParams]);\n\n  const floorsCount = data?.floors?.length ?? 0;\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsCount ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = () => {\n\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n\n    if (floorsMapRef.current) {\n      if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n        let ccs = null;\n        if (deviceTypeRef.current === \"desktop\") {\n          ccs = { ...data.camera_controls_states.desktop }\n        } else if (deviceTypeRef.current === \"display_app\") {\n          ccs = { ...data.camera_controls_states.display_app }\n        } else if (deviceTypeRef.current === \"mobile\") {\n          ccs = { ...data.camera_controls_states.mobile }\n        } else if (deviceTypeRef.current === \"tablet\") {\n          ccs = { ...data.camera_controls_states.tablet }\n        }\n\n        if (ccs) {\n          floorsMapRef?.current?.resetCamera(false, ccs);\n        }\n      } else {\n\n        floorsMapRef?.current?.resetCamera();\n\n      }\n    }\n\n  }\n\n  useEffect(() => {\n\n    if (!config || !deviceType) {\n      return;\n    }\n    //@ts-ignore\n    config.CAMERA_CONTROLS_STATES = data.camera_controls_states[deviceType]\n    floorsMapRef?.current?.resetCamera();\n\n  }, [deviceType, config])\n\n  useEffect(() => {\n    if (!config) {\n      return;\n    }\n\n    const kiosks: IMeshValues[] = [];\n    meshFloors.meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n    // console.log('kiosks', kiosks);\n\n    const mapObjectIdToKiosk = new Map();\n    const mapObjectIdToLogo = new Map();\n    kiosks.forEach(item => {\n      mapObjectIdToKiosk.set(item.object_id, item.mesh);\n    });\n    // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n    meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n    // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n    // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    const mapData = getMapitData();\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        //TODO use 'value' until api with lock_size will be working\n        // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n        logo.userData.kioskConfig = {\n          lockSize: mapObj?.value === '1',\n          blink: item.object_id === currKioskId,\n          size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE),\n          floorIndex: kiosk.floor_index,\n        }\n        // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n        logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n        logo.visible = true;\n\n        currKioskLogo.push(logo);\n      }\n    });\n\n    // return () => {\n    //     currKioskLogo?.forEach(mesh => {\n    //         mesh.userData.htmlContent = null;\n    //     });\n    // }\n  }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObj[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (config && data && data.retailers && data.map_objs && config.SELECTED_RETAILER_SLUG) {\n      const retailer = data.retailers.find(item => {\n        return item.slug === config.SELECTED_RETAILER_SLUG;\n      })\n      if (retailer) {\n        const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [config, data, setSelectedActiveObjectId])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const textParams = meshFloors.textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const logoParams = meshFloors.storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const result = [object as IExtMesh];\n\n    if (textParams) {\n      result.push(textParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    SetMeshObject([...result]);\n  }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n      const object = meshFloors.meshParams[currentFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n      if (object) {\n        //@ts-ignore\n        handleMeshObjectContext(object);\n      }\n      //@ts-ignore\n    }\n  }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [config, setSelectedActiveObjectId]);\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    // console.log('onClick', e.object)\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value);\n      if (config && config.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleMeshObjectContext(e.object as IExtMesh);\n      setSelectedActiveObjectId(targetId ?? '');\n      // console.log('set active object', targetId);\n      setAmenityTargetType('');\n      setFromObjectId('');\n      if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext]);\n\n  const onCameraMove = useCallback((e: any) => {\n    if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n      return\n    }\n  }, []);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    // console.log('onPointerEnter', e.object)\n    if (!e.object.userData.storeName && config && config.ROLE !== 'PORTAL') {\n      // console.warn('onPointerEnter no storeName', e.object);\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, [config]);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerLeave', e.object)\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerMove', e.object)\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n  }\n\n  if (data && (!data.floors || data.floors.length <= 0)) {\n    return <div style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!config || !meshFloors.meshParams.length) {\n    console.warn('LOADING MAP')\n    if (config?.ROLE === 'WP_SITE') {\n      return <div style={messageStyle}>No map for Center</div>\n    }\n    return <div style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && config.ROLE === 'WEBSITE') {\n    console.error('NO KIOSK OBJECT FOUND');\n    // return <div style={messageStyle}>Map initialization error</div>\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      // setSelectedActiveObjectId(retailerId);\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }\n\n  return (\n    <>\n      {config.ROLE === 'PORTAL' &&\n        <div className={styles['mapbox-admin-form']}>\n          {!selectedActiveObjectId ?\n            <Alert variant=\"info\">Select a store to customize.</Alert>\n            :\n            <MapboxForm\n              floorIndex={currentFloorIndex}\n              meshFloors={meshFloors}\n              config={config}\n              data={getMapitData()}\n              setData={handleChangeMapitData}\n              selectedId={selectedActiveObjectId}\n              centerId={params.config.CENTER_ID as string}\n              onSubmit={handleOnSubmit}\n              apiURI={params.webApiURI}\n              onResetData={params.onResetData}\n            />\n          }\n        </div>\n      }\n\n      <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n        <UIComponent\n          accentColor={config.ACCENT_COLOR.getStyle()}\n          floors={floors}\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          amenitiesList={amenitiesList}\n          handleAmenityClick={handleAmenityClick}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          role={config.ROLE}\n          mapObjs={data?.map_objs}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n          <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n          {/*<axesHelper args={[5000]} />*/}\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n          <FloorsMap\n            onCameraMove={onCameraMove}\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            // @ts-ignore\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            config={config}\n            ref={floorsMapRef}\n            cameraPos={cameraPos}\n            controlPos={controlPos}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n          />\n        </Canvas>\n        <div ref={labelRef}\n          style={{\n            position: 'absolute',\n            padding: 10,\n            background: '#ffffff',\n            fontWeight: 600,\n            color: '#000000',\n            fontSize: 16,\n            display: currentHoveredObject ? 'block' : 'none',\n            top: 300,\n            left: 400,\n            opacity: .8,\n          }}\n        >\n          <div>\n            {currentHoveredObject && currentHoveredObject.userData.storeName}\n          </div>\n        </div>\n\n      </div>\n\n      <RetailerInfoModal\n        amenity={selectedAmenityType}\n        show={showRetailerInfo}\n        onHide={() => setShowRetailerInfo(false)}\n        centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n        mapObjectName={selectedActiveObjectId}\n        retailers={data?.retailers}\n        mapObjs={data?.map_objs}\n        webApiURI={params.webApiURI ?? ''}\n        onClick={handleRetailerInfoOnClick}\n        kioskId={config.KIOSK.toString()}\n      />\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\n\ninterface useMapIt2DataProps {\n    CENTER_ID: string;\n    mapitData?: MapIt2Response;\n    webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n    data: MapIt2Response | null,\n    refreshData: () => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n    const [data, setData] = useState<MapIt2Response | null>(null);\n\n    if (!CENTER_ID && !mapitData) {\n        console.error('useMapit2Data requires either CENTER_ID or mapitData');\n    }\n\n    const getData = useCallback(() => {\n        let apiURI = webApiURI || null;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            const retailersApiUri = `${apiURI}/v1/retailers?limit=100&page=1`;\n            const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n            const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n            const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n            const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n            const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n            const retailersPromise = fetch(retailersApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { console.error(e) })\n\n            const mapObjsPromise = fetch(mapObjsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => { console.error(e) })\n\n            const floorsPromise = fetch(floorsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            })\n                .then(data => {\n                    if (!data\n                        || !data.items\n                        || (data.items && !data.items.length)) {\n                        console.error('Empty floors data from server');\n                    }\n                    return data;\n                }).catch(e => { console.error(e) })\n\n            const kiosksPromise = fetch(kioskApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => { console.error(e) })\n\n            const settingsPromise = fetch(settingsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { console.error(e) })\n\n            const responsivePromise = fetch(responsiveApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { throw new Error(e) })\n\n            Promise.all<Array<any>>([\n                retailersPromise,\n                mapObjsPromise,\n                floorsPromise,\n                kiosksPromise,\n                settingsPromise,\n                responsivePromise\n            ]).then(data => {\n                if (data.length >= 5) {\n                    const responseData: Partial<MapIt2Response> = {};\n                    responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n                        id: item.id,\n                        retail_name: item.name,\n                        slug: item.slug,\n                        location: item.location,\n                        retailer_phone: '',\n                        retailer_description: '',\n                        logo: item.media.url,\n                        map_obj_name: '',\n                    }));\n                    responseData.map_objs = [...data[1].items].map(item => ({\n                        ...item,\n                        offsetX: item.offset_x,\n                        offsetY: item.offset_y,\n                    }));\n                    responseData.floors = [...data[2].items];\n                    responseData.settings = {\n                        ...demoData.settings as Settings,\n                        KIOSK_SIZE: \"1\",\n                    }\n                    responseData.kiosks = [];\n                    responseData.amenities = { ...demoData.amenities };\n                    responseData.kiosks = [...data[3].items];\n                    const settings: Settings = data[4]?.settings ? data[4].settings : {\n                        \"STYLE\": \"3D\",\n                        \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n                        \"ACCENT_COLOR\": \"4EA5FF\",\n                        \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n                        \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n                        \"WALL_THICKNESS\": \"0.6\",\n                        \"WALL_COLOR\": \"888888\",\n                        \"BOUNDARY_THICKNESS\": \"0.8\",\n                        \"BOUNDARY_COLOR\": \"888888\",\n                        \"BASE_COLOR\": \"25292B\",\n                        \"STORE_TEXT_COLOR\": \"222222\",\n                        \"OVERLAY_COLOR\": \"FFFFFF\",\n                        \"OVERLAY_OPACITY\": \"0.7\",\n                        \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n                        \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n                        \"ZOOM_STEP\": \"100\",\n                    };\n                    if (data[5]) {\n                        responseData.camera_controls_states = data[5];\n                    } else {\n                        responseData.camera_controls_states = { ...demoData.camera_controls_states };\n                    }\n                    responseData.settings = settings;\n\n                    setData({ ...responseData as MapIt2Response })\n                }\n            })\n        }\n    }, [CENTER_ID, webApiURI])\n\n    useEffect(() => {\n        if (mapitData) {\n            setData(mapitData);\n            return;\n        }\n\n        if (!CENTER_ID) {\n            return;\n        }\n\n        getData();\n\n    }, [CENTER_ID, mapitData, getData]);\n\n    const refreshData = () => getData();\n    return { data, refreshData };\n}","import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport styles from './MapBox.module.scss';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport { isMapIt2Response, MapIt2Response, MapObj, MapObjToSave } from \"./mapitApiTypes\";\nimport { IJsonConfig, TMapMode, TMapSettingsProps, TRoles } from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapBoxContextProvider from './contexts/MapBoxContextProvider';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station';\n\nexport interface IAppProps {\n  mapitData?: unknown;\n  config: Partial<IJsonConfig>;\n  stats?: boolean;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n\n\nfunction MapBox({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, deviceType, setCameraControlPosition, onResetData, onExtractedAmenities }: IAppProps) {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <MapBoxContextProvider>\n      <MeshObjectContextProvider>\n        <div className={`${styles['mapbox-component']} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n          <SceneComponent\n            ref={refObj}\n            setSelectedActiveObjectId={setSelectedActiveObjectId}\n            selectedActiveObjectId={selectedActiveObjectId}\n            mapitData={mapData}\n            config={config}\n            onSettingsLoading={onSettingsLoading}\n            webApiURI={webApiURI}\n            mediaStorageURI={mediaStorageURI}\n            onSubmit={handleOnSubmit}\n            onResetData={onResetData}\n            deviceType={deviceType}\n            setCameraControlPosition={setCameraControlPosition}\n            onExtractedAmenities={onExtractedAmenities}\n          />\n          <div className={styles.hide}>\n            <div id=\"map-special-svg-kiosk\">\n              <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n                <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-atm\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n                <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n                <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-management\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n                <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n                <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-playarea\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n                <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-restroom\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n                <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-family-restroom\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n                <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-elevator\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n                <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-security\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n                <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-dog-poop-station\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n                <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n                <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n                <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n                <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n                <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n              </svg>\n            </div>\n            <div id=\"map-special-svg-escalator\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"398\" viewBox=\"0 0 512 398\">\n                <g fillRule=\"evenodd\">\n                  <path fill=\"#FFF\" d=\"M217.01,68.67 C235.674,68.677 250.846,53.503 250.85,34.83 C250.846,16.072 235.674,0.9 217.01,0.87 C198.243,0.9 183.071,16.072 183.05,34.83 C183.071,53.503 198.243,68.677 217.01,68.67\"></path>\n                  <path fill=\"#FFF\" d=\"M250.49,129.63 L250.49,108.27 C250.507,62.826 183.412,63.326 183.41,108.27 L183.41,195.39 L183.53,195.39 L120.17,258.87 C114.172,264.805 113.443,265.065 101.69,265.11 C101.691,265.075 62.93,265.11 62.93,265.11 C23.943,265.065 0.557,300.113 0.53,329.79 C0.557,359.539 23.943,397.1 66.41,397.11 C66.41,397.11 119.149,397.1 135.41,397.11 C151.738,397.1 171.491,390.871 187.73,375.51 L389.93,174.03 C394.237,170.175 396.633,168.978 404.09,168.99 C404.09,168.99 431.929,168.978 454.01,168.99 C478,168.978 512,141.75 511.97,102.51 C512,63.651 477.75,37.75 451.97,37.71 L373.25,37.71 C356.899,37.664 335.943,44.326 323.45,56.79 L250.49,129.63\"></path>\n                  <path fill=\"#FFF\" d=\"M377.93,71.19 L448.85,71.19 C466.144,71.211 477.75,90.498 477.77,102.03 C477.75,113.502 469.516,134.969 448.37,134.91 L405.77,134.91 C387.75,134.969 379.75,137.5 369.41,147.87 L165.65,351.63 C157.443,359.826 146.989,363.093 133.61,363.15 L66.41,363.15 C49.149,363.093 33.943,348.496 33.89,329.31 C33.943,310.156 48.443,299.415 63.41,299.43 L109.49,299.43 C122.943,299.415 131.775,295.581 139.49,287.91 L346.61,80.79 C355.083,72.276 363.502,71.211 377.93,71.19\"></path>\n                </g>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </MeshObjectContextProvider>\n    </MapBoxContextProvider>\n\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n    id: string;\n    index?: string;\n    retail_name: string;\n    slug: string;\n    location: string;\n    retailer_phone: string;\n    retailer_description: string;\n    logo: string;\n    map_obj_name: string;\n};\n\nexport type MapObj = {\n    id: string | number;\n    center_id: string;\n    retailer_id: string;\n    kiosk_id: string | null;\n    map_obj_name: string;\n    obj_type: string;\n    layer_type: string;\n    value: string;\n    custom_text: string;\n    custom_image: string;\n    hover_text: string;\n    bg_color: string;\n    transparent: string | number;\n    text_color: string;\n    size: string;\n    lock_size: string;\n    rotate: string;\n    offsetX: string;\n    offsetY: string;\n    goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & {kiosk_id: number | null};\n\nexport type Floor = {\n    id: string;\n    svg_map?: string;\n    objsGroup?: Group;\n    interactiveObjs?: any[];\n    escalatorsObjs?: any[];\n    escalatorsNodes?: Record<any, any>;\n    escalatorMeshes?: any[];\n    route_points?: IRoutePoint[];\n    route_tube?: any;\n    route_texture?: Texture | null | undefined;\n    routeMeshes?: any[];\n    route_active?: boolean;\n    center_id?: string;\n    title: string;\n    svg?: string;\n    status?: string;\n    created_at?: string;\n};\n\nexport type CameraControlsState = {\n    camera: { x: number, y: number, z: number };\n    controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n    STYLE: '2D' | '3D',\n    MAP_BACKGROUND_COLOR: string;\n    ACCENT_COLOR: string;\n    STORE_DEFAULT_COLOR: string;\n    BIG_STORE_DEFAULT_COLOR: string;\n    WALL_THICKNESS: string;\n    WALL_COLOR: string;\n    BOUNDARY_THICKNESS: string;\n    BOUNDARY_COLOR: string;\n    BASE_COLOR: string;\n    STORE_TEXT_COLOR: string;\n    STORE_HEIGHT: string;\n    OVERLAY_COLOR: string;\n    OVERLAY_OPACITY: string;\n    AMENITIES_NAV_BG_COLOR: string;\n    AMENITIES_NAV_ICON_COLOR: string;\n    KIOSK_SIZE: string;\n    CAMERA_MIN_DISTANCE: string;\n    CAMERA_MAX_DISTANCE: string;\n    ZOOM_STEP: string;\n};\n\nexport type Kiosk = {\n    id: string;\n    title: string;\n    map_obj_name: string;\n};\n\nexport type Amenity = {\n    name: string;\n    image: string;\n};\n\nexport type MapIt2Response = {\n    retailers: IRetailer[];\n    map_objs: MapObj[];\n    floors: Floor[];\n    camera_controls_states: {\n        display_app: CameraControlsState;\n        desktop: CameraControlsState;\n        tablet: CameraControlsState;\n        mobile: CameraControlsState;\n    };\n    settings: Settings;\n    kiosks: Kiosk[];\n    amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n    name: string;\n    node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const response = obj as Record<string, unknown>;\n\n    return (\n        Array.isArray(response.retailers) &&\n        Array.isArray(response.map_objs) &&\n        Array.isArray(response.floors) &&\n        typeof response.camera_controls_states === 'object' &&\n        response.camera_controls_states !== null &&\n        typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n        typeof response.settings === 'object' &&\n        Array.isArray(response.kiosks) &&\n        typeof response.amenities === 'object'\n    );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","hex_to_color","hex_code","Color","getFormatedColor","replace","amenitiesList","type","icon","ATMIcon","_jsxs","xmlns","viewBox","children","_jsx","d","transform","fill","ManagementIcon","PlayAreaIcon","jsx","RestroomIcon","FamilyRestroom","ElevatorIcon","SecurityIcon","DogPoopStation","cx","cy","rx","ry","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","allMapObjects","allIndexedRetailers","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","item","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","set","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","size","get_store_name_logo_geo","textLogoNamePrefix","myFont","handleAsync","new_object_id","result","boundingBox","computeBoundingBox","mesh_center_point","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","logoMesh","storeLogo","getImageLogo","MapBoxContext","createContext","meshByObjectId","Map","setMeshByObjectId","setAllMapObjects","setAllIndexedMapObjects","setAllIndexedRetailers","setAllNodesFloor","createGraph","setPathFinderGraph","setNgraphPath","MapBoxContextProvider","useState","Provider","useMapBoxContext","context","useContext","Error","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","floorsData","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","meshParams","setMeshParams","textParams","setTextParams","storeLogos","setStoreLogos","escalatorNodes","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","camera_controls_states","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","values","removeFromParent","GeometriesAndMaterials","graph","results","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","point","origin_point","target_direction","storeIntersects","intersectObjects","object","escalatorIntersects","assign_route_nodes_to_stores","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","loadFloors","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","useMeshObjectContext","MapCenterMarker","lockSize","sizeFactor","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","svgOrigin","svgBlob","Blob","svgUrl","URL","createObjectURL","getBoundingClientRect","svgTexture","Texture","needsUpdate","MapObject","update","setUpdate","React","currentFloorIndex","triggerUpdate","kioskConfig","blink","htmlContent","Html","pointerEvents","distanceFactor","uuid","_Fragment","Fragment","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","jsxs","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","boundingSphere","display","className","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","resetCamera","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","targetMesh","selectedFloorMeshParams","meshes","currentActiveObject","focus","aspect","cameraDistance","min","setLength","fromPosition","fromTarget","animationStartTime","duration","zoomStep","onCameraMove","vector","animationTime","animationProgress","lerpVectors","fullReset","cameraControlsStates","controls","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","UIComponent","selectedFloorIndex","handleFloorChange","zoomIn","zoomOut","reset","handleAmenityClick","mapObjs","onExtractedAmenities","extractValues","filter","preventDefault","Function","styles","backgroundColor","defaultData","isError","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","Number","MapboxForm","setData","selectedId","onResetData","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","setRotation","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","setIsLoading","fetchRetailers","apiURI","limit","page","search","uri","fetch","headers","toString","then","ok","Promise","resolve","json","reject","status","statusText","url","catch","useGetRetailers","handleChangeTab","k","clearKioskConfig","updateData","retailIndex","findIndex","makeTextGeometry","makeImage","HTMLImageElement","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadOptions","inputValue","callback","label","noOptionsMessage","placeholder","location","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","Select","disabled","hidden","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","kioskId","handleRotateByFixedAngle","RetailerInfoList","isAmenity","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","slug","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","SceneComponent","refreshData","mapitData","getData","mapObjsApiUri","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","retailersPromise","mapObjsPromise","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","all","responseData","offset_x","offset_y","demoData","useMapit2Data","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","canvasWidth","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","labelRef","currentHoveredObject","setCurrentHoveredObject","showRetailerInfo","setShowRetailerInfo","setCxtConfig","createRouteToAmenity","resizeWidth","offsetWidth","addEventListener","setCameraControlPos","display_app","desktop","tablet","mobile","onSettingsLoading","getHexString","camPos","ctrlTarget","activeFromObjectId","getMapitData","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","flat","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","handleMeshObjectContext","logoParams","stopPropagation","targetId","messageStyle","top","left","meshFloorsChecked","handleChangeMapitData","newData","itemIndex","Alert","getStyle","resetHandle","ccs","Canvas","Stats","parent","intensity","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","_ref","refObj","setMapData","isMapIt2Response","fillRule"],"mappings":"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"}