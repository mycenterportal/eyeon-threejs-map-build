{"version":3,"file":"index.cjs","sources":["../src/helpers/misc.helper.ts","../src/defaults.ts","../src/helpers/svgIcons.helper.ts","../src/helpers/amenities.helper.ts","../src/contexts/MapBoxContextProvider.tsx","../src/services/index.service.ts","../src/services/map.service.ts","../src/services/retailers.service.ts","../src/Hooks/useMeshFloors/useMaterialAndGeometry.tsx","../src/Hooks/useMeshFloors/getWallShape.ts","../src/Hooks/useMeshFloors/useRouteHelper.tsx","../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/useLoadFloors.tsx","../src/Hooks/useMeshFloors/useDrawLogoHelper.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.helper.ts","../src/components/SceneComponent/RouteTube.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helper.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent.tsx","../src/components/SceneComponent/retailer-info/RetailerInfoModal.tsx","../src/components/SceneComponent/portal-sidebar-form/PortalSidebarForm.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/Hooks/useMeshFloors/useMeshParams.tsx","../src/MapBox.tsx"],"sourcesContent":["import { Color } from \"three\";\n\nexport const hex_to_color = (hex_code: string) => {\n  const withoutHex = hex_code.replace('#', '');\n  return new Color(withoutHex.length === 6 ? parseInt('0x' + withoutHex, 16) : withoutHex);\n}\n\nexport const getSvgIconHTML = (icon: string) => {\n  let svg;\n  const svg_block = document.getElementById(`map-special-svg-${icon}`);\n  if (svg_block) {\n    const svg_element = svg_block.querySelector('svg');\n    if (svg_element) {\n      const clonedSvgElement = svg_element.cloneNode(true) as SVGElement;\n      const svgColoredParts = clonedSvgElement.querySelectorAll('[fill]');\n      svgColoredParts.forEach((svgColoredPart) => {\n        svgColoredPart.setAttribute('fill', '#FFFFFF');\n      });\n      svg = (new XMLSerializer()).serializeToString(clonedSvgElement);\n    }\n  }\n  return svg;\n}\n\nexport const FormatPhoneNumber = (numberStr: string): string => {\n  numberStr = numberStr.slice(-10);\n  if (numberStr.length === 10) {\n    const maskedNumber = `${numberStr.slice(0, 3)}.${numberStr.slice(3, 6)}.${numberStr.slice(-4)}`;\n    return maskedNumber;\n  }\n  return numberStr;\n}\n\n","import { hex_to_color } from \"./helpers/misc.helper\";\nimport { MapConfigProps } from \"./interfaces\";\nimport { MapCameraControlsState, MapObjData, MapVectorPoint } from \"./interfaces/mapApiTypes\";\nimport { PortalMapSettingsProps } from \"./interfaces/portal\";\n\nconst mapVector0: MapVectorPoint = { x: 0, y: 0, z: 0 };\n\nexport const cameraControlsDefaultVars: MapCameraControlsState = {\n  camera: mapVector0,\n  controls: mapVector0\n};\n\nexport const defaultPortalMapSettings: PortalMapSettingsProps = {\n  MAP_STYLE: '2D',\n  MAP_BACKGROUND_COLOR: '#FFFFFF',\n  ACCENT_COLOR: '#4EA5FF',\n  STORE_DEFAULT_COLOR: '#E2E2E2',\n  STORE_TEXT_COLOR: '#444444',\n  STORE_HEIGHT: 12,\n  WALL_COLOR: '#888888',\n  BOUNDARY_COLOR: '#888888',\n  BASE_COLOR: '#25292B',\n  OVERLAY_COLOR: '#FFFFFF',\n  WALL_THICKNESS: 0.6,\n  BOUNDARY_THICKNESS: 0.8,\n  OVERLAY_OPACITY: 0.7,\n  KIOSK_SIZE: 15,\n  ZOOM_STEP: 100,\n  SELECTED_ZOOM_LIMIT: 1200,\n  CAMERA_MAX_DISTANCE: 2000,\n  CAMERA_MIN_DISTANCE: 300,\n}\n\nexport const mapConfigDefaultVars: MapConfigProps = {\n  MAP_BACKGROUND_COLOR: hex_to_color(defaultPortalMapSettings.MAP_BACKGROUND_COLOR),\n  ROLE: 'WP_SITE',\n  DEVICE: 'desktop',\n  KIOSK_ID: 0,\n  CENTER_ID: 0,\n  SELECTED_RETAILER_ID: 0,\n  STATS: false,\n  STYLE: defaultPortalMapSettings.MAP_STYLE,\n  DEBUG: false,\n  ACCENT_COLOR: hex_to_color(defaultPortalMapSettings.ACCENT_COLOR),\n  STORE_DEFAULT_COLOR: hex_to_color(defaultPortalMapSettings.STORE_DEFAULT_COLOR),\n  STORE_HEIGHT: defaultPortalMapSettings.STORE_HEIGHT,\n  WALL_THICKNESS: defaultPortalMapSettings.WALL_THICKNESS,\n  BOUNDARY_THICKNESS: defaultPortalMapSettings.BOUNDARY_THICKNESS,\n  WALL_COLOR: hex_to_color(defaultPortalMapSettings.WALL_COLOR),\n  BOUNDARY_COLOR: hex_to_color(defaultPortalMapSettings.BOUNDARY_COLOR),\n  BASE_COLOR: hex_to_color(defaultPortalMapSettings.BASE_COLOR),\n  STORE_TEXT_COLOR: hex_to_color(defaultPortalMapSettings.STORE_TEXT_COLOR),\n  OVERLAY_COLOR: hex_to_color(defaultPortalMapSettings.OVERLAY_COLOR),\n  OVERLAY_OPACITY: defaultPortalMapSettings.OVERLAY_OPACITY,\n  CAMERA_CONTROLS_STATES: {\n    display_app: cameraControlsDefaultVars,\n    desktop: cameraControlsDefaultVars,\n    tablet: cameraControlsDefaultVars,\n    mobile: cameraControlsDefaultVars,\n  },\n  ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n  DEFAULT_CAMERA_POSITION: null, // custom default camera position\n  DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n  DEFAULT_SELECTED_STORE: null,\n  CAMERA: {\n    fov: 75,\n    far: 10000,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  },\n  KIOSK_SIZE: defaultPortalMapSettings.KIOSK_SIZE,\n  ZOOM_STEP: defaultPortalMapSettings.ZOOM_STEP,\n  SELECTED_ZOOM_LIMIT: defaultPortalMapSettings.SELECTED_ZOOM_LIMIT,\n};\n\nexport const mapObjDefaultVars: MapObjData = {\n  id: 0,\n  retailer_id: null,\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  bg_color: '',\n  transparent: false,\n  text_color: '',\n  size: 8,\n  rotate: 0,\n  offset_x: 0,\n  offset_y: 0,\n  lock_size: false,\n};\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nexport const MapImageQuality = 20; // higher the number, better the quality when zoom in the map;\n\n","const SVGIcons = {\n  Kiosk: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n            <path fill=\"#444444\" d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" />\n          </svg>`,\n\n  Escalator: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 445.3\">\n                <path fill=\"#444444\" d=\"M243.4,75.9c21.2,0,38.1-16.8,38.1-38S264.6,0,243.4,0c-21.2,0-38.1,16.8-38.1,38S222.1,75.9,243.4,75.9z M508.5,41.2h-88.7 c-18.5,0-41.9,7.6-56.1,21.7l-82.2,81.9V121c0-51-75.7-50.4-75.7,0v98.2l-71.3,71c-6.5,6.5-7.6,7.1-20.7,7.1H70.2 C26.1,297.2,0,336.8,0,369.9c0,33.6,26.1,75.4,74,75.4h77.9c18.5,0,40.8-7.1,58.8-24.4l228.1-226.7c4.9-4.3,7.6-5.4,15.8-5.4h56.1 c27.2,0,65.3-30.4,65.3-74.8C576.5,70.5,537.9,41.2,508.5,41.2z M504.7,150.8h-47.9c-20.1,0-29.4,2.7-41.4,14.7L185.7,394.3 c-9.3,9.2-21.2,13-36.5,13H73.5c-19.6,0-36.5-16.3-36.5-38c0-21.7,16.3-33.6,33.2-33.6H122c15.2,0,25-4.3,33.7-13L389.3,90 c9.8-9.8,19.1-10.9,35.4-10.9h80c19.6,0,32.7,21.7,32.7,34.7C537.9,126.4,528.6,150.8,504.7,150.8z\" />\n              </svg>`,\n\n  ATM: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 577.8 577\">\n          <path fill=\"#444444\" d=\"M388.7,314c-3.7-10.3-10.3-19.8-17.7-27.2c-7.4-7.4-17.7-14-29.5-19.1c-6.6-2.9-19.2-6.6-39.1-11.8V144.2 c13.3,2.2,22.8,8.1,30.2,16.2c7.4,8.1,11.8,19.9,14,35.3l39.8-5.9c-2.9-24.3-13.3-44.1-30.2-58.1c-13.3-11-31-17.7-53.8-19.8V93.4 h-24.3v18.4c-25.8,2.2-45,9.6-58.2,21.3c-19.9,17.7-29.5,39.7-29.5,67.6c0,15.5,3.7,29.4,10.3,41.9s16.2,22,28.7,28.7 c17,9.6,33.2,16.2,49.4,20.6v121.3c-14.8-1.5-28-8.8-39.1-22.8c-7.4-9.6-13.3-25-16.2-46.3l-39.1,7.4c1.5,20.6,6.6,37.5,15.5,51.5 s19.9,23.5,31.7,30.1c12.5,6.6,28,11,47.9,13.2v39v-0.1V483h22.1v-39c28-0.7,50.1-11,67.1-28.7c17-18.4,25.8-40.4,25.8-67.6 C394.6,336,392.4,324.3,388.7,314z M278.9,145.1v107.2c-17.7-5.2-30.2-11.8-37.6-20.6s-11.1-19.8-11.1-33.1c0-14,4.4-25.7,13.3-35.3 C252.2,153.9,263.7,147.4,278.9,145.1V145h0.7C279.3,145,279.1,145,278.9,145.1z M340,394.2c-9.6,11-22.1,18.4-37.6,19.8l0,0V297.9 c20.6,5.2,34.6,11.8,42,20.6c6.6,8.1,10.3,19.8,10.3,33.8C354.8,369.2,349.6,383.1,340,394.2z\" />\n          <path fill=\"#444444\" d=\"M289.8,2.5c-158.7,0-288,128-288,287.2c0,158.3,129.3,287.2,288,287.2s288-128.9,288-287.2S448.6,2.5,289.8,2.5z M289.9,533.9C155,533.9,45.2,424.3,45.2,289.8C45.2,154.5,155,45.7,289.9,45.7s244.7,109.5,244.7,244.1S424.8,533.9,289.9,533.9z\" />\n        </svg>`,\n\n  Management: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 414.6\">\n                  <path fill=\"#444444\" d=\"M371.6,180.4c66.8,0,101,58.5,121.4,121.9l16.4,50.4c2.7,8.8-7.5,16.3-16.4,16.3h-56.6l-7.5-27.2 c-17.7-53.1-45-106.2-94.8-125.9c13-8.8,23.9-21.1,30.7-35.4C366.1,180.4,368.8,180.4,371.6,180.4z M441.2,145.7 c64.8,2,98.2,59.2,118.7,121.9l15.7,49.7c2.7,8.8-7.5,17.7-16.4,17.7h-35.5l-12.3-38.1c-16.4-53.1-44.3-106.2-94.8-125.9 C426.2,162.7,434.3,155.2,441.2,145.7z M51.6,334.3H16.8c-9.6,0-19.1-8.2-16.4-17.7l15.7-49.7C35.9,204.2,70.1,147.1,134.9,145 c6.1,9.5,15,18.4,24.6,24.5c-49.8,19.7-77.8,72.8-94.8,125.9L51.6,334.3L51.6,334.3z M437.7,0c35.5,0,64.8,28.6,64.8,64.7 c0,31.3-22.5,57.2-52.5,62.6c3.4-8.8,5.5-18.4,5.5-27.9c0-39.5-27.3-71.5-62.8-81C403.6,6.8,419.3,0,437.7,0L437.7,0z M137.6,0 c17.7,0,34.1,6.8,45,18.4c-35.5,9.5-62.8,41.5-62.8,81c0,9.5,2.1,19.1,5.5,27.9C96,121.9,72.8,96,72.8,64.7 C73.5,28.6,102.1,0,137.6,0L137.6,0z M287.7,0c19.8,0,37.5,8.8,49.8,22.5c-15.7,6.8-29.3,19.1-38.2,34l-3.4,5.5c-2.7,0-5.5,0-7.5,0 c-2,0-6.1,0-8.9,0l-3.4-5.5c-9.6-15-22.5-27.2-38.2-34C250.2,8.9,267.9,0,287.7,0L287.7,0z M287.7,226c66.8,0,101,58.5,122.1,121.9 l15.7,50.4c2.7,8.8-8.2,16.3-16.4,16.3H166.2c-9.6,0-19.8-8.2-16.4-16.3l15.7-50.4C186,284.6,220.8,226,287.7,226z M287.7,81 c35.5,0,64.8,28.6,64.8,64.7s-28.7,64.7-64.8,64.7c-35.5,0-64.8-28.6-64.8-64.7S252.2,81,287.7,81z M138.3,369H82.3 c-9.6,0-19.1-8.2-16.4-16.3l15.7-50.4c21.1-63.3,55.3-121.9,122.1-121.9c2.7,0,5.5,0,7.5,0c6.1,15,17.7,27.2,30.7,35.4 c-49.8,19.7-78.5,72.8-94.8,125.9C147.1,341.8,138.3,369,138.3,369z M203.8,34.7c23.9,0,44.3,12.9,55.9,31.3 c-32.1,12.2-55.9,42.9-55.9,79c0,6.1,0.7,12.2,2.1,18.4h-2.1c-35.5,0-64.8-28.6-64.8-64.7S168.3,34.7,203.8,34.7z M371.6,34.7 c35.5,0,64.8,28.6,64.8,64.7s-29.3,64-64.8,64h-2.7c2.1-6.1,2.7-12.2,2.7-18.4c0-36.8-23.9-66.7-55.9-79 C327.2,47.7,347,34.7,371.6,34.7z\" />\n                </svg>`,\n\n  PlayArea: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 537.9\">\n                <path fill=\"#444444\" d=\"M384.3,137c38,0,68.8-30.7,68.8-68.5S422.3,0,384.3,0s-68.8,30.7-68.8,68.5S346.4,137,384.3,137z\" />\n                <path fill=\"#444444\" d=\"M283.3,96c20,26.3,35.9,53.3,67.6,64.4c31.2,11.1,60.5,11.1,83.5-5.3c22.9-16.4,34.7-46.8,54.1-87.2 c18.8-40.4,34.1-48,57-48c23.5,0,31.2,28.1,30.6,39.8s-10.6,31-40,52.7c-49.4,36.3-57.6,108.3-59.4,127.7 c-1.8,19.3-2.9,50.4,17.6,169.2c20.6,118.9-20,125.9-25.3,127.1c-5.3,0.6-21.2,8.2-31.1-16.4c-10-24.6-11.8-91.3-14.1-120 c-2.9-28.7-6.5-70.9-35.9-79c-30-8.2-40.6,39.8-51.7,76.1c-10.6,36.9-40,71.4-72.3,59.1s-29.4-50.4-10-78.5 c19.4-27.5,61.7-57.4,67.6-124.1c5.9-66.8-11.8-69.1-68.2-90.8c-55.8-22.3-60.5-33.4-67.6-48.6s7.6-46.8,31.1-52.7 C239.2,55.1,259.1,63.9,283.3,96L283.3,96z\" />\n                <path fill=\"#444444\" d=\"M134.7,251.7c26.9,0,48.8-21.8,48.8-48.6s-21.8-48.6-48.8-48.6s-48.8,21.8-48.8,48.6S107.7,251.7,134.7,251.7z\" />\n                <path fill=\"#444444\" d=\"M204,227.8c-15.3,17.6-28.2,35.7-51.1,41.6c-22.9,6.4-43.5,4.7-58.8-8.2c-15.3-12.9-21.7-35.1-32.9-64.4S40,161,23.5,159.8 C7.1,158.7,0,178,0,186.2c-0.6,8.2,5.9,22.3,25.3,39.2C58.2,253.5,60,305.1,60,318.5c0.6,13.5-0.6,35.7-21.7,118.3 s7.1,89.6,10.6,90.8s14.7,7,22.9-10s12.9-63.8,16.5-83.7c3.5-19.9,8.2-49.8,29.4-53.9s26.5,30.4,32.3,56.8 c5.9,26.3,24.7,52.7,47.6,45.7c22.9-7,23.5-34,11.2-54.4c-12.3-20.5-40-43.9-40.6-90.8c-0.6-47.4,12.3-48,52.9-60.3 c40.6-12.3,44.7-20.5,50.5-30.4c5.9-10-2.9-33.4-18.8-38.6C237.5,201.4,222.8,206.7,204,227.8L204,227.8z\" />\n              </svg>`,\n\n  RestRoom: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 533.9\">\n              <path fill=\"#444444\" d=\"M282.3,533.9h9.2V0h-9.2V533.9z\" />\n              <path fill=\"#444444\" d=\"M118.2,97.1c25.4-4.6,41.6-30.1,34.7-55.5C146,16.2,122.9,2.3,97.4,6.9S58.1,39.3,62.8,62.4S95.1,104,118.2,97.1z\" />\n              <path fill=\"#444444\" d=\"M159.8,145.6h4.6c0,0,2.3,0,2.3,2.3L183,270.4c2.3,9.2,9.2,16.2,18.5,16.2c11.6,0,18.5-9.2,18.5-20.8l-18.5-129.4 c-2.3-13.9-13.9-23.1-27.7-23.1H44.3c-13.9,0-25.4,9.2-27.7,23.1L0.4,265.8c-2.3,11.6,6.9,20.8,18.5,20.8c9.2,0,16.2-6.9,18.5-16.2 l16.2-122.5c0,0,0-2.3,2.3-2.3h4.6c0,0,2.3,0,2.3,2.3L30.4,390.6c0,0,0,2.3,2.3,2.3h37c0,0,2.3,0,2.3,2.3v117.9 c0,9.2,6.9,16.2,16.2,16.2s16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h11.6c0,0,2.3,0,2.3,2.3v117.9c0,9.2,6.9,16.2,16.2,16.2 c9.2,0,16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h30.1c0,0,2.3,0,2.3-2.3l-27.7-242.7l0,0l0,0L159.8,145.6z\" />\n              <path fill=\"#444444\" d=\"M497.3,76.3c13.9-23.1,4.6-50.9-16.2-62.4s-50.9-6.9-64.7,16.2c-13.9,23.1-4.6,50.9,16.2,62.4 C455.7,106.3,483.5,99.4,497.3,76.3z\" />\n              <path fill=\"#444444\" d=\"M545.9,113.3h-178c-13.9,0-25.4,9.2-27.7,23.1v129.4c0,11.6,9.2,20.8,20.8,20.8s18.5-9.2,18.5-20.8V159.5c0,0,0-2.3,2.3-2.3 h2.3c0,0,2.3,0,2.3,2.3l25.4,161.8v187.2c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V323.6c0,0,0-2.3,2.3-2.3h6.9 c0,0,2.3,0,2.3,2.3v184.9c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V321.3l25.4-161.8c0,0,0-2.3,2.3-2.3h-2.3 c0,0,2.3,0,2.3,2.3v106.3c0,11.6,9.2,20.8,20.8,20.8s20.8-9.2,20.8-20.8V136.4C571.4,122.5,559.8,113.3,545.9,113.3L545.9,113.3 L545.9,113.3z\" />\n            </svg>`,\n\n  FamilyRestRoom: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 522.5\">\n                    <path fill=\"#444444\" d=\"M119.8,91.5c25-5.9,40.5-30.8,34.6-55.7c-5.9-24.9-30.9-40.4-55.9-34.5S58,32,63.9,56.9S94.8,97.3,119.8,91.5z\" />\n                    <path fill=\"#444444\" d=\"M160.6,139.1h4.5c0.6,0,1.3,0.6,1.3,1.3l15.3,123.1c1.3,8.9,8.9,15.9,17.8,15.9c10.8,0,19.1-9.5,17.8-20.3l-15.9-128.9 c-1.9-13.3-13.4-24.1-27.4-24.1H43.4c-14,0-25.5,10.2-27.4,24.1L0.1,259.1c-1.3,10.8,7,20.3,17.8,20.3c8.9,0,16.5-7,17.8-15.9 l15.3-123.8c0-0.6,0.6-1.3,1.3-1.3h4.5c0.6,0,1.3,0.6,1.3,1.3L29.4,384.1c0,0.6,0.6,1.3,1.3,1.3H67c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h36.3c0.6,0,1.3-0.6,1.3-1.3L158,140.3 C159.3,139.7,159.9,139.1,160.6,139.1L160.6,139.1z\" />\n                    <path fill=\"#444444\" d=\"M498.9,69.8c12.9-22.1,5.4-50.5-16.8-63.4c-22.2-12.9-50.6-5.4-63.6,16.7c-12.9,22.1-5.4,50.5,16.8,63.4 C457.5,99.4,486,91.9,498.9,69.8z\" />\n                    <path fill=\"#444444\" d=\"M547.9,106.1H369.6c-14,0-25.5,10.2-27.4,24.1v128.9c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7v-106 c0-0.6,0.6-1.3,1.3-1.3h2.5c0.6,0,1.3,0.6,1.3,1.3l25.5,162.5v187.3c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7v-186 c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v186c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7V315.6l25.5-162.5 c0-0.6,0.6-1.3,1.3-1.3h2.6c0.6,0,1.3,0.6,1.3,1.3v106c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7V130.2 C573.4,116.2,562,106.1,547.9,106.1L547.9,106.1z\" />\n                    <path fill=\"#444444\" d=\"M259.6,480l19.7-19.7L251.9,433L229,455.8c-7.6,7.6-5.7,20.3,1.3,27.3l32.5,33.6c12.7,12.7,29.3-5.1,17.2-17.1L259.6,480 L259.6,480z M288.9,347.9c19.1,0,34.4-15.2,34.4-34.3s-15.3-34.3-34.4-34.3s-34.4,15.2-34.4,34.3S269.7,347.9,288.9,347.9z  M369.7,405.7l-46.5-46.3c-3.8-3.8-8.3-6.3-14.7-6.3h-41.4c-6.4,0-10.8,2.5-14,6.3l-45.9,45.7c-12.7,12.7,4.5,28.6,17.2,15.9 l28-27.9v26h72.6v-26l28.6,28.6C364.6,433.6,381.8,417.1,369.7,405.7L369.7,405.7z M324.5,433l-27.4,27.3l19.7,19.7l-20.4,20.3 c-12.1,12.1,4.5,29.2,17.2,17.1l32.5-33.6c7-7,8.9-20.3,1.3-27.3C347.4,455.9,324.5,433,324.5,433z\" />\n                  </svg>`,\n\n  Elevator: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 576\">\n                <path fill=\"#444444\" d=\"M576,145.2v268.6c-0.1,1.6-0.3,3.1-0.3,4.7c-0.3,33.3-0.6,66.6-0.8,99.9c-0.1,21.1-9.7,37.2-26.7,49 c-7.7,5.4-15.9,9.3-25.9,8c-3.8-0.5-7.7-0.1-11.5-0.1c-115.3,0.1-230.6,0.2-345.9,0.3c-1.1,0-2.2,0.2-3.3,0.3h-16.9 c-1.2-0.1-2.4-0.3-3.6-0.3c-30.2-0.3-60.4-0.6-90.7-0.8c-11.1-0.1-20.7-4.1-29.1-11.2c-8.7-7.4-15.5-16.7-19.9-27.3l-0.2-0.5 c-0.7-1.6-1.1-3.4-1.2-5.4v0C0,492.8,0,455.1,0,417.4c0-124.1,0-248.1,0-372.2c0-0.2,0-0.3,0-0.5c0-1.5,0.3-2.9,0.7-4.2l0,0.1 C8.3,22.5,20.5,8.9,38.7,1c1.2-0.5,2.6-0.9,4-0.9h0c162.8,0,325.6,0,488.4,0c1.5,0,2.8,0.4,4.1,0.9l-0.1,0c3.4,1.4,6.1,2.7,8.8,4.2 l-0.4-0.2c19.7,11.2,30.9,27.8,31.3,50.8c0.4,28.2,0.6,56.3,0.8,84.5C575.7,141.8,575.8,143.5,576,145.2L576,145.2z M536.4,288.6 h0.3c0-56.7,0-113.4,0-170c0-18.2-0.4-36.4-0.7-54.6c-0.1-8-8.4-19.8-15.9-22.7c-1-0.4-2.1-0.6-3.2-0.7h0c-3.2-0.3-6.4-0.6-9.5-0.6 c-25.5-0.4-51-0.9-76.6-1c-96.4-0.2-192.7-0.4-289.1-0.4c-22.9,0-45.8,0.1-68.7,0.3c-3.4,0-6.8,0.1-10,0.9 c-9.9,2.3-17.1,8.3-21.7,17.3c-1,1.9-2,3.9-2.1,5.9c-0.1,149.8-0.1,299.6-0.1,449.4c0,0.9-0.1,2,0.3,2.7c2.7,4.2,5.1,8.6,8.3,12.3 c5.6,6.3,13.2,8.4,21.6,8.4c23.7,0.1,47.5,0.6,71.2,0.6c123.5,0,247,0,370.5,0c0.1,0,0.2,0,0.3,0c1.1,0,2.1-0.2,3-0.6l-0.1,0 c8.3-3.5,15.4-8.4,20.2-16.3c1.2-1.8,2-4.1,2-6.5l0,0C536.4,438.2,536.4,363.4,536.4,288.6L536.4,288.6z\" />\n                <path fill=\"#444444\" d=\"M307,277.5l75.9,68.4l0.9-0.2V150.9h49.7v194.8l1,0.3l78.2-67.4c0.1,1,0.2,1.7,0.3,2.4c0.3,19.9,0.6,39.8,0.8,59.7 c0,0,0,0,0,0.1c0,1.4-0.5,2.6-1.4,3.6l0,0c-34.1,32.7-68.2,65.3-102.3,97.9c-0.3,0.3-0.6,0.5-1,0.9c-0.6-0.5-1.3-1-1.9-1.5 c-32.7-30.7-65.5-61.4-98.2-92c-1.4-1.2-2.3-3-2.3-5c0-0.1,0-0.3,0-0.4v0c0.2-20.9,0.3-41.9,0.4-62.8C307,280.5,307,279.4,307,277.5 L307,277.5z\" />\n                <path fill=\"#444444\" d=\"M142.2,234.5L67,301.8c-0.1-1.2-0.3-1.9-0.3-2.7c-0.3-20.7-0.7-41.5-1-62.2c0-1.3,0.5-2.5,1.3-3.4l0,0 c33.3-31.4,66.7-62.8,100.1-94.1c0.3-0.3,0.6-0.5,1-0.8c5.9,5.7,11.8,11.3,17.7,16.9c28.1,26.9,56.2,53.9,84.3,80.9 c0.9,0.8,1.4,2,1.5,3.3v0c-0.5,20.2-1.1,40.3-1.6,60.5c0,0.3-0.1,0.7-0.2,1.7l-77.4-67.1l-0.9,0.1v193.9h-48.3v-194L142.2,234.5z\" />\n              </svg>`,\n\n  Security: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 597.6\">\n                <path fill=\"#444444\" d=\"M554,80.7L298.5,1.5c-6.6-2-13.2-2-19.9,0L23.2,80.7C9.3,84.7,0,97.9,0,112.4c0,352.5,178.7,436.4,274,481.9 c4.6,2,9.3,3.3,13.9,3.3c4.6,0,9.9-1.3,13.9-3.3c96-45.5,274-129.4,274-481.9C577.2,97.9,567.9,85.3,554,80.7z M288.6,527.6 C197.2,484.1,73.5,411.4,66.2,136.2l222.4-68.6L511,136.8C503.7,412.1,379.3,484.1,288.6,527.6z\" />\n                <path fill=\"#444444\" d=\"M278.7,152l-26.5,87.1l-90.7-2.6c-4.6,0-8.6,2.6-9.9,7.3c-1.3,4.6,0,9.2,4,11.9l74.8,51.5L200.6,393c-1.3,4.6,0,9.2,4,11.9 c4,2.6,8.6,2.6,12.6,0l72.1-54.8l72.1,54.8c4,2.6,8.6,2.6,12.6,0c4-2.6,5.3-7.3,4-11.9l-29.8-85.8l74.8-51.5c4-2.6,5.3-7.3,4-11.9 c-1.3-4.6-5.3-7.3-9.9-7.3l-90.7,2l-26.5-87.1c-1.3-4.6-5.3-7.3-9.9-7.3C283.9,144.1,280,147.4,278.7,152L278.7,152z\" />\n              </svg>`,\n\n  ChildStroller: `<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 432 370.06\">\n                    <path fill=\"#444444\" d=\"M130.29,178.61l-42.67,34L33.24,254.13c-15.48,12.09-28.32-2.64-28.32-2.64-12.08-15.86,1.89-26.06,1.89-26.06l68-53.24s7.55-7.93,26.81-2.26l28.7,8.68\"/>\n                    <path fill=\"#444444\" d=\"M210,111A38.52,38.52,0,1,1,248.48,72.5,38.68,38.68,0,0,1,210,111\"/>\n                    <path fill=\"#444444\" d=\"M390.84,0a42.88,42.88,0,0,0-24.92,8.31L80.44,235.63a43.71,43.71,0,0,0-13.59,22.28,40.67,40.67,0,0,0,1.89,23.41,47.9,47.9,0,0,0-22.28,41.16A47.58,47.58,0,1,0,94,274.9,41.43,41.43,0,0,0,84.22,276a22.77,22.77,0,0,1-1.51-14.35,25.82,25.82,0,0,1,8.68-13.59l17.37-14,88,29.08a33.54,33.54,0,0,0,42.67-21.53l1.51-4.91,18.88,45.32a47.09,47.09,0,0,0-22.28,40.4,47.58,47.58,0,1,0,47.58-47.58,41.43,41.43,0,0,0-9.82,1.13l-26.43-62.68,43.8-126.12,83.08-66.08a23.7,23.7,0,0,1,15.1-5.29,25.3,25.3,0,0,1,25.3,25.3,25.72,25.72,0,0,1-10.2,20.39,8,8,0,0,0,10.58,12.08A41.37,41.37,0,0,0,390.84,0ZM93.66,301.33A20.77,20.77,0,1,1,72.89,322.1,20.71,20.71,0,0,1,93.66,301.33Zm191.07,0A20.77,20.77,0,1,1,264,322.1,20.71,20.71,0,0,1,284.73,301.33Z\"/>\n                  </svg>`,\n\n  VendingMachine: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 594\">\n                      <circle fill=\"#444444\" cx=\"324\" cy=\"175.5\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"364.5\" cy=\"175.5\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"324\" cy=\"243\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"364.5\" cy=\"243\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"324\" cy=\"310.5\" r=\"13.5\"/>\n                      <circle fill=\"#444444\" cx=\"364.5\" cy=\"310.5\" r=\"13.5\"/>\n                      <path fill=\"#444444\" d=\"M216,94.5H67.5C59.4,94.5,54,99.9,54,108c0,8.1,5.4,13.5,13.5,13.5H216c8.1,0,13.5-5.4,13.5-13.5 C229.5,99.9,224.1,94.5,216,94.5z\"/>\n                      <path fill=\"#444444\" d=\"M216,162H67.5c-8.1,0-13.5,5.4-13.5,13.5c0,8.1,5.4,13.5,13.5,13.5H216c8.1,0,13.5-5.4,13.5-13.5 C229.5,167.4,224.1,162,216,162z\"/>\n                      <path fill=\"#444444\" d=\"M216,229.5H67.5c-8.1,0-13.5,5.4-13.5,13.5c0,8.1,5.4,13.5,13.5,13.5H216c8.1,0,13.5-5.4,13.5-13.5 C229.5,234.9,224.1,229.5,216,229.5z\"/>\n                      <path fill=\"#444444\" d=\"M216,297H67.5c-8.1,0-13.5,5.4-13.5,13.5S59.4,324,67.5,324H216c8.1,0,13.5-5.4,13.5-13.5S224.1,297,216,297z\"/>\n                      <path fill=\"#444444\" d=\"M391.5,0H324c-8.1,0-13.5,5.4-13.5,13.5S315.9,27,324,27h67.5c8.1,0,13.5,5.4,13.5,13.5V567H27V40.5 C27,32.4,32.4,27,40.5,27h216v499.5c0,8.1,5.4,13.5,13.5,13.5s13.5-5.4,13.5-13.5v-513C283.5,5.4,278.1,0,270,0H40.5 C17.5,0,0,17.5,0,40.5v540c0,8.1,5.4,13.5,13.5,13.5h405c8.1,0,13.5-5.4,13.5-13.5v-540C432,17.5,414.5,0,391.5,0z\"/>\n                      <path fill=\"#444444\" d=\"M364.5,94.5H324c-8.1,0-13.5,5.4-13.5,13.5c0,8.1,5.4,13.5,13.5,13.5h40.5c8.1,0,13.5-5.4,13.5-13.5 C378,99.9,372.6,94.5,364.5,94.5z\"/>\n                      <path fill=\"#444444\" d=\"M216,432H67.5c-8.1,0-13.5,5.4-13.5,13.5V513c0,8.1,5.4,13.5,13.5,13.5H216c8.1,0,13.5-5.4,13.5-13.5v-67.5 C229.5,437.4,224.1,432,216,432z M81,499.5V459h121.5v40.5H81z\"/>\n                    </svg>`,\n\n  Stairs: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 448.5\">\n              <path fill=\"#444444\" d=\"M432,243.3h-81.7v33.1h-72.2v33.1h-72.2v33.1h-72.2v33.1H61.5v33.1H0v39.7h101.2v-33.1h72.2v-33.1h72.2v-33.1h72.2v-33.1 h72.2V283H432L432,243.3\"/>\n              <path fill=\"#444444\" d=\"M99.9,109.3c12,0,21.8-9.7,21.8-21.8c0-12-9.8-21.8-21.8-21.8c-12,0-21.8,9.7-21.8,21.8C78.1,99.6,87.9,109.3,99.9,109.3\"/>\n              <path fill=\"#444444\" d=\"M179.4,299.8l-56.5-47.4l11.7-82.9c12.5,14.8,20.7,33.4,22.7,53.8l17.8-4.8c-0.9-32.2-14.2-61.3-35.3-82.6 c-14.4-14.5-32.9-19.2-45.9-20.6c-0.1,0-0.2,0-0.3,0c-1.6,0-2.9,1.2-3.2,2.7c-6.5,34.7-27.7,64.2-56.9,81.9l9.3,16.1 c15.6-6.6,29.5-16.4,40.9-28.6v177.3H107l10.4-73.7l57.7,33.3L179.4,299.8\"/>\n              <path fill=\"#444444\" d=\"M294.1,43.6c12,0,21.8-9.8,21.8-21.8c0-12-9.8-21.8-21.8-21.8c-12,0-21.8,9.8-21.8,21.8C272.3,33.8,282.1,43.6,294.1,43.6\" />\n              <path fill=\"#444444\" d=\"M337.2,154.3l-41.8-24.1l3.9-20c1.4-7.5,2.2-15.2,2.2-23.1c0-12-1.8-23.7-5-34.6c-0.4-1.4-1.7-2.4-3.1-2.4c0,0-0.1,0-0.1,0 c-46.7,1.6-84.1,40-84.1,87.1c0,2.3,0.1,4.6,0.3,6.9l18.3,3.2c0-0.5,0-0.9,0-1.4c0-19.5,8.6-36.9,22.3-48.7l-10.5,201.1h23.3 l24.9-128l23,10.7L294.9,240l16.6,16.6l34.6-74.3c1.3-2.8,2-5.9,2-9.2C348.1,165.1,343.8,158,337.2,154.3\"/>\n            </svg>`,\n\n  ChargingStation: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 627.4\">\n                      <polygon fill=\"#444444\" points=\"314.4,282.1 133.8,467.8 188.6,334.2 114.9,334.2 225.6,148.6 314.4,148.6 236.7,282.1 \"/>\n                      <path fill=\"#444444\" d=\"M374.2,0H63.3C28.4,0.1,0.1,28.4,0,63.3v503.6c0,32.8,30.1,60.5,62.6,60.5h309.2c33.3,0,60.3-27,60.3-60.3V374.2l0,0V57.8 C432,25.9,406.1,0,374.2,0z M220.3,600.4c-8.3,0.2-15.2-6.4-15.4-14.7c0-0.2,0-0.5,0-0.7c0.1-8.5,6.9-15.3,15.4-15.4 c8.3-0.2,15.2,6.4,15.4,14.7c0,0.2,0,0.5,0,0.7C235.4,593.8,229.1,600.4,220.3,600.4z M391.1,544.8H44v-465h346.7v294.4l0.4,55 V544.8z\"/>\n                    </svg>`,\n\n  WheelChair: `<svg xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 432 492.2\">\n                  <path fill=\"#444444\" d=\"M134.7,80.1l9.5,103h104.6v33.3H146.6l3.2,30.9h147.4l66.6,157l56.3-23.8l11.9,27l-84,36.4l-69.7-163.3H118.9l-19-221.9 c-3.2-5.5-4.7-11.9-4.7-18.2C95.1,18.2,112.5,0,134.7,0c22.2,0,40.4,18.2,40.4,40.4C175.2,61.8,156.9,80.1,134.7,80.1L134.7,80.1z\" />\n                  <path fill=\"#444444\" d=\"M306.7,397.1c-25.3,56.3-81.6,95.1-146.6,95.1C72.1,492.2,0,420.9,0,332.1C0,268.7,37.2,214,91.1,187.9l3.2,36.5 c-36.5,22.2-61,61.8-61,107.8c0,69.8,57.1,126.8,126.8,126.8c65,0,118.1-48.3,126-110.2L306.7,397.1\"/>\n                </svg>`,\n\n};\n\nexport default SVGIcons;","import SVGIcons from \"./svgIcons.helper\";\n\nexport type MapAmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'escalator' | 'security' | 'dog-poop-station' | 'child-stroller' | 'vending-machine' | 'stairs' | 'charging-station' | 'wheelchair';\n\nexport interface MapAmenity {\n  name: string;\n  type: MapAmenityID;\n  svgCode: string;\n}\n\nexport const AllAmenities: MapAmenity[] = [\n  {\n    name: \"ATM\",\n    type: \"atm\",\n    svgCode: SVGIcons.ATM\n  },\n  {\n    name: \"Management\",\n    type: \"management\",\n    svgCode: SVGIcons.Management\n  },\n  {\n    name: \"Kids Area\",\n    type: \"playarea\",\n    svgCode: SVGIcons.PlayArea\n  },\n  {\n    name: \"Restroom\",\n    type: \"restroom\",\n    svgCode: SVGIcons.RestRoom\n  },\n  {\n    name: \"Family Restroom\",\n    type: \"family-restroom\",\n    svgCode: SVGIcons.FamilyRestRoom\n  },\n  {\n    name: \"Elevator\",\n    type: \"elevator\",\n    svgCode: SVGIcons.Elevator\n  },\n  {\n    name: \"Security\",\n    type: \"security\",\n    svgCode: SVGIcons.Security\n  },\n  {\n    name: \"Escalator\",\n    type: \"escalator\",\n    svgCode: SVGIcons.Escalator\n  },\n  {\n    name: 'Child Stroller',\n    type: 'child-stroller',\n    svgCode: SVGIcons.ChildStroller\n  },\n  {\n    name: 'Vending Machine',\n    type: 'vending-machine',\n    svgCode: SVGIcons.VendingMachine\n  },\n  {\n    name: 'Stairs',\n    type: 'stairs',\n    svgCode: SVGIcons.Stairs\n  },\n  {\n    name: 'Charging Station',\n    type: 'charging-station',\n    svgCode: SVGIcons.ChargingStation\n  },\n  {\n    name: 'Wheelchair',\n    type: 'wheelchair',\n    svgCode: SVGIcons.WheelChair\n  },\n];\n\n","import { Dispatch, ReactNode, SetStateAction, createContext, useCallback, useContext, useEffect, useMemo, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { Group, type Mesh } from \"three\";\nimport path from \"ngraph.path\";\nimport { EventedType } from \"ngraph.events\";\nimport { MapConfigProps, IExtMesh } from \"src/interfaces\";\nimport { MapObjData, MapRetailer, MapAllDataResponse, MapKiosk } from \"src/interfaces/mapApiTypes\";\nimport { defaultPortalMapSettings, mapConfigDefaultVars, mapObjDefaultVars } from \"src/defaults\";\nimport { AllAmenities } from \"src/helpers/amenities.helper\";\nimport { AppDataProps } from \"src/interfaces/mapbox\";\nimport { AppFloor } from \"src/interfaces/mapbox\";\nimport createApiServices, { ApiServicesProps } from \"src/services/index.service\";\n\n\ninterface MapBoxContextType {\n  apiBaseUrl: string;\n  refetchMapData: () => void;\n  apiServices: ApiServicesProps;\n\n  loading: boolean;\n  setLoading: Dispatch<SetStateAction<boolean>>;\n\n  initialFloorsDataIsLoaded: boolean;\n  setInitialFloorsDataIsLoaded: Dispatch<SetStateAction<boolean>>;\n\n  mapConfig: MapConfigProps;\n  setMapConfig: React.Dispatch<React.SetStateAction<MapConfigProps>>;\n\n  mapApiResponse: MapAllDataResponse;\n  setMapApiResponse: React.Dispatch<React.SetStateAction<MapAllDataResponse>>;\n\n  appData: AppDataProps;\n  setAppData: React.Dispatch<React.SetStateAction<AppDataProps>>;\n\n  meshByObjectId: Map<string, Mesh>;\n  setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>>;\n\n  allMapObjects: Array<string>;\n  setAllMapObjects: Dispatch<SetStateAction<Array<string>>>;\n\n  allIndexedMapObjects: Record<string, MapObjData>;\n  setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObjData>>>;\n\n  allIndexedRetailers: Record<number, MapRetailer>;\n  setAllIndexedRetailers: Dispatch<SetStateAction<Record<number, MapRetailer>>>;\n\n  indexedKiosks: Record<number, MapKiosk>;\n  setIndexedKiosks: Dispatch<SetStateAction<Record<number, MapKiosk>>>;\n\n  floorsData: AppFloor[];\n  setFloorsData: Dispatch<SetStateAction<AppFloor[]>>;\n\n  allNodesFloor: Record<string, number>;\n  setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>>;\n\n  pathFinderGraph: Graph<any, any> & EventedType;\n  setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>>;\n  ngraphPath: typeof path;\n  setNgraphPath: Dispatch<SetStateAction<typeof path>>;\n\n  meshObject: IExtMesh[];\n  setMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[]>>;\n\n  cameraLength: number | undefined;\n  setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>>;\n}\n\nconst MapBoxContext = createContext<MapBoxContextType | undefined>(undefined);\n\nexport interface ProviderInitialData {\n  webApiBaseUrl: string;\n  config: Partial<MapConfigProps>;\n}\n\ninterface MapBoxContextProviderProps {\n  children: ReactNode;\n  initialData: ProviderInitialData;\n  mapApiResponseRef?: React.MutableRefObject<MapAllDataResponse | null>;\n}\n\nconst MapBoxContextProvider = ({ children, initialData, mapApiResponseRef }: MapBoxContextProviderProps) => {\n  const apiBaseUrl = initialData.webApiBaseUrl;\n\n  const [loading, setLoading] = useState<MapBoxContextType['loading']>(true);\n  const [initialFloorsDataIsLoaded, setInitialFloorsDataIsLoaded] = useState<MapBoxContextType['initialFloorsDataIsLoaded']>(false);\n  const [mapConfig, setMapConfig] = useState<MapBoxContextType['mapConfig']>({ ...mapConfigDefaultVars, ...initialData.config });\n  const [mapApiResponse, setMapApiResponse] = useState<MapBoxContextType['mapApiResponse']>({\n    retailers: [],\n    globalRetailerIds: [],\n    floors: [],\n    kiosks: [],\n    map_objs: [],\n    mapSettings: defaultPortalMapSettings\n  });\n\n  if (mapApiResponseRef) {\n    mapApiResponseRef.current = mapApiResponse;\n  }\n\n  // angrej remove this later\n  const [appData, setAppData] = useState<MapBoxContextType['appData']>({\n    AMENITIES: AllAmenities,\n    FLOORS: [],\n    KIOSKS: {},\n    RETAILERS: {}\n  });\n\n  const [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string, Mesh>());\n\n  const [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\n  const [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\n  const [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\n  const [indexedKiosks, setIndexedKiosks] = useState<MapBoxContextType['indexedKiosks']>({});\n  const [floorsData, setFloorsData] = useState<MapBoxContextType['floorsData']>([]);\n\n  const [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n  const [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\n  const [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n\n  const [meshObject, setMeshObject] = useState<MapBoxContextType['meshObject']>([]);\n  const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n  const apiServices: ApiServicesProps = useMemo(() => {\n    return createApiServices(apiBaseUrl, mapConfig.CENTER_ID);\n  }, [apiBaseUrl, mapConfig.CENTER_ID])\n\n  // setting mapConfig when initialData.config is changed (for example, when CENTER_ID is changed)\n  // will trigger a re-fetch of the map data\n  useEffect(() => {\n    setMapConfig((config) => {\n      const newConfig = { ...config, ...initialData.config };\n      return newConfig;\n    });\n  }, [initialData.config, initialData.config.CENTER_ID]);\n\n  const refetchMapData = useCallback(() => {\n    Promise.all([\n      apiServices.retailersService.getAllRetailers(),\n      apiServices.mapApiService.getMapData(),\n      apiServices.mapApiService.getMapFloors(),\n      apiServices.mapApiService.getMapKiosks(),\n      apiServices.mapApiService.getMapSettings(),\n      apiServices.mapApiService.getMapResponsiveSettings()\n    ])\n      .then(([\n        { retailers, globalRetailerIds },\n        mapData,\n        mapFloors,\n        mapKiosks,\n        mapSettings,\n        responsiveSettings\n      ]) => {\n        // find all mapData.map_obj that use the same map_obj_name as another map_obj\n        // can be removed once the db don't have duplicates\n        const mapObjNames = mapData.map(map_obj => map_obj.map_obj_name);\n        mapData = mapData.filter((map_obj, index) => mapObjNames.indexOf(map_obj.map_obj_name) === index);\n\n        setMapApiResponse({\n          retailers,\n          globalRetailerIds,\n          map_objs: mapData,\n          floors: mapFloors,\n          kiosks: mapKiosks,\n          mapSettings: mapSettings.apiResponse\n        });\n\n        setMapConfig((config) => {\n          const mergedMapConfig = {\n            ...config,\n            ...mapSettings.responseConfig,\n            CAMERA_CONTROLS_STATES: responsiveSettings,\n            CENTER_ID: initialData.config.CENTER_ID || config.CENTER_ID,\n            KIOSK_ID: initialData.config.KIOSK_ID || config.KIOSK_ID,\n            SELECTED_RETAILER_ID: initialData.config.SELECTED_RETAILER_ID || config.SELECTED_RETAILER_ID,\n          };\n          return mergedMapConfig;\n        });\n\n        setAllIndexedRetailers(retailers.reduce(\n          (acc, retailer) => {\n            acc[retailer.id] = retailer;\n            return acc;\n          },\n          {} as Record<number, MapRetailer>\n        ));\n\n        setIndexedKiosks(mapKiosks.reduce(\n          (acc, kiosk) => {\n            acc[kiosk.id] = kiosk;\n            const mapObj = mapData.find(item => item.kiosk_id === kiosk.id);\n            if (mapObj) {\n              acc[kiosk.id].map_obj_name = mapObj.map_obj_name;\n            }\n            return acc;\n          },\n          {} as Record<number, MapKiosk>\n        ));\n\n        setAllIndexedMapObjects(mapData.reduce(\n          (acc, mapObj) => {\n            acc[mapObj.map_obj_name] = { ...mapObjDefaultVars, ...mapObj };\n            return acc;\n          },\n          {} as Record<string, MapObjData>\n        ));\n\n        setFloorsData(mapFloors.map(floor => {\n          const objsGroup = new Group();\n          objsGroup.scale.y *= -1;\n          objsGroup.lookAt(0, 1, 0);\n\n          return {\n            ...floor,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n          };\n        }));\n        setInitialFloorsDataIsLoaded(true);\n\n      })\n      .catch(error => {\n        console.error('Error: MapBoxContextProvider fetching api data:', error);\n        // there might still be some data in the context, so we can still use it\n        setInitialFloorsDataIsLoaded(true);\n      });\n  }, [apiServices])\n\n  useEffect(() => {\n    setInitialFloorsDataIsLoaded(false);\n    refetchMapData();\n  }, [refetchMapData]);\n\n  const contextValue: MapBoxContextType = {\n    apiBaseUrl,\n    refetchMapData,\n    apiServices,\n\n    loading,\n    setLoading,\n    initialFloorsDataIsLoaded,\n    setInitialFloorsDataIsLoaded,\n    mapConfig,\n    setMapConfig,\n    mapApiResponse,\n    setMapApiResponse,\n    appData,\n    setAppData,\n\n    meshByObjectId,\n    setMeshByObjectId,\n    allMapObjects,\n    setAllMapObjects,\n    allIndexedMapObjects,\n    setAllIndexedMapObjects,\n    allIndexedRetailers,\n    setAllIndexedRetailers,\n    indexedKiosks,\n    setIndexedKiosks,\n    floorsData,\n    setFloorsData,\n\n    allNodesFloor,\n    setAllNodesFloor,\n    pathFinderGraph,\n    setPathFinderGraph,\n    ngraphPath,\n    setNgraphPath,\n\n    meshObject,\n    setMeshObject,\n    cameraLength,\n    setCameraLength\n  };\n\n  return (\n    <MapBoxContext.Provider value={contextValue}>\n      {children}\n    </MapBoxContext.Provider>\n  )\n}\n\nexport function useMapBoxContext() {\n  const context = useContext(MapBoxContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n  }\n\n  return context;\n}\n\nexport default MapBoxContextProvider;\n","import axios from \"axios\";\nimport createMapApiService, { MapApiService } from \"./map.service\";\nimport createRetailersService, { RetailersService } from \"./retailers.service\";\n\nexport interface ApiServicesProps {\n  mapApiService: MapApiService;\n  retailersService: RetailersService;\n}\n\nconst createApiServices = (baseApiUrl: string, center_id: number): ApiServicesProps => {\n  const axiosInstance = axios.create({\n    baseURL: baseApiUrl, // server baseURL\n    timeout: 30000, // Set the request timeout in milliseconds\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"center_id\": center_id\n    },\n  });\n\n  // Interceptor for handling errors for Axios instance\n  const errorInterceptor = (error: any) => {\n    console.error('Axios Interceptor Error: ', error.response);\n  };\n\n  axiosInstance.interceptors.response.use(\n    (response) => response,\n    errorInterceptor\n  );\n\n\n  const mapApiService: MapApiService = createMapApiService(axiosInstance);\n  const retailersService: RetailersService = createRetailersService(axiosInstance);\n\n  return {\n    mapApiService,\n    retailersService\n  }\n}\n\nexport default createApiServices;\n\n","import { AxiosInstance } from \"axios\";\nimport { defaultPortalMapSettings, mapConfigDefaultVars } from \"src/defaults\";\nimport { hex_to_color } from \"src/helpers/misc.helper\";\nimport { MapConfigProps } from \"src/interfaces\";\nimport { MapResponsiveSettings, MapObjData, MapFloor, MapKiosk } from \"src/interfaces/mapApiTypes\";\nimport { PortalMapSettingsProps } from \"src/interfaces/portal\";\n\nexport interface MapApiService {\n  getMapData: () => Promise<MapObjData[]>;\n  getMapFloors: () => Promise<MapFloor[]>;\n  getMapKiosks: () => Promise<MapKiosk[]>;\n  getMapSettings: () => Promise<{ apiResponse: any, responseConfig: Partial<MapConfigProps> }>;\n  getMapResponsiveSettings: () => Promise<MapResponsiveSettings>;\n}\n\nconst createMapApiService = (axiosInstance: AxiosInstance): MapApiService => {\n  const CENTER_ID = axiosInstance.defaults.headers['center_id'];\n\n  const getMapData = (): Promise<MapObjData[]> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/mapit2/data`)\n        .then((response: any) => {\n          const mapDataItems: MapObjData[] = [];\n          if (response?.data?.items) {\n            for (const item of response?.data?.items) {\n              mapDataItems.push({\n                id: item.id,\n                retailer_id: item.retailer_id,\n                kiosk_id: item.kiosk_id,\n                map_obj_name: item.map_obj_name,\n                obj_type: item.obj_type,\n                layer_type: item.layer_type,\n                value: item.value,\n                custom_text: item.custom_text,\n                custom_image: item.custom_image,\n                bg_color: item.bg_color,\n                transparent: item.transparent,\n                text_color: item.text_color,\n                size: parseInt(item.size),\n                rotate: parseInt(item.rotate),\n                offset_x: parseInt(item.offset_x),\n                offset_y: parseInt(item.offset_y),\n                lock_size: false,\n              })\n            }\n          }\n          resolve(mapDataItems);\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapData()', err);\n          resolve([]);\n        });\n    });\n  }\n\n  const getMapFloors = (): Promise<MapFloor[]> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/mapit2/floors?limit=100&offset=0`)\n        .then((response: any) => {\n          const floors: MapFloor[] = [];\n          if (response?.data?.items) {\n            for (const item of response?.data?.items) {\n              floors.push({\n                id: item.id,\n                name: item.title,\n                svgUrl: item.svg\n              })\n            }\n          }\n          resolve(floors);\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapFloors()', err);\n          resolve([]);\n        });\n    });\n  }\n\n  const getMapKiosks = (): Promise<MapKiosk[]> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/display_kiosks?limit=100&page=1&display_type_id=1`)\n        .then((response: any) => {\n          const kiosks: MapKiosk[] = [];\n          if (response?.data?.items) {\n            for (const item of response?.data?.items) {\n              kiosks.push({\n                id: item.id,\n                name: item.title,\n              })\n            }\n          }\n          resolve(kiosks);\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapFloors()', err);\n          resolve([]);\n        });\n    });\n  }\n\n  const getMapSettings = (): Promise<{ apiResponse: any, responseConfig: Partial<MapConfigProps> }> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/mapit2/settings/${CENTER_ID}`)\n        .then((response: any) => {\n          const settings: MapConfigProps = { ...mapConfigDefaultVars };\n          let dbSettings: Partial<PortalMapSettingsProps> = defaultPortalMapSettings;\n          if (response?.data?.settings) {\n            dbSettings = response?.data?.settings;\n            if (dbSettings['MAP_BACKGROUND_COLOR']) settings.MAP_BACKGROUND_COLOR = hex_to_color(dbSettings['MAP_BACKGROUND_COLOR']);\n            if (dbSettings['STORE_DEFAULT_COLOR']) settings.STORE_DEFAULT_COLOR = hex_to_color(dbSettings['STORE_DEFAULT_COLOR']);\n            if (dbSettings['ACCENT_COLOR']) settings.ACCENT_COLOR = hex_to_color(dbSettings['ACCENT_COLOR']);\n            if (dbSettings['BASE_COLOR']) settings.BASE_COLOR = hex_to_color(dbSettings['BASE_COLOR']);\n            if (dbSettings['BOUNDARY_COLOR']) settings.BOUNDARY_COLOR = hex_to_color(dbSettings['BOUNDARY_COLOR']);\n            if (dbSettings['BASE_COLOR']) settings.BASE_COLOR = hex_to_color(dbSettings['BASE_COLOR']);\n            if (dbSettings['WALL_COLOR']) settings.WALL_COLOR = hex_to_color(dbSettings['WALL_COLOR']);\n            if (dbSettings['STORE_TEXT_COLOR']) settings.STORE_TEXT_COLOR = hex_to_color(dbSettings['STORE_TEXT_COLOR']);\n            if (dbSettings['OVERLAY_COLOR']) settings.OVERLAY_COLOR = hex_to_color(dbSettings['OVERLAY_COLOR']);\n            if (dbSettings['BOUNDARY_THICKNESS']) settings.BOUNDARY_THICKNESS = dbSettings['BOUNDARY_THICKNESS'];\n            if (dbSettings['WALL_THICKNESS']) settings.WALL_THICKNESS = dbSettings['WALL_THICKNESS'];\n            if (dbSettings['OVERLAY_OPACITY']) settings.OVERLAY_OPACITY = dbSettings['OVERLAY_OPACITY'];\n            if (dbSettings['KIOSK_SIZE']) settings.KIOSK_SIZE = dbSettings['KIOSK_SIZE'];\n            if (dbSettings['ZOOM_STEP']) settings.ZOOM_STEP = dbSettings['ZOOM_STEP'];\n            if (dbSettings['SELECTED_ZOOM_LIMIT']) settings.SELECTED_ZOOM_LIMIT = dbSettings['SELECTED_ZOOM_LIMIT'];\n\n\n            settings.CAMERA.minDistance = dbSettings['CAMERA_MIN_DISTANCE'] ? dbSettings['CAMERA_MIN_DISTANCE'] : settings.CAMERA.minDistance\n            settings.CAMERA.maxDistance = dbSettings['CAMERA_MAX_DISTANCE'] ? dbSettings['CAMERA_MAX_DISTANCE'] : settings.CAMERA.maxDistance\n\n            settings.CAMERA = { ...settings.CAMERA } // new reference to trigger some useEffects\n          }\n\n          const settingsToReturn: Partial<MapConfigProps> = { ...settings }\n\n          delete settingsToReturn.ROLE\n          resolve({\n            apiResponse: dbSettings,\n            responseConfig: settingsToReturn,\n          });\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapFloors()', err);\n          resolve({\n            apiResponse: defaultPortalMapSettings,\n            responseConfig: mapConfigDefaultVars,\n          });\n        });\n    });\n  }\n\n  const getMapResponsiveSettings = (): Promise<MapResponsiveSettings> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/mapit2/responsive/${CENTER_ID}`)\n        .then((response: any) => {\n          const settings: MapResponsiveSettings = { ...mapConfigDefaultVars.CAMERA_CONTROLS_STATES };\n          if (response.data.display_app) settings.display_app = response.data.display_app;\n          if (response.data.desktop) settings.desktop = response.data.desktop;\n          if (response.data.tablet) settings.tablet = response.data.tablet;\n          if (response.data.mobile) settings.mobile = response.data.mobile;\n          resolve(settings);\n        })\n        .catch((err) => {\n          console.error('Error mapApiService:getMapFloors()', err);\n          resolve({ ...mapConfigDefaultVars.CAMERA_CONTROLS_STATES });\n        });\n    });\n  }\n\n  return {\n    getMapData,\n    getMapFloors,\n    getMapKiosks,\n    getMapSettings,\n    getMapResponsiveSettings\n  }\n}\n\nexport default createMapApiService;\n\n","import { AxiosInstance } from \"axios\";\nimport { MapRetailer, MapRetailerSingle } from \"src/interfaces/mapApiTypes\";\n\nexport interface RetailersService {\n  getAllRetailers: () => Promise<{ retailers: MapRetailer[], globalRetailerIds: number[] }>;\n  getRetailer: (slug: string) => Promise<MapRetailerSingle>;\n}\n\nconst createRetailersService = (axiosInstance: AxiosInstance): RetailersService => {\n\n  const getAllRetailers = (): Promise<{ retailers: MapRetailer[], globalRetailerIds: number[] }> => {\n    return new Promise((resolve, reject) => {\n      let items: any[] = [];\n\n      const fetchData = (currentPage: number = 1) => {\n        axiosInstance(`/v1/retailers?limit=100&page=${currentPage}`)\n          .then((response: any) => {\n            if (response?.data?.items) {\n              items = [...items, ...response.data.items];\n              if (response.data.count > items.length) {\n                fetchData(currentPage + 1);\n              } else {\n                const retailers: MapRetailer[] = [];\n                const globalRetailerIds: number[] = [];\n\n                for (const item of items) {\n                  retailers.push({\n                    id: item.id,\n                    global_retailer_id: item.global_retailer_id,\n                    retail_name: item.name,\n                    slug: item.slug,\n                    retailer_description: item.description,\n                    location: item.location,\n                    retailer_phone: item.retailer_phone,\n                    logo: item.media.url || '',\n                    map_obj_name: ''\n                  });\n                  globalRetailerIds.push(item.global_retailer_id);\n                }\n                resolve({ retailers, globalRetailerIds });\n              }\n            }\n          })\n          .catch((err) => {\n            console.error('Error fetching retailers', err);\n            resolve({ retailers: [], globalRetailerIds: [] });\n          });\n      };\n\n      fetchData();\n    });\n  }\n\n  const getRetailer = (slug: string): Promise<MapRetailerSingle> => {\n    return new Promise((resolve, reject) => {\n      axiosInstance(`/v1/retailers/${slug}`)\n        .then((response: any) => {\n          if (response?.data?.id) {\n            const resp = response?.data;\n            const retailer: MapRetailerSingle = {\n              id: resp.id,\n              global_retailer_id: resp.global_retailer_id,\n              retail_name: resp.name,\n              slug: resp.slug,\n              retailer_description: resp.description,\n              location: resp.location,\n              retailer_phone: resp.retailer_phone,\n              logo: resp.media.url || '',\n              map_obj_name: '',\n              opening_hours: resp.opening_hours\n            };\n\n            resolve(retailer);\n          }\n        })\n        .catch((err) => {\n          console.error('Error fetching retailers', err);\n          reject(err);\n        });\n    });\n  }\n\n  return {\n    getAllRetailers,\n    getRetailer\n  }\n}\n\nexport default createRetailersService;\n\n","import { Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry } from \"three\";\nimport { getWallShape } from \"./getWallShape\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\nimport { IExtMesh, IMeshValues } from \"../../interfaces\";\nimport { hex_to_color } from \"../../helpers/misc.helper\";\nimport { AllAmenities } from \"src/helpers/amenities.helper\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { useCallback } from \"react\";\n\nexport const renderOrders = {\n  'route-path': 0,\n  'escalator': 0,\n  'underlay': 0,\n  'overlay': 1,\n  'building-base': 1,\n  'base': 2,\n  'store': 3,\n  'big-store': 4,\n  'kiosk': 5,\n  'wall': 6,\n  'outer-wall': 7,\n  'boundary': 8,\n  'amenity': 9,\n  'layer-image': 10,\n  'layer-text': 11,\n  'route-tube': 12,\n  'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nconst useMaterialAndGeometry = () => {\n\n  const { mapConfig, allMapObjects, allIndexedMapObjects, allIndexedRetailers, floorsData } = useMapBoxContext();\n\n  const getRenderOrder = useCallback((mesh_type: MeshType): number => {\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n      return renderOrders[mesh_type];\n    }\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\n    return 0;\n  }, [])\n\n  const getMaterial = useCallback((mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean) => {\n    const material_settings = {\n      color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n      side: DoubleSide,\n      transparent: false,\n      depthWrite: true,\n      depthTest: true,\n      opacity: 1,\n    }\n    if (mapConfig.STYLE === '2D' || mesh_type === 'base' || mesh_type == null) {\n      if (mesh_type !== 'boundary') {\n        material_settings.depthWrite = false;\n        material_settings.depthTest = false;\n      }\n    }\n    if (mesh_type === 'overlay') {\n      material_settings.color = mapConfig.OVERLAY_COLOR;\n      material_settings.opacity = mapConfig.OVERLAY_OPACITY;\n    }\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && mapConfig.ROLE !== 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent) {\n      material_settings.opacity = 0;\n    }\n    var material = new MeshLambertMaterial(material_settings);\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n      //@ts-ignore\n      material.colorDefault = material.color;\n      if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color !== '') {\n        material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color as string);\n        //@ts-ignore\n        material.colorDefault = material.color;\n      }\n      //@ts-ignore\n      material.active = false;\n    }\n    if (mapConfig.ROLE !== 'PORTAL' && mesh_transparent) {\n      material.opacity = 0;\n      material.transparent = true;\n    }\n\n    material.transparent = material.opacity !== 1;\n\n    return material;\n  }, [allIndexedMapObjects, mapConfig.OVERLAY_COLOR, mapConfig.OVERLAY_OPACITY, mapConfig.ROLE, mapConfig.STYLE])\n\n  const getGeometry = useCallback((mesh_type: MeshType, layer_name: string, extrude: number, line_thickness: number, path: any) => {\n    const consolePrefix = 'MaterialAndGeometry';\n\n    let shapes = path.toShapes(true);\n\n    // shapes.forEach((shape, index) => {\n    let extrude_meshes;\n    if (mapConfig.STYLE === '2D') {\n      extrude_meshes = ['building-base'];\n    } else {\n      extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n    }\n\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n    var geometry;\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\n      geometry = new ExtrudeGeometry(shapes, {\n        depth: -extrude,\n        bevelEnabled: false,\n      });\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n      //@ts-ignore\n      let wall_geometries = [];\n      //@ts-ignore\n      path.subPaths.forEach(subPath => {\n        //@ts-ignore\n        subPath.curves.forEach(curve => {\n          if (curve.type === 'LineCurve') {\n            let shape_extend = 0;\n            if (mesh_type === 'boundary') {\n              shape_extend = 1;\n            } else if (mesh_type === 'wall') {\n              // shape_extend = 1 / 3;\n            }\n            let shape1 = getWallShape(curve, line_thickness, shape_extend);\n            let wall_geometry = new ExtrudeGeometry(shape1, {\n              depth: -extrude,\n              bevelEnabled: false,\n            });\n            wall_geometries.push(wall_geometry);\n          } else {\n            console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n          }\n        });\n      });\n\n      if (wall_geometries.length === 1) {\n        //@ts-ignore\n        geometry = wall_geometries[0];\n      } else if (wall_geometries.length > 1) {\n        //@ts-ignore\n        geometry = mergeGeometries(wall_geometries);\n      } else {\n        console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n      }\n    } else {\n      geometry = new ShapeGeometry(shapes);\n      try {\n        //@ts-ignore\n        if (geometry.attributes.position.count === 0) {\n          console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n        }\n      } catch (e: any) {\n        console.error(e.message);\n      }\n    }\n\n    return geometry;\n  }, [mapConfig.STYLE])\n\n  const getMaterialAndGeometry = useCallback((\n    mesh_type: MeshType,\n    layer_name: string,\n    layer_color: Color | string,\n    mesh_transparent: boolean,\n    mesh_visible: boolean,\n    z_index: number,\n    extrude: number,\n    line_thickness: number,\n    floor_index: number,\n    path: any\n  ): IMeshValues => {\n\n    const material = getMaterial(mesh_type, layer_name, layer_color, mesh_transparent);\n    const geometry = getGeometry(mesh_type, layer_name, extrude, line_thickness, path);\n\n    const mesh = new Mesh(geometry, material) as IExtMesh;\n    mesh.object_id = layer_name;\n    mesh.mesh_type = mesh_type;\n    mesh.floor_index = floor_index;\n    mesh.visible = mesh_visible;\n    mesh.position.z = z_index;\n\n    let storeName: string | null = '';\n\n    if (['retail_logo', 'retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n      if (allIndexedMapObjects[layer_name].layer_type && ['retail_name', 'retail_logo'].includes(allIndexedMapObjects[layer_name].layer_type) && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name]?.retailer_id || 0]) {\n        storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id as number].retail_name;\n      } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n        storeName = allIndexedMapObjects[layer_name].custom_text;\n        if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id as number]) {\n          storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id as number].retail_name;\n        }\n      } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n        storeName = allIndexedMapObjects[layer_name].value;\n        if (storeName) {\n          const amenity = AllAmenities.find(item => item.type === storeName)\n          if (amenity) {\n            storeName = amenity.name;\n          }\n        }\n      }\n    }\n    mesh.userData.storeName = storeName;\n    if (mapConfig.STYLE === '2D') {\n      mesh.renderOrder = getRenderOrder(mesh_type);\n      if (layer_name && layer_name.includes('underlay')) {\n        mesh.renderOrder = getRenderOrder('underlay');\n      }\n    }\n\n    floorsData[floor_index].objsGroup.add(mesh);\n\n    if (mesh_type === 'escalator') {\n      floorsData[floor_index].escalatorsNodes[layer_name] = null;\n      floorsData[floor_index].escalatorsObjs.push(mesh);\n      mesh.escalator_id = floor_index + '-' + layer_name;\n    }\n\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n      //@ts-ignore\n      mesh.route_node_id = null;\n\n      // add floor_index to the kiosks\n      if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'kiosk') {\n        // var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n        /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n            ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n        }*/\n      }\n\n      allMapObjects.push(layer_name);\n\n      if (\n        (mapConfig.ROLE !== 'PORTAL' && mesh_type === 'kiosk') ||\n        (mapConfig.ROLE !== 'PORTAL' && mapConfig.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n        (mapConfig.ROLE !== 'PORTAL' && mapConfig.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'custom' && allIndexedMapObjects[layer_name].custom_text !== \"\") ||\n        (mapConfig.ROLE !== 'PORTAL' && mapConfig.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'amenity' && allIndexedMapObjects[layer_name].value !== null) ||\n        (mapConfig.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n        (mapConfig.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type ?? ''))\n      ) {\n        floorsData[floor_index].interactiveObjs.push(mesh);\n      } else if (mapConfig.ROLE === 'PORTAL') {\n        floorsData[floor_index].interactiveObjs.push(mesh);\n      }\n    }\n\n    return {\n      mesh,\n      geometry,\n      material,\n      object_id: layer_name,\n      mesh_type,\n      floor_index,\n      visible: mesh_visible,\n      renderOrder: mesh.renderOrder,\n    }\n\n  }, [allIndexedMapObjects, allIndexedRetailers, allMapObjects, floorsData, getGeometry, getMaterial, getRenderOrder, mapConfig.ROLE, mapConfig.STYLE])\n\n  return {\n    getRenderOrder,\n    getMaterial,\n    getGeometry,\n    getMaterialAndGeometry\n  }\n}\n\nexport default useMaterialAndGeometry;","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import { Graph, Link, Node } from \"ngraph.graph\";\nimport { PathFinder } from \"ngraph.path\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { IExtMesh } from \"src/interfaces\";\nimport { AppFloor } from \"src/interfaces/mapbox\";\nimport { BufferGeometry, CanvasTexture, CurvePath, DoubleSide, LineCurve3, Mesh, MeshBasicMaterial, Object3D, Raycaster, Scene, TubeGeometry, Vector3 } from \"three\";\nimport useMaterialAndGeometry from \"./useMaterialAndGeometry\";\nimport { useCallback } from \"react\";\n\nconst consolePrefix = 'ROUTE: ';\nconst FLOOR_CHANGE_PENALTY = 10000;\n\ninterface IelevatorNodeInfo {\n  node: any;\n  escalatorId: string;\n  isExitOnly: boolean;\n  isEntranceOnly: boolean;\n  upOnly: boolean;\n  downOnly: boolean;\n  direction: string;\n  floorsTo: number[];\n}\n\nconst useRouteHelper = () => {\n  const { floorsData, allNodesFloor, ngraphPath, pathFinderGraph, allIndexedMapObjects } = useMapBoxContext();\n  const { getRenderOrder } = useMaterialAndGeometry();\n\n  const getDistance = useCallback((fromNode: Node<any>, toNode: Node<any>, link: Link<any>) => {\n    if (!link.data) return false;\n\n    let weight = link.data.weight;\n\n    // Add additional penalty if changing floors\n    const fromFloor = allNodesFloor[fromNode.id];\n    const toFloor = allNodesFloor[toNode.id];\n\n    if (fromFloor !== toFloor) {\n      // when changing floor give a penalty to avoid taking escalator when not needed\n      // also give an additional small penalty based on the floor difference, to avoid considering switching 6 floors is the same as 2 floors\n      return weight + FLOOR_CHANGE_PENALTY + Math.abs(fromFloor - toFloor)\n    }\n\n    return weight;\n  }, [allNodesFloor])\n\n  const delete_route_path = useCallback((floors: AppFloor[]) => {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n      const floor = floors[floor_index];\n      floor.route_active = false;\n\n      if (floor.route_tube != null) {\n        floor.route_tube.geometry.dispose();\n        //@ts-ignore\n        floor.route_tube.material.dispose();\n        floor.objsGroup?.remove(floor.route_tube);\n      }\n\n      floor.route_tube = undefined;\n      floor.route_texture = null;\n      floor.escalatorMeshes = [];\n    }\n  }, [])\n\n  const get_route_nodes = useCallback((from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) => {\n    let routeNodes = aStarPathFinder.find(from_node_name, to_node_name);\n    if (routeNodes.length === 0) return false;\n    return routeNodes;\n  }, [])\n\n  const get_route_texture = useCallback((distance: number, floor_index: number, floors: AppFloor[]) => {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n      ctx.canvas.width = distance;\n      ctx.canvas.height = 80;\n\n      ctx.fillStyle = \"#4ea5ff\";\n      ctx.fillRect(0, 0, distance, 80);\n\n      let grd_width = 0.1 * distance;\n      const min_grd_width = 60;\n      const max_grd_width = 120;\n      if (grd_width < min_grd_width) grd_width = min_grd_width;\n      if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n      let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n      grd.addColorStop(0, \"#4ea5ff\");\n      grd.addColorStop(0.4, \"white\");\n      grd.addColorStop(0.6, \"white\");\n      grd.addColorStop(1, \"#4ea5ff\");\n\n      ctx.fillStyle = grd;\n      ctx.fillRect(10, 0, grd_width, 80);\n\n      let route_texture = new CanvasTexture(ctx.canvas);\n      route_texture.offset.x = 1;\n      route_texture.colorSpace = 'srgb';\n\n      floors[floor_index].route_texture = route_texture;\n\n      return route_texture;\n    } else {\n      return undefined;\n    }\n  }, [])\n\n  const create_route_path = useCallback((routeNodes: Node<any>[], floor_index: number, floors: AppFloor[], style = '2D') => {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n      let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n      let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n      route_path.add(new LineCurve3(from_node, to_node));\n      distance += from_node.distanceTo(to_node);\n    };\n    var geometry: BufferGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n      map: get_route_texture(distance, floor_index, floors),\n      transparent: true,\n      side: DoubleSide,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style === '2D') {\n      route_tube.position.z = -10;\n      route_tube.scale.z = 0.1;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    if (route_tube.geometry.index !== null) {\n      route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    } else {\n      console.warn('route_tube.geometry.index is null');\n    }\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n  }, [getRenderOrder, get_route_texture])\n\n  const create_route_paths = useCallback((from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[], floors: AppFloor[], pathFinderGraph: Graph, style: string, routeCallback = null) => {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.nba(pathFinderGraph, {\n      distance: getDistance,\n      oriented: true,\n      blocked(fromNode, toNode, link) {\n        return link.data.blocked;\n      },\n      //@ts-ignore\n      debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n      return [];\n    }\n    // reorder in opposite order because aStarPathFinder.find returns path from the destination to the start\n    routeNodes.reverse()\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n      const routeNode = routeNodes[index];\n      if (floor_routes[allNodesFloor[routeNode.id]]) {\n        floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n      } else {\n        floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n      }\n\n      if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n        // don't consider these middle escalators nodes\n        routeNodesEsclators.push(routeNode);\n      } else {\n        routeNodesEsclators.push(routeNode);\n      }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n      const routeNode = routeNodesEsclators[index];\n      if (\n        allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n        && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n      ) {\n        const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n        const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n\n        let goToFloor = null;\n\n        if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n          goToFloor = {\n            index: allNodesFloor[routeNodesEsclators[index + 1].id],\n            direction: 'To',\n          };\n        }\n\n        if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n          goToFloor = {\n            index: allNodesFloor[routeNodesEsclators[index - 1].id],\n            direction: 'From',\n          };\n        }\n\n\n        if (goToFloor && escalator_mesh) {\n          escalator_mesh.goToFloor = goToFloor;\n          const escalator_clone = escalator_mesh.clone();\n          escalator_clone.goToFloor = goToFloor;\n          escalator_clone.object_id = escalator_id\n          //@ts-ignore\n          floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_clone);\n        }\n      }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n      const floor_route = floor_routes[floor_index];\n      if (floor_route && floor_route.length > 1) {\n        const routePath = create_route_path(floor_route, floor_index, floors, style);\n        routePaths[floor_index] = routePath;\n\n        floors[floor_index].route_active = true;\n        floors[floor_index].routeMeshes = [routePath];\n        if (floor_index === from_route_floor_index) {\n          //@ts-ignore\n          floors[floor_index]?.routeMeshes?.push(from_obj);\n        }\n        if (floor_index === to_route_floor_index) {\n          //@ts-ignore\n          floors[floor_index]?.routeMeshes?.push(to_obj);\n\n        }\n      }\n    }\n\n    return routePaths;\n  }, [create_route_path, get_route_nodes, ngraphPath, delete_route_path, getDistance])\n\n  const create_route = useCallback((allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: AppFloor[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): {\n    routePaths: Mesh[],\n    fromFloor?: number\n  } => {\n    if (from_mesh_object_id === to_mesh_object_id) {\n      return {\n        routePaths: [],\n        fromFloor: undefined\n      };\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    return {\n      routePaths,\n      fromFloor: from_obj.floor_index\n    };\n  }, [create_route_paths])\n\n\n\n  //TODO\n  const get_nodes_distance = useCallback((from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) => {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length === 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n      let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n      distance += link?.data.weight || 0;\n    };\n    return distance;\n  }, [])\n\n  const linkFloorEscalators = useCallback(() => {\n    if (floorsData.length > 1) {\n      const escalatorsByFloors: { [k: string]: IelevatorNodeInfo }[] = []\n      const escalatorIdsByFloors: string[][] = []\n      for (let i = 0; i < floorsData.length; i++) {\n        escalatorIdsByFloors[i] = []\n        if (!floorsData[i].escalatorsNodes) continue\n        escalatorsByFloors[i] = Object.fromEntries(\n          Object.entries(floorsData[i].escalatorsNodes).map(([elevatorString, value]) => {\n            const splitResult = elevatorString.split('-')\n            // Keep only first two parts of the elevatorString (escalator-N-xx-xx)\n            const escalatorId = splitResult.slice(0, 2).join('-');\n\n            const isExitOnly = splitResult.includes('end')\n            const isEntranceOnly = splitResult.includes('start')\n            // if there is at least 3 split and the last is a number\n            const upOnly = splitResult.includes('up')\n            const downOnly = splitResult.includes('down')\n            const direction = upOnly ? 'up' : downOnly ? 'down' : 'both'\n            escalatorIdsByFloors[i].push(escalatorId)\n\n            return [escalatorId, {\n              node: value,\n              escalatorId,\n              isExitOnly,\n              isEntranceOnly,\n              upOnly,\n              downOnly,\n              direction,\n              floorsTo: []\n            }];\n          })\n        );\n      }\n\n      for (let i = 0; i < floorsData.length; i++) {\n        for (let j = 0; j < escalatorIdsByFloors[i].length; j++) {\n          const fromEscalatorId = escalatorIdsByFloors[i][j]\n          const fromEscalator = escalatorsByFloors[i][fromEscalatorId]\n\n          for (let floor = i + 1; floor < floorsData.length; floor++) {\n            for (let k = 0; k < escalatorIdsByFloors[floor].length; k++) {\n              const toEscalatorId = escalatorIdsByFloors[floor][k]\n              if (fromEscalatorId === toEscalatorId) {\n                fromEscalator.floorsTo.push(floor)\n              }\n            }\n          }\n        }\n      }\n      for (let i = 0; i < (floorsData.length - 1); i++) {\n        const floor_escalators = escalatorsByFloors[i];\n        for (const escalatorId in floor_escalators) {\n          const nodeIdFromDetails = floor_escalators[escalatorId];\n          const nodeIdFrom = nodeIdFromDetails.node\n\n          nodeIdFromDetails.floorsTo.forEach((floorTo) => {\n            const nodeIdToDetails = escalatorsByFloors[floorTo][escalatorId]\n            const nodeIdTo = nodeIdToDetails.node\n            if (nodeIdTo) {\n              if (nodeIdFromDetails.isExitOnly) {\n                // end of escalator, can't enter\n                // add the opposite direction only\n                pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { blocked: true });\n                pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n              } else if (nodeIdFromDetails.isEntranceOnly) {\n                pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { blocked: true });\n                pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n              } else {\n                pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n              }\n            }\n          })\n        }\n      }\n    }\n  }, [floorsData, pathFinderGraph])\n\n  const make_amenity_route = useCallback((kiosk_obj_name: string, amenity_type: string, scene: Scene, escalator_nodes: string[], style: string): {\n    routePaths: Mesh[],\n    fromFloor?: number\n  } => {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    let kiosk_node_name = kiosk_obj ? kiosk_obj.route_node_id : '';\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    const map_objs: string[] = [];\n    for (let key in allIndexedMapObjects) {\n      const mapObject = allIndexedMapObjects[key];\n      if (\n        mapObject.layer_type === 'amenity'\n        && mapObject.obj_type === 'special'\n        && mapObject.value === amenity_type\n      ) {\n        map_objs.push(key);\n      }\n    }\n    map_objs.forEach((amenity_obj_name: string) => {\n      let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n      const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: getDistance,\n        //@ts-ignore\n        debug: true,\n      });\n\n      if (amenity_obj && kiosk_node_name) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n          var route_distance = get_nodes_distance(kiosk_node_name || '', amenity_node_name || '', aStarPathFinder, pathFinderGraph);\n          if (route_distance && route_distance < shortest_distance) {\n            shortest_distance = route_distance;\n            to_obj_name = amenity_obj_name;\n          }\n        } catch (e: any) {\n          console.warn(`Amenity Path: ${e.message}`);\n        }\n      }\n      if (!kiosk_node_name && amenity_obj) {\n        to_obj_name = amenity_node_name;\n      }\n    });\n    return create_route(allNodesFloor, kiosk_obj_name, to_obj_name ?? '', scene, floorsData, escalator_nodes, pathFinderGraph, style);\n  }, [allIndexedMapObjects, allNodesFloor, create_route, floorsData, get_nodes_distance, ngraphPath, pathFinderGraph, getDistance])\n\n  const assign_route_nodes_to_stores = useCallback((floor_index: number, escalator_nodes: string[], find_store_node_raycaster: Raycaster) => {\n    const result = new Map();\n    const currentFloor = floorsData[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n      currentFloor.route_points.forEach(point => {\n        let origin_point = new Vector3(point.node.x, point.node.y, -10);\n        let target_direction = new Vector3(0, 0, 1);\n        find_store_node_raycaster.set(origin_point, target_direction);\n        var storeIntersects = find_store_node_raycaster.intersectObjects(floorsData[floor_index].interactiveObjs);\n        if (storeIntersects.length) {\n          //@ts-ignore\n          storeIntersects[0].object.route_node_id = point.name;\n          //@ts-ignore\n          result.set(storeIntersects[0].object.object_id, point.name);\n          // angrej check and remove this if not needed\n          // if (false && mapConfig.ROLE !== 'PORTAL') {\n          //   //@ts-ignore\n          //   var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n          //   if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n          //     // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n          //   }\n          // }\n        }\n\n        var escalatorIntersects = find_store_node_raycaster.intersectObjects(floorsData[floor_index].escalatorsObjs as Object3D[]);\n        if (escalatorIntersects.length) {\n          const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n          let escalator_obj_id = obj.object_id;\n          const escalatorNodes = floorsData[floor_index].escalatorsNodes;\n          if (escalatorNodes) {\n            escalatorNodes[escalator_obj_id as string] = point.name;\n            allNodesFloor[point.name] = floor_index;\n            escalator_nodes.push(point.name);\n          }\n        }\n      });\n    }\n    return result;\n  }, [allNodesFloor, floorsData])\n\n  return {\n    delete_route_path,\n    create_route,\n    create_route_paths,\n    create_route_path,\n    get_route_nodes,\n    get_nodes_distance,\n    get_route_texture,\n    linkFloorEscalators,\n    make_amenity_route,\n    assign_route_nodes_to_stores\n  }\n}\n\nexport default useRouteHelper;","import { AppFloor } from \"src/interfaces/mapbox\";\nimport type { Vector2 } from \"three\";\n\nexport function next_node_name(node_count: number) {\n  return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: AppFloor[], node_count: number): [string, boolean] {\n  let exists = false;\n  let node_name: string = '-name-not-found-';\n  const currentFloor = floors[floor_index];\n  if (currentFloor.route_points !== undefined) {\n    for (let i = 0; i < currentFloor.route_points.length; i++) {\n      if (vertex.x === currentFloor.route_points[i].node.x && vertex.y === currentFloor.route_points[i].node.y) {\n        exists = true;\n        node_name = currentFloor.route_points[i].name;\n        break;\n      }\n    }\n    if (!exists) {\n      node_name = next_node_name(node_count);\n      // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n  }\n  return [node_name, exists];\n}","import { SVGResult } from \"three-stdlib\";\nimport { IMeshValues } from \"src/interfaces\";\nimport { Raycaster } from \"three\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport useRouteHelper from \"./useRouteHelper\";\nimport useMaterialAndGeometry from \"./useMaterialAndGeometry\";\nimport { useMeshParams } from \"./useMeshParams\";\nimport { useMemo } from \"react\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nconst useLoadFloors = (svgFloors: SVGResult[]): any => {\n  const { mapConfig, pathFinderGraph } = useMapBoxContext();\n  const { getMaterialAndGeometry } = useMaterialAndGeometry();\n  const { getMeshParams } = useMeshParams();\n  const { assign_route_nodes_to_stores, linkFloorEscalators } = useRouteHelper();\n\n  const [GeometriesAndMaterials, escalator_nodes, allSvgObjectIds] = useMemo(() => {\n\n    const allSvgObjectIds: Set<string> = new Set();\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n    const escalator_nodes: string[] = [];\n\n    svgFloors.forEach((svgFloor, floor_index) => {\n      if (svgFloor.paths && svgFloor.paths.length) {\n        const pathIds = [];\n        for (let i = 0; i < svgFloor.paths.length; i++) {\n          pathIds.push(svgFloor.paths[i]?.userData?.node.id);\n        }\n        const paths = svgFloor.paths;\n        for (let i = 0; i < paths.length; i++) {\n          const {\n            mesh_type,\n            layer_color,\n            extrude,\n            z_index,\n            mesh_visible,\n            mesh_draw,\n            mesh_transparent,\n            line_thickness,\n            path,\n            layer_name,\n          } = getMeshParams(\n            paths[i],\n            paths,\n            floor_index,\n            ++node_count,\n          );\n\n          if (mesh_draw) {\n            const meshParams = getMaterialAndGeometry(\n              mesh_type,\n              layer_name,\n              layer_color,\n              mesh_transparent,\n              mesh_visible,\n              z_index,\n              extrude,\n              line_thickness,\n              floor_index,\n              path\n            );\n\n            if (layer_name.startsWith('kiosk-')) {\n              if (mapConfig.ROLE === 'PORTAL') {\n                // meshParams.mesh.visible = false;\n                //@ts-ignore\n                // meshParams.mesh.material.visible = false;\n              }\n            }\n\n            if (!GeometriesAndMaterials[floor_index]) {\n              GeometriesAndMaterials[floor_index] = [];\n            }\n\n            GeometriesAndMaterials[floor_index].push(meshParams);\n          }\n        }\n        const findStoreNodeRaycaster = new Raycaster();\n        const routeNodeIds = assign_route_nodes_to_stores(\n          floor_index,\n          escalator_nodes,\n          findStoreNodeRaycaster\n        );\n\n        if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n          for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n            if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n              GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n            }\n          }\n        }\n\n        linkFloorEscalators();\n      }\n    })\n\n    for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n      const floorGeometries = GeometriesAndMaterials[i];\n      for (let j = 0; j < floorGeometries.length; j++) {\n        allSvgObjectIds.add(floorGeometries[j].object_id);\n      }\n    }\n\n    return [GeometriesAndMaterials, escalator_nodes, allSvgObjectIds]\n\n  }, [assign_route_nodes_to_stores, getMaterialAndGeometry, getMeshParams, linkFloorEscalators, mapConfig.ROLE, svgFloors]);\n  // }, [assign_route_nodes_to_stores, getMaterialAndGeometry, getMeshParams, linkFloorEscalators, mapConfig.ROLE, svgFloors]);\n\n  return {\n    GeometriesAndMaterials,\n    graph: pathFinderGraph,\n    escalator_nodes,\n    allSvgObjectIds\n  }\n}\n\nexport default useLoadFloors;","import { DoubleSide, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3 } from \"three\";\nimport type { Color, Object3D, Scene } from \"three\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh } from \"../../interfaces\";\nimport { hex_to_color } from \"../../helpers/misc.helper\";\nimport { MapObjData, MapRetailer } from \"src/interfaces/mapApiTypes\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport useMaterialAndGeometry from \"./useMaterialAndGeometry\";\nimport { useCallback } from \"react\";\nimport { MapImageQuality } from \"src/defaults\";\n\nconst useDrawLogoHelper = () => {\n\n  const { allIndexedRetailers, allIndexedMapObjects, floorsData, mapConfig } = useMapBoxContext();\n  const { getRenderOrder } = useMaterialAndGeometry();\n\n  const drawTextLogoStoreOnMap = (allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObjData>, allIndexedRetailers: Record<string, MapRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) => {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n      addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n  }\n\n  const addTextOrLogoOnStore = (map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObjData>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) => {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n      //@ts-ignore\n      add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n  }\n\n  const getMeshGroupBoundingBox = (mesh: Mesh | Array<Mesh>) => {\n    if (!Array.isArray(mesh)) {\n      mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n      if (!obj.geometry.boundingBox) {\n        obj.geometry.computeBoundingBox();\n      }\n      //@ts-ignore\n      box.union(obj.geometry.boundingBox);\n      return box;\n    }, new Box3());\n    return box;\n  }\n\n  const layer_text_logo_position_by_id = (object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) => {\n    let map_obj = allIndexedMapObjects[object_id] as MapObjData | undefined;\n\n    newMeshPos.z = -mesh_size.z;\n\n    newMesh.rotateZ((map_obj?.rotate || 0) * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += (map_obj?.offset_x || 0);\n    newMeshPos.y += (map_obj?.offset_y || 0);\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n  }\n\n  const getBlobUrlFromImageUrl = async (imageUrl: string): Promise<string> => {\n    try {\n      // Fetch the image data from the URL\n      const response = await fetch(imageUrl);\n\n      // Ensure the request is successful\n      if (!response.ok) {\n        throw new Error(`Failed to fetch image: ${response.statusText}`);\n      }\n\n      // Convert the image data into a Blob\n      const blob = await response.blob();\n\n      // Create a blob URL from the Blob object\n      const blobUrl = URL.createObjectURL(blob);\n\n      // Return the blob URL\n      return blobUrl;\n    } catch (error) {\n      console.error('Error fetching or converting the image:', error);\n      return '';\n    }\n  };\n\n  const getImage = (map_obj: Record<string, any>, retailer?: MapRetailer): Promise<string> => {\n    return new Promise<string>((resolve, reject) => {\n      if (map_obj.obj_type === 'retailer') {\n        if (retailer) {\n          getBlobUrlFromImageUrl(retailer.logo)\n            .then((url) => {\n              resolve(url);\n            })\n        } else {\n          console.error('retailer not found');\n          resolve('');\n        }\n      } else if (map_obj.obj_type === 'special') {\n        let svg_image_name = map_obj.value;\n        if (map_obj.layer_type === 'kiosk') svg_image_name = 'kiosk';\n        if (map_obj.layer_type === 'escalator') svg_image_name = 'escalator';\n        if (svg_image_name) {\n          let svg_color = '222222';\n          if (map_obj.text_color != null) {\n            svg_color = map_obj.text_color.replace('#', '');\n          }\n\n          const svg_block = document.getElementById('map-special-svg-' + svg_image_name);\n          if (svg_block) {\n            const svg_element = svg_block.querySelector(\"svg\");\n            if (svg_element) {\n              const clonedSvgElement = svg_element.cloneNode(true) as SVGElement;\n              const svgColoredParts = clonedSvgElement.querySelectorAll('[fill]');\n              svgColoredParts.forEach((svgColoredPart) => {\n                svgColoredPart.setAttribute('fill', '#' + svg_color);\n              })\n\n              const svgData = (new XMLSerializer()).serializeToString(clonedSvgElement);\n              const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n              const svgUrl = URL.createObjectURL(svgBlob);\n              resolve(svgUrl);\n              // img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n            } else {\n              console.error('svg_element not found', svg_image_name);\n              resolve('');\n            }\n          } else {\n            console.error('svg_block not found', svg_image_name);\n            resolve('');\n          }\n        }\n      } else {\n        if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n          resolve(map_obj.custom_image);\n        } else {\n          console.error('custom_image URL not found');\n          resolve('');\n        }\n      }\n    });\n  }\n\n  const processImage = (imgUrl: string, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    const img = document.createElement('img');\n\n    img.crossOrigin = 'anonymous';\n    img.src = imgUrl;\n    img.onload = function () {\n      const previewContainer = document.getElementById('temp-image-rendering');\n      if (previewContainer) {\n        img.style.height = '100px';\n        previewContainer.appendChild(img);\n\n        setTimeout(() => {\n          // console.log('images-icons loaded in map', imgUrl, img.clientWidth, img.clientHeight, img);\n\n          const canvas = document.createElement(\"canvas\");\n          const ctx = canvas.getContext(\"2d\");\n\n          if (ctx) {\n            canvas.width = img.width * MapImageQuality;\n            canvas.height = img.height * MapImageQuality;\n\n            // ctx.fillStyle = '#FF0000';\n            // ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            ctx?.drawImage(img, 0, 0, canvas.width, canvas.height);\n\n            let texture = new CanvasTexture(canvas);\n            texture.colorSpace = 'srgb'\n\n            const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n            const material = new MeshBasicMaterial({\n              map: texture,\n              transparent: true,\n              side: DoubleSide,\n              depthTest: false,\n              depthWrite: false,\n            });\n\n            if (map_obj.layer_type === 'kiosk') {\n              material.visible = false;\n            }\n\n            afterOnload(geometry, material);\n          }\n        }, 100);\n      }\n    };\n\n    img.onerror = function () {\n      console.error('processImage():: Error loading image:', imgUrl);\n    };\n  }\n\n  const getImageLogo = useCallback((\n    allIndexedMapObjects: Record<string, MapObjData>,\n    allIndexedRetailers: Record<string, any>,\n    map_obj: Record<string, any>,\n    mesh: BufferGeometry,\n    object_id: string,\n    new_object_id: string | null,\n    mesh_center_point: Vector3,\n    mesh_size: Vector3,\n    floors: any,\n    handleAsync: (meshLogo: { storeLogo: Object3D }) => void\n  ): void => {\n    getImage(map_obj, allIndexedRetailers[map_obj.retailer_id])\n      .then((imgUrl) => {\n        if (imgUrl) {\n          processImage(imgUrl, map_obj, (geometry, material) => {\n            const logoMesh = new Mesh(geometry, material) as IExtMesh;\n            // @ts-ignore\n            const floor_index = mesh.floor_index;\n            layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n            logoMesh.object_id = new_object_id;\n            logoMesh.floor_index = floor_index;\n            logoMesh.renderOrder = getRenderOrder('layer-image');\n            floors[floor_index]?.objsGroup.add(logoMesh);\n            handleAsync({ storeLogo: logoMesh });\n          });\n        }\n      });\n\n  }, [getRenderOrder])\n\n  const get_store_name_logo_geometry = useCallback((\n    geometry: BufferGeometry,\n    object_id: string,\n    floor_index: number,\n    textLogoNamePrefix: string,\n    myFont: any,\n    handleAsync: (meshLogo: any) => void\n  ): { textMesh: IExtMesh } | null | false => {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n      geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n      return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    let map_obj: MapObj = allIndexedMapObjects[object_id] ? allIndexedMapObjects[object_id] : { layer_type: object_id.startsWith('escalator') ? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8 };\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n      let text = '';\n      if (map_obj.layer_type === 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n        text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n      } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        text = map_obj.custom_text;\n      } else {\n        text = '';\n      }\n\n      let text_color: Color = mapConfig.STORE_TEXT_COLOR;\n      if (map_obj.text_color) {\n        text_color = hex_to_color(map_obj.text_color);\n      }\n\n      const material_settings = {\n        color: text_color,\n        transparent: false,\n        side: DoubleSide,\n        depthWrite: false,\n        depthTest: false,\n      };\n      let text_material = new MeshBasicMaterial(material_settings);\n      let text_geometry = new TextGeometry(text, {\n        font: myFont,\n        size: parseInt(map_obj.size),\n        height: 0.01,\n        curveSegments: 4,\n      });\n      text_geometry.center();\n\n      const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n      textMesh.userData.debug_name = text;\n      textMesh.userData.font = myFont;\n      layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n      textMesh.object_id = new_object_id;\n      textMesh.floor_index = floor_index;\n      textMesh.renderOrder = getRenderOrder('layer-text');\n      if (map_obj.layer_type === 'retail_name') {\n        textMesh.userData.retail_name = text;\n      }\n\n      floorsData[floor_index].objsGroup.add(textMesh);\n      result = { textMesh };\n    } else if (\n      map_obj.layer_type === 'retail_logo'\n      || map_obj.layer_type === 'custom_image'\n      || (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id != null)\n      || (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n      || (map_obj.layer_type === 'escalator')\n    ) {\n      getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floorsData, handleAsync);\n    }\n    return result;\n  }, [allIndexedMapObjects, allIndexedRetailers, floorsData, getImageLogo, getRenderOrder, mapConfig.STORE_TEXT_COLOR])\n\n  return {\n    drawTextLogoStoreOnMap,\n    addTextOrLogoOnStore,\n    getMeshGroupBoundingBox,\n    layer_text_logo_position_by_id,\n    getImage,\n    processImage,\n    getImageLogo,\n    get_store_name_logo_geometry\n  }\n}\n\nexport default useDrawLogoHelper;","import { Mesh } from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport fontData from './Montserrat_Regular.typeface.json'\nimport type { IExtMesh, IMeshValues, MeshFloorsProps } from \"../../interfaces\";\nimport { textLogoNamePrefix } from \"../../defaults\";\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { MapObjData } from \"src/interfaces/mapApiTypes\";\nimport { SVGResult } from \"three-stdlib\";\nimport useLoadFloors from \"./useLoadFloors\";\nimport useDrawLogoHelper from \"./useDrawLogoHelper\";\n\nlet allNonIndexedMapObjects: MapObjData[] = [];\n\nconst useMeshFloors = (): MeshFloorsProps => {\n  const { mapConfig, initialFloorsDataIsLoaded, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph, mapApiResponse } = useMapBoxContext();\n\n  const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n  const [textParams, setTextParams] = useState<Array<{ textMesh: IExtMesh }[]>>([]);\n  const [storeLogos, setStoreLogos] = useState<{ storeLogo: Mesh }[][]>([]);\n  const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n\n  let loadedFloors: SVGResult[] = useLoader(SVGLoader, mapApiResponse.floors.map(floor => floor.svgUrl)) as SVGResult[];\n  const { GeometriesAndMaterials, graph, escalator_nodes, allSvgObjectIds } = useLoadFloors(loadedFloors);\n\n  const { get_store_name_logo_geometry } = useDrawLogoHelper();\n\n  const myFont = useFont(fontData as unknown as FontData);\n\n  const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: { storeLogo: Mesh }) => {\n    setStoreLogos((prevLogos) => {\n      if (prevLogos[floorIndex]) {\n        prevLogos[floorIndex].push({ ...meshLogo });\n      } else {\n        prevLogos[floorIndex] = [{ ...meshLogo }];\n      }\n      return [...prevLogos];\n    });\n  }), [])\n\n  const clearScene = useCallback(() => {\n    setMeshParams((meshParams) => {\n      if (meshParams) {\n        meshParams.forEach(floor => {\n          if (floor) {\n            floor.forEach(value => {\n              value.mesh.removeFromParent();\n            })\n          }\n        })\n      }\n      return []\n    });\n    setTextParams((textParams) => {\n      if (textParams) {\n        textParams.forEach(floor => {\n          if (floor) {\n            floor.forEach(value => {\n              value.textMesh.removeFromParent();\n            })\n          }\n        })\n      }\n      return []\n    });\n    setStoreLogos(storeLogos => {\n      if (storeLogos) {\n        storeLogos.forEach(floor => {\n          if (floor) {\n            floor.forEach(value => {\n              value.storeLogo.removeFromParent();\n            })\n          }\n        })\n      }\n      return []\n    });\n  }, [])\n\n  useEffect(() => {\n    if (initialFloorsDataIsLoaded && mapConfig.ROLE === 'PORTAL') {\n      return () => {\n        // triggered when we change the apiServices (apiBaseUrl, mapConfig.CENTER_ID)\n        clearScene();\n      }\n    }\n  }, [clearScene, initialFloorsDataIsLoaded])\n\n  useEffect(() => {\n    return () => {\n      clearScene();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!myFont || !loadedFloors) return;\n\n    const TextsAndLogos: Array<{ textMesh: IExtMesh }[]> = [];\n    allNonIndexedMapObjects.forEach((params) => {\n      let values: IMeshValues | undefined;\n      for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n        //@ts-ignore\n        values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n        if (values !== undefined) {\n          break;\n        }\n      }\n      if (!values) return null;\n      const textParams = get_store_name_logo_geometry(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, myFont, handleAsyncStoreLogos(values.floor_index));\n      if (textParams) {\n        if (!TextsAndLogos[values.floor_index]) {\n          TextsAndLogos[values.floor_index] = [];\n        }\n        TextsAndLogos[values.floor_index].push(textParams);\n      }\n    });\n\n    const GAMCount = GeometriesAndMaterials.reduce((acc: number, item: IMeshValues[]) => {\n      return (acc + item.length);\n    }, 0);\n    const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n    if (countNonIndexedObjs !== 0) {\n      const mapObjNames = new Set<string>();\n      allNonIndexedMapObjects.forEach((item) => {\n        mapObjNames.add(item.map_obj_name);\n      });\n      GeometriesAndMaterials.forEach((items: IMeshValues[]) => {\n        items.forEach(item => {\n          if (!mapObjNames.has(item.object_id)) {\n            const textParams = get_store_name_logo_geometry(\n              item.geometry,\n              item.object_id,\n              item.floor_index,\n              textLogoNamePrefix,\n              myFont,\n              handleAsyncStoreLogos(item.floor_index)\n            );\n            if (textParams) {\n              if (!TextsAndLogos[item.floor_index]) {\n                TextsAndLogos[item.floor_index] = [];\n              }\n              TextsAndLogos[item.floor_index].push(textParams);\n            }\n          }\n        })\n      });\n    }\n    setMeshParams([...GeometriesAndMaterials]);\n    setTextParams(TextsAndLogos);\n    setPathFinderGraph(graph);\n    setEscalatorNodes([...escalator_nodes]);\n\n  }, [loadedFloors, myFont, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, mapConfig, setPathFinderGraph, handleAsyncStoreLogos, GeometriesAndMaterials, get_store_name_logo_geometry, graph, escalator_nodes]);\n\n  return useMemo(() => {\n    return {\n      meshParams: meshParams,\n      textParams,\n      storeLogos,\n      pathFinderGraph,\n      escalator_nodes: escalatorNodes,\n      allSvgObjectIds\n    }\n  }, [meshParams, textParams, storeLogos, pathFinderGraph, escalatorNodes, allSvgObjectIds])\n}\n\nexport default useMeshFloors;","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import { useThree } from \"@react-three/fiber\";\nimport { PerspectiveCamera, Vector3 } from \"three\";\n\ninterface CameraPropertiesProps {\n  far?: number;\n  near?: number;\n  fov?: number;\n  aspectRatio?: number;\n  position?: Vector3;\n}\n\nexport const CameraProperties = (props: CameraPropertiesProps) => {\n  const { camera } = useThree();\n\n  const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n  if (props.far) {\n    camera.far = props.far;\n  }\n  if (props.near) {\n    camera.near = props.near;\n  }\n\n  if (camera instanceof PerspectiveCamera) {\n    if (props.fov) {\n      camera.fov = props.fov;\n    }\n  }\n\n  if (cameraProjectionNeedsUpdate) {\n    camera.updateProjectionMatrix();\n  }\n\n  return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, { useEffect, useRef } from \"react\";\nimport type { Mesh } from \"three\";\nimport { easeInOutCubic } from \"../../helpers/easing.helper\";\nimport { MeshBasicMaterial } from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n  mesh?: Mesh;\n}\n\nexport function RouteTube({ mesh }: IRouteTubeProps) {\n  const animateRoute = useRef<Function | null>(null);\n\n  useEffect(() => {\n    if (!mesh) {\n      return;\n    }\n\n    if (!mesh.geometry.index?.count) {\n      console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n      return;\n    }\n\n    if (!(mesh.material instanceof MeshBasicMaterial)) {\n      return;\n    }\n    if (!mesh.material.map) {\n      console.log('NO ROUTE TEXTURE');\n      return;\n    }\n\n    mesh.geometry.setDrawRange(0, 0);\n\n    const end = mesh.geometry.index.count;\n    const animateTube = (\n      () => {\n        const length = 1000;\n        const startTime = performance.now();\n        return () => {\n          const progress = (performance.now() - startTime) / length;\n          const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n          if (progress >= 1) {\n            animateRoute.current = animateTexture;\n          }\n\n          mesh.geometry.setDrawRange(0, drawRangeEnd);\n        }\n      }\n    )();\n\n    const animateTexture = (() => {\n      if (!(mesh.material instanceof MeshBasicMaterial)) {\n        return null;\n      }\n      if (!mesh.material.map) {\n        return null;\n      }\n      const offsetVector = mesh.material.map.offset;\n      const length = 2000;\n      const progressStart = 0.1;\n      const progressLength = 1 + progressStart;\n      const startTime = performance.now();\n      return () => {\n        const progress = (performance.now() - startTime) / length % 1;\n        offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n      }\n    })();\n\n    animateRoute.current = animateTube;\n\n    return () => {\n      animateRoute.current = null;\n      mesh.removeFromParent();\n      if (mesh.material instanceof MeshBasicMaterial) {\n        mesh.material.dispose();\n      }\n      if (mesh.geometry) {\n        mesh.geometry.dispose();\n      }\n    }\n\n  }, [mesh]);\n\n  useFrame(() => {\n    if (animateRoute.current) {\n      try {\n        animateRoute.current();\n      } catch (e: any) {\n        console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n        animateRoute.current = null;\n      }\n    }\n  });\n\n  if (!mesh) return null;\n  return <primitive object={mesh}></primitive>\n}","import { useEffect, useMemo, useState } from \"react\";\nimport { SpriteMaterial, Texture } from \"three\";\nimport styles from './MapCenterMarker.module.scss';\nimport { Html } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\ninterface MapCenterMarketProps {\n  size: number;\n  lockSize?: boolean;\n  blink: boolean;\n  cameraLength: number | undefined;\n  text_color?: string;\n}\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, text_color = \"black\" }: MapCenterMarketProps) => {\n  const { mapConfig } = useMapBoxContext();\n  const [, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - mapConfig.CAMERA.minDistance) / (mapConfig.CAMERA.maxDistance - mapConfig.CAMERA.minDistance))\n    }\n  }, [lockSize, mapConfig, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize, depthTest: false, depthWrite: false, color: text_color });\n    return material;\n  }, [lockSize, texture, text_color])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const clonedSvgElement = svgOrigin.cloneNode(true) as SVGElement;\n      const svgData = (new XMLSerializer()).serializeToString(clonedSvgElement);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n    }\n  }, []);\n\n  if (material) {\n    return (\n      <group>\n        <sprite scale={scale} material={material}></sprite>\n        {blink && <Html><div className={`mapCenterMarker ${styles.mapCenterMarker}`}></div></Html>}\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, MeshFloorsProps, IMeshValues } from \"../../interfaces\";\nimport { ThreeEvent } from \"@react-three/fiber\";\nimport React, { useEffect } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from './Map.module.scss';\nimport { MapCenterMarker } from \"./MapCenterMarker\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { getSvgIconHTML } from \"src/helpers/misc.helper\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: MeshFloorsProps;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\ninterface MapObjectProps {\n  type: string;\n  mesh: IExtMesh;\n  visible: boolean;\n  currentFloorIndex: number;\n  params?: IMeshValues;\n}\n\nconst MapObject = (props: MapObjectProps) => {\n  const { type, mesh, currentFloorIndex } = props;\n  useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      // setUpdate((value) => !value);\n    };\n    return () => mesh.userData.triggerUpdate = undefined\n  }, [mesh.userData]);\n\n  const { cameraLength } = useMapBoxContext();\n\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return (\n          <primitive key={mesh.uuid} object={mesh}>\n            <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} lockSize={mesh.userData.kioskConfig.lockSize} text_color={mesh.userData.kioskConfig.text_color} />\n          </primitive>\n        )\n      } else {\n        return (\n          <primitive key={mesh.uuid} object={mesh}>\n            {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n          </primitive>\n        )\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return (\n          <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} lockSize={mesh.userData.kioskConfig.lockSize} text_color={mesh.userData.kioskConfig.text_color} />\n        )\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n  const { mapConfig, floorsData } = useMapBoxContext();\n\n  const { meshParams, textParams, storeLogos } = meshFloors;\n  const floor = floorsData[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = floorsData[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            //@ts-ignore\n            const baseColor = active ? mapConfig.ACCENT_COLOR : params.mesh.material.colorDefault;\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n            <primitive object={params.textMesh}>\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n\n      {escalatorMeshes?.map((params) => {\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div className={`escalator_elems ${styles.escalator_elems}`}\n              style={{ display: visible ? 'block' : 'none' }}\n              onClick={(e) => {\n                e.stopPropagation()\n                handleChangeFloor(params.goToFloor?.index || 0)\n                return false\n              }}\n              onPointerMove={(e) => e.stopPropagation()}>\n              <div className={`element ${styles.element}`} id={params.object_id as string}>\n                <div className={`svgIcon ${styles.svgIcon}`} dangerouslySetInnerHTML={{ __html: getSvgIconHTML('escalator') as string }}></div>\n                <div className={`label ${styles.label}`}>{params.goToFloor?.direction}: {params.goToFloor ? floorsData[params.goToFloor.index].name : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type { Mesh } from \"three\";\nimport { Box3, Vector3 } from \"three\";\n\nexport function get_camera_focus_object(objs: Mesh[], fov: number, aspectRatio: number, style: string) {\n  // config.STYLE\n  // config.CAMERA.fov\n\n  if (!Array.isArray(objs)) {\n    objs = [objs];\n  }\n  if (!objs.length) {\n    console.warn('get_camera_focus_object: no objects passed');\n    return { position: new Vector3(), target: new Vector3() };\n  }\n\n  const objsBoundingBox = objs.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    if (obj.geometry.boundingBox) {\n      box.union(obj.geometry.boundingBox);\n    }\n    return box;\n  }, new Box3());\n\n  const obj_size = new Vector3();\n  objsBoundingBox.getSize(obj_size);\n\n  const center = new Vector3();\n  objsBoundingBox.getCenter(center);\n\n  objs[0].localToWorld(center);\n\n  let tanFOV = Math.tan(Math.PI * fov / 360);\n  let padding = 1.1;\n  let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n  let new_height = (obj_size.y * padding) / 2 / tanFOV;\n  let new_y = Math.max(new_width, new_height);\n  let new_z = getCameraTiltPosition(new_y, style);\n\n  const target = new Vector3(center.x, 0, center.z);\n  const position = new Vector3(center.x, new_y, center.z + new_z);\n\n  return { position, target };\n}\n\nfunction getCameraTiltPosition(y: number, style: string): number {\n  let angle = 60;\n  if (style === '2D') angle = 89.9;\n  return y / Math.tan(angle * Math.PI / 180);\n}","import { IExtMesh, MapDeviceType, MeshFloorsProps, ZoomData } from \"../../interfaces\";\nimport { Map } from \"./Map\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helper\";\nimport { MapControls } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { mapConfigDefaultVars } from \"src/defaults\";\nimport { MapCameraControlsState } from \"src/interfaces/mapApiTypes\";\nimport useRouteHelper from \"src/Hooks/useMeshFloors/useRouteHelper\";\nimport { AppFloor } from \"src/interfaces/mapbox\";\n\ninterface FloorsMapProps {\n  meshFloors: MeshFloorsProps;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  currKioskObj: Mesh | null;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  selectedAmenityType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: ZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  cameraControlsPosition: MapCameraControlsState;\n  handleCameraAndControlsChange?: ({ camera, controls }: MapCameraControlsState) => void;\n  isSelectedRetailerSlug: boolean;\n  setIsCameraInit: Function;\n  handleObjectClick: (object: IExtMesh, targetId: string, softClick?: boolean) => void,\n  triggerClick: boolean,\n  deviceType: MapDeviceType;\n}\n\n\nexport const FloorsMap = forwardRef((params: FloorsMapProps, ref) => {\n  const { mapConfig, allMapObjects, allIndexedMapObjects, allNodesFloor, mapApiResponse, pathFinderGraph, setCameraLength, floorsData } = useMapBoxContext();\n  const { make_amenity_route, create_route } = useRouteHelper();\n\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const {\n    meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    selectedAmenityType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    handleCameraAndControlsChange,\n    activeObjectId,\n    isSelectedRetailerSlug,\n    setIsCameraInit,\n    handleObjectClick,\n    triggerClick,\n    cameraControlsPosition,\n    deviceType\n  } = params;\n  const [cameraLimits, setCameraLimits] = useState({ min: mapConfig.CAMERA.minDistance, max: mapConfig.CAMERA.maxDistance, initialDistance: 0, needsUpdate: true })\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = mapConfig.STYLE;\n  const accentColor = mapConfig.ACCENT_COLOR;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n  const isUseDefaultsLimits = mapConfig.ROLE === \"PORTAL\" && routeTargetId;\n\n  const resetCamera = useCallback((fullReset: boolean = false) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, mapConfig.ROLE === 'PORTAL' ? '2D' : style);\n\n    let isZeroCCS = true;\n\n    if (cameraControlsPosition) {\n      let cameraV3 = cameraControlsPosition.camera;\n      if (!(cameraV3 instanceof Vector3)) {\n        cameraV3 = new Vector3(cameraV3.x, cameraV3.y, cameraV3.z);\n      }\n      isZeroCCS = (cameraV3 as Vector3).length() === 0;\n    }\n\n    if (!fullReset && cameraControlsPosition && !isZeroCCS && !['PORTAL'].includes(mapConfig.ROLE)) {\n      focus.position.set(cameraControlsPosition.camera.x, cameraControlsPosition.camera.y, cameraControlsPosition.camera.z);\n      focus.target.set(cameraControlsPosition.controls.x, cameraControlsPosition.controls.y, cameraControlsPosition.controls.z);\n    }\n\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: mapConfig.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n    if (['DISPLAY_APP', 'WP_SITE'].includes(mapConfig.ROLE) && cameraLimits.needsUpdate === false && cameraLimits.initialDistance > 0) {\n      setCameraLimits(cl => ({\n        ...cl,\n        min: mapConfig.CAMERA.minDistance < 0.1 ? 0.1 : mapConfig.CAMERA.minDistance,\n        max: mapConfig.CAMERA.maxDistance,\n      }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [camera, cameraLimits.needsUpdate, mapConfig.CAMERA.animSpeed, mapConfig.CAMERA.maxDistance, mapConfig.CAMERA.minDistance, cameraControlsPosition, mapConfig.ROLE, currKioskFloorIndex, meshFloors.meshParams, style]);\n\n  const focusDistance = cameraFocus.current ? cameraFocus.current.position.distanceTo(cameraFocus.current.target) : 0;\n\n  useEffect(() => {\n    if (cameraControlsPosition) {\n      resetCamera()\n    }\n  }, [cameraControlsPosition, resetCamera])\n\n  useEffect(() => {\n\n    if (focusDistance > 0 && cameraLimits.needsUpdate) {\n      setCameraLimits({ min: mapConfig.CAMERA.minDistance < 0.1 ? 0.1 : mapConfig.CAMERA.minDistance, max: mapConfig.CAMERA.maxDistance, initialDistance: focusDistance, needsUpdate: false })\n      setIsCameraInit(true);\n    }\n\n  }, [focusDistance, cameraLimits.needsUpdate, mapConfig.CAMERA, setIsCameraInit])\n\n  useEffect(() => {\n    setCameraLimits((cl) => ({ ...cl, needsUpdate: true }))\n  }, [mapConfig.CAMERA])\n\n  // useEffect(() => {\n\n  //   if (['DISPLAY_APP', 'WP_SITE'].includes(mapConfig.ROLE) && routeTargetId && cameraLimits.initialDistance > 0) {\n  //     console.log('will set camera limit on routeTargetId')\n  //     setCameraLimits(cl => {\n  //       const minDistance = Math.max(Number(mapConfig.SELECTED_ZOOM_LIMIT), mapConfig.CAMERA.minDistance)\n  //       console.log('mapConfig.CAMERA.minDistance', mapConfig.CAMERA.minDistance)\n  //       console.log('mapConfig.SELECTED_ZOOM_LIMIT', mapConfig.SELECTED_ZOOM_LIMIT)\n  //       console.log('set min: minDistance < 0.1 ? 0.1 : minDistance', minDistance < 0.1 ? 0.1 : minDistance)\n  //       return {\n  //         ...cl,\n  //         needsUpdate: false,\n  //         min: minDistance < 0.1 ? 0.1 : minDistance,\n  //         max: mapConfig.CAMERA.maxDistance,\n  //       }\n  //     });\n  //   }\n  // }, [mapConfig.SELECTED_ZOOM_LIMIT, routeTargetId, cameraLimits.initialDistance, mapConfig.ROLE, mapConfig.CAMERA.minDistance, mapConfig.CAMERA.maxDistance])\n\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length, resetCamera])\n\n  useEffect(() => {\n    if (!selectedAmenityType || mapConfig.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const { routePaths, fromFloor } = make_amenity_route(from ?? '', selectedAmenityType, scene, escalatorNodes, style);\n    setRouteTubes(routePaths);\n    if (fromFloor !== undefined) {\n      handleChangeFloor(fromFloor)\n    }\n\n    if (currKioskObj && mapConfig.ROLE === \"DISPLAY_APP\") {\n      handleChangeFloor(currKioskFloorIndex);\n    }\n\n  }, [selectedAmenityType, scene, pathFinderGraph, floorsData, escalatorNodes, style, from, mapConfig.ROLE, allNodesFloor, allIndexedMapObjects, make_amenity_route, currKioskObj, handleChangeFloor, currKioskFloorIndex])\n\n  const clearEscalators = useCallback(() => {\n    floorsData.flat().forEach((item) => item.escalatorMeshes = []);\n  }, [floorsData])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || mapConfig.ROLE === 'PORTAL') {\n      if (mapConfig.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          clearEscalators();\n          setRouteTubes([]);\n        }\n      } else if (!selectedAmenityType) {\n        clearEscalators();\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!selectedAmenityType) {\n      floorsData.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n    // console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const { routePaths, fromFloor } = create_route(allNodesFloor, from, routeTargetId, scene, floorsData, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    setRouteTubes(routePaths);\n    if (fromFloor !== undefined) {\n      handleChangeFloor(fromFloor)\n    }\n\n  }, [from, routeTargetId, scene, camera, floorsData, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, selectedAmenityType, mapConfig.ROLE, allNodesFloor, triggerClick, create_route, clearEscalators, handleChangeFloor]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (mapConfig.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floorsData[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !selectedAmenityType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && (mapConfig.ROLE === 'PORTAL' || isSelectedRetailerSlug)) {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, mapConfig.ROLE === 'PORTAL' || mapConfig.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      isUseDefaultsLimits ? mapConfig.CAMERA.maxDistance : cameraLimits.max,\n      Math.max(\n        isUseDefaultsLimits ? mapConfig.CAMERA.minDistance : cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: mapConfig.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, mapConfig.ROLE, mapConfig.CAMERA.maxDistance, mapConfig.CAMERA.minDistance, mapConfig.CAMERA.animSpeed, floorsData, activeObjectId, selectedAmenityType, isSelectedRetailerSlug, isUseDefaultsLimits, cameraLimits.max, cameraLimits.min]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance: number = parseInt(focus.position.distanceTo(focus.target));\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= mapConfig.ZOOM_STEP;\n      } else {\n        cameraDistance += mapConfig.ZOOM_STEP;\n      }\n\n      cameraDistance = Math.min(\n        cameraLimits.max,\n        Math.max(\n          cameraLimits.min,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: mapConfig.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoom])\n\n  const getInitialDistance = () => {\n    return cameraLimits.initialDistance\n  }\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange) {\n        // todo this is an expensive operation that shouldn't be needed\n        handleCameraAndControlsChange({\n          camera: mapControlRef.current.object.position.clone(),\n          controls: mapControlRef.current.target.clone()\n        })\n      }\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const createRouteToStore = useCallback((retailerId: number) => {\n    if (retailerId > 0) {\n      const retailer = mapApiResponse.retailers.find(item => item.id === retailerId);\n      if (retailer) {\n        const mapObjs = mapApiResponse.map_objs.filter(item => item.retailer_id === retailer.id);\n        for (let i = 0; i < mapObjs.length; i++) {\n          if (allMapObjects.includes(mapObjs[i].map_obj_name)) {\n            const obj = scene.getObjectByProperty('object_id', mapObjs[i].map_obj_name);\n            if (obj) {\n              handleObjectClick(obj as IExtMesh, mapObjs[i].map_obj_name, true);\n            }\n            break;\n          }\n        }\n      }\n    }\n  }, [handleObjectClick, mapApiResponse, scene]);\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n    createRouteToStore,\n    getInitialDistance,\n  }))\n\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={isUseDefaultsLimits ? mapConfigDefaultVars.CAMERA.minDistance : cameraLimits.min}\n        maxDistance={isUseDefaultsLimits ? mapConfigDefaultVars.CAMERA.maxDistance : cameraLimits.max}\n        enableZoom={mapConfig.ROLE === \"PORTAL\" || mapConfig.ROLE === \"DISPLAY_APP\" || (mapConfig.ROLE === \"WP_SITE\" && ['mobile', 'tablet'].includes(deviceType))}\n        enableRotate={mapConfig.ROLE !== \"WP_SITE\" && mapConfig.ROLE !== \"PORTAL_RESPONSIVE\" && mapConfig.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floorsData && floorsData.map((value: AppFloor, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={mapConfig.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from './UIComponent.module.scss';\nimport { MapAmenity, MapAmenityID } from \"src/helpers/amenities.helper\";\nimport { getSvgIconHTML } from \"src/helpers/misc.helper\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\nexport interface UIComponentProps {\n  selectedFloorIndex: number;\n  handleFloorChange: (floorIndex: number) => void;\n  amenitiesList: MapAmenity[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: (fullReset?: boolean) => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string, map_obj_name?: string) => void,\n  onExtractedAmenities?: (amenityIds: MapAmenityID[]) => void\n}\n\nconst UIComponent = (params: UIComponentProps) => {\n  const { selectedFloorIndex, handleFloorChange, amenitiesList, zoomIn, zoomOut, reset, handleAmenityClick, onExtractedAmenities } = params;\n  const { mapConfig, mapApiResponse, floorsData, allMapObjects } = useMapBoxContext();\n\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      if (mapConfig.ROLE === 'PORTAL_RESPONSIVE' || mapConfig.ROLE === 'PORTAL') {\n        reset(true)\n      } else {\n        reset();\n      }\n    }\n  }\n\n  const extractValues = useMemo<MapAmenityID[]>(() => {\n    if (mapApiResponse?.map_objs) {\n      return mapApiResponse?.map_objs\n        .filter(obj => obj.layer_type === \"amenity\" && allMapObjects.includes(obj.map_obj_name))\n        .map(obj => obj.value as MapAmenityID);\n    }\n    return [];\n  }, [mapApiResponse, allMapObjects])\n\n\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floorsData.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              {floorsData.length > 1 && (\n                <div className=\"floors btn_group\">\n                  {floorsData.map((floor: any, index: number) => (\n                    <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                      handleFloorChange(index)\n                    }}>{floor.name}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(mapConfig.ROLE) &&\n          <div className={`amenities ${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`}\n                  className={`amenity ${styles.amenity}`}\n                  onClick={() => handleAmenityClick(amenity.type)}>\n                  <div className={`content ${styles.content}`}>\n                    <div className={`icon ${styles.icon}`} dangerouslySetInnerHTML={{ __html: getSvgIconHTML(amenity.type) as string }}></div>\n                    <div className={`name ${styles.name}`}>{amenity.name}</div>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { Form, FormGroup, Modal } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { ChangeEventHandler, useEffect, useState } from \"react\";\nimport styles from './RetailerInfoModal.module.scss';\nimport { MapObjData, MapRetailer } from \"src/interfaces/mapApiTypes\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { FormatPhoneNumber } from \"src/helpers/misc.helper\";\n\ntype RetailerInfoModalProps = {\n  show: boolean,\n  onHide: () => void,\n  amenity: string,\n  selectedAmenityMapObjName: string,\n  mapObjectName?: string,\n  onClickMapObj: (id: string, amenityType?: string) => void,\n  allSvgObjectIds: Set<string>,\n}\n\nconst RetailerInfoModal = ({ show, onHide, amenity, selectedAmenityMapObjName, mapObjectName, onClickMapObj, allSvgObjectIds }: RetailerInfoModalProps) => {\n\n  const { mapConfig, allIndexedMapObjects, allIndexedRetailers, apiServices } = useMapBoxContext();\n\n  const [retailerInfo, setRetailerInfo] = useState<MapRetailer>();\n  const [availableRetailersOnMap, setAvailableRetailersOnMap] = useState<MapRetailer[]>([]);\n  const [availableGlobalRetailerIdsOnMap, setAvailableGlobalRetailerIdsOnMap] = useState<number[]>([]);\n\n  const [selectedRetailerId, setSelectedRetailerId] = useState<number>(-1);\n\n  useEffect(() => {\n    if (mapObjectName) {\n      const mapObj = allIndexedMapObjects[mapObjectName];\n      if (mapObj && mapObj.retailer_id) {\n        const retailer = allIndexedRetailers[mapObj.retailer_id];\n        if (retailer) {\n          setRetailerInfo(retailer);\n        }\n      }\n    } else {\n      setRetailerInfo(undefined);\n    }\n  }, [allIndexedMapObjects, allIndexedRetailers, mapObjectName, apiServices]);\n\n  const onMapItClick = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    let mapObj: MapObjData;\n    if (mapConfig.KIOSK_ID) {\n      const filteredMapObjects = Object.values(allIndexedMapObjects).filter(obj => obj.kiosk_id === mapConfig.KIOSK_ID && allSvgObjectIds.has(obj.map_obj_name))\n      mapObj = filteredMapObjects[0] as MapObjData;\n    } else {\n      const filteredMapObjects = Object.values(allIndexedMapObjects).filter(obj => obj.retailer_id === selectedRetailerId && allSvgObjectIds.has(obj.map_obj_name))\n      mapObj = filteredMapObjects[0] as MapObjData; // just pick the first one\n    }\n\n    if (!mapObj) {\n      console.error('Map object not found');\n      return;\n    }\n\n    if (amenity) {\n      onClickMapObj(mapObj.map_obj_name, selectedAmenityMapObjName);\n    } else {\n      onClickMapObj(mapObj.map_obj_name);\n    }\n  }\n\n  useEffect(() => {\n    const retailerIds = new Set(\n      Object.values(allIndexedMapObjects)\n        .filter(mapObj => mapObj.retailer_id !== null)\n        .filter((mapObj) => allSvgObjectIds.has(mapObj.map_obj_name))\n        .map(mapObj => mapObj.retailer_id as number)\n    );\n\n    const filteredMapRetailers = Array.from(retailerIds)\n      .map(retailerId => allIndexedRetailers[retailerId])\n      .filter(Boolean) // This filters out undefined values\n      .sort((a, b) => a.retail_name.localeCompare(b.retail_name));\n\n    setAvailableGlobalRetailerIdsOnMap(filteredMapRetailers.map(retailer => retailer.global_retailer_id));\n\n    setAvailableRetailersOnMap(filteredMapRetailers);\n  }, [allIndexedMapObjects, allIndexedRetailers, allSvgObjectIds])\n\n  const onChangeRetailerId: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setSelectedRetailerId(parseInt(e.target.value));\n  }\n\n  return (\n    <Modal show={show} dialogClassName={styles.retailerInfoModal} className=\"px-2\" onHide={onHide} centered scrollable={true}>\n      <div className={styles.retailerInfoCloseBtn}>\n        <XCircle onClick={onHide} size={24} color=\"white\" className={styles.closeBtn} />\n      </div>\n\n      <Modal.Body className={styles.modalBody}>\n        <div className={styles.contentWrapper}>\n          {retailerInfo ? (\n            <div className={styles.content}>\n              <div className={styles.retailerLogo}>\n                <img className={styles.img} src={retailerInfo.logo} alt={retailerInfo.retail_name} />\n              </div>\n              <div className={styles.retailerInfoContent} >\n                <div><b>Retailer:</b> {retailerInfo.retail_name}</div>\n                {retailerInfo.location && <div><b>Location:</b> {retailerInfo.location}</div>}\n                {retailerInfo.retailer_phone && <div><b>Phone:</b> <a href={`tel:${retailerInfo.retailer_phone}`}>{FormatPhoneNumber(retailerInfo.retailer_phone)}</a></div>}\n                {retailerInfo.retailer_description && <div dangerouslySetInnerHTML={{ __html: retailerInfo.retailer_description }}></div>}\n              </div>\n            </div>\n          ) : null}\n        </div>\n\n        <Form className={styles.getDirectionsFrom}>\n          <FormGroup>\n            <div className=\"d-flex align-items-center gap-3\">\n              <Form.Select\n                name=\"retailer\"\n                onChange={onChangeRetailerId}\n                value={selectedRetailerId}\n                className={styles.retailerDropdown}\n              >\n                <option value={-1} disabled>Get direction from ...</option>\n                {availableRetailersOnMap.map((item, index) => {\n                  if (retailerInfo && item.id === retailerInfo.id) return null;\n                  return (\n                    <option key={index} value={item.id}>{availableGlobalRetailerIdsOnMap.filter(id => id === item.global_retailer_id).length > 1 ? `${item.retail_name} (${item.location})` : item.retail_name}</option>\n                  )\n                }\n                )}\n              </Form.Select>\n\n              <button type=\"button\" disabled={selectedRetailerId === -1} onClick={onMapItClick} className={`btn btn-primary text-nowrap ${styles.btn}`}>Map IT</button>\n            </div>\n          </FormGroup>\n        </Form>\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default RetailerInfoModal;\n","import { MapObjData } from \"src/interfaces/mapApiTypes\";\nimport { useCallback, useEffect, useRef, useState, useTransition } from \"react\";\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, MeshBasicMaterial, MeshPhongMaterial, PlaneGeometry, Vector3 } from \"three\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh, MeshFloorsProps } from \"src/interfaces\";\nimport textFontInterface from 'src/Hooks/useMeshFloors/Montserrat_Regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport Select, { ActionMeta, SingleValue } from 'react-select';\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { mapObjDefaultVars } from \"src/defaults\";\nimport { MapAmenityOption, MapKioskOption, MapRetailerOption } from \"src/interfaces/portal-sidebar-form\";\nimport useDrawLogoHelper from \"src/Hooks/useMeshFloors/useDrawLogoHelper\";\nimport useMaterialAndGeometry, { MeshType } from \"src/Hooks/useMeshFloors/useMaterialAndGeometry\";\nimport { AllAmenities, MapAmenityID } from \"src/helpers/amenities.helper\";\nimport styles from './PortalSidebarForm.module.scss'\n\ninterface PortalSidebarFormProps {\n  floorIndex: number;\n  meshFloors: MeshFloorsProps;\n  setData: (index: number, data: MapObjData) => void;\n  selectedId: string;\n  onSubmit?: (data: MapObjData, refreshData?: () => void) => void;\n  onResetData?: (data: MapObjData) => void;\n  onChangeData?: (data: MapObjData) => void;\n  onNewData?: (data: MapObjData) => void;\n  triggerSceneUpdate: Function;\n}\n\nconst incDecKeys = ['size', 'rotate', 'offset_x', 'offset_y'] as const;\ntype IncDecKey = (typeof incDecKeys)[number]\n\ntype TIncDecInterval = {\n  [Key in IncDecKey]?: number | null;\n}\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObjData, floorIndex: Number) => void;\n\n\nconst PortalSidebarForm = (params: PortalSidebarFormProps) => {\n\n  const { setData, selectedId, floorIndex, onResetData, onChangeData, onNewData, triggerSceneUpdate } = params;\n  const { mapApiResponse, meshObject, allIndexedRetailers } = useMapBoxContext();\n  const { getImage, processImage, layer_text_logo_position_by_id } = useDrawLogoHelper();\n  const { getMaterial } = useMaterialAndGeometry();\n\n  const textFont = useFont(textFontInterface as unknown as FontData);\n  const [objType, setObjType] = useState<MapObjData['obj_type']>('retailer');\n  const [layerType, setLayerType] = useState<MapObjData['layer_type']>('retail_name');\n\n  const [formData, setFormData] = useState<MapObjData>(mapObjDefaultVars);\n  const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n  const [, startTransition] = useTransition();\n  const intervalRefs = useRef<TIncDecInterval>({});\n\n  const [selectedKiosksId, setSelectedKiosksId] = useState<number[]>([]);\n\n  const recheckSelectedKiosksId = useCallback((mapObjs: any[]) => {\n    if (mapObjs) {\n      const ids = (mapObjs as { kiosk_id: number }[]).reduce<number[]>((prev, cur) => {\n        if (cur.kiosk_id !== null) {\n          return [...prev, cur.kiosk_id];\n        }\n        return prev;\n      }, [])\n      setSelectedKiosksId([...ids]);\n    }\n  }, []);\n\n  useEffect(() => {\n    recheckSelectedKiosksId(mapApiResponse.map_objs);\n  }, [mapApiResponse, recheckSelectedKiosksId])\n\n  const updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData, floorIndex) => {\n    const kioskConfig = obj.userData.kioskConfig;\n    if (kioskConfig) {\n      obj.userData.distanceFactor = formData?.lock_size ? 1500 : undefined;\n      obj.userData.kioskConfig = {\n        ...kioskConfig,\n        lockSize: formData.lock_size,\n        blink: kioskConfig.blink,\n        size: Number(formData.size),\n        floorIndex: floorIndex,\n        text_color: formData.text_color,\n      }\n      // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={true} size={Number(formData.size)} />\n    } else {\n      obj.userData.kioskConfig = {\n        lockSize: formData.lock_size,\n        blink: false,\n        size: Number(formData.size),\n        floorIndex: floorIndex,\n        text_color: formData.text_color,\n      }\n    }\n  }\n\n  const makeImage = useCallback(async (formData: MapObjData, obj: IExtMesh) => {\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let imgUrl = '';\n    if (formData.layer_type === 'retail_logo') {\n      imgUrl = await getImage(formData, allIndexedRetailers[formData.retailer_id || 0]);\n    } else {\n      imgUrl = await getImage(formData);\n    }\n    if (imgUrl) {\n      processImage(imgUrl, formData, (geometry: PlaneGeometry, material: MeshBasicMaterial) => {\n        obj.geometry = geometry;\n        obj.material = material;\n\n        const boundingBox = geometry.boundingBox;\n\n        const mesh_center_point = new Vector3();\n        if (boundingBox) {\n          boundingBox.getCenter(mesh_center_point);\n\n          const mesh_size = new Vector3();\n          boundingBox.getSize(mesh_size);\n          if (obj.object_id) {\n            layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n          }\n        }\n      });\n    }\n  }, [getImage, layer_text_logo_position_by_id, oldMapObjName, processImage, allIndexedRetailers])\n\n  const updateTooltip = useCallback((text: string, map_obj_name: string) => {\n    params.meshFloors.meshParams.flat().filter(item => item !== undefined).forEach(item => {\n      if (item.mesh.object_id === map_obj_name) {\n        item.mesh.userData.storeName = text\n      }\n    })\n  }, [params.meshFloors.meshParams])\n\n  const makeTextGeometry = useCallback((obj: IExtMesh, text: string, size: number) => {\n    if (!obj) return;\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let text_geometry = new TextGeometry(text, {\n      font: (obj.userData && obj.userData.font) ? obj.userData.font : textFont,\n      size,\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n    if (obj.geometry) {\n      obj.geometry.dispose();\n    }\n    obj.geometry = text_geometry;\n    updateTooltip(text, formData.map_obj_name);\n  }, [formData?.map_obj_name, textFont, oldMapObjName, updateTooltip])\n\n  const updateData = useCallback((formData: MapObjData, isUserAction: boolean = false) => {\n    const index = mapApiResponse.map_objs.findIndex((value: MapObjData) => value.map_obj_name === formData.map_obj_name);\n    if (index !== -1) {\n      formData.id = mapApiResponse.map_objs[index].id;\n      mapApiResponse.map_objs[index] = { ...formData };\n      setData(index, { ...formData });\n      recheckSelectedKiosksId(mapApiResponse.map_objs);\n      if (isUserAction) {\n        onChangeData?.(formData);\n      }\n    } else {\n      if (isUserAction) {\n        onNewData?.(formData);\n      }\n    }\n  }, [mapApiResponse, setData, recheckSelectedKiosksId, onNewData, onChangeData])\n\n  const clearKioskConfig = () => {\n    if (meshObject) {\n      const obj = meshObject[1];\n      if (obj && obj.userData && obj.userData.kioskConfig) {\n        obj.userData.kioskConfig = null;\n        params.meshFloors.storeLogos.flat().filter(item => item !== undefined).forEach(item => {\n          if (item.storeLogo.object_id === obj.object_id && item.storeLogo.userData.kioskConfig !== undefined) {\n            item.storeLogo.userData.kioskConfig = null;\n          }\n        });\n      }\n    }\n  }\n\n  const onObjTypeChange = (key: MapObjData['obj_type']) => {\n    setObjType(key);\n    formData.obj_type = key;\n    clearKioskConfig();\n\n    if (key === 'retailer') {\n      if (!['retail_name', 'retail_logo', 'retail_text'].includes(layerType)) {\n        onLayerTypeChange('retail_name');\n      }\n      formData.kiosk_id = null;\n    }\n\n    if (key === 'special') {\n      if (!['kiosk', 'amenity'].includes(layerType)) {\n        onLayerTypeChange('kiosk');\n      }\n      formData.retailer_id = null;\n      if (meshObject) {\n        const obj = meshObject[1];\n        makeTextGeometry(obj, '', formData.size);\n        // if (obj) {\n        //   if (!obj.userData) {\n        //     obj.userData = {};\n        //   }\n        //   obj.userData.distanceFactor = formData.lock_size ? 1500 : undefined;\n        //   obj.userData.kioskConfig = {\n        //     lockSize: formData.lock_size,\n        //     blink: false,\n        //     size: Number(formData.size)\n        //   }\n        // }\n      }\n    }\n\n    if (key === 'custom') {\n      if (!['custom_text', 'custom_image'].includes(layerType)) {\n        onLayerTypeChange('custom_text');\n      }\n      formData.retailer_id = null;\n      formData.kiosk_id = null;\n    }\n\n    onValueChange('size', formData.size.toString());\n    onValueChange('text_color', formData.text_color || mapApiResponse.mapSettings.STORE_TEXT_COLOR);\n\n    setFormData({ ...formData });\n    updateData({ ...formData });\n  }\n\n  const onLayerTypeChange = (key: MapObjData['layer_type']) => {\n    if (!formData) return;\n\n    setLayerType(key);\n    formData.layer_type = key;\n    clearKioskConfig();\n\n    if (key === 'retail_name') {\n    } else if (key === 'retail_logo') {\n    } else if (key === 'retail_text') {\n    } else if (key === 'kiosk') {\n      formData.value = '';\n      if (meshObject) {\n        makeImage(formData, meshObject[1]);\n      }\n    } else if (key === 'amenity') {\n      formData.kiosk_id = null;\n    } else if (key === 'custom_text') {\n    } else if (key === 'custom_image') {\n    }\n\n    onValueChange('size', formData.size.toString());\n\n    setFormData({ ...formData });\n    updateData({ ...formData });\n  }\n\n  const handleDelete = () => {\n    if (!formData) return;\n    Object.assign(formData, mapObjDefaultVars, { id: formData.id, map_obj_name: formData.map_obj_name });\n    // setOldMapObjName('');\n    onObjTypeChange('retailer');\n    onLayerTypeChange('retail_name');\n    updateTooltip('', formData.map_obj_name);\n\n    if (onResetData) {\n      onResetData({ ...formData })\n    }\n  };\n\n  const onRetailerChange = (selectedOption: SingleValue<MapRetailerOption>, actionMeta: ActionMeta<MapRetailerOption>) => {\n    if (selectedOption && formData) {\n      formData.retailer_id = selectedOption.value;\n      onLayerTypeChange(formData.layer_type);\n      setFormData({ ...formData });\n      updateData({ ...formData }, true);\n    }\n  };\n\n  const onKioskChange = (selectedOption: SingleValue<MapKioskOption>, actionMeta: ActionMeta<MapKioskOption>) => {\n    if (selectedOption && formData) {\n      formData.kiosk_id = selectedOption.value;\n      setFormData({ ...formData });\n      updateData({ ...formData }, true);\n      meshObject.forEach((obj, index) => {\n        if (index === 0) return;\n        updateMapCenterMarkerFor(obj, formData, floorIndex);\n        triggerSceneUpdate();\n      })\n    }\n  };\n\n  const onAmenityChange = (selectedOption: SingleValue<MapAmenityOption>, actionMeta: ActionMeta<MapAmenityOption>) => {\n    if (selectedOption && formData) {\n      formData.value = selectedOption.value as MapAmenityID;\n      setFormData({ ...formData });\n      updateData({ ...formData }, true);\n      meshObject.forEach((obj, index) => {\n        if (index === 0) return;\n        makeImage(formData, obj);\n      })\n    }\n  };\n\n  const onValueChange = useCallback((name: string, value: string) => {\n    if (!formData) return;\n\n    meshObject.forEach((obj, index) => {\n      if (!obj.userData) {\n        obj.userData = {};\n      }\n      if (!obj.userData.position) {\n        obj.userData.position = new Vector3();\n        if (obj.position) {\n          obj.userData.position.copy(obj.position);\n        }\n      }\n      const position = new Vector3();\n      if (obj.userData.position) {\n        position.copy(obj.userData.position);\n      }\n\n      switch (name) {\n        case 'custom_text':\n          if (index === 0) break;\n          formData.custom_text = value;\n          if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n            makeTextGeometry(obj, formData.custom_text, formData.size);\n          }\n          break;\n\n        case 'custom_image':\n          if (index === 0) break;\n          formData.custom_image = value;\n          makeImage(formData, obj);\n          updateData({ ...formData }, true)\n          break;\n\n        case 'size':\n          if (index === 0) break;\n          formData.size = parseInt(value);\n          if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n            let text: MapObjData['custom_text'] = '';\n            if (formData.layer_type === 'retail_name' && allIndexedRetailers[formData.retailer_id || 0]?.retail_name) {\n              text = allIndexedRetailers[formData.retailer_id || 0]?.retail_name;\n            } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n              text = formData.custom_text;\n            }\n            makeTextGeometry(obj, text || '', formData.size);\n          } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n            makeImage(formData, obj);\n            setTimeout(() => {\n              updateData({ ...formData }, true);\n            }, 300);\n          } else if (formData.layer_type === 'amenity') {\n            makeImage(formData, obj);\n            startTransition(() => {\n              setFormData({ ...formData });\n              updateData({ ...formData }, true);\n            })\n          } else if (formData.kiosk_id && formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n\n        case 'lock_size':\n          formData.lock_size = false;\n          formData.value = value as MapAmenityID;\n          if (formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n\n        case 'rotate':\n          if (index === 0) break;\n          formData.rotate = parseInt(value);\n          obj.rotation.set(\n            obj.rotation.x,\n            obj.rotation.y,\n            formData.rotate * Math.PI / 180\n          );\n          break;\n\n        case 'offset_x':\n          if (index === 0) break;\n          position.x += parseFloat(value);\n          obj.position.setX(position.x);\n          formData.offset_x = parseInt(value);\n          break;\n\n        case 'offset_y':\n          if (index === 0) break;\n          position.y += parseFloat(value);\n          obj.position.setY(position.y);\n          formData.offset_y = parseInt(value);\n          break;\n\n        case 'text_color':\n          if (index === 0) break;\n          formData.text_color = value;\n          if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n            const material_settings = {\n              color: formData.text_color,\n              transparent: true,\n              side: DoubleSide,\n              depthWrite: false,\n              depthTest: false,\n            };\n            let text_material = new MeshPhongMaterial(material_settings);\n            obj.material = text_material;\n          } else if (\n            formData.layer_type === 'retail_logo' ||\n            formData.layer_type === 'custom_image' ||\n            (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n            (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== null)) {\n            makeImage(formData, obj);\n            if (formData.layer_type === 'kiosk') {\n              updateMapCenterMarkerFor(obj, formData, floorIndex);\n            }\n            startTransition(() => {\n              updateData({\n                ...formData,\n                text_color: formData.text_color && formData.text_color.replace('#', ''),\n              }, true);\n            })\n          }\n          break;\n\n        case 'bg_color':\n          if (index !== 0) break;\n          formData.bg_color = value;\n          let meshType: MeshType = 'store';\n          if (obj.object_id?.startsWith('big-store')) {\n            meshType = 'big-store';\n          }\n          obj.material = getMaterial(\n            meshType,\n            formData.map_obj_name,\n            formData.bg_color,\n            formData.transparent\n          );\n          break;\n\n        default:\n          break;\n      }\n      startTransition(() => {\n        setFormData({ ...formData })\n        updateData({ ...formData }, true);\n      });\n\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [floorIndex, formData, getMaterial, makeImage, makeTextGeometry, mapApiResponse.retailers, meshObject, triggerSceneUpdate, updateData])\n\n  const onFieldChange = useCallback((e: any) => {\n    const target = e.target as HTMLInputElement;\n    onValueChange(target.name, target.value);\n  }, [onValueChange])\n\n  useEffect(() => {\n    if (selectedId) {\n      // todo detect when more than 1, do something\n      // const searchRes = mapApiResponse.map_objs.filter((value: any) => value.map_obj_name === selectedId);\n      const index = mapApiResponse.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n      if (index !== -1) {\n        const mapObjData = { ...mapApiResponse.map_objs[index] };\n        setFormData(mapObjData);\n        setObjType(mapObjData.obj_type);\n        setLayerType(mapObjData.layer_type);\n      } else {\n        setFormData({\n          ...mapObjDefaultVars,\n          map_obj_name: selectedId,\n          id: (new Date()).getTime()\n        });\n      }\n    }\n  }, [mapApiResponse, selectedId]);\n\n  useEffect(() => {\n    if (!formData) return;\n    setOldMapObjName(formData.map_obj_name);\n\n    // if (formData.obj_type) {\n    //   setOldMapObjName(formData.map_obj_name);\n    //   onObjTypeChange(formData.obj_type);\n    // }\n    // if (formData.layer_type) {\n    //   onLayerTypeChange(formData.layer_type);\n    //   setOldMapObjName(formData.map_obj_name);\n    // }\n    // don't rerun when onTabChange is changed1\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [formData])\n\n  const handleDecrement = (key: IncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      onValueChange(key, (formData[key] - 1).toString());\n    }\n  };\n\n  const handleIncrement = (key: IncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      onValueChange(key, (formData[key] + 1).toString());\n    }\n  };\n\n  const handleRotationInSteps = (key: IncDecKey, angle: number = 45) => {\n    if (!formData) return;\n\n    if (Object.hasOwn(formData, key)) {\n      let value = formData[key];\n      // Adjust the current value to the nearest lower multiple of the angle\n      const remainder = value % angle;\n      if (remainder !== 0) {\n        value -= remainder;\n      }\n\n      // Increment by the angle\n      value += angle;\n\n      if (value > 360) {\n        value = angle;\n      } else if (value === 360) {\n        value = 0;\n      }\n\n      onValueChange(key, value.toString());\n    }\n  };\n\n  const startDecrementing = (key: IncDecKey) => {\n    const id = window.setInterval(() => {\n      handleDecrement(key);\n    }, 200);\n    intervalRefs.current[key] = id;\n  };\n\n  const startIncrementing = (key: IncDecKey) => {\n    const id = window.setInterval(() => {\n      handleIncrement(key);\n    }, 200);\n    intervalRefs.current[key] = id;\n  }\n\n  const stopInterval = (key: IncDecKey) => {\n    if (intervalRefs.current[key]) {\n      clearInterval(intervalRefs.current[key] as number);\n      intervalRefs.current[key] = null;\n    }\n  };\n\n  const retailerOptions: MapRetailerOption[] = mapApiResponse?.retailers.map((retailer) => {\n    return {\n      value: retailer.id,\n      label: mapApiResponse?.globalRetailerIds.filter(id => id === retailer.global_retailer_id).length > 1 ? `${retailer.retail_name} (${retailer.location})` : retailer.retail_name\n    }\n  }) || [];\n\n  const kioskOptions: MapKioskOption[] = mapApiResponse?.kiosks.map((kiosk) => {\n    return {\n      value: kiosk.id,\n      label: kiosk.name,\n      isDisabled: selectedKiosksId.includes(kiosk.id),\n    }\n  }) || [];\n\n  const amenityOptions: MapAmenityOption[] = AllAmenities.map((amenity) => {\n    return {\n      value: amenity.type as string,\n      label: amenity.name,\n    }\n  }) || [];\n\n  if (!formData) return null;\n\n  return (\n    <div className={`sidebarComp ${styles.sidebarComp}`}>\n\n      <div className={styles.sidebarFields}>\n        <div className={styles.tabOptions}>\n          <div className={styles.mainBtnsGroup}>\n            <div className={styles.btnsGroup}>\n              <button onClick={() => onObjTypeChange('retailer')} className={objType === 'retailer' ? styles.active : ''}>Retailer</button>\n              <button onClick={() => onObjTypeChange('special')} className={objType === 'special' ? styles.active : ''}>Special</button>\n              <button onClick={() => onObjTypeChange('custom')} className={objType === 'custom' ? styles.active : ''}>Custom</button>\n            </div>\n            <button className={styles.deleteBtn} onClick={handleDelete}>Delete</button>\n          </div>\n\n          {objType === 'retailer' && (\n            <>\n              <Select\n                className={styles.selectField}\n                classNamePrefix=\"custom\"\n                menuPortalTarget={document.body}\n                aria-label=\"Choose a Retailer\"\n                options={retailerOptions}\n                isLoading={false}\n                noOptionsMessage={() => 'Retailers not found'}\n                placeholder=\"Choose a Retailer...\"\n                value={retailerOptions.find((option) => option.value === formData.retailer_id) || null}\n                onChange={onRetailerChange}\n              />\n\n              {formData.retailer_id as number > 0 && (\n                <div className={styles.btnsGroup}>\n                  <button onClick={() => onLayerTypeChange('retail_name')} className={layerType === 'retail_name' ? styles.active : ''}>Retail Name</button>\n                  <button onClick={() => onLayerTypeChange('retail_logo')} className={layerType === 'retail_logo' ? styles.active : ''}>Retail Logo</button>\n                  <button onClick={() => onLayerTypeChange('retail_text')} className={layerType === 'retail_text' ? styles.active : ''}>Custom Text</button>\n                </div>\n              )}\n            </>\n          )}\n\n          {objType === 'special' && (\n            <>\n              <div className={styles.btnsGroup}>\n                <button onClick={() => onLayerTypeChange('kiosk')} className={layerType === 'kiosk' ? styles.active : ''}>Kiosk</button>\n                <button onClick={() => onLayerTypeChange('amenity')} className={layerType === 'amenity' ? styles.active : ''}>Amenity</button>\n              </div>\n\n              {layerType === 'kiosk' && (\n                <Select\n                  className={styles.selectField}\n                  classNamePrefix=\"custom\"\n                  aria-label=\"Choose a Kiosk\"\n                  options={kioskOptions}\n                  noOptionsMessage={() => 'Kiosks not found'}\n                  placeholder=\"Choose a Kiosk...\"\n                  value={kioskOptions.find((item) => item.value === formData.kiosk_id) || null}\n                  onChange={onKioskChange}\n                />\n              )}\n\n              {layerType === 'amenity' && (\n                <Select\n                  className={styles.selectField}\n                  classNamePrefix=\"custom\"\n                  aria-label=\"Choose Amenity\"\n                  options={amenityOptions}\n                  noOptionsMessage={() => 'Amenity not found'}\n                  placeholder=\"Choose Amenity...\"\n                  value={amenityOptions.find((item) => item.value === formData.value) || null}\n                  onChange={onAmenityChange}\n                />\n              )}\n            </>\n          )}\n\n          {objType === 'custom' && (\n            <>\n              <div className={styles.btnsGroup}>\n                <button onClick={() => onLayerTypeChange('custom_text')} className={layerType === 'custom_text' ? styles.active : ''}>Text</button>\n                <button onClick={() => onLayerTypeChange('custom_image')} className={layerType === 'custom_image' ? styles.active : ''}>Image</button>\n              </div>\n\n              {layerType === 'custom_image' && (\n                <div className={styles.sidebarField}>\n                  <label className={styles.label}>Image URL</label>\n                  <div className={styles.fieldWrapper}>\n                    <input\n                      name=\"custom_image\"\n                      type=\"text\"\n                      className={styles.textField}\n                      value={formData.custom_image as string}\n                      onChange={onFieldChange}\n                    />\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n\n          {((objType === 'retailer' && layerType === 'retail_text') || (objType === 'custom' && layerType === 'custom_text')) && (\n            <div className={styles.sidebarField}>\n              <label className={styles.label}>Text</label>\n              <div className={styles.fieldWrapper}>\n                <textarea\n                  name=\"custom_text\"\n                  rows={3}\n                  className={styles.textareaField}\n                  value={formData.custom_text as string}\n                  onChange={onFieldChange}\n                />\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>Size</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.numberFieldGroup}>\n              <button\n                className={`${styles.button} ${styles.decrement}`}\n                onClick={() => handleDecrement('size')}\n                onMouseDown={() => startDecrementing('size')}\n                onMouseUp={() => stopInterval('size')}\n                onMouseLeave={() => stopInterval('size')}\n              >-</button>\n\n              <input\n                type=\"number\"\n                value={formData.size}\n                onChange={(e) => onValueChange('size', e.target.value)}\n                className={styles.input}\n              />\n\n              <button\n                className={`${styles.button} ${styles.increment}`}\n                onClick={() => handleIncrement('size')}\n                onMouseDown={() => startIncrementing('size')}\n                onMouseUp={() => stopInterval('size')}\n                onMouseLeave={() => stopInterval('size')}\n              >+</button>\n            </div>\n\n            {/* <label className=\"checkbox-field\">\n              <input\n                id=\"lock_size\"\n                name=\"lock_size\"\n                type=\"checkbox\"\n                value={formData.value}\n                checked={formData.value ? true : false}\n                onChange={(e) => onValueChange('lock_size', e.target.value)}\n              ></input>\n              <span className=\"tickbox\"></span>\n              <span className=\"tick-label\">Lock</span>\n            </label> */}\n          </div>\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>Rotate</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.numberFieldGroup}>\n              <button\n                className={`${styles.button} ${styles.decrement}`}\n                onClick={() => handleDecrement('rotate')}\n                onMouseDown={() => startDecrementing('rotate')}\n                onMouseUp={() => stopInterval('rotate')}\n                onMouseLeave={() => stopInterval('rotate')}\n              >-</button>\n\n              <input\n                type=\"number\"\n                value={formData.rotate}\n                onChange={(e) => onValueChange('rotate', e.target.value)}\n                className={styles.input}\n              />\n\n              <button\n                className={`${styles.button} ${styles.increment}`}\n                onClick={() => handleIncrement('rotate')}\n                onMouseDown={() => startIncrementing('rotate')}\n                onMouseUp={() => stopInterval('rotate')}\n                onMouseLeave={() => stopInterval('rotate')}\n              >+</button>\n            </div>\n            <button\n              className={styles.rotateButton}\n              onClick={() => handleRotationInSteps('rotate')}\n            >\n              <ArrowClockwise size={24} />\n            </button>\n          </div>\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>Offset X</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.numberFieldGroup}>\n              <button\n                className={`${styles.button} ${styles.decrement}`}\n                onClick={() => handleDecrement('offset_x')}\n                onMouseDown={() => startDecrementing('offset_x')}\n                onMouseUp={() => stopInterval('offset_x')}\n                onMouseLeave={() => stopInterval('offset_x')}\n              >-</button>\n\n              <input\n                type=\"number\"\n                value={formData.offset_x}\n                onChange={(e) => onValueChange('offset_x', e.target.value)}\n                className={styles.input}\n              />\n\n              <button\n                className={`${styles.button} ${styles.increment}`}\n                onClick={() => handleIncrement('offset_x')}\n                onMouseDown={() => startIncrementing('offset_x')}\n                onMouseUp={() => stopInterval('offset_x')}\n                onMouseLeave={() => stopInterval('offset_x')}\n              >+</button>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>Offset Y</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.numberFieldGroup}>\n              <button\n                className={`${styles.button} ${styles.decrement}`}\n                onClick={() => handleDecrement('offset_y')}\n                onMouseDown={() => startDecrementing('offset_y')}\n                onMouseUp={() => stopInterval('offset_y')}\n                onMouseLeave={() => stopInterval('offset_y')}\n              >-</button>\n\n              <input\n                type=\"number\"\n                value={formData.offset_y}\n                onChange={(e) => onValueChange('offset_y', e.target.value)}\n                className={styles.input}\n              />\n\n              <button\n                className={`${styles.button} ${styles.increment}`}\n                onClick={() => handleIncrement('offset_y')}\n                onMouseDown={() => startIncrementing('offset_y')}\n                onMouseUp={() => stopInterval('offset_y')}\n                onMouseLeave={() => stopInterval('offset_y')}\n              >+</button>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.sidebarField}>\n          <label className={styles.label}>BG Color</label>\n          <div className={styles.fieldWrapper}>\n            <div className={styles.colorFieldGroup}>\n              <input\n                type=\"color\"\n                name=\"bg_color\"\n                className={styles.colorField}\n                value={formData.bg_color as string}\n                onChange={onFieldChange}\n              />\n              <input\n                type=\"text\"\n                name=\"bg_color\"\n                className={styles.inputField}\n                value={formData.bg_color as string}\n                onChange={onFieldChange}\n              />\n            </div>\n            {/* <label className=\"checkbox-field\">\n              <input\n                id=\"transparent\"\n                name=\"transparent\"\n                type=\"checkbox\"\n                value={formData.transparent ? 1 : 0}\n                checked={formData.value ? true : false}\n                onChange={(e) => onValueChange('lock_size', e.target.value)}\n              ></input>\n              <span className=\"tickbox\"></span>\n              <span className=\"tick-label\">Transparent</span>\n            </label> */}\n          </div>\n        </div>\n\n        {['retail_name', 'custom_text', 'retail_text', 'kiosk', 'amenity'].includes(formData.layer_type) && (\n          <div className={styles.sidebarField}>\n            <label className={styles.label}>{['kiosk', 'amenity'].includes(formData.layer_type) ? 'Icon' : 'Text'} Color</label>\n            <div className={styles.fieldWrapper}>\n              <div className={styles.colorFieldGroup}>\n                <input\n                  name=\"text_color\"\n                  type=\"color\"\n                  className={styles.colorField}\n                  value={formData.text_color as string}\n                  onChange={onFieldChange}\n                />\n                <input\n                  type=\"text\"\n                  name=\"text_color\"\n                  className={styles.inputField}\n                  value={formData.text_color as string}\n                  onChange={onFieldChange}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PortalSidebarForm;\n\n\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState, useTransition } from \"react\";\nimport { Canvas, ThreeEvent } from \"@react-three/fiber\";\nimport useMeshFloors from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { Mesh, Object3D } from \"three\";\nimport { IExtMesh, MeshFloorsProps, IMeshValues, ZoomData, MapDeviceType } from \"src/interfaces\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../UIComponent\";\nimport styles from './SceneComponent.module.scss';\nimport RetailerInfoModal from \"./retailer-info/RetailerInfoModal\";\nimport { AllAmenities, MapAmenityID } from \"src/helpers/amenities.helper\";\nimport { cameraControlsDefaultVars, textLogoNamePrefix } from \"src/defaults\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { MapCameraControlsState, MapObjData } from \"src/interfaces/mapApiTypes\";\nimport PortalSidebarForm from \"./portal-sidebar-form/PortalSidebarForm\";\n\ninterface SceneComponentProps {\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObjData[]) => void;\n  onSubmit?: (data: MapObjData, refreshData?: () => void) => void;\n  onResetData?: (data: MapObjData) => void;\n  onChangeData?: (data: MapObjData) => void;\n  onNewData?: (data: MapObjData) => void;\n  onChangeCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: MapAmenityID[]) => void;\n  handleClickOnRetailer?: (retailer_id: number) => void;\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObjData,\n}\n\nconst SceneComponent = forwardRef((params: SceneComponentProps, ref) => {\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, onChangeCameraControlPosition, handleClickOnRetailer } = params;\n\n  const [triggerClick, setTriggerClick] = useState<boolean>(false);\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlsPosition, setCameraControlsPosition] = useState<MapCameraControlsState>(cameraControlsDefaultVars);\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const [deviceType, setDeviceType] = useState<MapDeviceType>('desktop');\n  const [IsCameraInit, setIsCameraInit] = useState(false);\n  const [refreshState, setRefreshState] = useState<boolean>(false);\n  const [, startTransition] = useTransition();\n\n  const [selectedRetailerId, setSelectedRetailerId] = useState<number>(0);\n\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [selectedAmenityMapObjName, setSelectedAmenityMapObjName] = useState<string>('');\n  const [zoom, setZoom] = useState<ZoomData | null>(null);\n\n  const [, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n\n  const floorsMapRef = useRef<{\n    resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null,\n    createRouteToStore: (retailerId: number) => void | null,\n    getInitialDistance: () => number,\n  }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const { setMapConfig, refetchMapData, mapApiResponse, mapConfig, floorsData, setMeshObject, indexedKiosks, initialFloorsDataIsLoaded } = useMapBoxContext();\n\n  const handleFloorChange = useCallback((floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }, [setSelectedFloorIndex])\n\n  const meshFloors = useMeshFloors();\n  const { meshParams, storeLogos, textParams, allSvgObjectIds } = meshFloors;\n\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const [, setSceneKey] = useState(0);\n\n  const updateKey = useCallback(() => {\n    setSceneKey((value) => value + 1)\n  }, [])\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n\n  useImperativeHandle(ref, () => ({\n    refetchMapData,\n    createRouteToAmenity: handleAmenityClick,\n    createRouteToStore: floorsMapRef.current?.createRouteToStore,\n    getInitialDistance: floorsMapRef.current?.getInitialDistance,\n    resetMap: resetHandle,\n    setMapConfig: setMapConfig,\n    refreshState: setRefreshState\n  }))\n\n  const setDeviceTypeCallback = useCallback((newCanvasWidth: number) => {\n    if (mapConfig.ROLE === 'DISPLAY_APP') {\n      setDeviceType('display_app');\n    } else if (mapConfig.ROLE === \"PORTAL_RESPONSIVE\") {\n      setDeviceType(mapConfig.DEVICE);\n    } else {\n      if (newCanvasWidth > 1024) {\n        setDeviceType('desktop');\n      } else if (newCanvasWidth > 767) {\n        setDeviceType('tablet');\n      } else {\n        setDeviceType('mobile');\n      }\n    }\n  }, [mapConfig])\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      const newCanvasWidth = statsParentRef.current.offsetWidth\n      setCanvasWidth(newCanvasWidth);\n      setDeviceTypeCallback(newCanvasWidth);\n      const resizeWidth = () => {\n        if (statsParentRef.current) {\n          const newCanvasWidth = statsParentRef.current.offsetWidth\n          setCanvasWidth(newCanvasWidth);\n          setDeviceTypeCallback(newCanvasWidth);\n        }\n      }\n      window.addEventListener('resize', resizeWidth);\n      resizeWidth();\n      return () => {\n        window.removeEventListener('resize', resizeWidth);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statsParentRef.current, refreshState, setDeviceTypeCallback]);\n\n  useEffect(() => {\n    if (mapConfig.ROLE === \"DISPLAY_APP\") {\n      setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.display_app);\n    } else if (mapConfig.ROLE === \"WP_SITE\") {\n      if (deviceType === 'desktop') {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.desktop);\n      } else if (deviceType === 'tablet') {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.tablet);\n      } else {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.mobile);\n      }\n    } else if (mapConfig.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (mapConfig.DEVICE === \"desktop\") {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.desktop);\n      } else if (mapConfig.DEVICE === \"display_app\") {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.display_app);\n      } else if (mapConfig.DEVICE === \"mobile\") {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.mobile);\n      } else if (mapConfig.DEVICE === \"tablet\") {\n        setCameraControlsPosition(mapConfig.CAMERA_CONTROLS_STATES.tablet);\n      }\n    }\n  }, [deviceType, mapConfig])\n\n  const handleCameraAndControlsChange = useCallback((cameraControlsState: MapCameraControlsState) => {\n    onChangeCameraControlPosition && onChangeCameraControlPosition(cameraControlsState);\n    //this state is unused, it's an expensive update, commenting it out\n    // setCameraControlsPosition(cameraControlsState);\n  }, [onChangeCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = mapConfig.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (selectedAmenityType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapData = useCallback((index: number, newData: MapObjData) => {\n    setFormMapObjData((prev) => {\n      const itemIndex = prev.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n      if (itemIndex !== -1) {\n        prev[itemIndex] = { index, data: { ...newData } };\n      } else {\n        prev.push({ index, data: { ...newData } })\n      }\n\n      return [...prev];\n    });\n\n  }, [])\n\n  const handleOnSubmit = useCallback((data: MapObjData) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refetchMapData);\n    }\n  }, [params, refetchMapData])\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = floorsData.length ? floorsData.length - 1 : 0;\n    if (indexedKiosks[mapConfig.KIOSK_ID]) {\n      const kioskMapObjName = indexedKiosks[mapConfig.KIOSK_ID].map_obj_name;\n      const currKioskMeshParams = meshParams?.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (mapConfig.ROLE === 'DEMO') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [mapConfig, meshParams, floorsData, indexedKiosks]);\n\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsData.length ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = useCallback((fullReset: boolean = false) => {\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setSelectedAmenityType('');\n    setSelectedRetailerId(0);\n    handleFloorChange(currKioskFloorIndex);\n\n    if (floorsMapRef.current) {\n      if (mapConfig.ROLE === \"PORTAL_RESPONSIVE\") {\n        floorsMapRef?.current?.resetCamera(fullReset);\n      } else {\n        floorsMapRef?.current?.resetCamera(fullReset);\n      }\n    }\n  }, [currKioskFloorIndex, handleFloorChange, mapConfig.ROLE, setSelectedActiveObjectId])\n\n  useEffect(() => {\n    const kiosks: IMeshValues[] = [];\n    meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n\n    const mapObjectIdToLogo = new Map();\n\n    storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapApiResponse.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        if (logo.userData.kioskConfig !== null) {\n          logo.userData.kioskConfig = {\n            lockSize: mapObj?.lock_size,\n            blink: item.object_id === currKioskId,\n            size: mapObj ? mapObj.size : mapConfig.KIOSK_SIZE,\n            floorIndex: kiosk.floor_index,\n          }\n          // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={true} size={mapObj ? Number(mapObj.size) : Number(mapConfig.KIOSK_SIZE)} />\n          logo.userData.distanceFactor = mapObj?.lock_size ? 1500 : undefined;\n          logo.visible = true;\n        }\n        currKioskLogo.push(logo);\n      }\n    });\n\n  }, [storeLogos, meshParams, currKioskObj, mapConfig, mapApiResponse.map_objs]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObjData[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData, onMapDataUpdate])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (mapConfig?.SELECTED_RETAILER_ID && IsCameraInit) {\n      setSelectedRetailerId(mapConfig.SELECTED_RETAILER_ID);\n    }\n  }, [mapConfig, IsCameraInit])\n\n  useEffect(() => {\n    if (mapConfig && selectedRetailerId > 0) {\n      const retailer = mapApiResponse.retailers.find(item => {\n        return item.id === selectedRetailerId;\n      })\n      if (retailer) {\n        const mapObject = mapApiResponse.map_objs.find(item => item.retailer_id === retailer.id);\n        const meshParam = meshParams?.flat().find(item => item.object_id === mapObject?.map_obj_name);\n        if (meshParam) {\n          setSelectedFloorIndex(meshParam.floor_index);\n        }\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [mapConfig, setSelectedActiveObjectId, selectedRetailerId, meshParams, mapApiResponse.map_objs, mapApiResponse.retailers])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const singleTextParams = textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object).object_id}`\n    })\n\n    const logoParams = storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object).object_id}`\n    })\n\n    const result = [object];\n\n    if (singleTextParams) {\n      result.push(singleTextParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    setMeshObject([...result]);\n  }, [storeLogos, textParams, setMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshParams && meshParams.length && selectedActiveObjectId) {\n      const object = meshParams[currentFloorIndex]?.find((value) => value.object_id === selectedActiveObjectId)?.mesh;\n      if (object) {\n        handleMeshObjectContext(object);\n      }\n    }\n  }, [meshParams, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string, map_obj_name?: string) => {\n    setSelectedActiveObjectId('');\n    setFromObjectId('')\n    setSelectedAmenityType(type)\n    if (map_obj_name) {\n      setSelectedAmenityMapObjName(map_obj_name);\n      if (mapConfig.ROLE === 'DISPLAY_APP') {\n        setSelectedActiveObjectId(map_obj_name);\n      }\n    }\n    if (mapConfig.ROLE === 'WP_SITE') {\n      setShowRetailerInfo(true);\n    }\n  }, [mapConfig.ROLE, setSelectedActiveObjectId]);\n\n  const handleObjectClick = useCallback((object: IExtMesh, targetId: string, softClick?: boolean) => {\n    if (!softClick && mapConfig.ROLE === 'DISPLAY_APP' && handleClickOnRetailer && object.mesh_type?.startsWith(\"store\")) {\n      const mapObj = mapApiResponse.map_objs.find((item) => item.map_obj_name === object.object_id && item.obj_type === \"retailer\")\n      if (mapObj) {\n        const retailer = mapApiResponse.retailers.find((item) => item.id === mapObj.retailer_id)\n        if (retailer) {\n          handleClickOnRetailer(retailer.id)\n        }\n      }\n\n      return false;\n    }\n\n    if (mapConfig.ROLE === 'DISPLAY_APP' && currKioskObj) {\n      handleFloorChange(currKioskFloorIndex);\n    }\n\n    startTransition(() => {\n      handleMeshObjectContext(object);\n      setSelectedActiveObjectId(targetId ?? '');\n      setTriggerClick(t => !t);\n      setSelectedRetailerId(0);\n      setSelectedAmenityType('');\n      setFromObjectId('');\n    })\n\n  }, [currKioskFloorIndex, currKioskObj, handleClickOnRetailer, handleFloorChange, handleMeshObjectContext, mapApiResponse.map_objs, mapApiResponse.retailers, mapConfig.ROLE, setSelectedActiveObjectId])\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    if (e.delta > 15) { // dragged 15px before release\n      return // likely a drag motion \n    }\n\n    const targetId = (e.object as IExtMesh).object_id as string;\n    const mapObj = mapApiResponse.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value as MapAmenityID, targetId);\n      if (mapConfig.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleObjectClick(e.object as IExtMesh, targetId ?? '');\n      if (mapConfig.ROLE !== 'PORTAL' && !mapConfig.KIOSK_ID && mapObj?.retailer_id) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [mapConfig, handleAmenityClick, setSelectedActiveObjectId, handleMeshObjectContext, handleObjectClick, mapApiResponse.map_objs]);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    if (e.object.userData.storeName === '') {\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const startMousePos = useRef<{ x: number | null, y: number | null, distance: number }>({ x: null, y: null, distance: -Infinity });\n\n  const onPointerMove = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    if (e.buttons > 0) {\n      if (startMousePos.current.x === null) {\n        startMousePos.current.x = e.clientX;\n      }\n      if (startMousePos.current.y === null) {\n        startMousePos.current.y = e.clientY;\n      }\n      if (startMousePos.current.x !== null && startMousePos.current.y !== null) {\n        let newDistance = Math.sqrt(Math.pow(startMousePos.current.x - e.clientX, 2) + Math.pow(startMousePos.current.y - e.clientY, 2));\n        if (newDistance > startMousePos.current.distance) {\n          startMousePos.current.distance = newDistance;\n        }\n      }\n    } else {\n      startMousePos.current.x = startMousePos.current.y = null;\n      startMousePos.current.distance = -Infinity;\n    }\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, [])\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    whiteSpace: 'nowrap'\n  }\n\n  const handleRetailerInfoOnClick = useCallback((map_obj_name: string, toMapObjName?: string) => {\n    setFromObjectId(map_obj_name);\n    if (toMapObjName) {\n      setSelectedActiveObjectId(toMapObjName || '');\n      // setSelectedAmenityType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }, [setFromObjectId, setShowRetailerInfo, setSelectedActiveObjectId])\n\n  if (!initialFloorsDataIsLoaded) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (floorsData.length <= 0) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!meshParams.length) {\n    if (mapConfig.ROLE === 'WP_SITE') {\n      return <div className=\"messageStyle\" style={messageStyle}>No Map for Center</div>\n    }\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div className=\"messageStyle\" style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && mapConfig.ROLE === 'DEMO') {\n    console.error('NO KIOSK OBJECT FOUND');\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: MeshFloorsProps = meshFloors as MeshFloorsProps;\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  return (\n    <>\n      {mapConfig.ROLE === 'PORTAL' &&\n        <div className={`mapBoxSidebar ${styles.mapBoxSidebar} ${selectedActiveObjectId ? styles.active : ''}`}>\n          <div className={`sidebarWrapper ${styles.sidebarWrapper}`}>\n            <div className={`sidebarBox ${styles.sidebarBox}`}>\n              {selectedActiveObjectId ? (\n                <PortalSidebarForm\n                  floorIndex={currentFloorIndex}\n                  meshFloors={meshFloors}\n                  setData={handleChangeMapData}\n                  selectedId={selectedActiveObjectId}\n                  onSubmit={handleOnSubmit}\n                  onResetData={params.onResetData}\n                  onChangeData={params.onChangeData}\n                  onNewData={params.onNewData}\n                  triggerSceneUpdate={updateKey}\n                />\n              ) : (\n                null\n                // <Alert variant=\"light\">Select a store to customize.</Alert>\n              )}\n            </div>\n          </div>\n        </div>\n      }\n\n      <div ref={statsParentRef} className={`mapBox ${styles.mapBox}`}>\n        <UIComponent\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          amenitiesList={AllAmenities}\n          handleAmenityClick={handleAmenityClick}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(mapConfig.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n\n          <SceneProperties background={mapConfig.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={mapConfig.CAMERA.far} fov={mapConfig.CAMERA.fov} />\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n\n          <FloorsMap\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            selectedAmenityType={selectedAmenityType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            ref={floorsMapRef}\n            cameraControlsPosition={cameraControlsPosition}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n            isSelectedRetailerSlug={true}\n            setIsCameraInit={setIsCameraInit}\n            handleObjectClick={handleObjectClick}\n            triggerClick={triggerClick}\n            deviceType={deviceType}\n          />\n        </Canvas>\n\n        {mapConfig.ROLE !== 'DISPLAY_APP' && (mapConfig.ROLE !== 'WP_SITE' || !['mobile', 'tablet'].includes(deviceType)) && (\n          <div ref={labelRef}\n            className={`store-name-placeholder ${styles.storeNamePlaceholder}`}\n            style={{ display: currentHoveredObject ? 'block' : 'none' }}\n          >{currentHoveredObject && currentHoveredObject.userData.storeName}</div>\n        )}\n      </div>\n\n      {mapConfig.ROLE === 'WP_SITE' &&\n        <RetailerInfoModal\n          show={showRetailerInfo}\n          onHide={() => setShowRetailerInfo(false)}\n          amenity={selectedAmenityType}\n          selectedAmenityMapObjName={selectedAmenityMapObjName}\n          mapObjectName={selectedActiveObjectId}\n          onClickMapObj={handleRetailerInfoOnClick}\n          allSvgObjectIds={allSvgObjectIds}\n        />\n      }\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { SVGResultPaths } from \"three-stdlib\";\nimport { Color, Vector2, Vector3 } from \"three\";\nimport { get_node_name } from \"./nodesUtils\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { MeshType } from \"./useMaterialAndGeometry\";\nimport { useCallback } from \"react\";\n\nexport const useMeshParams = () => {\n\n  const { mapConfig, floorsData, allNodesFloor, pathFinderGraph } = useMapBoxContext();\n\n  const getMeshParams = useCallback((path: SVGResultPaths, paths: SVGResultPaths[], floor_index: number, nodeCount: number) => {\n    const consolePrefix = 'MeshParams';\n\n    let mesh_type: MeshType = null;\n    var layer_color: Color | string = path.color.clone();\n    var extrude = 0;\n    var z_index = 0;\n    var mesh_visible = true;\n    var mesh_draw = true;\n    var mesh_transparent = false;\n    var line_thickness = mapConfig.WALL_THICKNESS;\n    var interactiveMesh = true;\n    var layer_name = path.userData?.node.id;\n\n    if (layer_name !== undefined) {\n      if (layer_name.startsWith('boundary')) {\n        mesh_type = 'boundary';\n        layer_color = mapConfig.BOUNDARY_COLOR;\n        line_thickness = mapConfig.BOUNDARY_THICKNESS;\n        if (mapConfig.STYLE === '3D') {\n          extrude = 9;\n        }\n      } else if (layer_name.startsWith('wall')) {\n        mesh_type = 'wall';\n        layer_color = mapConfig.WALL_COLOR;\n        if (mapConfig.STYLE === '3D') {\n          extrude = 8.5;\n        }\n      } else if (layer_name.startsWith('outer-wall')) {\n        mesh_type = 'outer-wall';\n        layer_color = mapConfig.WALL_COLOR;\n        if (mapConfig.STYLE === '3D') {\n          mesh_draw = false;\n        }\n      } else if (layer_name.startsWith('base')) {\n        mesh_type = 'base';\n        layer_color = mapConfig.BASE_COLOR;\n      } else if (layer_name.startsWith('store')) {\n        mesh_type = 'store';\n        layer_color = mapConfig.STORE_DEFAULT_COLOR;\n        if (mapConfig.STYLE === '3D') {\n          extrude = mapConfig.STORE_HEIGHT;\n        }\n        if (layer_name.startsWith('store-underlay')) {\n          interactiveMesh = false;\n        }\n        // } else if (layer_name.startsWith('big-store')) {\n        //   mesh_type = 'big-store';\n        //   layer_color = mapConfig.BIG_STORE_DEFAULT_COLOR;\n        //   if (mapConfig.STYLE === '3D') {\n        //     extrude = 16;\n        //   }\n      } else if (layer_name.startsWith('route-path')) {\n        mesh_type = 'route-path';\n        mesh_draw = false;\n        path.subPaths.forEach(subPath => {\n          if (subPath.curves.length === 0) {\n            console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n          }\n\n          subPath.curves.forEach(curve => {\n            //@ts-ignore\n            const v1: Vector2 = curve.v1;\n            //@ts-ignore\n            const v2: Vector2 = curve.v2;\n\n            const [node1_name, exists1] = get_node_name(v1, floor_index, floorsData, nodeCount);\n            if (!exists1) {\n              floorsData[floor_index].route_points?.push({\n                name: node1_name,\n                node: new Vector3(v1.x, v1.y, 1)\n              });\n              allNodesFloor[node1_name] = floor_index;\n            }\n            const [node2_name, exists2] = get_node_name(v2, floor_index, floorsData, nodeCount);\n            if (!exists2) {\n              floorsData[floor_index].route_points?.push({\n                name: node2_name,\n                node: new Vector3(v2.x, v2.y, 1)\n              });\n              allNodesFloor[node2_name] = floor_index;\n            }\n            pathFinderGraph.addNode(node1_name, { ...v1 });\n            pathFinderGraph.addNode(node2_name, { ...v2 });\n\n            // pathFinderGraph.addLink(node1_name, node2_name);\n            pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n            pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n          });\n        });\n      } else if (layer_name.startsWith('escalator-')) {\n        mesh_type = 'escalator';\n        mesh_visible = false;\n        mesh_transparent = true;\n      } else if (layer_name.startsWith('kiosk-')) {\n        mesh_type = 'kiosk';\n        mesh_transparent = true;\n      } else if (layer_name.startsWith('amenity-')) {\n        mesh_type = 'amenity';\n        mesh_transparent = true;\n        z_index = 1;\n      } else if (layer_name.startsWith('overlay')) {\n        mesh_type = 'overlay';\n      } else if (layer_name.startsWith('special-shape')) {\n        mesh_type = 'special-shape';\n      } else {\n        extrude = 1;\n      }\n    } else {\n      console.warn(consolePrefix + 'Layer name is undefined, path', path)\n    }\n\n    const returnData = {\n      mesh_type,\n      layer_color,\n      extrude,\n      z_index,\n      mesh_visible,\n      mesh_draw,\n      mesh_transparent,\n      line_thickness,\n      interactiveMesh,\n      path,\n      layer_name,\n    };\n\n    return returnData;\n  }, [allNodesFloor, floorsData, mapConfig.BASE_COLOR, mapConfig.BOUNDARY_COLOR, mapConfig.BOUNDARY_THICKNESS, mapConfig.STORE_DEFAULT_COLOR, mapConfig.STORE_HEIGHT, mapConfig.STYLE, mapConfig.WALL_COLOR, mapConfig.WALL_THICKNESS, pathFinderGraph])\n\n  return {\n    getMeshParams\n  }\n}","import React, { MutableRefObject, forwardRef, useImperativeHandle } from 'react';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport MapBoxContextProvider, { ProviderInitialData } from './contexts/MapBoxContextProvider';\nimport { AllAmenities, MapAmenityID } from './helpers/amenities.helper';\nimport SVGIcons from './helpers/svgIcons.helper';\nimport { MapAllDataResponse, MapCameraControlsState, MapObjData } from './interfaces/mapApiTypes';\nimport { MapConfigProps } from './interfaces';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/global.scss';\nimport styles from './MapBox.module.scss';\n\n\nexport type MapBoxRefProps = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: MapAmenityID) => void;\n  createRouteToStore: (retailerId: number) => void;\n  getInitialDistance: () => number;\n  resetMap: () => void;\n  refreshState: () => void;\n  setMapConfig: React.Dispatch<React.SetStateAction<MapConfigProps>>;\n  refetchMapData: () => void;\n}\n\nexport interface AppProps {\n  config: Partial<MapConfigProps>;\n  webApiURI: string;\n  onSubmit?: (data: MapObjData, refreshData?: () => void) => void;\n  mapBoxRefObj?: MutableRefObject<MapBoxRefProps | null> | undefined,\n  onResetData?: (data: MapObjData) => void;\n  onChangeData?: (data: MapObjData) => void;\n  onNewData?: (data: MapObjData) => void;\n  mapApiResponseRef?: MutableRefObject<MapAllDataResponse | null> | undefined;\n  onChangeCameraControlPosition?: (cameraControlPos: MapCameraControlsState) => void;\n  onExtractedAmenities?: (amenityIds: MapAmenityID[]) => void;\n  handleClickOnRetailer?: (retailer_id: number) => void;\n}\n\nconst MapBox = forwardRef((params: AppProps, ref) => {\n  const {\n    config,\n    webApiURI,\n    onSubmit,\n    mapBoxRefObj,\n    onChangeCameraControlPosition,\n    onResetData,\n    onChangeData,\n    onNewData,\n    mapApiResponseRef,\n    onExtractedAmenities,\n    handleClickOnRetailer\n  } = params;\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = React.useState<string>('');\n\n  useImperativeHandle(ref, () => {\n    return {\n      getInitialDistance: mapBoxRefObj?.current?.getInitialDistance\n    }\n  });\n\n  const handleOnSubmit = (data: MapObjData, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  const providerInitialData: ProviderInitialData = {\n    webApiBaseUrl: webApiURI,\n    config\n  }\n\n  return (\n    <MapBoxContextProvider mapApiResponseRef={mapApiResponseRef} initialData={providerInitialData}>\n      <div className={`mapBoxComponent ${styles.mapBoxComponent} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n        <SceneComponent\n          ref={mapBoxRefObj}\n          setSelectedActiveObjectId={setSelectedActiveObjectId}\n          selectedActiveObjectId={selectedActiveObjectId}\n          onSubmit={handleOnSubmit}\n          onResetData={onResetData}\n          onChangeData={onChangeData}\n          onNewData={onNewData}\n          onChangeCameraControlPosition={onChangeCameraControlPosition}\n          onExtractedAmenities={onExtractedAmenities}\n          handleClickOnRetailer={handleClickOnRetailer}\n        />\n\n        <div className={styles.hide}>\n          <div id={`map-special-svg-kiosk`} dangerouslySetInnerHTML={{ __html: SVGIcons.Kiosk }}></div>\n          <div id={`map-special-svg-escalator`} dangerouslySetInnerHTML={{ __html: SVGIcons.Escalator }}></div>\n\n          {AllAmenities.map((amenity, index) => (\n            <div key={index} id={`map-special-svg-${amenity.type}`} dangerouslySetInnerHTML={{ __html: amenity.svgCode }}></div>\n          ))}\n        </div>\n\n        {/*\n        don't delete below div,\n        its used for rendering the svg images temporarily to find the image width and height,\n        this was added to fix the issue with firefox,\n        firefox wasn't able to calculate width and height of the SVG images,\n        it was returning 0,0\n        */}\n        <div id='temp-image-rendering' className={styles.tempImageRendering}></div>\n      </div>\n    </MapBoxContextProvider>\n  );\n})\n\nexport default MapBox;\n"],"names":["hex_to_color","hex_code","withoutHex","replace","Color","length","parseInt","getSvgIconHTML","icon","svg","svg_block","document","getElementById","svg_element","querySelector","clonedSvgElement","cloneNode","querySelectorAll","forEach","svgColoredPart","setAttribute","XMLSerializer","serializeToString","mapVector0","x","y","z","cameraControlsDefaultVars","camera","controls","defaultPortalMapSettings","MAP_STYLE","MAP_BACKGROUND_COLOR","ACCENT_COLOR","STORE_DEFAULT_COLOR","STORE_TEXT_COLOR","STORE_HEIGHT","WALL_COLOR","BOUNDARY_COLOR","BASE_COLOR","OVERLAY_COLOR","WALL_THICKNESS","BOUNDARY_THICKNESS","OVERLAY_OPACITY","KIOSK_SIZE","ZOOM_STEP","SELECTED_ZOOM_LIMIT","CAMERA_MAX_DISTANCE","CAMERA_MIN_DISTANCE","mapConfigDefaultVars","ROLE","DEVICE","KIOSK_ID","CENTER_ID","SELECTED_RETAILER_ID","STATS","STYLE","DEBUG","CAMERA_CONTROLS_STATES","display_app","desktop","tablet","mobile","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","fov","far","minDistance","maxDistance","animSpeed","mapObjDefaultVars","id","retailer_id","kiosk_id","map_obj_name","obj_type","layer_type","value","custom_text","custom_image","bg_color","transparent","text_color","size","rotate","offset_x","offset_y","lock_size","textLogoNamePrefix","SVGIcons","AllAmenities","name","type","svgCode","MapBoxContext","createContext","undefined","MapBoxContextProvider","children","initialData","mapApiResponseRef","apiBaseUrl","webApiBaseUrl","loading","setLoading","useState","initialFloorsDataIsLoaded","setInitialFloorsDataIsLoaded","mapConfig","setMapConfig","config","mapApiResponse","setMapApiResponse","retailers","globalRetailerIds","floors","kiosks","map_objs","mapSettings","current","appData","setAppData","AMENITIES","FLOORS","KIOSKS","RETAILERS","meshByObjectId","setMeshByObjectId","Map","allMapObjects","setAllMapObjects","allIndexedMapObjects","setAllIndexedMapObjects","allIndexedRetailers","setAllIndexedRetailers","indexedKiosks","setIndexedKiosks","floorsData","setFloorsData","allNodesFloor","setAllNodesFloor","pathFinderGraph","setPathFinderGraph","createGraph","ngraphPath","setNgraphPath","path","meshObject","setMeshObject","cameraLength","setCameraLength","apiServices","useMemo","createApiServices","baseApiUrl","center_id","axiosInstance","axios","create","baseURL","timeout","headers","interceptors","response","use","error","console","mapApiService","defaults","getMapData","Promise","resolve","reject","then","mapDataItems","data","items","item","push","catch","err","getMapFloors","title","svgUrl","getMapKiosks","getMapSettings","settings","dbSettings","settingsToReturn","apiResponse","responseConfig","getMapResponsiveSettings","createMapApiService","retailersService","getAllRetailers","fetchData","currentPage","count","global_retailer_id","retail_name","slug","retailer_description","description","location","retailer_phone","logo","media","url","getRetailer","resp","opening_hours","createRetailersService","useEffect","refetchMapData","useCallback","all","mapData","mapFloors","mapKiosks","responsiveSettings","mapObjNames","map","map_obj","filter","index","indexOf","reduce","acc","retailer","kiosk","mapObj","find","floor","objsGroup","Group","scale","lookAt","interactiveObjs","escalatorsObjs","escalatorsNodes","escalatorMeshes","route_points","route_tube","route_texture","routeMeshes","route_active","_jsx","Provider","useMapBoxContext","context","useContext","Error","renderOrders","escalator","underlay","overlay","base","store","wall","boundary","amenity","useMaterialAndGeometry","getRenderOrder","mesh_type","getMaterial","layer_name","layer_color","mesh_transparent","material_settings","color","side","DoubleSide","depthWrite","depthTest","opacity","includes","material","MeshLambertMaterial","colorDefault","active","getGeometry","extrude","line_thickness","consolePrefix","extrude_meshes","shapes","toShapes","geometry","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","subPaths","subPath","curves","curve","shape_extend","shape1","thickness","wallShape","Shape","point1","Vector3","v1","point2","v2","dir","clone","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","distanceTo","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","warn","mergeGeometries","ShapeGeometry","attributes","position","userData","node","e","message","getMaterialAndGeometry","mesh_visible","z_index","floor_index","mesh","Mesh","object_id","visible","storeName","renderOrder","escalator_id","route_node_id","useRouteHelper","getDistance","fromNode","toNode","link","weight","fromFloor","toFloor","Math","abs","delete_route_path","dispose","remove","get_route_nodes","from_node_name","to_node_name","aStarPathFinder","routeNodes","get_route_texture","ctx","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","create_route_path","style","route_path","CurvePath","i","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","setDrawRange","create_route_paths","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","routeCallback","routePaths","from_obj","getObjectByProperty","to_obj","from_route_floor_index","to_route_floor_index","nba","oriented","blocked","debug","routeNodesEsclators","reverse","floor_routes","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","escalator_clone","floor_route","routePath","create_route","get_nodes_distance","getLink","linkFloorEscalators","escalatorsByFloors","escalatorIdsByFloors","fromEntries","entries","elevatorString","splitResult","split","escalatorId","slice","join","isExitOnly","isEntranceOnly","upOnly","downOnly","floorsTo","j","fromEscalatorId","fromEscalator","k","floor_escalators","nodeIdFromDetails","nodeIdFrom","floorTo","nodeIdTo","addLink","make_amenity_route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","aStar","amenity_node_name","route_distance","assign_route_nodes_to_stores","find_store_node_raycaster","result","currentFloor","point","origin_point","target_direction","set","storeIntersects","intersectObjects","object","escalatorIntersects","escalatorNodes","get_node_name","vertex","node_count","exists","node_name","next_node_name","useDrawLogoHelper","addTextOrLogoOnStore","myFont","add_store_name_logo","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","rotateZ","PI","getImage","getBlobUrlFromImageUrl","imageUrl","fetch","ok","statusText","blob","URL","createObjectURL","_catch","svg_image_name","svg_color","svgData","svgBlob","Blob","startsWith","processImage","imgUrl","afterOnload","img","crossOrigin","src","onload","previewContainer","appendChild","setTimeout","drawImage","texture","PlaneGeometry","onerror","getImageLogo","new_object_id","mesh_center_point","handleAsync","logoMesh","storeLogo","get_store_name_logo_geometry","boundingBox","computeBoundingBox","getCenter","getSize","text","text_material","text_geometry","TextGeometry","font","curveSegments","center","textMesh","debug_name","drawTextLogoStoreOnMap","allNonIndexedMapObjects","textLogoLayerAddedIndex","getMeshGroupBoundingBox","Array","isArray","box","obj","union","Box3","SceneProperties","params","useThree","background","CameraProperties","props","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","animateTexture","offsetVector","removeFromParent","useFrame","MapCenterMarker","lockSize","blink","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","svgOrigin","svgTexture","Texture","needsUpdate","_jsxs","Html","jsx","className","MapObject","currentFloorIndex","triggerUpdate","kioskConfig","floorIndex","htmlContent","pointerEvents","distanceFactor","uuid","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","meshParams","textParams","storeLogos","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","React","Fragment","boundingSphere","display","stopPropagation","dangerouslySetInnerHTML","__html","get_camera_focus_object","objs","aspectRatio","target","objsBoundingBox","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","selectedAmenityType","zoom","handleCameraLength","handleCameraAndControlsChange","isSelectedRetailerSlug","setIsCameraInit","handleObjectClick","triggerClick","cameraControlsPosition","deviceType","cameraLimits","setCameraLimits","min","initialDistance","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","isUseDefaultsLimits","resetCamera","fullReset","selectedFloorMeshParams","meshes","focus","aspect","isZeroCCS","cameraV3","cameraDistance","setLength","fromPosition","fromTarget","animationStartTime","duration","cl","focusDistance","clearEscalators","flat","targetMesh","currentActiveObject","getInitialDistance","onCameraMove","vector","animationTime","animationProgress","lerpVectors","createRouteToStore","retailerId","mapObjs","useImperativeHandle","rotation","jsxs","_Fragment","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","UIComponent","selectedFloorIndex","handleFloorChange","amenitiesList","zoomIn","zoomOut","reset","handleAmenityClick","onExtractedAmenities","extractValues","styles","map_controls","preventDefault","Function","amenities","content","RetailerInfoModal","show","onHide","selectedAmenityMapObjName","mapObjectName","onClickMapObj","allSvgObjectIds","retailerInfo","setRetailerInfo","availableRetailersOnMap","setAvailableRetailersOnMap","availableGlobalRetailerIdsOnMap","setAvailableGlobalRetailerIdsOnMap","selectedRetailerId","setSelectedRetailerId","retailerIds","Set","values","has","filteredMapRetailers","Boolean","sort","a","localeCompare","Modal","dialogClassName","centered","scrollable","XCircle","Body","alt","href","numberStr","Form","FormGroup","Select","disabled","PortalSidebarForm","setData","selectedId","onResetData","onChangeData","onNewData","triggerSceneUpdate","textFont","useFont","textFontInterface","objType","setObjType","layerType","setLayerType","formData","setFormData","oldMapObjName","setOldMapObjName","startTransition","useTransition","intervalRefs","selectedKiosksId","setSelectedKiosksId","recheckSelectedKiosksId","ids","prev","cur","updateMapCenterMarkerFor","Number","makeImage","_temp2","_temp","_getImage","_getImage2","updateTooltip","makeTextGeometry","updateData","isUserAction","findIndex","clearKioskConfig","onObjTypeChange","onLayerTypeChange","onValueChange","toString","parseFloat","setX","setY","MeshPhongMaterial","meshType","onFieldChange","mapObjData","Date","getTime","handleDecrement","hasOwn","handleIncrement","startDecrementing","window","setInterval","startIncrementing","stopInterval","clearInterval","retailerOptions","label","kioskOptions","isDisabled","amenityOptions","handleDelete","assign","classNamePrefix","menuPortalTarget","body","options","isLoading","noOptionsMessage","placeholder","option","onRetailerChange","selectedOption","actionMeta","onKioskChange","onAmenityChange","rows","onMouseDown","onMouseUp","onMouseLeave","handleRotationInSteps","remainder","ArrowClockwise","SceneComponent","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","onChangeCameraControlPosition","handleClickOnRetailer","setTriggerClick","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","setCameraControlsPosition","canvasWidth","setCanvasWidth","setDeviceType","IsCameraInit","refreshState","setRefreshState","setSelectedAmenityType","setSelectedAmenityMapObjName","setZoom","statsParentRef","floorsMapRef","useMeshFloors","setMeshParams","setTextParams","setStoreLogos","setEscalatorNodes","loadedFloors","useLoader","SVGLoader","GeometriesAndMaterials","graph","svgFloors","getMeshParams","useMeshParams","paths","nodeCount","mesh_draw","interactiveMesh","node1_name","exists1","node2_name","exists2","addNode","returnData","svgFloor","findStoreNodeRaycaster","Raycaster","routeNodeIds","get","floorGeometries","useLoadFloors","fontData","handleAsyncStoreLogos","meshLogo","prevLogos","clearScene","TextsAndLogos","labelRef","currentHoveredObject","setCurrentHoveredObject","setSceneKey","updateKey","showRetailerInfo","setShowRetailerInfo","createRouteToAmenity","resetMap","resetHandle","setDeviceTypeCallback","newCanvasWidth","offsetWidth","resizeWidth","addEventListener","removeEventListener","cameraControlsState","activeFromObjectId","handleChangeMapData","newData","itemIndex","handleOnSubmit","onSubmit","cursor","kioskError","kioskMapObjName","currKioskMeshParams","mapObjectIdToLogo","currKioskId","meshParam","handleMeshObjectContext","singleTextParams","logoParams","targetId","softClick","t","delta","startMousePos","Infinity","buttons","clientX","clientY","newDistance","sqrt","top","offsetY","left","offsetX","messageStyle","transform","whiteSpace","handleRetailerInfoOnClick","toMapObjName","meshFloorsChecked","Canvas","Stats","parent","intensity","MapBox","webApiURI","mapBoxRefObj","refreshData"],"mappings":"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"}