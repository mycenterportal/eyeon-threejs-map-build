{"version":3,"file":"index.cjs","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/globals.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/components/Amenities/ATM.tsx","../src/components/Amenities/Management.tsx","../src/components/Amenities/PlayArea.tsx","../src/components/Amenities/Restroom.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Amenities/Elevator.tsx","../src/components/Amenities/Security.tsx","../src/components/Icons/DogPoopStation.tsx","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/helpers/draw.logo.helpers.ts","../src/Hooks/useMeshFloors/index.tsx","../src/defaults.ts","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent/FloorSelector.tsx","../src/components/UIComponent/index.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/components/MapboxForm/MapboxForm.tsx","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type {Vector2} from \"three\";\nimport {IFloorData} from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n    return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string , boolean] {\n    let exists = false;\n    let node_name:string = '-name-not-found-';\n    const currentFloor = floors[floor_index];\n    if (currentFloor.route_points !== undefined) {\n        for (let i = 0; i < currentFloor.route_points.length; i++) {\n            if (vertex.x == currentFloor.route_points[i].node.x && vertex.y == currentFloor.route_points[i].node.y) {\n                exists = true;\n                node_name = currentFloor.route_points[i].name;\n                break;\n            }\n        }\n        if (!exists) {\n            node_name = next_node_name(node_count);\n            // draw_points([{ x: vertex.x, y: vertex.y }]);\n        }\n    }\n    return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport {Graph} from \"ngraph.graph\";\nimport {Color, LineCurve, Vector2, Vector3} from \"three\";\nimport {get_node_name} from \"./nodesUtils\";\nimport {MeshType} from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n    const consolePrefix = 'MeshParams';\n    let mesh_type:MeshType = null;\n    var layer_color: Color | string = path.color.clone();\n    var extrude = 0;\n    var z_index = 0;\n    var mesh_visible = true;\n    var mesh_draw = true;\n    var mesh_transparent = false;\n    var line_thickness = config.WALL_THICKNESS;\n    var interactiveMesh = true;\n    var layer_name = path.userData?.node.id;\n    if (layer_name != undefined) {\n        if (layer_name.startsWith('boundary')) {\n            mesh_type = 'boundary';\n            layer_color = config.BOUNDARY_COLOR;\n            line_thickness = config.BOUNDARY_THICKNESS;\n            if (config.STYLE == '3D') {\n                extrude = 9;\n            }\n        } else if (layer_name.startsWith('wall')) {\n            mesh_type = 'wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 8.5;\n            }\n        } else if (layer_name.startsWith('outer-wall')) {\n            mesh_type = 'outer-wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                mesh_draw = false;\n            }\n        } else if (layer_name.startsWith('building-base')) {\n            mesh_type = 'building-base';\n            layer_color = config.BUILDING_BASE_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 12;\n                z_index = -12;\n            }\n        } else if (layer_name.startsWith('base')) {\n            mesh_type = 'base';\n            layer_color = config.BASE_COLOR;\n        } else if (layer_name.startsWith('store')) {\n            mesh_type = 'store';\n            layer_color = config.STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = parseInt(config.STORE_HEIGHT);\n            }\n            if (layer_name.startsWith('store-underlay')) {\n                interactiveMesh = false;\n            }\n        } else if (layer_name.startsWith('big-store')) {\n            mesh_type = 'big-store';\n            layer_color = config.BIG_STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 16;\n            }\n        } else if (layer_name.startsWith('route-path')) {\n            mesh_type = 'route-path';\n            mesh_draw = false;\n            path.subPaths.forEach(subPath => {\n                if (subPath.curves.length == 0) {\n                    console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n                }\n\n                subPath.curves.forEach(curve => {\n                    //@ts-ignore\n                    const v1:Vector2 = curve.v1;\n                    //@ts-ignore\n                    const v2:Vector2 = curve.v2;\n\n                    const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n                    if (!exists1) {\n                        floors[floor_index].route_points?.push({\n                            name: node1_name,\n                            node: new Vector3(v1.x, v1.y, 1)\n                        });\n                        allNodesFloor[node1_name] = floor_index;\n                    }\n                    const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n                    if (!exists2) {\n                        floors[floor_index].route_points?.push({\n                            name: node2_name,\n                            node: new Vector3(v2.x, v2.y, 1)\n                        });\n                        allNodesFloor[node2_name] = floor_index;\n                    }\n                    pathFinderGraph.addNode(node1_name, { ...v1 });\n                    pathFinderGraph.addNode(node2_name, { ...v2 });\n\n                    // pathFinderGraph.addLink(node1_name, node2_name);\n                    pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n                    pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n                });\n            });\n        } else if (layer_name.startsWith('escalator-')) {\n            mesh_type = 'escalator';\n            mesh_visible = false;\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('kiosk-')) {\n            mesh_type = 'kiosk';\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('amenity-')) {\n            mesh_type = 'amenity';\n            mesh_transparent = true;\n            z_index = 1;\n        } else if (layer_name.startsWith('overlay')) {\n            mesh_type = 'overlay';\n        } else if (layer_name.startsWith('special-shape')) {\n            mesh_type = 'special-shape';\n        } else {\n            extrude = 1;\n        }\n    } else {\n        console.warn(consolePrefix + 'Layer name is undefined, path', path)\n    }\n\n\n    /*console.debug({\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    })*/\n    return {\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    }\n}","import createGraph from \"ngraph.graph\";\nimport {IRetailer, MapObj} from \"./mapitApiTypes\";\nimport type {Mesh} from \"three\";\nimport path from \"ngraph.path\";\n\nexport const meshByObjectId = new Map<string,Mesh>();\nexport const allMapObjects:string[] = [];\nexport const allIndexedMapObjects = {} as Record<string, MapObj>;\nexport const allIndexedRetailers = {} as Record<string, IRetailer>;\nexport const allNodesFloor = {} as Record<string, number>;\n\n//<{ x:number, y:number }, { weight: number }>\nexport const pathFinderGraph = createGraph();\nexport const ngraphPath = path;\n","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import ATMIcon from \"src/components/Amenities/ATM\";\nimport ElevatorIcon from \"src/components/Amenities/Elevator\";\nimport ManagementIcon from \"src/components/Amenities/Management\";\nimport PlayAreaIcon from \"src/components/Amenities/PlayArea\";\nimport RestroomIcon from \"src/components/Amenities/Restroom\";\nimport SecurityIcon from \"src/components/Amenities/Security\";\nimport DogPoopStation from \"src/components/Icons/DogPoopStation\";\nimport FamilyRestroom from \"src/components/Icons/FamilyRestroom\";\nimport { IAmenitiesInteractiveList } from \"src/types\";\n\nexport const amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        icon: ATMIcon,\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        icon: ManagementIcon,\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        icon: PlayAreaIcon,\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        icon: RestroomIcon,\n    },\n    {\n        name: 'Family Restroom',\n        type: 'family-restroom',\n        icon: FamilyRestroom,\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        icon: ElevatorIcon,\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        icon: SecurityIcon,\n    },\n    {\n        name: 'Dog Poop Station',\n        type: 'dog-poop-station',\n        icon: DogPoopStation,\n    },\n] \n\n","const ATMIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ATMIcon;","\nconst ManagementIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default ManagementIcon;","\nconst PlayAreaIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default PlayAreaIcon;","\nconst RestroomIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default RestroomIcon;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst ElevatorIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ElevatorIcon;","\nconst SecurityIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default SecurityIcon;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","import {BackSide, Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry, Vector3} from \"three\";\nimport {getWallShape} from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\nimport {allMapObjects} from \"../../globals\";\nimport {IConfig, IExtMesh, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {hex_to_color} from \"../../helpers/misc\";\n\nimport {IRetailer, MapObj} from \"../../mapitApiTypes\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n    'route-path': 0,\n    'escalator': 0,\n    'underlay': 0,\n    'overlay': 1,\n    'building-base': 1,\n    'base': 2,\n    'store': 3,\n    'big-store': 4,\n    'kiosk': 5,\n    'wall': 6,\n    'outer-wall': 7,\n    'boundary': 8,\n    'amenity': 9,\n    'layer-image': 10,\n    'layer-text': 11,\n    'route-tube': 12,\n    'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n        return renderOrders[mesh_type];\n    }\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\n    return 0;\n}\n\nexport const getMaterial = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    layer_color: Color | string,\n    mesh_transparent: boolean,\n    allIndexedMapObjects: Record<string, MapObj>,\n) => {\n    const material_settings = {\n        color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n        side: DoubleSide,\n        transparent: false,\n        depthWrite: true,\n        depthTest: true,\n        opacity: 1,\n    }\n    if (config.STYLE == '2D' || mesh_type == 'base' || mesh_type == null) {\n        if (mesh_type != 'boundary') {\n            material_settings.depthWrite = false;\n            material_settings.depthTest = false;\n        }\n    }\n    if (mesh_type == 'overlay') {\n        material_settings.color = config.OVERLAY_COLOR;\n        material_settings.opacity = config.OVERLAY_OPACITY;\n    }\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE != 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent == 1) {\n        material_settings.opacity = 0;\n    }\n    var material = new MeshLambertMaterial(material_settings);\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        material.colorDefault = material.color;\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color != '') {\n            material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n            //@ts-ignore\n            material.colorDefault = material.color;\n        }\n        //@ts-ignore\n        material.active = false;\n    }\n    if (config.ROLE != 'PORTAL' && mesh_transparent) {\n        material.opacity = 0;\n        material.transparent = true;\n    }\n\n    material.transparent = material.opacity !== 1;\n\n    return material;\n}\n\nexport const getGeometry = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    extrude: number,\n    line_thickness: number,\n    path: any,\n) => {\n    const consolePrefix = 'MaterialAndGeometry';\n\n    let shapes = path.toShapes(true);\n\n    // shapes.forEach((shape, index) => {\n    let extrude_meshes;\n    if (config.STYLE == '2D') {\n        extrude_meshes = ['building-base'];\n    } else {\n        extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n    }\n\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n    var geometry;\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\n        geometry = new ExtrudeGeometry(shapes, {\n            depth: -extrude,\n            bevelEnabled: false,\n        });\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n        //@ts-ignore\n        let wall_geometries = [];\n        //@ts-ignore\n        path.subPaths.forEach(subPath => {\n            //@ts-ignore\n            subPath.curves.forEach(curve => {\n                if (curve.type == 'LineCurve') {\n                    let shape_extend = 0;\n                    if (mesh_type == 'boundary') {\n                        shape_extend = 1;\n                    } else if (mesh_type == 'wall') {\n                        // shape_extend = 1 / 3;\n                    }\n                    let shape1 = getWallShape(curve, line_thickness, shape_extend);\n                    let wall_geometry = new ExtrudeGeometry(shape1, {\n                        depth: -extrude,\n                        bevelEnabled: false,\n                    });\n                    wall_geometries.push(wall_geometry);\n                } else {\n                    console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n                }\n            });\n        });\n\n        if (wall_geometries.length == 1) {\n            //@ts-ignore\n            geometry = wall_geometries[0];\n        } else if (wall_geometries.length > 1) {\n            //@ts-ignore\n            geometry = mergeGeometries(wall_geometries);\n        } else {\n            console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n        }\n    } else {\n        geometry = new ShapeGeometry(shapes);\n        try {\n            //@ts-ignore\n            if (geometry.attributes.position.count == 0) {\n                console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n            }\n        } catch (e: any) {\n            console.error(e.message);\n        }\n    }\n\n    return geometry;\n}\n\nexport const getMaterialAndGeometry = (config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n    \n    const material = getMaterial(\n        config,\n        mesh_type,\n        layer_name,\n        layer_color,\n        mesh_transparent,\n        allIndexedMapObjects\n    );\n\n    const geometry = getGeometry(\n        config,\n        mesh_type,\n        layer_name,\n        extrude,\n        line_thickness,\n        path\n    );\n\n    const mesh = new Mesh(geometry, material) as IExtMesh;\n    mesh.object_id = layer_name;\n    mesh.mesh_type = mesh_type;\n    mesh.floor_index = floor_index;\n    mesh.visible = mesh_visible;\n    mesh.position.z = z_index;\n    let storeName = '';\n    if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n        if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type == 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n            storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].custom_text;\n            if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n                storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n            }\n        } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].value;\n            if (storeName.length > 1) {\n                const amenity = amenitiesList.find(item => item.type === storeName)\n                if (amenity) {\n                    storeName = amenity.name;\n                }\n            }\n        }\n    }\n    mesh.userData.storeName = storeName;\n    if (config.STYLE == '2D') {\n        mesh.renderOrder = getRenderOrder(mesh_type);\n        if (layer_name && layer_name.includes('underlay')) {\n            mesh.renderOrder = getRenderOrder('underlay');\n        }\n    }\n\n    floors[floor_index].objsGroup.add(mesh);\n\n    if (mesh_type == 'escalator') {\n        floors[floor_index].escalatorsNodes[layer_name] = null;\n        floors[floor_index].escalatorsObjs.push(mesh);\n        mesh.escalator_id = floor_index + '-' + layer_name;\n    }\n\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        mesh.route_node_id = null;\n\n        // add floor_index to the kiosks\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'kiosk') {\n            var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n            /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n                ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n            }*/\n        }\n\n        if (config.ROLE === 'PORTAL') {\n            allMapObjects.push(layer_name);\n        }\n        if (\n            (config.ROLE !== 'PORTAL' && mesh_type == 'kiosk') ||\n            (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type == 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n            (config.ROLE !== 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'amenity' && allIndexedMapObjects[layer_name].value != '') ||\n            (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n            (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type?? ''))\n        ) {\n            // if (interactiveMesh) {\n            floors[floor_index].interactiveObjs.push(mesh);\n            // }\n        } else if (\n            (config.ROLE === 'PORTAL')\n        ) {\n            floors[floor_index].interactiveObjs.push(mesh);\n        }\n    }\n\n    // if (['store', 'big-store'].includes(mesh_type as string)) {\n    //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n    // }\n\n    return {\n        mesh,\n        geometry,\n        material,\n        object_id: layer_name,\n        mesh_type,\n        floor_index,\n        visible: mesh_visible,\n        renderOrder: mesh.renderOrder,\n    }\n    // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n    BufferGeometry,\n    CanvasTexture,\n    Color,\n    CurvePath,\n    DoubleSide,\n    LineCurve3,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    Raycaster,\n    Scene,\n    TubeGeometry,\n    Vector3,\n} from \"three\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport {PathFinder} from \"ngraph.path\";\nimport {IRetailer, MapObj} from \"../mapitApiTypes\";\nimport {IExtMesh, IFloorData} from \"../types\";\nimport {Graph, Node} from \"ngraph.graph\";\n\nconst consolePrefix = 'ROUTE: ';\nlet route_exists = null;\nlet activeMapObjectName: string | null = null;\n\nfunction makeObjectActive(object_id: string | null = null, accentColor: string | Color, scene: Scene) {\n    clearActiveEffect(scene);\n    if (object_id != null) activeMapObjectName = object_id;\n    let obj = scene.getObjectByProperty('object_id', activeMapObjectName as string) as IExtMesh;\n    // obj.material.color = config.ACCENT_COLOR;\n    //@ts-ignore\n    obj.material.color = new Color(`#${accentColor}`);\n    //@ts-ignore\n    obj.material.active = true;\n    return obj;\n}\n\nfunction clearActiveEffect(scene: Scene) {\n    if (activeMapObjectName) {\n        let obj = scene.getObjectByProperty('object_id', activeMapObjectName) as IExtMesh;\n        //@ts-ignore\n        obj.material.color = { ...obj.material.colorDefault };\n        //@ts-ignore\n        obj.material.active = false;\n        activeMapObjectName = null;\n    }\n}\n\nexport function delete_route_path(floors: IFloorData[]) {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n        const floor = floors[floor_index];\n        floor.route_active = false;\n\n        if (floor.route_tube != null) {\n            floor.route_tube.geometry.dispose();\n            //@ts-ignore\n            floor.route_tube.material.dispose();\n            floor.objsGroup?.remove(floor.route_tube);\n        }\n\n        floor.route_tube = undefined;\n        floor.route_texture = null;\n        floor.escalatorMeshes = [];\n    }\n}\n\nexport function create_route(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n    if (from_mesh_object_id === to_mesh_object_id) {\n        return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[] , floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    // console.log({\n    //     from_mesh_object_id,\n    //     to_mesh_object_id,\n    //     from_obj,\n    //     to_obj,\n    //     from_node_name,\n    //     to_node_name,\n    // })\n\n    // from_node_name = 'node-147';\n    // to_node_name = 'node-221';\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n        return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n        const routeNode = routeNodes[index];\n        if (floor_routes[allNodesFloor[routeNode.id]]) {\n            floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n        } else {\n            floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n        }\n\n        if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n            // don't consider these middle escalators nodes\n        } else {\n            routeNodesEsclators.push(routeNode);\n        }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n        const routeNode = routeNodesEsclators[index];\n        if (\n            allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n            && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n        ) {\n            const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n            const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n            let goToFloor = null;\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index + 1].id],\n                    direction: 'Next',\n                };\n            }\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index - 1].id],\n                    direction: 'Previous',\n                };\n            }\n\n            if (goToFloor && escalator_mesh) {\n                escalator_mesh.goToFloor = goToFloor;\n                //@ts-ignore\n                floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n            }\n        }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n        const floor_route = floor_routes[floor_index];\n        if (floor_route && floor_route.length > 1) {\n            const routePath = create_route_path(floor_route, floor_index, floors, style);\n            routePaths[floor_index] = routePath;\n\n            floors[floor_index].route_active = true;\n            floors[floor_index].routeMeshes = [ routePath ];\n            if (floor_index === from_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(from_obj);\n            }\n            if (floor_index === to_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(to_obj);\n\n            }\n        }\n    }\n\n    // setTimeout(function () {\n    //     //TODO openFloorMap functionality\n    //     // openFloorMap(from_route_floor_index);\n    // });\n\n    return routePaths;\n}\n\nfunction create_route_path(\n    routeNodes: Node<any>[],\n    floor_index: number,\n    floors: IFloorData[],\n    style = '2D',// config.STYLE\n) {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n        let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n        let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n        route_path.add(new LineCurve3(from_node, to_node));\n        distance += from_node.distanceTo(to_node);\n    };\n    var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    //@ts-ignore\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n        map: get_route_texture(distance, floor_index, floors),\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style === '2D') {\n        route_tube.position.z = -10;\n        route_tube.scale.z = 0.1;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n    return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n        let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n        distance += link?.data.weight || 0;\n    };\n    return distance;\n}\n\nfunction draw_route_tube(route_tube: IExtMesh, total_faces: number) {\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, total_faces);\n    /*createjs.Ticker.framerate = 60;\n    createjs.Tween.get({ x: 0 },\n        {\n            onChange: function (event) {\n                route_tube.geometry.setDrawRange(0, event.target.target.x);\n            },\n            onComplete: function () {\n                animate_route_path(floors);\n            }\n        })\n        .to({ x: total_faces }, 1000, createjs.Ease.cubicInOut);\n    */\n}\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n        ctx.canvas.width = distance;\n        ctx.canvas.height = 80;\n\n        ctx.fillStyle = \"#4ea5ff\";\n        ctx.fillRect(0, 0, distance, 80);\n\n        let grd_width = 0.1 * distance;\n        const min_grd_width = 60;\n        const max_grd_width = 120;\n        if (grd_width < min_grd_width) grd_width = min_grd_width;\n        if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n        let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n        grd.addColorStop(0, \"#4ea5ff\");\n        grd.addColorStop(0.4, \"white\");\n        grd.addColorStop(0.6, \"white\");\n        grd.addColorStop(1, \"#4ea5ff\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n        floors[floor_index].route_texture = route_texture;\n\n        return route_texture;\n    } else {\n        return undefined;\n    }\n}\n\n//TODO\nfunction animate_route_path(floors: IFloorData[]) {\n    /*floors.forEach(floor => {\n        if (floor.route_texture != null) {\n            createjs.Ticker.framerate = 60;\n            createjs.Tween.get(floor.route_texture.offset, { loop: true })\n                .to({ x: -1 }, 2000, createjs.Ease.cubicInOut)\n        }\n    });*/\n}\n\nexport function assign_route_nodes_to_stores(\n    floor_index: number,\n     floors: IFloorData[],\n     allIndexedMapObjects: Record<string, MapObj>,\n     allIndexedRetailers: Record<string, IRetailer>,\n     allNodesFloor: Record<string, number>,\n     escalator_nodes: string[],\n     find_store_node_raycaster: Raycaster,\n     role: string, //config.ROLE\n     ) {\n    const result = new Map();\n    const currentFloor = floors[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n        currentFloor.route_points.forEach(point => {\n            let origin_point = new Vector3(point.node.x, point.node.y, -10);\n            let target_direction = new Vector3(0, 0, 1);\n            find_store_node_raycaster.set(origin_point, target_direction);\n            //@ts-ignore\n            var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n            if (storeIntersects.length) {\n                //@ts-ignore\n                storeIntersects[0].object.route_node_id = point.name;\n                //@ts-ignore\n                result.set(storeIntersects[0].object.object_id, point.name);\n                if (false && role != 'PORTAL') {\n                    //@ts-ignore\n                    var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n                    if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n                        var retailer_index = allIndexedRetailers[retailer_id].index;\n                        // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n                    }\n                }\n            }\n\n            var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n            if (escalatorIntersects.length) {\n                const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n                let escalator_obj_id = obj.object_id;\n                const escalatorNodes = floors[floor_index].escalatorsNodes;\n                if (escalatorNodes) {\n                    escalatorNodes[escalator_obj_id as string] = point.name;\n                    allNodesFloor[point.name] = floor_index;\n                    escalator_nodes.push(point.name);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n    // console.log('linkFloorEscalators', floors)\n    if (floors.length > 1) {\n        for(let i=0; i < (floors.length-1); i++) {\n            // console.log('floors[i]',i, floors[i])\n            const floor_escalators = floors[i].escalatorsNodes;\n            // console.log('floor_escalators', floor_escalators);\n            Object.keys(floor_escalators as object).forEach(escalator => {\n                if (floors[i].escalatorsNodes?.[escalator] != null && floors[i+1].escalatorsNodes?.[escalator] != null) {\n                    // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n                    const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n                    const nodeIdTo = floors[i+1].escalatorsNodes?.[escalator];\n                    if (nodeIdFrom && nodeIdTo) {\n                        pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                        pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n                    }\n                } else {\n                    // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n                }\n            })\n        }\n    }\n}\n\nexport function make_amenity_route(kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string ): Mesh[] {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    // if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj? kiosk_obj.route_node_id : '';\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for(let key in allIndexedMapObjects) {\n        const mapObject = allIndexedMapObjects[key];\n        if (\n            mapObject.layer_type === 'amenity'\n            && mapObject.obj_type === 'special'\n            && mapObject.value === amenity_type\n        ) {\n            map_objs.push(key);\n        }\n    }\n    map_objs.forEach((amenity_obj_name: string, index: number) => {\n        let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n            var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n            if (route_distance && route_distance < shortest_distance) {\n                shortest_distance = route_distance;\n                to_obj_name = amenity_obj_name;\n            }\n        } catch(e: any) {\n            console.warn(`Amenity Path: ${e.message}`);\n        }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n        to_obj_name = amenity_node_name;\n    }\n    });\n    return create_route(kiosk_obj_name, to_obj_name?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import {getMeshParams} from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport {IConfig, IFloorData, IMeshValues, TMapMode, TRoles} from \"src/types\";\nimport {allIndexedMapObjects, allIndexedRetailers, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport {getMaterialAndGeometry} from \"./getMaterialAndGeometry\";\nimport {Raycaster} from \"three\";\nimport {assign_route_nodes_to_stores, linkFloorEscalators} from \"src/helpers/route.helpers\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(floors:IFloorData[], config:IConfig, results:SVGResult[], role?: TRoles) {\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n    const escalator_nodes: string[] = [];\n    results.forEach((result, floor_index) => {\n        if (result.paths && result.paths.length) {\n            const pathIds = [];\n            for (let i = 0; i < result.paths.length; i++) {\n                pathIds.push(result.paths[i]?.userData?.node.id);\n            }\n            const paths = result.paths;\n            for (let i = 0; i < paths.length; i++) {\n                const {\n                    mesh_type,\n                    layer_color,\n                    extrude,\n                    z_index,\n                    mesh_visible,\n                    mesh_draw,\n                    mesh_transparent,\n                    line_thickness,\n                    interactiveMesh,\n                    path,\n                    layer_name,\n                } = getMeshParams(\n                    paths[i],\n                    paths,\n                    floors,\n                    floor_index,\n                    config,\n                    ++node_count,\n                    //@ts-ignore\n                    allNodesFloor,\n                    pathFinderGraph\n                );\n\n                if (mesh_draw) {\n                    const meshParams = getMaterialAndGeometry(\n                        config,\n                        mesh_type,\n                        layer_name,\n                        layer_color,\n                        mesh_transparent,\n                        mesh_visible,\n                        z_index,\n                        extrude,\n                        line_thickness,\n                        floors,\n                        floor_index,\n                        allIndexedMapObjects,\n                        allIndexedRetailers,\n                        path,\n                        role\n                    );\n\n                    if (layer_name.startsWith('kiosk-')) {\n                        if (role === 'PORTAL') {\n                            // meshParams.mesh.visible = false;\n                            //@ts-ignore\n                            // meshParams.mesh.material.visible = false;\n                        }\n                    }\n\n                    if (!GeometriesAndMaterials[floor_index]) {\n                        GeometriesAndMaterials[floor_index] = [];\n                    }\n\n                    GeometriesAndMaterials[floor_index].push(meshParams);\n                }\n            }\n            const findStoreNodeRaycaster = new Raycaster();\n            const routeNodeIds = assign_route_nodes_to_stores(\n                floor_index,\n                floors,\n                allIndexedMapObjects,\n                allIndexedRetailers,\n                allNodesFloor,\n                escalator_nodes,\n                findStoreNodeRaycaster,\n                config.ROLE\n            );\n            \n            if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n                for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n                    if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n                        GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n                    }\n                }\n            }\n\n            linkFloorEscalators(floors, pathFinderGraph);\n\n        }\n    })\n\n    return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes};\n}","import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3, Color, SphereGeometry } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport {IExtMesh} from \"../types\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {hex_to_color} from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n        addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n        //@ts-ignore\n        add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n}\n\nfunction deleteMeshByObjectID(object_id: string, scene: Scene, floors: Record<any, any>) {\n    if (object_id) {\n        let mesh = scene.getObjectByProperty('object_id', object_id);\n        if (mesh) {\n            //@ts-ignore\n            mesh.geometry.dispose();\n            //@ts-ignore\n            mesh.material.dispose();\n            //@ts-ignore\n            floors[mesh.floor_index].objsGroup.remove(mesh);\n        }\n    }\n}\n\nfunction getCenterPoint(mesh: Mesh) {\n    var mesh_center_point = new Vector3();\n    getMeshGroupBoundingBox(mesh).getCenter(mesh_center_point);\n    return mesh_center_point;\n}\n\nfunction getMeshSize(mesh: Mesh) {\n    var point = new Vector3();\n    //@ts-ignore\n    getMeshGroupBoundingBox(mesh).getSize(point);\n    return point;\n}\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n    if (!Array.isArray(mesh)) {\n        mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        //@ts-ignore\n        box.union(obj.geometry.boundingBox);\n        return box;\n    }, new Box3());\n    return box;\n}\n\nfunction layer_text_logo_position(mesh: Mesh, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    const object_id = (mesh as IExtMesh).object_id;\n    if (!object_id) return;\n    return layer_text_logo_position_by_id(object_id, newMeshPos, mesh_size, newMesh, allIndexedMapObjects);\n}\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    let map_obj = allIndexedMapObjects[object_id];\n\n    if (!map_obj) {\n        map_obj = {\n            offsetX: \"0\",\n            offsetY: \"0\",\n            rotate: \"0\",\n        }\n    }\n\n    let offsetX = parseInt(map_obj.offsetX);\n    let offsetY = parseInt(map_obj.offsetY);\n\n    newMeshPos.z = -mesh_size.z;\n\n    //@ts-ignore\n    newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n    //@ts-ignore\n    newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += offsetX;\n    newMeshPos.y += offsetY;\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n        const img = new Image();\n        img.crossOrigin = 'Anonymous';\n        if (map_obj.obj_type == 'retailer') {\n            if (retailer) {\n                img.src = retailer.logo;\n            } else {\n                console.error('retailer not found');\n                return null;\n            }\n        } else if (map_obj.obj_type == 'special') {\n    \n            let svg_image_name = map_obj.value;\n            if (map_obj.layer_type == 'kiosk') svg_image_name = 'kiosk';\n            if (map_obj.layer_type == 'escalator') svg_image_name = 'escalator';\n            if (svg_image_name) {\n                let svg_color = '222222';\n                if (map_obj.text_color != null) {\n                    svg_color = map_obj.text_color;\n                }\n    \n                const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n                if (!svg_block) {\n                    console.error('svg_block not found', svg_image_name);\n                    return null;\n                }\n                const svg_element = svg_block.querySelector(\"svg\");\n                if (!svg_element) {\n                    console.error('svg_element not found', svg_image_name);\n                    return null;\n                }\n    \n                const svgColoredParts = svg_element.querySelectorAll('[fill]');\n                svgColoredParts.forEach((svgColoredPart) => {\n                    svgColoredPart.setAttribute('fill', '#' + svg_color);\n                })\n    \n                const svgData = (new XMLSerializer()).serializeToString(svg_element);\n                img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n            }\n    \n        } else {\n            img.src = map_obj.custom_image;\n        }\n\n        return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    img.onload = function () {\n        const c = document.createElement(\"canvas\");\n        const ctx = c.getContext(\"2d\");\n\n        c.width = img.width;\n        c.height = img.height;\n\n        ctx?.drawImage(img, 0, 0);\n\n        let texture = new CanvasTexture(c);\n        texture.colorSpace = 'srgb'\n\n        const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n        const material = new MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            side: DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n        });\n        \n        afterOnload(geometry, material);\n    };\n}\n\nfunction getImageLogo(allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry,object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: {storeLogo: Object3D}) => void): void {\n    const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n    if (map_obj.layer_type == 'escalator') {\n        console.debug({img})\n    }\n\n    if (img === null) return;\n\n    processImage(img, map_obj, (geometry, material) => {\n        const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n        // @ts-ignore\n        const floor_index = mesh.floor_index;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n        logoMesh.object_id = new_object_id;\n        logoMesh.floor_index = floor_index;\n        logoMesh.renderOrder = getRenderOrder('layer-image');\n        floors[floor_index]?.objsGroup.add(logoMesh);\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        logoMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        //@ts-ignore\n        BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        \n        handleAsync({storeLogo: BoundingSphereMesh});\n        */\n        handleAsync({storeLogo: logoMesh});\n    })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id:string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): {textMesh: IExtMesh} | null | false {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n        return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    let map_obj: MapObj = allIndexedMapObjects[object_id]? allIndexedMapObjects[object_id] : {layer_type: object_id.startsWith('escalator')? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8};\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            text = '';\n        }\n\n        let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n        if (map_obj.text_color) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n        textMesh.userData.font = myFont;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        textMesh.object_id = new_object_id;\n        textMesh.floor_index = floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        if (map_obj.layer_type === 'retail_name') {\n            textMesh.userData.retail_name = text;\n        }\n\n        floors[floor_index].objsGroup.add(textMesh);\n\n        //scene.add(textMesh);\n        //console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        */\n        result = { textMesh };\n    }\n\n    else if (\n       map_obj.layer_type == 'retail_logo' ||\n       map_obj.layer_type == 'custom_image' ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'kiosk' && map_obj.kiosk_id != null) ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'amenity' && map_obj.value != '')\n       || (map_obj.layer_type == 'escalator')\n   ) {\n        getImageLogo(allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n   }\n   return result;\n}","import {\n    Group,\n    Scene,\n    Object3D,\n    Mesh,\n    BufferGeometry,\n    Color,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport {loadFloors} from \"./loadFloors\";\nimport type {IConfig, IExtMesh, IFloorData, IMeshParams, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {defaultVars, mapit2DefaultVars} from \"../../defaults\";\nimport {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport {drawTextLogoStoreOnMap, get_store_name_logo_geo} from \"src/helpers/draw.logo.helpers\";\nimport { FontLoader, Font } from \"three-stdlib\";\nimport { IJsonConfig, IMeshParamsTmp} from \"../../types\";\nimport {hex_to_color} from \"src/helpers/misc\";\nimport {Kiosk, Floor, MapIt2Response, MapObj} from \"../../mapitApiTypes\";\nimport { EventedType } from \"ngraph.events\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars}\n\nconst defaultMapObjValues = {\n\tid: null,\n\tcenter_id: config.CENTER_ID,\n\tretailer_id: null,\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: 8,\n\trotate: 0,\n\toffsetX: 0,\n\toffsetY: 0,\n} as Record<string, string | number | null| undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\nconst extraMapObjects = []\nlet activeMapObjectName = null;\nconst floorsData:IFloorData[] = [];\nconst floors = [] as Floor[];\nlet floors_loaded = 0;\nlet MEDIA_STORAGE_URI: string = '';\n\nfunction select<T>(...values: T[]) {\n    return values.find(value => value !== '' && value != null) || values.at(-1);\n}\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n\tfor (let key in obj) {\n\t\tdelete obj[key];\n\t}\n}\n\nfunction makeIndexedMapObjects(map_objs: MapObj[]) {\n\tclearObject(allIndexedMapObjects);\n\n    allNonIndexedMapObjects = map_objs;\n\n    for (let i = 0; i < map_objs.length; i++) {\n        const obj = map_objs[i];\n        allIndexedMapObjects[obj.map_obj_name] = obj;\n        for (let key in defaultMapObjValues) {\n            const value = defaultMapObjValues[key];\n            //@ts-ignore\n            if (value != null && obj[key] == null) {\n                //@ts-ignore\n                allIndexedMapObjects[obj.map_obj_name][key] = value;\n            }\n        }\n    }\n}\n\nconst init = (config: IJsonConfig, floors:IFloorData[], response: MapIt2Response) => {\n    const KIOSKS:Record<string, Kiosk> = {};\n\n    response.kiosks.forEach((kiosk) => {\n        const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n        if (mapObj) {\n            kiosk.map_obj_name = mapObj.map_obj_name;\n        }\n        KIOSKS[kiosk.id] = kiosk;\n    });\n\n\n    for (let index in response.retailers) {\n        const retailer = response.retailers[index];\n        allIndexedRetailers[retailer.id] = retailer;\n        allIndexedRetailers[retailer.id].index = index;\n    }\n\n    // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n    // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n    makeIndexedMapObjects(response.map_objs);\n\n    floors.length = 0;\n    response.floors.forEach((value: IFloorData, index: number) => {\n        const objsGroup = new Group();\n        objsGroup.scale.y *= -1;\n        objsGroup.lookAt(0, 1, 0);\n\n        floors.push({\n            id: value.id,\n            // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n            svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n            title: value.title,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n        });\n    });\n    const DEFAULT_CAMERA_FOV = 75;\n    const WP_SITE_CAMERA_FOV = 30;\n    const DEFAULT_CAMERA_FAR = 10000;\n    config.CAMERA.far = DEFAULT_CAMERA_FAR;\n    config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n    const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n    config.CAMERA.maxDistance *= fovCorrection;\n    config.CAMERA.far *= fovCorrection;\n\n    const processedConfig: IConfig = {\n        ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n        BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n        BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n        BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n        BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n        BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n        CAMERA: {\n            ...config.CAMERA,\n            minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE)? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n            maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE)? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n        },\n        CAMERA_CONTROLS_STATES: response.camera_controls_states[config.DEVICE],\n        CENTER_ID: config.CENTER_ID,\n        CONTROLS: null,\n        DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n        DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n        DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n        DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n        DEVICE: config.DEVICE,\n        KIOSK: config.KIOSK? config.KIOSK : '',\n        KIOSKS: KIOSKS,\n        MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n        ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n        OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n        OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n        ROLE: config.ROLE,\n        SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n        STATS: config.STATS === 'true' || config.STATS === '1',\n        STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n        STORE_HEIGHT: response.settings.STORE_HEIGHT? response.settings.STORE_HEIGHT : config.STORE_HEIGHT? config.STORE_HEIGHT : '8',\n        STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n        STYLE: response.settings.STYLE? response.settings.STYLE : config.STYLE? config.STYLE : '3D',\n        WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n        WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n        FLOORS: response.floors,\n        AMENITIES: response.amenities,\n        RETAILERS: response.retailers,\n        AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n        AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n        KIOSK_SIZE: response.settings.KIOSK_SIZE? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    };\n\n    // AMENITIES_NAV_BG_COLOR: string;\n    // AMENITIES_NAV_ICON_COLOR: string;\n\n    return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response|null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n    const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n    const [textParams, setTextParams] = useState<Array<{textMesh:IExtMesh}[]>>([]);\n    const [storeLogos, setStoreLogos] = useState<{storeLogo: Mesh}[][]>([]);\n    const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n    const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n    const [urls, setUrls] = useState<string[]>([]);\n    const [ processedConfig, setProcessedConfig ] = useState<IConfig|null>(null);\n    let result = useLoader(SVGLoader, urls);\n\n    MEDIA_STORAGE_URI = useMemo(() => {\n        const r = /\\/$/;\n        if (mediaStorageURI) {\n            return mediaStorageURI?.replace(r, '');\n        }\n\n        return '';\n\n    }, [mediaStorageURI])\n\n    const consolePrefix = 'MAPIT2';\n    // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n    const myFont = useFont(fontData as unknown as FontData);\n\n    // const getWallShape = (...params: any): Shape | Shape[] => {\n    //     return []\n    // }\n\n\n    const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: {storeLogo: Mesh}) => {\n        setStoreLogos((prevLogos) => {\n            // console.debug({floorIndex});\n            if (prevLogos[floorIndex]) {\n                prevLogos[floorIndex].push({...meshLogo});\n            } else {\n                prevLogos[floorIndex] = [{...meshLogo}];\n            }\n            // console.debug({prevLogos});\n            return [...prevLogos];\n        });\n    }), [])\n\n\n    useEffect(() => {\n        if (!data) return;\n\n\n        // console.log('useMeshFloors[data]', {data})\n\n        const processedConfig = init(jsonConfig ? {...config, ...jsonConfig} : config, floorsData, data as MapIt2Response);\n        const values: string[] = [];\n        processedConfig.FLOORS.forEach((value) => {\n            // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n            //@ts-ignore\n            values.push(`${value.svg}`);\n        });\n\n        setProcessedConfig(processedConfig);\n        setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n    return () => {\n        if (meshParams) {\n            meshParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.mesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (textParams) {\n            textParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.textMesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (storeLogos) {\n            storeLogos.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.storeLogo.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        setMeshParams([]);\n        setTextParams([]);\n        setStoreLogos([]);\n    }\n    }, [data]);\n\n    useEffect(() => {\n        if (!processedConfig || !urls.length || !myFont || !result) return;\n\n        const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(floorsData, processedConfig, result, role);\n        const TextsAndLogos:Array<{textMesh:IExtMesh}[]> = [];\n        allNonIndexedMapObjects.forEach((params) => {\n            let values: IMeshValues | undefined;\n            for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n                //@ts-ignore\n                values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n                if (values !== undefined) {\n                    break;\n                } \n            }\n            if (!values) return null;\n            const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n            if (textParams) {\n                if (!TextsAndLogos[values.floor_index]) {\n                    TextsAndLogos[values.floor_index] = [];\n                }\n                TextsAndLogos[values.floor_index].push(textParams);\n            }\n        })\n        const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n            return (acc + item.length);\n        }, 0);\n        const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n        if (countNonIndexedObjs > 0) {\n            const mapObjNames = new Set<string>();\n            allNonIndexedMapObjects.forEach((item) => {\n                mapObjNames.add(item.map_obj_name);\n            });\n            GeometriesAndMaterials.forEach((items) => {\n                items.forEach(item => {\n                    if (!mapObjNames.has(item.object_id)) {\n                        const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n                        if (textParams) {\n                            if (!TextsAndLogos[item.floor_index]) {\n                                TextsAndLogos[item.floor_index] = [];\n                            }\n                            TextsAndLogos[item.floor_index].push(textParams);\n                        }\n                    }\n                })\n            });\n        }\n        setMeshParams(GeometriesAndMaterials);\n        setTextParams(TextsAndLogos);\n        setPathFinderGraph(graph);\n        setEscalatorNodes([...escalator_nodes]);\n\n    }, [processedConfig, urls, result, myFont]);\n\n    return useMemo(() => {\n        return {\n            config: processedConfig,\n            meshParams,\n            textParams,\n            storeLogos,\n            floors: floorsData,\n            pathFinderGraph,\n            escalator_nodes: escalatorNodes,\n        }\n    }, [ processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes ])\n}\n\nexport default useMeshFloors","import {IJsonConfig} from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n    ROLE: 'WEBSITE',\n    DEVICE: 'display_app',\n    CENTER_ID: '',\n    KIOSK: '',\n    STYLE: '3D',\n    DEFAULT_SELECTED_STORE: '',\n    DEBUG: '1',\n\n    MAP_BACKGROUND_COLOR: \"FFFFFF\",\n    ACCENT_COLOR: \"4EA5FF\",\n    STORE_DEFAULT_COLOR: \"E2E2E2\",\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n    WALL_THICKNESS: '0.6',\n    WALL_COLOR: \"888888\",\n    BOUNDARY_THICKNESS: '0.8',\n    BOUNDARY_COLOR: \"888888\",\n    BASE_COLOR: \"25292B\",\n    STORE_TEXT_COLOR: \"222222\",\n    OVERLAY_COLOR: \"FFFFFF\",\n    OVERLAY_OPACITY: '0.7',\n    // AMENITIES_NAV_BG_COLOR: \"000000\",\n    // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    }\n}\n\nexport const defaultVars: IJsonConfig = {\n    MAP_BACKGROUND_COLOR: '',\n    ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n    DEVICE: 'display_app',\n    KIOSK: '',\n    FLOORS: [],\n    KIOSKS: {},\n    CENTER_ID: null,\n    STATS: 'false',\n    STYLE: '3D', // 2D, 3D\n    DEBUG: '0',\n    ACCENT_COLOR: '4EA5FF',\n    STORE_DEFAULT_COLOR: 'E2E2E2',\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n    WALL_THICKNESS: '0.6',\n    BOUNDARY_THICKNESS: '0.8',\n    WALL_COLOR: '888888',\n    BOUNDARY_COLOR: '888888',\n    BASE_COLOR: '25292B',\n    BUILDING_BASE_COLOR: 'DADADA',\n    STORE_TEXT_COLOR: '222222',\n    OVERLAY_COLOR: 'FFFFFF',\n    OVERLAY_OPACITY: '0.7',\n    CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n    ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n    DEFAULT_CAMERA_POSITION: null, // custom default camera position\n    DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n    DEFAULT_SELECTED_STORE: null,\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    },\n    KIOSK_SIZE: '15',\n};","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import {IExtMesh, IMeshParams, IMeshValues, TRoles} from \"../../types\";\nimport {ThreeEvent, useThree} from \"@react-three/fiber\";\nimport React, {MouseEventHandler} from \"react\";\nimport {Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB, BoxHelper} from \"three\";\nimport {RouteTube} from \"./RouteTube\";\nimport {Html} from \"@react-three/drei\";\nimport styles from '../../MapBox.module.css';\n\ninterface IMapProps {\n    floorIndex: number,\n    meshFloors: IMeshParams;\n    currKioskObj: Mesh | null;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    routeTube?: Mesh;\n    visible: boolean,\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>;\n}\n\nconst getDarkerColor = (color: RGB) => {\n    if (color) {\n        var newColor = { ...color }\n        newColor.r = color.r * 0.92;\n        newColor.g = color.g * 0.92;\n        newColor.b = color.b * 0.92;\n        return newColor;\n    }\n    return null;\n}\n\nfunction MapObject(props: { type: string, mesh:IExtMesh, visible:boolean, params?:IMeshValues}) {\n    const [ update, setUpdate ] = React.useState(false);\n    const { type, mesh, params } = props;\n    const { camera } = useThree();\n    React.useEffect(() => {\n        mesh.userData.triggerUpdate = () => {\n            setUpdate((value) => !value);\n        };\n    }, [mesh.userData, setUpdate]);\n\n    // console.warn({update});\n    switch (type) {\n        case 'storeLogo':\n            return <primitive key={mesh.uuid} object={mesh}>\n            {mesh.userData.htmlContent? <Html distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n        default:\n            return null;\n    }\n}\n\nexport const Map = (params: IMapProps) => {\n    const {meshFloors, routeTube, floorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor} = params;\n\n    const { config, meshParams, textParams, storeLogos} = meshFloors;\n    const floor = meshFloors.floors[floorIndex];\n\n    const onPointerMove = params.onPointerMove;\n    const onPointerOver = params.onPointerEnter;\n    const onPointerOut = params.onPointerLeave;\n    const onClick = params.onClick;\n\n    const floorMeshParams = meshParams[floorIndex];\n    const floorTextParams = textParams[floorIndex];\n    const floorStoreLogos = storeLogos[floorIndex];\n    const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n    // console.log('Map', floorIndex, { meshParams, floorIndex, floorMeshParams, floorTextParams, floorStoreLogos, routeTubes})\n    return (\n        <group visible={visible}>\n            {floorMeshParams?.map((params) => {\n                if (!params.mesh) return null;\n\n                const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n                const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n                const active = activeObjectId && params.mesh.object_id === activeObjectId;\n                if (interactive) {\n                    // TODO: move those colorDefault, active, etc to userData of mesh or material\n                    if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n                        // @ts-ignore\n                        const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n                        //console.log('Map', {baseColor, active, hovered})\n                        params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n                    } else {\n                        // @ts-ignore\n                        params.mesh.material.color = params.mesh.material.colorDefault;\n                    }\n                }\n\n                return <group key={params.mesh.uuid} {...(interactive? {onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n                    <primitive object={params.mesh}></primitive>\n                </group>\n            })}\n            {floorTextParams?.map((params) => {\n                if (!params.textMesh) return null;\n                return <primitive key={params.textMesh.uuid} object={params.textMesh}>\n                </primitive>\n            })}\n            {floorStoreLogos?.map((params) => {\n                if (!params.storeLogo) return null;\n\n                return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} type={'storeLogo'} visible={visible} />\n            })}\n            {escalatorMeshes?.map((params) => {\n                //@ts-ignore\n                return <primitive key={`escalator-${params.object_id}`} object={params}>\n                    <Html visible={true} position={params.geometry.boundingSphere?.center}>\n                        <div onClick={handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n                            <div className={styles.element} id={params.object_id as string}>\n                                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\n                            </div>\n                        </div>\n                    </Html>\n                </primitive>\n            })}\n            <RouteTube mesh={routeTube} />\n        </group>\n    )\n}","import type {Mesh} from \"three\";\nimport {Box3, Vector3} from \"three\";\n\nexport function get_camera_focus_object(objs:Mesh[], fov:number, aspectRatio: number, style: string) {\n    // config.STYLE\n    // config.CAMERA.fov\n\n    if (!Array.isArray(objs)) {\n        objs = [objs];\n    }\n    if (!objs.length) {\n        console.warn('get_camera_focus_object: no objects passed');\n        return { position: new Vector3(), target: new Vector3() };\n    }\n\n    const objsBoundingBox = objs.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        if (obj.geometry.boundingBox) {\n            box.union(obj.geometry.boundingBox);\n        }\n        return box;\n    }, new Box3());\n\n    const obj_size = new Vector3();\n    objsBoundingBox.getSize(obj_size);\n\n    const center = new Vector3();\n    objsBoundingBox.getCenter(center);\n\n    objs[0].localToWorld(center);\n\n    // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n    // var padding = max_length * 0.2;\n    // if (padding > 50) padding = 50;\n    // max_length += padding;\n    // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n    let tanFOV = Math.tan(Math.PI * fov / 360);\n    let padding = 1.1;\n    let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n    let new_height = (obj_size.y * padding) / 2 / tanFOV;\n    let new_y = Math.max(new_width, new_height);\n    let new_z = getCameraTiltPosition(new_y, style);\n\n    const target = new Vector3(center.x, 0, center.z);\n    const position = new Vector3(center.x, new_y, center.z + new_z);\n\n    // createjs.Ticker.framerate = 60;\n    // createjs.Tween.get(config.CONTROLS.target)\n    //     .to({ x: center.x, z: center.z }, 400);\n    // createjs.Tween.get(config.CAMERA.position)\n    //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n    return {position, target};\n}\n\nfunction getCameraTiltPosition(y:number, style:string): number {\n    let angle = 60;\n    if (style == '2D') angle = 89.9;\n    return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IJsonConfig, IMeshParams, TMapMode } from \"../../types\";\nimport { Map } from \"./Map\";\nimport React, { MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\nimport { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { isMobile } from \"react-device-detect\";\n\ninterface IFloorsMapProps {\n    meshFloors: IMeshParams;\n    currentFloorIndex: number;\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    onCameraMove?: (e: any) => void;\n    currKioskObj: Mesh;\n    routeTargetId?: string;\n    routeTargetFromId?: string;\n    amenityTargetType: string;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>,\n    escalatorNodes: string[];\n    zoom: IZoomData | null;\n    handleCameraLength?: (length: number) => void;\n    config: IConfig;\n    cameraPos?: { x: number, y: number, z: number } | undefined | null;\n    controlPos?: { x: number, y: number, z: number } | undefined | null;\n    handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n    const [firstMove, setFirstMove] = useState<boolean>(false);\n    const { meshFloors,\n        currentFloorIndex,\n        currKioskObj,\n        routeTargetId,\n        routeTargetFromId,\n        amenityTargetType,\n        handleChangeFloor,\n        escalatorNodes,\n        zoom,\n        handleCameraLength,\n        config,\n        cameraPos,\n        controlPos,\n        handleCameraAndControlsChange,\n        activeObjectId } = params;\n    const { floors } = meshFloors;\n\n    const groupRef = useRef<Group>(null);\n    const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n    const mapControlRef = useRef<any>(null);\n    const { camera, scene } = useThree();\n    const cameraFocus = useRef<{\n        position: Vector3, target: Vector3,\n        fromPosition: Vector3, fromTarget: Vector3,\n        animationStartTime: number, duration: number\n    } | null>(null);\n    // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n    const style = meshFloors.config.STYLE;\n    const accentColor = meshFloors.config.ACCENT_COLOR;\n    const pathFinderGraph = meshFloors.pathFinderGraph;\n    const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n        routeTargetFromId ? routeTargetFromId : undefined;\n\n    useEffect(() => {\n        if (!amenityTargetType || config.ROLE === 'PORTAL') {\n            setRouteTubes([]);\n            return;\n        }\n        const route = make_amenity_route(from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n        setRouteTubes(route);\n    }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from])\n\n    useEffect(() => {\n        if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n            if (config.ROLE === 'PORTAL') {\n                if (routeTargetId) {\n                    const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n                    if (targetMesh) {\n                        setRouteTubes([targetMesh as IExtMesh])\n                    }\n                } else {\n                    setRouteTubes([]);\n                }\n            } else {\n                // setRouteTubes([]);\n            }\n            return;\n        }\n        if (!amenityTargetType) {\n            floors.forEach(floor => {\n                floor.escalatorMeshes = [];\n            });\n        }\n\n\n        console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n        /* MAKE ROUTE PATH */\n\n        const route = create_route(from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n        // TODO: activate object (moved out of create_route function)\n        // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n        // TODO: focus object (moved out of create_route function)\n        // if (!routePaths.length) {\n        //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n        //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n        //     camera.position.copy(position);\n        // }\n\n\n        setRouteTubes(route);\n\n    }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE]);\n\n    const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n    useEffect(() => {\n        if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n\n        if (!activeObjectId && config.ROLE !== 'PORTAL')\n        {\n            return;\n        }\n\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n        let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n        let meshes: Mesh[];\n        if (routeTubes[currentFloorIndex] && routeMeshes) {\n\n            if(config.ROLE === \"WP_SITE\")\n            {\n                meshes = [...routeMeshes]\n            }\n            else {\n                meshes = [routeTubes[currentFloorIndex]];\n\n                const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n                if (currentActiveObject) {\n                    meshes.push(currentActiveObject.mesh);\n                }\n            }\n          \n        } else {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n\n        // return () => {\n        //     cameraFocus.current = null;\n        // };\n    }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed]);\n\n    useEffect(() => {\n        if (zoom?.direction && mapControlRef.current) {\n            if (!(camera instanceof PerspectiveCamera)) {\n                console.error('Camera is not a PerspectiveCamera');\n                return;\n            }\n\n            if (!selectedFloorMeshParams.length) {\n                console.warn('objects not loaded yet');\n                return;\n            }\n\n            let meshes: Mesh[];\n            if (routeTubes[currentFloorIndex]) {\n                meshes = [routeTubes[currentFloorIndex]];\n\n                const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n                if (currentActiveObject) {\n                    meshes.push(currentActiveObject.mesh);\n                }\n            } else {\n                meshes = selectedFloorMeshParams.map(item => item.mesh);\n            }\n            const focus = {\n                position: mapControlRef.current.object.position.clone(),\n                target: mapControlRef.current.target.clone()\n            };\n\n            let cameraDistance = focus.position.distanceTo(focus.target);\n            const zoomStep = cameraDistance * 0.4;\n\n            if (zoom.direction === 'in') {\n                cameraDistance -= zoomStep;\n            } else {\n                cameraDistance += zoomStep;\n            }\n\n            cameraDistance = Math.min(\n                config.CAMERA.maxDistance,\n                Math.max(\n                    config.CAMERA.minDistance,\n                    cameraDistance\n                )\n            );\n\n            focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n            cameraFocus.current = {\n                ...focus,\n                fromPosition: mapControlRef.current.object.position.clone(),\n                fromTarget: mapControlRef.current.target.clone(),\n                animationStartTime: performance.now(),\n                duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n            };\n        }\n    }, [zoom])\n\n    useEffect(() => {\n        if (mapControlRef.current) {\n\n            // Set initial camera position\n            if (cameraPos)\n                mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n            // Set initial controls target\n            if (controlPos)\n                mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n            mapControlRef.current.update();\n        }\n    }, [mapControlRef]);\n\n    useEffect(() => {\n        if (mapControlRef.current) {\n            if (cameraPos)\n                mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n            // Set initial controls target\n            if (controlPos)\n                mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n            mapControlRef.current.update();\n        }\n    }, [cameraPos, controlPos]);\n\n\n    const onCameraMove = useCallback((e: any) => {\n        if (handleCameraLength) {\n            const vector = new Vector3();\n            vector.copy(e.target.object.position);\n            vector.sub(mapControlRef.current.target);\n            handleCameraLength(vector.length());\n            if (handleCameraAndControlsChange)\n                handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n        }\n    }, [handleCameraLength])\n\n    useFrame(() => {\n        if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n            if (!firstMove) {\n                setFirstMove(true);\n                cameraFocus.current.duration = 0;\n            }\n            const focus = cameraFocus.current;\n            const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n            const animationProgress = Math.min(1, animationTime / focus?.duration);\n            mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n            mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n            mapControlRef.current.object.updateProjectionMatrix();\n            if (animationProgress >= 1) {\n                cameraFocus.current = null;\n            }\n        }\n    })\n\n    const resetCamera = (fullReset: boolean = false, cameraControlsStates?: any) => {\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n        let meshes: Mesh[];\n        if (routeTubes[currentFloorIndex]) {\n            meshes = [routeTubes[currentFloorIndex]];\n            const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n            if (currentActiveObject) {\n                meshes.push(currentActiveObject.mesh);\n            }\n        } else {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n        if (cameraControlsStates) {\n            focus.position.copy(cameraControlsStates.camera);\n            focus.target.copy(cameraControlsStates.controls);\n        }\n        if (cameraPos && controlPos) {\n            focus.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n            focus.target.set(controlPos.x, controlPos.y, controlPos.z);\n        }\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n    };\n\n    useImperativeHandle(ref, () => ({\n        resetCamera,\n    }))\n\n    return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n        <>\n            <MapControls\n                makeDefault\n                onChange={onCameraMove}\n                ref={mapControlRef}\n                maxPolarAngle={Math.PI / 2}\n                minDistance={config.CAMERA.minDistance}\n                maxDistance={config.CAMERA.maxDistance}\n                enableZoom={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n                enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n            />\n\n            {floors && floors.map((value: IFloorData, index: number) => (\n                <Map\n                    key={`Map-${index}`}\n                    visible={currentFloorIndex === index}\n                    floorIndex={index}\n                    currKioskObj={params.currKioskObj}\n                    activeObjectId={params.activeObjectId}\n                    hoverObjectId={params.hoverObjectId}\n                    meshFloors={meshFloors}\n                    routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n                    onPointerEnter={params.onPointerEnter}\n                    onPointerLeave={params.onPointerLeave}\n                    onPointerMove={params.onPointerMove}\n                    onClick={params.onClick}\n                    handleChangeFloor={handleChangeFloor}\n                />\n            ))}\n        </>\n    </group>)\n})","import { IFloorSelectorProps } from \"../../types\";\nimport styles from \"../../MapBox.module.css\";\n\ntype TFloorButtonProps = {\n  isActive: boolean;\n  onClick: (e: any) => void;\n  text: string;\n};\n\nconst FloorButton = ({ isActive, onClick, text }: TFloorButtonProps) => {\n  return (\n    <div\n      className={`${styles.floor} ${styles.control_btn} ${\n        isActive ? styles.active : \"\"\n      }`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  );\n};\n\nconst FloorSelector = ({\n  floors,\n  selectedFloorIndex,\n  handleFloorChange,\n  accentColor,\n}: IFloorSelectorProps) => {\n  const floorButtons: Array<TFloorButtonProps & { key: string }> = [];\n  for (let i = 0; i < floors.length; i++) {\n    const style = { display: \"flex\", cursor: \"pointer\", background: \"white\" };\n    if (i === selectedFloorIndex) {\n      style.background = accentColor;\n    }\n    floorButtons.push({\n      key: `floor-change-btn-${i}`,\n      isActive: i === selectedFloorIndex,\n      onClick: handleFloorChange(i),\n      text: floors[i].title,\n    });\n  }\n\n  return (\n    <div className={`${styles.floors} ${styles.btn_group}`}>\n      {floorButtons.length > 0 && (\n        <div className={styles['floors-dropdown']}>\n          {floorButtons.slice().reverse().map((value) => (\n            <FloorButton\n              key={value.key}\n              isActive={value.isActive}\n              onClick={value.onClick}\n              text={value.text}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FloorSelector;\n","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport FloorSelector from \"./FloorSelector\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.css';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\n\nconst UIComponent = ({\n    floors,\n    accentColor,\n    selectedFloorIndex,\n    handleFloorChange,\n    amenitiesList,\n    zoomIn,\n    zoomOut,\n    reset,\n    clearRoute,\n    handleAmenityClick,\n    role,\n    mapObjs,\n    onExtractedAmenities,\n}: IFloorSelectorProps & {\n    amenitiesList: IAmenitiesInteractiveList[],\n    zoomIn?: MouseEventHandler<HTMLDivElement>,\n    zoomOut?: MouseEventHandler<HTMLDivElement>,\n    reset?: () => void,\n    clearRoute?: MouseEventHandler<HTMLDivElement>,\n    handleAmenityClick: (type: string) => void,\n    role?: TRoles,\n    mapObjs?: MapObj[],\n    onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n    const handleResetClick: MouseEventHandler = (e) => {\n        e.preventDefault();\n        if (reset instanceof Function) {\n            reset();\n        }\n    }\n\n    const extractValues = useMemo<AmenityID[]>(() => {\n\n        if(!mapObjs)\n        {\n            return [];\n        }\n        \n        return mapObjs\n          .filter(obj => obj.layer_type === \"amenity\")\n          .map(obj => obj.value as AmenityID);\n      }, [mapObjs])\n      useEffect(() => {\n        if (onExtractedAmenities) {\n            onExtractedAmenities(extractValues)\n        }\n      }, [mapObjs, onExtractedAmenities, extractValues])\n    \n\n return(\n        <div id={styles['threejs-map-wrapper']}>\n            <div id={styles['threejs-map']}>\n                <div id={styles['map_controls']} className={`${!floors? 'hide' : ''}`}>\n                    <div className={styles['btn_group']}>\n                        <div onClick={handleResetClick} className={`${styles['reset']} ${styles['control_btn']}`}>RESET</div>\n                        <div onClick={clearRoute} className={`${styles['clear_route']} ${styles['control_btn']} ${clearRoute? '' : styles.hide}`}>Clear Route</div>\n                    </div>\n                    <FloorSelector accentColor={accentColor} floors={floors} selectedFloorIndex={selectedFloorIndex} handleFloorChange={handleFloorChange}/>\n                    <div className={`${styles['btn_group']} ${styles['zoom_btns']}`}>\n                        <div onClick={zoomOut} className={`${styles['zoom-out']} ${styles['control_btn']}`}>–</div>\n                        <div onClick={zoomIn} className={`${styles['zoom-in']} ${styles['control_btn']}`}>+</div>\n                    </div>\n                </div>\n                <div id={styles['mapit2_loader']} className={styles['hide']}>Loading map, please wait...</div>\n                    {!['PORTAL','DISPLAY_APP'].includes(role as string) &&\n                        <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n                            {amenitiesList.map((amenity, index) => {\n                                if(!extractValues.includes(amenity.type))\n                                {\n                                    return null;\n                                }\n                                return (\n                                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                                    <div className={styles.img}>\n                                        {/* <img src={amenity.icon} alt={amenity.name} /> */}\n                                        <amenity.icon />\n                                    </div>\n                                    <div className={`${styles.name}`}>{amenity.name}</div>\n                                </div>\n                            )})}\n                        </div>\n                    }\n            </div>\n        </div>\n )   \n}\n\nexport default UIComponent;\n","import React, {useEffect} from \"react\";\nimport styles from '../../MapBox.module.css';\n\nexport const MapCenterMarker = ({size, koef, blink}: {size: number, koef: number, blink: boolean}) => {\n    const kioskElementRef = React.useRef<HTMLDivElement>(null);\n\n    // todo figure out better way\n    useEffect(() => {\n        if (!kioskElementRef.current) return;\n        const kioskElement = kioskElementRef.current;\n        const svgOrigin = document.querySelector('#map-special-svg-kiosk svg');\n        let svgClone:Node;\n        if (svgOrigin) {\n            svgClone = svgOrigin.cloneNode(true);\n            kioskElement.appendChild(svgClone);\n        }\n\n        return () => {\n            if (svgClone) {\n                kioskElement.removeChild(svgClone);\n            }\n        }\n    }, []);\n\n    return <>\n        <div className={styles['kioskMarker']} ref={kioskElementRef} style={{width: koef*10+size*2, height: koef*10+size*2}}></div>\n        {blink? <div className={styles['mapCenterMarker']}></div> : null}\n    </>\n}","import { createContext, useContext, useState } from \"react\"\nimport { Object3D } from \"three\";\nimport { IExtMesh } from \"src/types\";\n\n\ntype TMeshObjectContext = {\n    MeshObject: IExtMesh[] | null;\n    SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>>;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext | null>(null);\n\nexport default function MeshObjectContextProvider({children}: {children: React.ReactNode}) {\n    const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n\n    return (\n        <MeshObjectContext.Provider\n            value={{\n                MeshObject,\n                SetMeshObject,\n            }}\n        >\n            {children}\n        </MeshObjectContext.Provider>\n    )\n}\n\nexport function useMeshObjectContext() {\n    const context = useContext(MeshObjectContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n    }\n\n    return context;\n}\n","import { useCallback, useMemo, useState } from \"react\";\n\ntype GetRetailersParams = {\n    centerId: string | number,\n    apiURI?: string,\n    limit?: number,\n    page?: number,\n}\n\ntype Data = {\n    isError: boolean,\n    error: string | null,\n    items: any[],\n    count: number,\n}\n\nconst defaultData: Data = {\n    isError: false,\n    error: null,\n    items: [],\n    count: 0,\n}\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n    const { centerId, apiURI, limit, page } = params;\n\n    const fetchRetailers = useCallback((search: string) => {\n        const r = /\\/$/;\n        const uri = apiURI?.replace(r, '');\n        const url = `${uri}/v1/retailers?limit=${limit ? limit : 100}&page=${page ? page : 1}&search=${search ? search : ''}`;\n\n        return fetch(url, {\n            headers: {\n                center_id: centerId.toString(),\n            },\n        }).then(response => {\n            if (!response.ok) {\n                return {\n                    ...defaultData,\n                    isError: true,\n                    error: `Server error: [${response.status}] [${response.statusText}] [${response.url}]`,\n                    items: [],\n                };\n            }\n            return (async () => {\n                return await response.json().then(retailers => {\n                    return {\n                        ...defaultData,\n                        items: retailers.items,\n                        count: retailers.count,\n                    }\n                });\n            })()\n        }).catch((e: any) => {\n            return {\n                ...defaultData,\n                isError: true,\n                error: e.message ? e.message : 'useGetRetailer: something went wrong!',\n                items: [],\n            };\n        })\n    }\n        , [centerId, limit, page, apiURI]);\n\n    return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor, hex_to_color } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { MouseEventHandler, SyntheticEvent, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, FormControl, FormControlProps, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, Euler, MeshBasicMaterial, MeshPhongMaterial, Object3D, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { Geometry, TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IJsonConfig, IMeshParamsTmp } from \"src/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useGetRetailers from \"./useGetRetailersBySearch\";\nimport { MapCenterMarker } from \"../SceneComponent/MapCenterMarker\";\n\n\ninterface IMapboxForm {\n    floorIndex: number;\n    meshFloors: IMeshParamsTmp;\n    config: IConfig;\n    data: any;\n    setData: (index: number, data: MapObj) => void;\n    selectedId: string;\n    centerId: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    apiURI?: string;\n    onResetData?: (data: MapObj) => void;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n    [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n\tid: '',\n\tcenter_id: centerId,\n\tretailer_id: '',\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: '8',\n    lock_size: '0',\n\trotate: '0',\n\toffsetX: '0',\n\toffsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData) => {\n    const htmlContent: { props: { blink: boolean, koef: number } } = obj.userData.htmlContent;\n    if (htmlContent && htmlContent.props) {\n        const { blink, koef } = htmlContent.props;\n        // const newKoef = formData.lock_size === '0'? koef : 1;\n        //TODO use 'value' until api with lock_size will be working\n        const newKoef = formData.value === '0'? koef : 1;\n        obj.userData.distanceFactor = formData?.value === '1'? 1500 : undefined;\n        obj.userData.htmlContent = <MapCenterMarker blink={blink} koef={newKoef} size={Number(formData.size)} />\n        obj.userData.triggerUpdate?.();\n    }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n    const {data, setData, selectedId, centerId, config, floorIndex, meshFloors, onResetData} = params;\n\n    const myFont = useFont(fontData as unknown as FontData);\n    const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n    const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n    const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n    const [formData, setFormData] = useState<MapObj | null>(null);\n    const [rotation, setRotation] = useState<number | undefined>(undefined);\n    const context = useMeshObjectContext();\n    const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [, startTransition] = useTransition();\n    const intervalRefs = useRef<TIncDecInterval>({});\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const fetchRetailers = useGetRetailers({centerId, apiURI: params.apiURI});\n\n    const loadOptions = (inputValue: string, callback: (options: any[]) => void) => {\n        setIsLoading(true);\n        const retailersData = fetchRetailers(inputValue);\n        retailersData.then(data => {\n            setIsLoading(false);\n            let result: any = [];\n            if (!data) return result;\n            if (!data.isError) {\n                result = data.items.map((item: any) => {\n                    return {\n                        value: item.id,\n                        label: item.name,\n                    }\n                })\n            } else {\n                console.error(`Fetch Retailers error: ${data.error}`)\n            }\n            callback(result);\n        })\n    }\n\n    useEffect(() => {\n        switch(mainTabKey) {\n            case 'retailer':\n                handleChangeTab(retailerTabsKey);\n                break;\n        }\n    }, [formData, mainTabKey, retailerTabsKey])\n\n    const handleChangeTab = (k:  any | null) => {\n        if (!formData) return;\n        const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n        if (key !== null) {\n            if (isTMainTabsKey(key)) {\n                setMainTabKey(key);\n                if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n                    formData.obj_type = key;\n                    if (key === 'retailer') {\n                        formData.layer_type = 'retail_name';\n                    } else if (key === 'special') {\n                        formData.layer_type = 'kiosk';\n                        formData.retailer_id = '';\n                    } else if (key === 'custom') {\n                        formData.layer_type = 'custom_text';\n                        formData.retailer_id = '';\n                    }\n                    setMainTabKey('');\n                    setRetailerTabsKey('');\n                    setSpecialTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    });\n                }\n            } else if (isTRetailerTabsKey(key)) {\n                setRetailerTabsKey(key);\n                if (formData.id && retailerTabsKey && key) {\n                    formData.layer_type = key;\n                    if (formData.layer_type !== key) {\n                        setFormData({ ...formData });\n                    }\n                    updateData({\n                        ...formData,\n                    })\n                    if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n                        let text = '';\n                        switch (key) {\n                            case 'retail_name':\n                               \n                                if(!formData.retailer_id)\n                                {\n                                    break;\n                                }\n\n                                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                               \n                                if (retailIndex !== -1) {\n                                    text = data.retailers[retailIndex].retail_name;\n\n                                }\n                                break;\n                            case 'retail_text':\n                            case 'custom_text':\n                                text = formData.custom_text;\n                                break;\n                        }\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            makeTextGeometry(obj, text, formData.size);\n                        }\n                    }\n\n                    if (['retail_logo', 'custom_image'].includes(key)) {\n                        context?.MeshObject?.forEach((obj, index) => {\n                            if (index === 0) return;\n\n                            makeImage(formData, obj);\n                        })\n                    }\n                }\n            } else if (isTSpecialTabsKey(key)) {\n                setSpecialTabsKey(key);\n                if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n                    formData.layer_type = key;\n                    formData.kiosk_id = '';\n                    formData.retailer_id = '';\n                    formData.value = '';\n                    setFormData({ ...formData });\n                    updateData({ ...formData });\n                }\n            }\n        }\n    }\n\n    const handleRotateChange = (e: any) => {\n        if (!formData) return;\n        formData.rotate = e.target.value;\n        setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = {...formData};\n            setData(index, {...data});\n        }\n    }\n\n    const handleReset = () => {\n        if (!formData) return;\n        const defaultValues = getDefaultMapOjbValues(formData.center_id);\n        if (onResetData) {\n            onResetData({\n                ...formData,\n            })\n        }\n        setFormData({\n            ...defaultValues,\n            id: formData.id,\n        });\n        updateData({\n            ...defaultValues,\n            id: formData.id,\n        });\n    }\n\n    const updateData = (formData: MapObj) => {\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = { ...formData };\n            setData(index, { ...formData });\n        }\n    }\n\n    const handleChangeRetailer = ({value}: {value: string}) => {\n        if (value && formData) {\n            formData.retailer_id = value;\n            formData.kiosk_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeKiosk = (e: any) => {\n        if (e.target.value && formData) {\n            formData.kiosk_id = e.target.value;\n            formData.retailer_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                updateMapCenterMarkerFor(obj, formData);\n            })\n        }\n    }\n\n    const handleChangeAmenity = (e: any) => {\n        if (e.target.value && formData) {\n            formData.value = e.target.value; \n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const makeTextGeometry = (obj: IExtMesh, text: string, size: string) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let text_geometry = new TextGeometry(text, {\n            font: (obj.userData && obj.userData.font)? obj.userData.font : myFont,\n            size: parseInt(size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n        if (obj.geometry) {\n            obj.geometry.dispose();\n        }\n        obj.geometry = text_geometry;\n    }\n\n    const makeImage = (formData: MapObj, obj: IExtMesh) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let img = null;\n        if (formData.layer_type === 'retail_logo') {\n            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n            if (retailIndex !== -1) {\n                img = getImage(formData, data.retailers[retailIndex]);\n            }\n        } else {\n            img = getImage(formData);\n        }\n        if (img instanceof HTMLImageElement) {\n            processImage(img, formData, (geometry, material) => {\n                obj.geometry = geometry;\n                obj.material = material;\n\n                const boundingBox = geometry.boundingBox;\n\n                const mesh_center_point = new Vector3();\n                if (boundingBox) {\n                    boundingBox.getCenter(mesh_center_point);\n\n                    const mesh_size = new Vector3();\n                    boundingBox.getSize(mesh_size);\n                    if (obj.object_id) {\n                        layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n                    }\n                }\n            });\n        }\n    }\n\n    const changeValue = (name: string, value: string) => {\n        if (!formData) return;\n        // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n        //     formData.custom_image = value;\n        //     setFormData({...formData});\n        //     updateData({...formData});\n        // }\n\n        context?.MeshObject?.forEach((obj, index) => {\n            if (!obj.userData) {\n                obj.userData = {};\n            }\n            if (!obj.userData.position) {\n                obj.userData.position = new Vector3();\n                if (obj.position) {\n                    obj.userData.position.copy(obj.position);\n                }\n            }\n            const position = new Vector3();\n            if (obj.userData.position){\n                position.copy(obj.userData.position);\n            }\n            switch (name) {\n                case 'custom_text':\n                    if (index === 0) break;\n                    formData.custom_text = value;\n                    if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        makeTextGeometry(obj, formData.custom_text, formData.size);\n                    }\n                    break;\n                case 'custom_image':\n                    if (index === 0) break;\n                    formData.custom_image = value;\n                    makeImage(formData, obj);\n                    updateData({\n                        ...formData,\n                    })\n                    break;\n                case 'size':\n                    if (index === 0) break;\n                    formData.size = value;\n                    if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n                        let text = '';\n                        if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n                            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                            if (retailIndex !== -1) {\n                                text = data.retailers[retailIndex].retail_name;\n                            }\n                        } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                            text = formData.custom_text;\n                        }\n                        makeTextGeometry(obj, text, formData.size);\n                    } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n                        makeImage(formData, obj);\n                        if (timeoutRef.current) {\n                            clearInterval(timeoutRef.current);\n                        }\n                        timeoutRef.current = setTimeout(() => {\n                            updateData({ ...formData });\n                        }, 300);\n                    } else if (['amenity'].includes(formData.layer_type)) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            setFormData({ ...formData });\n                            updateData({ ...formData });\n                        })\n                    } else if (['kiosk'].includes(formData.layer_type)) {\n                        updateMapCenterMarkerFor(obj, formData);\n                    }\n                    break;\n                case 'lock_size':\n                    formData.lock_size = value;\n                    //TODO use 'value' until api with lock_size will be working\n                    formData.value = value;\n                    if (formData.layer_type === 'kiosk') {\n                        updateMapCenterMarkerFor(obj, formData);\n                    }\n                    break;\n                case 'rotate':\n                    if (index === 0) break;\n                    formData.rotate = value;\n                    obj.rotation.set(\n                        obj.rotation.x,\n                        obj.rotation.y,\n                        parseFloat(formData.rotate) * Math.PI / 180\n                    );\n                    break;\n\n                case 'offsetX':\n                    if (index === 0) break;\n                    position.x += parseFloat(value);\n                    obj.position.setX(position.x);\n                    formData.offsetX = value;\n                    break;\n\n                case 'offsetY':\n                    if (index === 0) break;\n                    position.y += parseFloat(value);\n                    obj.position.setY(position.y);\n                    formData.offsetY = value;\n                    break;\n\n                case 'text_color':\n                    if (index === 0) break;\n                    formData.text_color = value;\n                    if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        const material_settings = {\n                            // color: hex_to_color(formData.text_color),\n                            color: formData.text_color,\n                            transparent: true,\n                            side: DoubleSide,\n                            depthWrite: false,\n                            depthTest: false,\n                        };\n                        let text_material = new MeshPhongMaterial(material_settings);\n                        obj.material = text_material;\n                    } else if (\n                        formData.layer_type === 'retail_logo' ||\n                        formData.layer_type === 'custom_image' ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            updateData({\n                                ...formData,\n                                text_color: formData.text_color.replace('#', ''),\n                            });\n                        })\n                    }\n                    break;\n\n                case 'bg_color':\n                    if (index !== 0) break;\n                    formData.bg_color = value;\n                    let meshType: MeshType = 'store';\n                    if (obj.object_id?.startsWith('big-store')) {\n                        meshType = 'big-store';\n                    }\n                    obj.material = getMaterial(\n                        config,\n                        meshType,\n                        formData.map_obj_name,\n                        formData.bg_color,\n                        formData.transparent === \"1\"? true : false,\n                        {[formData.map_obj_name]: {...formData}}\n                        );\n                    // updateData({...formData});\n                    break;\n            \n                default:\n                    break;\n            }\n            startTransition(() => {\n                setFormData({ ...formData })\n                updateData({ ...formData });\n            });\n\n        })\n    }\n    const handleChange = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value;\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    const handleChangeLock = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value === '0'? '1' : '0';\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    useEffect(() => {\n        if (data && data.map_objs && selectedId) {\n            const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n            if (index !== -1) {\n                setFormData({...data.map_objs[index]});\n            } else {\n                setFormData({\n                    ...getDefaultMapOjbValues(centerId),\n                    id: 'new-' + (new Date()).getTime(),\n                });\n            }\n        }\n        return () => {\n            setRetailerTabsKey('');\n        }\n    }, [data, selectedId])\n\n    useEffect(() => {\n        if (!formData) return;\n        if (formData.obj_type) {\n            handleChangeTab(formData.obj_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n        if (formData.layer_type) {\n            handleChangeTab(formData.layer_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n    }, [formData])\n\n    const decrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value -= 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const incrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const rotateByFixedAngle = (key:TIncDecKey, angle: number) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += angle;\n            if (value > 360) {\n                value = angle;\n            } else if (value === 360) {\n                value = 0;\n            }\n\n            changeValue(key, value.toString());\n        }\n    }\n\n    const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            rotateByFixedAngle(key, angle);\n        }, 100);\n    } \n\n    const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            decrementValue(key);\n        }, 100);\n    }\n\n    const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            incrementValue(key);\n        }, 100);\n    }\n\n    const stopIntervals = () => {\n        let key:TIncDecKey;\n        for (key in intervalRefs.current) {\n            if (intervalRefs.current[key])\n                clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n                intervalRefs.current[key] = null;\n        }\n    }\n\n    const handleOnSubmit = () => {\n        if (params.onSubmit && context && context.MeshObject && formData) {\n            formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n            params.onSubmit({...formData, map_obj_name: context.MeshObject[0].object_id as string});\n        }\n    }\n\n    if (!formData) return null;\n\n    return (\n        <>\n            <Tab.Container activeKey={mainTabKey}>\n                <Col>\n                    <Row>\n                        <Col sm=\"9\">\n                            <Nav\n                                variant=\"tabs\"\n                                className=\"flex-row\"\n                                // activeKey={mainTabKey}\n                                onSelect={handleChangeTab}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col sm=\"3\" className=\"px-0\">\n                            {/* \n                //@ts-ignore */}\n                            <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Tab.Content>\n                                <Tab.Pane eventKey={\"retailer\"}>\n                            <AsyncSelect\n                                className=\"mb-3\"\n                                aria-label=\"Choose a Retailer\"\n                                loadOptions={loadOptions}\n                                noOptionsMessage={() => 'Retailers not found'}\n                                placeholder=\"Choose a Retailer...\"\n                                value={data.retailers?.filter((item: IRetailer) => item.id === formData.retailer_id)?.map((item: IRetailer) => ({\n                                    value: item.id,\n                                    label: `${item.retail_name}${item.location && item.location.length > 1 ? item.location : ''}`,\n                                }))}\n                                defaultOptions={data.retailers?.map((item: any) => ({value: item.id, label: `${item.retail_name}${item.location && item.location.length > 1? item.location : ''}`}))}\n                                onChange={handleChangeRetailer}\n\n                            />\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"retail-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                    >\n                        <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                        <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                        <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"custom_text\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"special\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"special-tab-form\"\n                        activeKey={specialTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.kiosk_id?? ''} onChange={handleChangeKiosk}>\n                                <option value={''} disabled hidden>Choose a Kiosk...</option>\n                                {data.kiosks?.map((value: any, index: number) => <option key={`kiosk-${value.id}-${index}`} value={value.id}>{value.title}</option>)}\n                            </Form.Select>\n                        </Tab>\n                        <Tab eventKey=\"amenity\" title=\"Amenity\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                                <option value={''} disabled hidden>Choose Amenity...</option>\n                                {Object.keys(data.amenities)?.map((value: string) => (\n                                    <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                                ))}\n                            </Form.Select>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"custom\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"custom-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"custom_text\" title=\"Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            name=\"custom_text\"\n                                            as=\"textarea\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"custom_image\" title=\"Image\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            type=\"string\"\n                                            name=\"custom_image\"\n                                            value={formData.custom_image}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Col>\n            </Tab.Container>\n            <Form.Group className=\"mb-3 mt-3\">\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Size</Form.Label>\n                    </Col>\n                    <Col>\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('size')}\n                                    onMouseDown={handleDecrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"size\"\n                                    type=\"text\"\n                                    value={formData.size}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('size')}\n                                    onMouseDown={handleIncrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >+</Button>\n                            </div>\n                            <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                                <Row>\n                                    <Col sm=\"4\">\n                                        <Form.Check\n                                            name=\"lock_size\"\n                                            id=\"lock_size\"\n                                            type=\"checkbox\"\n                                            //TODO use 'value' until api with lock_size will be working\n                                            value={formData.value}\n                                            checked={formData.value === '1'}\n                                            onChange={handleChangeLock}\n                                        />\n                                    </Col>\n                                    <Col sm=\"8\" className=\"p-0\">\n                                        <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Rotate</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('rotate')}\n                                    onMouseDown={handleDecrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"rotate\"\n                                    type=\"number\"\n                                    value={rotation ?? formData.rotate}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('rotate')}\n                                    onMouseDown={handleIncrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                            <div style={{maxWidth: 50, height: 50}}>\n                                <Button\n                                    onClick={() => rotateByFixedAngle('rotate', 45)}\n                                    onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >\n                                    <ArrowClockwise size={'1rem'} />\n                                </Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset X</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetX')}\n                                    onMouseDown={handleDecrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n\n                                <Form.Control\n                                    name=\"offsetX\"\n                                    type=\"number\"\n                                    value={formData.offsetX}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetX')}\n                                    onMouseDown={handleIncrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetY')}\n                                    onMouseDown={handleDecrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"offsetY\"\n                                    type=\"number\"\n                                    value={formData.offsetY}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetY')}\n                                    onMouseDown={handleIncrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"3\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">BG Color</Form.Label>\n                    </Col>\n                    <Col sm=\"3\" className=\"p-0\">\n                        <Form.Control\n                            name=\"bg_color\"\n                            type=\"string\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"2\">\n                        <Form.Control\n                            type=\"color\"\n                            name=\"bg_color\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Row>\n                            <Col sm=\"3\">\n                                <input\n                                        name=\"transparent\"\n                                        id=\"transparent\"\n                                        type=\"checkbox\"\n                                        value={formData.transparent}\n                                        onChange={handleChange}\n                                ></input>\n                            </Col>\n                            <Col sm=\"9\" className=\"p-0\">\n                                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                            <Form.Label className=\"mb-0\">Text Color</Form.Label>\n                        </Col>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                name=\"text_color\"\n                                type=\"color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                {['kiosk', 'amenity'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                type=\"color\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                <Row className=\"justify-content-center px-5 py-5\">\n                    <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-')? 'Save' : 'Update'}</button>\n                </Row>\n            </Form.Group>\n        </>\n    );\n}\n\nexport default MapboxForm;\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n    centerId: string,\n    slug: string,\n    webApiURI: string,\n}\n\nexport type RetailerData = {\n    data: IRetailer | null,\n    isLoading: boolean,\n    isError: boolean,\n    error: string | null,\n}\n\nconst defaultData: RetailerData = {\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n} \nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n    const {centerId, slug, webApiURI} = props;\n    const [data, setData] = useState<RetailerData>(defaultData);\n\n    useMemo(() => {\n        if (!slug || !centerId) {\n            setData({...defaultData});\n            return false;\n        }\n\n        let apiURI = webApiURI;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            setData({\n                isLoading: true,\n                data: null,\n                isError: false,\n                error: null,\n            })\n            fetch(`${apiURI}/v1/retailers/${slug}`, {\n                headers: {\n                    center_id: centerId,\n                }\n            }).then(\n                (response) => response.json()\n            ).then(data => {\n                setData({\n                    isLoading: false,\n                    isError: false,\n                    error: null,\n                    data: {\n                        id: data.id,\n                        retail_name: data.name,\n                        slug: data.slug,\n                        location: data.location && data.location !== '-'? data.location : '',\n                        retailer_phone: data.retailer_phone,\n                        retailer_description: data.global_retailer.description,\n                        logo: data.media.url,\n                        map_obj_name: '',\n                    }\n                });\n            }).catch((e: any) => {\n                setData({\n                    data: null,\n                    isLoading: false,\n                    isError: true,\n                    error: `Error fetch retaler data: ${e.message}`,\n                })\n            })\n        } else {\n            setData({\n                isLoading: false,\n                isError: true,\n                error: 'webApiURI not provided!',\n                data: null,\n            })\n        }\n\n    }, [centerId, slug, webApiURI]);\n\n    return data;\n\n}\n\nexport default useRetailerData;\n","import { Col, Form, FormGroup, Modal, Placeholder, Row, Spinner  } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { XCircleFill } from \"react-bootstrap-icons\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { CSSProperties, ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n    amenity: string,\n    show: boolean,\n    onHide: () => void,\n    centerId: string,\n    retailers?: IRetailer[],\n    mapObjs?: MapObj[],\n    mapObjectName?: string,\n    webApiURI: string,\n    onClick?: (id: string, amenityType?: string) => void,\n    kioskId: string,\n}\n\nconst RetailerInfoList = ({retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId}: {retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string}) => {\n    const [retailerId, setRetailerId] = useState<string>('');\n\n    const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n        e.preventDefault();\n        if (onClick) {\n            onClick(retailerId);\n        }\n    }\n\n    const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n        setRetailerId(e.target.value);\n    }\n\n    const filterRetailers = (retailers:IRetailer[], arrayObjects:MapObj[]) => {\n        return retailers.filter(retailer => \n            arrayObjects.some(obj => obj.retailer_id === retailer.id)\n        );\n    }\n\n    if (!isAmenity && (isLoading || !retailer )) {\n        return (\n        <div>\n            <div className={styles['retailer-info-spinner']} >\n                <Spinner animation=\"border\" role=\"status\" variant=\"secondary\"/>\n            </div>\n            <div className={styles['retailer-info-content']} >\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={5} /> <Placeholder bg=\"secondary\"  xs={3} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={7} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            {!!retailer && (\n                <>\n                    <div className={styles['retailer-logo']}>\n                        <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n                    </div>\n                    <div className={styles['retailer-info-content']} >\n                        <div>\n                            <b>Retailer:</b> {retailer.retail_name}\n                        </div>\n                        {retailer.location &&\n                            <div>\n                                <b>Location:</b> {retailer.location}\n                            </div>\n                        }\n                        {retailer.retailer_phone &&\n                            <div>\n                                <b>Phone:</b> {retailer.retailer_phone}\n                            </div>\n                        }\n                        {retailer.retailer_description &&\n                            <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n                        }\n                    </div>\n                </>\n            )}\n            <Form className={styles['get-directions-from']}>\n                <FormGroup>\n                    <div className=\"d-flex align-items-center gap-3\">\n                        {!kioskId.length ?\n                            <>\n                                <Form.Select\n                                    name=\"retailer\"\n                                    onChange={onChange}\n                                    value={retailerId}\n                                >\n                                    <option value={''} disabled>Get direction from ...</option>\n                                    {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                                        if (retailer && item.id === retailer.id) return null;\n                                        return (\n                                            <option key={index} value={item.id}>{item.retail_name}</option>\n                                        )\n                                    }\n                                    )}\n                                </Form.Select>\n                                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n                            </>\n                            : null\n                        }\n                    </div>\n                </FormGroup>\n            </Form>\n        </div>\n    );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n    const {\n        amenity,\n        show,\n        onHide,\n        centerId,\n        retailers,\n        mapObjs,\n        mapObjectName,\n        webApiURI,\n        onClick,\n        kioskId,\n    } = props;\n    const slug = useMemo(() => {\n        if (centerId && mapObjs && retailers && mapObjectName) {\n            const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n            if (mapObj && mapObj.retailer_id) {\n                const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n                if (retailer) {\n                    return retailer.slug;\n                }\n            }\n        }\n        return '';\n    }, [centerId, mapObjectName, mapObjs, retailers]);\n    const data = useRetailerData({ centerId, slug, webApiURI });\n    const handleOnClick = (retailerId: string) => {\n        if (!onClick) return;\n        let mapObj = null;\n        if (kioskId) {\n            mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id?? '') === parseInt(kioskId));\n        } else {\n            mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n        }\n\n        let mapObjectName = '';\n\n\n        if (mapObj) {\n            mapObjectName = mapObj.map_obj_name;\n        }\n\n        if (amenity) {\n            onClick(mapObjectName, amenity);\n        } else {\n            onClick(mapObjectName);\n        }\n    }\n\n    const isAmenity = (amenity !== '' || (mapObjectName? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n    return (\n        <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n            <div className={styles['retailerInfoCloseBtn']}>\n                <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n            </div>\n            <Modal.Body className=\"p-3\">\n                <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from \"react\";\nimport { Canvas, ThreeEvent, useThree } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { DoubleSide, Mesh, MeshLambertMaterial, Object3D } from \"three\";\nimport { IAmenitiesInteractiveList, IExtMesh, IJsonConfig, IMeshParams, IMeshValues, TMapMode, TMapSettingsProps } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\nimport { delete_route_path } from \"src/helpers/route.helpers\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.css';\nimport { Alert } from 'react-bootstrap';\nimport { hex_to_color } from \"src/helpers/misc\";\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { Vector3 } from \"three\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { AmenityID } from \"src/MapBox\";\n\ninterface ISceneComponentProps {\n    mapitData?: MapIt2Response;\n    config: Partial<IJsonConfig>;\n    selectedActiveObjectId: string;\n    setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n    onMapDataUpdate?: (data: MapObj[]) => void;\n    onSettingsLoading?: (settings: MapIt2Response) => void;\n    webApiURI?: string;\n    mediaStorageURI?: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    onResetData?: (data: MapObj) => void;\n    deviceType?: string | \"\";\n    setCameraControlPosition?: (cameraControlPos: any) => void;\n    onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n}\n\nexport interface IZoomData {\n    direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n    index: number,\n    data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n    const { data, refreshData } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n    const [fromObjectId, setFromObjectId] = useState<string>('');\n    const [hovered, setHovered] = useState<boolean>(false);\n    const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n    const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n    const [cameraControlState, setCameraControlState] = useState<any>(null);\n    const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n    const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n    const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n    const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition } = params;\n\n    const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n    const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n    const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n    const [cameraLength, setCameraLength] = useState<number>(0);\n\n    const statsParentRef = useRef<HTMLDivElement>(null);\n    const canvasWidthRef = useRef<number | undefined | null>(null);\n    canvasWidthRef.current = canvasWidth;\n    const cameraControlStateRef = useRef<any>(null);\n    cameraControlStateRef.current = cameraControlState;\n    const deviceTypeRef = useRef<string | undefined | null>(null);\n    deviceTypeRef.current = deviceType;\n    const floorsMapRef = useRef<{ resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null }>(null);\n\n    const handleCameraLength = useCallback((length: number) => {\n        setCameraLength(length);\n    }, [])\n\n    const handleFloorChange = (floorIndex: number): MouseEventHandler<HTMLDivElement> => (e) => {\n        setSelectedFloorIndex(floorIndex);\n    }\n\n    const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n    const mapCenterMarkerRef = useRef(null);\n    const labelRef = useRef<HTMLDivElement>(null);\n    const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n    const meshObjectContext = useMeshObjectContext();\n\n    const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n    const config = meshFloors.config;\n    const floors = meshFloors.floors;\n    const meshParams = meshFloors.meshParams;\n\n    useImperativeHandle(ref, () => ({\n        refreshData,\n        createRouteToAmenity: handleAmenityClick,\n    }))\n\n    useEffect(() => {\n        if (statsParentRef.current) {\n            const resizeWidth = () => {\n                setCanvasWidth(statsParentRef?.current?.offsetWidth);\n            }\n            window.addEventListener('resize', () => {\n                resizeWidth();\n                // Update your map or camera settings based on newWidth\n            });\n            resizeWidth();\n        }\n    }, [statsParentRef]);\n\n    useEffect(() => {\n        if (data && data.camera_controls_states) {\n            setCameraControlState(data.camera_controls_states);\n            setCameraControlPos(data.camera_controls_states);\n        }\n    }, [data]);\n\n    useEffect(() => {\n        if (cameraControlStateRef.current) {\n            setCameraControlPos(cameraControlStateRef.current);\n        }\n    }, [deviceType, canvasWidth])\n\n    const setCameraControlPos = (camera_controls_states: any) => {\n        if (config?.ROLE === \"DISPLAY_APP\") {\n            setCameraPos(camera_controls_states.display_app.camera)\n            setControlPos(camera_controls_states.display_app.controls)\n        } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n            if (canvasWidth > 1024) {\n                setCameraPos(camera_controls_states.desktop.camera)\n                setControlPos(camera_controls_states.desktop.controls)\n            } else if (canvasWidth > 600) {\n                setCameraPos(camera_controls_states.tablet.camera)\n                setControlPos(camera_controls_states.tablet.controls)\n            } else {\n                setCameraPos(camera_controls_states.mobile.camera)\n                setControlPos(camera_controls_states.mobile.controls)\n            }\n        } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n            if (deviceTypeRef.current === \"desktop\") {\n                setCameraPos(camera_controls_states.desktop.camera)\n                setControlPos(camera_controls_states.desktop.controls)\n            } else if (deviceTypeRef.current === \"display_app\") {\n                setCameraPos(camera_controls_states.display_app.camera)\n                setControlPos(camera_controls_states.display_app.controls)\n            } else if (deviceTypeRef.current === \"mobile\") {\n                setCameraPos(camera_controls_states.mobile.camera)\n                setControlPos(camera_controls_states.mobile.controls)\n            } else if (deviceTypeRef.current === \"tablet\") {\n                setCameraPos(camera_controls_states.tablet.camera)\n                setControlPos(camera_controls_states.tablet.controls)\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (data && meshFloors.config && params.onSettingsLoading) {\n            params.onSettingsLoading(\n                {\n                    ...data,\n                    settings: {\n                        ...data.settings,\n                        STYLE: meshFloors.config.STYLE,\n                        ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n                        AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n                        AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n                        BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n                        BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n                        BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n                        BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n                        MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n                        OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n                        OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n                        STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n                        STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n                        WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n                        WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n                        KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n                        STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n                        CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n                        CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n                    }\n                });\n        }\n    }, [data, meshFloors])\n\n    const handleCameraAndControlsChange = (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n        if(canvasWidthRef.current === 0) return;\n        if (config?.ROLE === \"DISPLAY_APP\") {\n            setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n        } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n            if (canvasWidthRef.current > 1024) {\n                setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n            } else if (canvasWidthRef.current > 600) {\n                setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n            } else {\n                setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n            }\n        } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n            if (deviceTypeRef.current === \"desktop\") {\n                setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n            } else if (deviceTypeRef.current === \"display_app\") {\n                setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n            } else if (deviceTypeRef.current === \"mobile\") {\n                setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n            } else if (deviceTypeRef.current === \"tablet\") {\n                setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (cameraControlStateRef.current && setCameraControlPosition) {\n            setCameraControlPosition(cameraControlStateRef.current);\n        }\n    }, [cameraControlState])\n\n    // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n    let activeFromObjectId = '';\n    let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n    if (selectedActiveObjectId) {\n        activeObjectId = selectedActiveObjectId;\n        activeFromObjectId = fromObjectId;\n    } else if (amenityTargetType) {\n        activeObjectId = '';\n        activeFromObjectId = fromObjectId;\n        // activeFromObjectId = '';\n    }\n\n    const handleChangeMapitData = (index: number, newData: MapObj) => {\n        const itemIndex = formMapObjData.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n        if (itemIndex !== -1) {\n            formMapObjData[itemIndex] = { index, data: { ...newData } };\n        } else {\n            formMapObjData.push({ index, data: { ...newData } })\n        }\n\n        setFormMapObjData([...formMapObjData]);\n    }\n\n    const getMapitData = (): MapIt2Response | null => {\n        if (data && data.map_objs) {\n            if (formMapObjData) {\n                formMapObjData.forEach((value) => {\n                    const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n                    if (index !== -1) {\n                        data.map_objs[index] = { ...value.data };\n                    }\n                })\n            }\n        }\n\n        return data;\n    }\n\n    const handleOnSubmit = (data: MapObjToSave) => {\n        if (params.onSubmit) {\n            params.onSubmit(data, refreshData);\n        }\n    }\n\n    useEffect(() => {\n        // console.log('useEffect currentHoveredObject', currentHoveredObject)\n        document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n    }, [currentHoveredObject]);\n\n    const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n        if (!config) {\n            return [null, 0, ''] // not an error - loading/initializing\n        }\n        let kioskError = '';\n        let currKioskObj: Mesh | null = null;\n        let currKioskFloorIndex = 0;\n        if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n            const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n            const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n            if (currKioskMeshParams) {\n                currKioskObj = currKioskMeshParams.mesh;\n                currKioskFloorIndex = currKioskMeshParams.floor_index;\n            }\n        } else {\n            if (config.ROLE === 'WEBSITE') {\n                // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n            }\n            if (config.ROLE === 'WEBSITE') {\n                console.error('Kiosk not found in config');\n                // kioskError = 'Map initialization error';\n            }\n        }\n\n        return [currKioskObj, currKioskFloorIndex, kioskError]\n    }, [config, meshParams]);\n\n    const resetHandle = () => {\n\n        setSelectedFloorIndex(currKioskFloorIndex);\n        setSelectedActiveObjectId('');\n        setFromObjectId('');\n        setAmenityTargetType('');\n\n            if (floorsMapRef.current) {\n                if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n                    let ccs = null;\n                    if (deviceTypeRef.current === \"desktop\") {\n                        ccs = { ...data.camera_controls_states.desktop }\n                    } else if (deviceTypeRef.current === \"display_app\") {\n                        ccs = { ...data.camera_controls_states.display_app }\n                    } else if (deviceTypeRef.current === \"mobile\") {\n                        ccs = { ...data.camera_controls_states.mobile }\n                    } else if (deviceTypeRef.current === \"tablet\") {\n                        ccs = { ...data.camera_controls_states.tablet }\n                    }\n                    console.debug({\n                        device: deviceTypeRef.current,\n                        ccs\n                    })\n                    if (ccs) {\n                        floorsMapRef?.current?.resetCamera(false, ccs);\n                    }\n                } else {\n\n                    floorsMapRef?.current?.resetCamera();\n\n                }\n            }\n\n    }\n\n    useEffect(() => {\n        if (!config) {\n            return;\n        }\n\n        const kiosks: IMeshValues[] = [];\n        meshFloors.meshParams.forEach(floor => {\n            floor.forEach(item => {\n                if (item?.mesh_type === \"kiosk\") {\n                    kiosks.push(item);\n                }\n            })\n        })\n        // console.log('kiosks', kiosks);\n\n        const mapObjectIdToKiosk = new Map();\n        const mapObjectIdToLogo = new Map();\n        kiosks.forEach(item => {\n            mapObjectIdToKiosk.set(item.object_id, item.mesh);\n        });\n        // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n        meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n            floor.forEach(item => {\n                mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n            })\n        });\n        // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n        // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n        const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n\n        const koef = cameraLength / (config.CAMERA.maxDistance - config.CAMERA.minDistance);\n        const currKioskLogo: IExtMesh[] = [];\n        const mapData = getMapitData();\n        kiosks.forEach(item => {\n            const kiosk = item.mesh;\n            const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n            const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n            if (kiosk && logo) {\n                //TODO use 'value' until api with lock_size will be working\n                const newKoef = mapObj?.value === '1' ? 1 : koef;\n                logo.userData.htmlContent = <MapCenterMarker blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)} koef={newKoef} />\n                logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n                logo.visible = false;\n\n                currKioskLogo.push(logo);\n            }\n        });\n\n        return () => {\n            currKioskLogo?.forEach(mesh => {\n                mesh.userData.htmlContent = null;\n            });\n        }\n\n    }, [meshFloors, currKioskObj, cameraLength, config]);\n\n    useEffect(() => {\n        if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId && meshObjectContext?.SetMeshObject) {\n            const object = meshFloors.meshParams[selectedFloorIndex === -1 ? 0 : selectedFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n            if (object) {\n                //@ts-ignore\n                handleMeshObjectContext(object);\n            }\n            //@ts-ignore\n        }\n    }, [meshFloors])\n\n    useEffect(() => {\n        if (onMapDataUpdate) {\n            const exportData: MapObj[] = [];\n\n            formMapObjData.forEach((value) => {\n                exportData.push({ ...value.data });\n            })\n        }\n    }, [formMapObjData])\n\n    useEffect(() => {\n        document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n    }, [hovered])\n\n    useEffect(() => {\n        if (config && data && data.retailers && data.map_objs && config.SELECTED_RETAILER_SLUG) {\n            const retailer = data.retailers.find(item => {\n                return item.slug === config.SELECTED_RETAILER_SLUG;\n            })\n            if (retailer) {\n                const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n                if (mapObject) {\n                    setSelectedActiveObjectId(mapObject.map_obj_name);\n                }\n            }\n        }\n    }, [config, data, setSelectedActiveObjectId])\n\n\n    const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n        if (meshObjectContext?.SetMeshObject) {\n            const textParams = meshFloors.textParams[selectedFloorIndex === -1 ? 0 : selectedFloorIndex]?.find(value => {\n                return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const logoParams = meshFloors.storeLogos[selectedFloorIndex === -1 ? 0 : selectedFloorIndex]?.find(value => {\n                return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const result = [object as IExtMesh];\n\n            if (textParams) {\n                result.push(textParams.textMesh);\n            }\n\n            if (logoParams) {\n                result.push(logoParams.storeLogo)\n            }\n\n            meshObjectContext.SetMeshObject([...result]);\n        }\n    }, [meshFloors.storeLogos, meshFloors.textParams, meshObjectContext, selectedFloorIndex])\n\n    const handleAmenityClick = useCallback((type: string) => {\n        setSelectedActiveObjectId('')\n        setFromObjectId('')\n        if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n            setSelectedAmenityType(type)\n            setShowRetailerInfo(true);\n        } else {\n            setAmenityTargetType(type)\n        }\n    }, [config, setSelectedActiveObjectId]);\n\n    const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n        e.stopPropagation();\n        // console.log('onClick', e.object)\n\n        const targetId = (e.object as IExtMesh).object_id;\n        const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n        if (mapObj && mapObj.layer_type === 'amenity') {\n            handleAmenityClick(mapObj.value);\n            if (config && config.ROLE === 'PORTAL') {\n                handleMeshObjectContext(e.object as IExtMesh);\n                setSelectedActiveObjectId(targetId ?? '');\n            }\n        } else {\n            handleMeshObjectContext(e.object as IExtMesh);\n            setSelectedActiveObjectId(targetId ?? '');\n            // console.log('set active object', targetId);\n            setAmenityTargetType('');\n            setFromObjectId('');\n            if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n                setShowRetailerInfo(true);\n            }\n        }\n    }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext]);\n\n    const onCameraMove = useCallback((e: any) => {\n        if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n            return\n        }\n    }, []);\n\n    const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        console.debug()\n        setHovered(true);\n        // console.log('onPointerEnter', e.object)\n        if (!e.object.userData.storeName && config && config.ROLE !== 'PORTAL') {\n            // console.warn('onPointerEnter no storeName', e.object);\n            return;\n        }\n        setCurrentHoveredObject(e.object);\n    }, []);\n\n    const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerLeave', e.object)\n        setCurrentHoveredObject(null);\n        setHovered(false);\n        if (labelRef && labelRef.current) {\n            labelRef.current.style.display = 'none';\n        }\n    }, []);\n\n    const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerMove', e.object)\n\n        if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n            labelRef.current.style.top = `${e.offsetY - 65}px`;\n            labelRef.current.style.left = `${e.offsetX}px`;\n            labelRef.current.style.display = 'block';\n        } else if (labelRef.current) {\n            labelRef.current.style.display = 'none';\n        }\n    }\n\n    const messageStyle: CSSProperties = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%',\n    }\n\n    if (data && (!data.floors || data.floors.length <= 0)) {\n        return <div style={messageStyle}>Map doesn't have any floors</div>\n    }\n\n    if (!config || !meshFloors.meshParams.length) {\n        console.warn('LOADING MAP')\n        if (config?.ROLE === 'WP_SITE') {\n            return <div style={messageStyle}>No map for Center</div>\n        }\n        return <div style={messageStyle}>Map loading, please wait...</div>\n    }\n\n    if (kioskError) {\n        return <div style={messageStyle}>{kioskError}</div>\n    }\n\n    const currentFloorIndex = selectedFloorIndex > -1 ? selectedFloorIndex : currKioskFloorIndex;\n\n    if (!currKioskObj && config.ROLE === 'WEBSITE') {\n        console.error('NO KIOSK OBJECT FOUND');\n        // return <div style={messageStyle}>Map initialization error</div>\n    }\n\n    // make sure that meshFloors conditionals are not null\n    const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n\n    let hoverObject = currentHoveredObject as IExtMesh\n    let hoverObjectId = '';\n    if (hoverObject && hoverObject.object_id) {\n        hoverObjectId = hoverObject.object_id;\n    }\n\n    const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n        if (!amenityType) {\n            setFromObjectId(retailerId);\n        } else {\n            // setSelectedActiveObjectId(retailerId);\n            setFromObjectId(retailerId);\n            setAmenityTargetType(amenityType);\n        }\n        setShowRetailerInfo(false);\n    }\n\n    return (\n        <>\n            {config.ROLE === 'PORTAL' &&\n                <div className={styles['mapbox-admin-form']}>\n                    {!selectedActiveObjectId ?\n                        <Alert variant=\"info\">Select a store to customize.</Alert>\n                        :\n                        <MapboxForm\n                            floorIndex={currentFloorIndex}\n                            meshFloors={meshFloors}\n                            config={config}\n                            data={getMapitData()}\n                            setData={handleChangeMapitData}\n                            selectedId={selectedActiveObjectId}\n                            centerId={params.config.CENTER_ID as string}\n                            onSubmit={handleOnSubmit}\n                            apiURI={params.webApiURI}\n                            onResetData={params.onResetData}\n                        />\n                    }\n                </div>\n            }\n\n            <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n                <UIComponent\n                    accentColor={config.ACCENT_COLOR.getStyle()}\n                    floors={floors}\n                    selectedFloorIndex={currentFloorIndex}\n                    handleFloorChange={handleFloorChange}\n                    amenitiesList={amenitiesList}\n                    handleAmenityClick={handleAmenityClick}\n                    reset={resetHandle}\n                    zoomIn={() => setZoom({ direction: 'in' })}\n                    zoomOut={() => setZoom({ direction: 'out' })}\n                    role={config.ROLE}\n                    mapObjs={data?.map_objs}\n                    onExtractedAmenities={params.onExtractedAmenities}\n                />\n                <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n                    {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n                    <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n                    <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n                    {/*<axesHelper args={[5000]} />*/}\n\n                    <ambientLight intensity={1} color={'#c4c4c4'} />\n                    <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n                    <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n                    <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n                    <FloorsMap\n                        onCameraMove={onCameraMove}\n                        meshFloors={meshFloorsChecked}\n                        activeObjectId={activeObjectId}\n                        hoverObjectId={hoverObjectId}\n                        // @ts-ignore\n                        currKioskObj={currKioskObj}\n                        routeTargetId={activeObjectId}\n                        routeTargetFromId={activeFromObjectId}\n                        currentFloorIndex={currentFloorIndex}\n                        onPointerEnter={onPointerEnter}\n                        onPointerLeave={onPointerLeave}\n                        onPointerMove={onPointerMove}\n                        onClick={onClick}\n                        handleChangeFloor={handleFloorChange}\n                        amenityTargetType={amenityTargetType}\n                        escalatorNodes={meshFloors.escalator_nodes}\n                        zoom={zoom}\n                        handleCameraLength={handleCameraLength}\n                        config={config}\n                        ref={floorsMapRef}\n                        cameraPos={cameraPos}\n                        controlPos={controlPos}\n                        handleCameraAndControlsChange={handleCameraAndControlsChange}\n                    />\n                </Canvas>\n                <div ref={labelRef}\n                    style={{\n                        position: 'absolute',\n                        padding: 10,\n                        background: '#ffffff',\n                        fontWeight: 600,\n                        color: '#000000',\n                        fontSize: 16,\n                        display: currentHoveredObject ? 'block' : 'none',\n                        top: 300,\n                        left: 400,\n                        opacity: .8,\n                    }}\n                >\n                    <div>\n                        {currentHoveredObject && currentHoveredObject.userData.storeName}\n                    </div>\n                </div>\n\n            </div>\n\n            <RetailerInfoModal\n                amenity={selectedAmenityType}\n                show={showRetailerInfo}\n                onHide={() => setShowRetailerInfo(false)}\n                centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n                mapObjectName={selectedActiveObjectId}\n                retailers={data?.retailers}\n                mapObjs={data?.map_objs}\n                webApiURI={params.webApiURI ?? ''}\n                onClick={handleRetailerInfoOnClick}\n                kioskId={config.KIOSK.toString()}\n            />\n        </>\n    )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\n\ninterface useMapIt2DataProps {\n    CENTER_ID: string;\n    mapitData?: MapIt2Response;\n    webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n    data: MapIt2Response | null,\n    refreshData: () => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n    const [data, setData] = useState<MapIt2Response | null>(null);\n\n    if (!CENTER_ID && !mapitData) {\n        console.error('useMapit2Data requires either CENTER_ID or mapitData');\n    }\n\n    const getData = useCallback(() => {\n        let apiURI = webApiURI || null;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            const retailersApiUri = `${apiURI}/v1/retailers?limit=100&page=1`;\n            const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n            const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n            const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1`;\n            const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n            const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n            const retailersPromise = fetch(retailersApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { console.error(e) })\n\n            const mapObjsPromise = fetch(mapObjsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => { console.error(e) })\n\n            const floorsPromise = fetch(floorsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            })\n                .then(data => {\n                    if (!data\n                        || !data.items\n                        || (data.items && !data.items.length)) {\n                        console.error('Empty floors data from server');\n                    }\n                    return data;\n                }).catch(e => { console.error(e) })\n\n            const kiosksPromise = fetch(kioskApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => { console.error(e) })\n\n            const settingsPromise = fetch(settingsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { console.error(e) })\n\n            const responsivePromise = fetch(responsiveApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { throw new Error(e) })\n\n            Promise.all<Array<any>>([\n                retailersPromise,\n                mapObjsPromise,\n                floorsPromise,\n                kiosksPromise,\n                settingsPromise,\n                responsivePromise\n            ]).then(data => {\n                if (data.length >= 5) {\n                    const responseData: Partial<MapIt2Response> = {};\n                    responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n                        id: item.id,\n                        retail_name: item.name,\n                        slug: item.slug,\n                        location: item.location,\n                        retailer_phone: '',\n                        retailer_description: '',\n                        logo: item.media.url,\n                        map_obj_name: '',\n                    }));\n                    responseData.map_objs = [...data[1].items].map(item => ({\n                        ...item,\n                        offsetX: item.offset_x,\n                        offsetY: item.offset_y,\n                    }));\n                    responseData.floors = [...data[2].items];\n                    responseData.settings = {\n                        ...demoData.settings as Settings,\n                        KIOSK_SIZE: \"1\",\n                    }\n                    responseData.kiosks = [];\n                    responseData.amenities = { ...demoData.amenities };\n                    responseData.kiosks = [...data[3].items];\n                    const settings: Settings = data[4]?.settings ? data[4].settings : {\n                        \"STYLE\": \"3D\",\n                        \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n                        \"ACCENT_COLOR\": \"4EA5FF\",\n                        \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n                        \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n                        \"WALL_THICKNESS\": \"0.6\",\n                        \"WALL_COLOR\": \"888888\",\n                        \"BOUNDARY_THICKNESS\": \"0.8\",\n                        \"BOUNDARY_COLOR\": \"888888\",\n                        \"BASE_COLOR\": \"25292B\",\n                        \"STORE_TEXT_COLOR\": \"222222\",\n                        \"OVERLAY_COLOR\": \"FFFFFF\",\n                        \"OVERLAY_OPACITY\": \"0.7\",\n                        \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n                        \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\"\n                    };\n                    if (data[5]) {\n                        responseData.camera_controls_states = data[5];\n                    } else {\n                        responseData.camera_controls_states = { ...demoData.camera_controls_states };\n                    }\n                    responseData.settings = settings;\n\n                    setData({ ...responseData as MapIt2Response })\n                }\n            })\n        }\n    }, [CENTER_ID, webApiURI])\n\n    useEffect(() => {\n        if (mapitData) {\n            setData(mapitData);\n            return;\n        }\n\n        if (!CENTER_ID) {\n            return;\n        }\n\n        getData();\n\n    }, [CENTER_ID, mapitData, getData]);\n\n    const refreshData = () => getData();\n    return { data, refreshData };\n}","import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport styles from './MapBox.module.css';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport {isMapIt2Response, MapIt2Response, MapObj, MapObjToSave} from \"./mapitApiTypes\";\nimport {IJsonConfig, TMapMode, TMapSettingsProps, TRoles} from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station' ;\n\nexport interface IAppProps {\n    mapitData?: unknown;\n    config: Partial<IJsonConfig>;\n    stats?: boolean;\n    onSettingsLoading?: (settings: MapIt2Response) => void;\n    webApiURI?: string;\n    mediaStorageURI?: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n    onResetData?: (data: MapObj) => void;\n    deviceType?: string | \"\";\n    setCameraControlPosition?: (cameraControlPos: any) => void;\n    onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n\n\nfunction MapBox({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, deviceType, setCameraControlPosition, onResetData, onExtractedAmenities }: IAppProps) {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <MeshObjectContextProvider>\n      <div className={`${styles['mapbox-component']} ${config.ROLE !== 'PORTAL'? styles.view : ''}`}>\n        <SceneComponent\n          ref={refObj}\n          setSelectedActiveObjectId={setSelectedActiveObjectId}\n          selectedActiveObjectId={selectedActiveObjectId}\n          mapitData={mapData}\n          config={config}\n          onSettingsLoading={onSettingsLoading}\n          webApiURI={webApiURI}\n          mediaStorageURI={mediaStorageURI}\n          onSubmit={handleOnSubmit}\n          onResetData={onResetData}\n          deviceType={deviceType}\n          setCameraControlPosition={setCameraControlPosition}\n          onExtractedAmenities={onExtractedAmenities}\n        />\n        <div className={styles.hide}>\n          <div id=\"map-special-svg-kiosk\">\n            <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n              <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-atm\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n              <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-management\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n              <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-playarea\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n              <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n              <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-family-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n              <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-elevator\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n              <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-security\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n              <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-dog-poop-station\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n              <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n              <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n              <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n              <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n              <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n            </svg>\n          </div>\n          <div id=\"map-special-svg-escalator\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"398\" viewBox=\"0 0 512 398\">\n              <g fill-rule=\"evenodd\">\n                <path fill=\"#FFF\" d=\"M217.01,68.67 C235.674,68.677 250.846,53.503 250.85,34.83 C250.846,16.072 235.674,0.9 217.01,0.87 C198.243,0.9 183.071,16.072 183.05,34.83 C183.071,53.503 198.243,68.677 217.01,68.67\"></path>\n                <path fill=\"#FFF\" d=\"M250.49,129.63 L250.49,108.27 C250.507,62.826 183.412,63.326 183.41,108.27 L183.41,195.39 L183.53,195.39 L120.17,258.87 C114.172,264.805 113.443,265.065 101.69,265.11 C101.691,265.075 62.93,265.11 62.93,265.11 C23.943,265.065 0.557,300.113 0.53,329.79 C0.557,359.539 23.943,397.1 66.41,397.11 C66.41,397.11 119.149,397.1 135.41,397.11 C151.738,397.1 171.491,390.871 187.73,375.51 L389.93,174.03 C394.237,170.175 396.633,168.978 404.09,168.99 C404.09,168.99 431.929,168.978 454.01,168.99 C478,168.978 512,141.75 511.97,102.51 C512,63.651 477.75,37.75 451.97,37.71 L373.25,37.71 C356.899,37.664 335.943,44.326 323.45,56.79 L250.49,129.63\"></path>\n                <path fill=\"#FFF\" d=\"M377.93,71.19 L448.85,71.19 C466.144,71.211 477.75,90.498 477.77,102.03 C477.75,113.502 469.516,134.969 448.37,134.91 L405.77,134.91 C387.75,134.969 379.75,137.5 369.41,147.87 L165.65,351.63 C157.443,359.826 146.989,363.093 133.61,363.15 L66.41,363.15 C49.149,363.093 33.943,348.496 33.89,329.31 C33.943,310.156 48.443,299.415 63.41,299.43 L109.49,299.43 C122.943,299.415 131.775,295.581 139.49,287.91 L346.61,80.79 C355.083,72.276 363.502,71.211 377.93,71.19\"></path>\n              </g>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </MeshObjectContextProvider>\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\nimport { AmenityID } from \"./MapBox\";\n\nexport type IRetailer = {\n    id: string;\n    index?: string;\n    retail_name: string;\n    slug: string;\n    location: string;\n    retailer_phone: string;\n    retailer_description: string;\n    logo: string;\n    map_obj_name: string;\n};\n\nexport type MapObj = {\n    id: string | number;\n    center_id: string;\n    retailer_id: string;\n    kiosk_id: string | null;\n    map_obj_name: string;\n    obj_type: string;\n    layer_type: string;\n    value: string;\n    custom_text: string;\n    custom_image: string;\n    hover_text: string;\n    bg_color: string;\n    transparent: string | number;\n    text_color: string;\n    size: string;\n    lock_size: string;\n    rotate: string;\n    offsetX: string;\n    offsetY: string;\n    goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<MapObj, 'goToFloor'>;\n\nexport type Floor = {\n    id: string;\n    svg_map?: string;\n    objsGroup?: Group;\n    interactiveObjs?: any[];\n    escalatorsObjs?: any[];\n    escalatorsNodes?: Record<any, any>;\n    escalatorMeshes?: any[];\n    route_points?: IRoutePoint[];\n    route_tube?: any;\n    route_texture?: Texture | null | undefined;\n    routeMeshes?: any[];\n    route_active?: boolean;\n    center_id?: string;\n    title: string;\n    svg?: string;\n    status?: string;\n    created_at?: string;\n};\n\nexport type CameraControlsState = {\n    camera: { x: number, y: number, z: number };\n    controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n    STYLE: '2D' | '3D',\n    MAP_BACKGROUND_COLOR: string;\n    ACCENT_COLOR: string;\n    STORE_DEFAULT_COLOR: string;\n    BIG_STORE_DEFAULT_COLOR: string;\n    WALL_THICKNESS: string;\n    WALL_COLOR: string;\n    BOUNDARY_THICKNESS: string;\n    BOUNDARY_COLOR: string;\n    BASE_COLOR: string;\n    STORE_TEXT_COLOR: string;\n    STORE_HEIGHT: string;\n    OVERLAY_COLOR: string;\n    OVERLAY_OPACITY: string;\n    AMENITIES_NAV_BG_COLOR: string;\n    AMENITIES_NAV_ICON_COLOR: string;\n    KIOSK_SIZE: string;\n    CAMERA_MIN_DISTANCE: string;\n    CAMERA_MAX_DISTANCE: string;\n};\n\nexport type Kiosk = {\n    id: string;\n    title: string;\n    map_obj_name: string;\n};\n\nexport type Amenity = {\n    name: string;\n    image: string;\n};\n\nexport type MapIt2Response = {\n    retailers: IRetailer[];\n    map_objs: MapObj[];\n    floors: Floor[];\n    camera_controls_states: {\n        display_app: CameraControlsState;\n        desktop: CameraControlsState;\n        tablet: CameraControlsState;\n        mobile: CameraControlsState;\n    };\n    settings: Settings;\n    kiosks: Kiosk[];\n    amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n    name: string;\n    node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const response = obj as Record<string, unknown>;\n\n    return (\n        Array.isArray(response.retailers) &&\n        Array.isArray(response.map_objs) &&\n        Array.isArray(response.floors) &&\n        typeof response.camera_controls_states === 'object' &&\n        response.camera_controls_states !== null &&\n        typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n        typeof response.settings === 'object' &&\n        Array.isArray(response.kiosks) &&\n        typeof response.amenities === 'object'\n    );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","allIndexedMapObjects","allIndexedRetailers","createGraph","hex_to_color","hex_code","Color","getFormatedColor","replace","amenitiesList","type","icon","ATMIcon","_jsxs","xmlns","viewBox","children","_jsx","d","transform","fill","ManagementIcon","PlayAreaIcon","jsx","RestroomIcon","FamilyRestroom","ElevatorIcon","SecurityIcon","DogPoopStation","cx","cy","rx","ry","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","item","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","loadFloors","results","GeometriesAndMaterials","result","meshParams","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","Map","point","origin_point","target_direction","set","storeIntersects","intersectObjects","object","escalatorIntersects","escalatorNodes","assign_route_nodes_to_stores","size","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","graph","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","getImageLogo","new_object_id","mesh_center_point","handleAsync","logoMesh","storeLogo","get_store_name_logo_geo","textLogoNamePrefix","myFont","boundingBox","computeBoundingBox","getCenter","getSize","text","STORE_TEXT_COLOR","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minDistance","maxDistance","animSpeed","KIOSK_SIZE","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","floorsData","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","setMeshParams","useState","textParams","setTextParams","storeLogos","setStoreLogos","setPathFinderGraph","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","camera_controls_states","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","values","removeFromParent","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MapObject","update","setUpdate","React","triggerUpdate","htmlContent","Html","distanceFactor","uuid","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","jsxs","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","boundingSphere","styles","escalator_elems","display","className","element","label","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currentFloorIndex","currKioskObj","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","cameraPos","controlPos","handleCameraAndControlsChange","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","targetMesh","selectedFloorMeshParams","meshes","currentActiveObject","focus","aspect","cameraDistance","min","setLength","fromPosition","fromTarget","animationStartTime","duration","zoomStep","onCameraMove","vector","animationTime","animationProgress","lerpVectors","resetCamera","fullReset","cameraControlsStates","controls","useImperativeHandle","rotation","_Fragment","Fragment","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","FloorButton","isActive","control_btn","FloorSelector","selectedFloorIndex","handleFloorChange","floorButtons","btn_group","slice","reverse","UIComponent","zoomIn","zoomOut","reset","clearRoute","handleAmenityClick","mapObjs","onExtractedAmenities","extractValues","filter","preventDefault","Function","hide","backgroundColor","MapCenterMarker","koef","blink","kioskElementRef","kioskElement","svgOrigin","svgClone","cloneNode","appendChild","removeChild","MeshObjectContext","createContext","MeshObjectContextProvider","MeshObject","SetMeshObject","Provider","useMeshObjectContext","context","useContext","Error","defaultData","isError","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","newKoef","Number","MapboxForm","setData","selectedId","onResetData","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","setRotation","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","setIsLoading","fetchRetailers","apiURI","limit","page","search","uri","fetch","headers","toString","then","ok","Promise","resolve","json","reject","status","statusText","url","catch","useGetRetailers","handleChangeTab","k","updateData","retailIndex","findIndex","makeTextGeometry","makeImage","HTMLImageElement","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadOptions","inputValue","callback","noOptionsMessage","placeholder","location","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","Select","disabled","hidden","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","handleRotateByFixedAngle","RetailerInfoList","isAmenity","kioskId","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","slug","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","SceneComponent","refreshData","mapitData","getData","mapObjsApiUri","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","retailersPromise","mapObjsPromise","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","all","responseData","offset_x","offset_y","demoData","useMapit2Data","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","setCameraPos","setControlPos","canvasWidth","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","cameraLength","setCameraLength","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","labelRef","currentHoveredObject","setCurrentHoveredObject","meshObjectContext","showRetailerInfo","setShowRetailerInfo","createRouteToAmenity","resizeWidth","offsetWidth","addEventListener","setCameraControlPos","display_app","desktop","tablet","mobile","onSettingsLoading","getHexString","activeFromObjectId","getMapitData","body","cursor","currKioskFloorIndex","kioskError","kioskMapObjName","currKioskMeshParams","flat","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","currKioskLogo","mapData","handleMeshObjectContext","logoParams","stopPropagation","targetId","messageStyle","top","left","meshFloorsChecked","handleChangeMapitData","newData","itemIndex","Alert","getStyle","resetHandle","ccs","device","Canvas","Stats","stats","parent","intensity","camPos","ctrlTarget","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","_ref","refObj","setMapData","isMapIt2Response","view"],"mappings":"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"}