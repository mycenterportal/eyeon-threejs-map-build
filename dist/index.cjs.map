{"version":3,"file":"index.cjs","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/components/Amenities/ATM.tsx","../src/components/Amenities/Management.tsx","../src/components/Amenities/PlayArea.tsx","../src/components/Amenities/Restroom.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Amenities/Elevator.tsx","../src/components/Amenities/Security.tsx","../src/components/Icons/DogPoopStation.tsx","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/contexts/MapBoxContextProvider.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/services/retailersApi.tsx","../src/Hooks/useAllRetailers.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/MapboxForm.tsx","../src/components/MapboxForm/hooks/useRetailersOptions.ts","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/store.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type { Vector2 } from \"three\";\nimport { IFloorData } from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n  return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string, boolean] {\n  let exists = false;\n  let node_name: string = '-name-not-found-';\n  const currentFloor = floors[floor_index];\n  if (currentFloor.route_points !== undefined) {\n    for (let i = 0; i < currentFloor.route_points.length; i++) {\n      if (vertex.x === currentFloor.route_points[i].node.x && vertex.y === currentFloor.route_points[i].node.y) {\n        exists = true;\n        node_name = currentFloor.route_points[i].name;\n        break;\n      }\n    }\n    if (!exists) {\n      node_name = next_node_name(node_count);\n      // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n  }\n  return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport { Graph } from \"ngraph.graph\";\nimport { Color, Vector2, Vector3 } from \"three\";\nimport { get_node_name } from \"./nodesUtils\";\nimport { MeshType } from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n  const consolePrefix = 'MeshParams';\n  let mesh_type: MeshType = null;\n  var layer_color: Color | string = path.color.clone();\n  var extrude = 0;\n  var z_index = 0;\n  var mesh_visible = true;\n  var mesh_draw = true;\n  var mesh_transparent = false;\n  var line_thickness = config.WALL_THICKNESS;\n  var interactiveMesh = true;\n  var layer_name = path.userData?.node.id;\n  if (layer_name !== undefined) {\n    if (layer_name.startsWith('boundary')) {\n      mesh_type = 'boundary';\n      layer_color = config.BOUNDARY_COLOR;\n      line_thickness = config.BOUNDARY_THICKNESS;\n      if (config.STYLE === '3D') {\n        extrude = 9;\n      }\n    } else if (layer_name.startsWith('wall')) {\n      mesh_type = 'wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 8.5;\n      }\n    } else if (layer_name.startsWith('outer-wall')) {\n      mesh_type = 'outer-wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        mesh_draw = false;\n      }\n    } else if (layer_name.startsWith('building-base')) {\n      mesh_type = 'building-base';\n      layer_color = config.BUILDING_BASE_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 12;\n        z_index = -12;\n      }\n    } else if (layer_name.startsWith('base')) {\n      mesh_type = 'base';\n      layer_color = config.BASE_COLOR;\n    } else if (layer_name.startsWith('store')) {\n      mesh_type = 'store';\n      layer_color = config.STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = parseInt(config.STORE_HEIGHT);\n      }\n      if (layer_name.startsWith('store-underlay')) {\n        interactiveMesh = false;\n      }\n    } else if (layer_name.startsWith('big-store')) {\n      mesh_type = 'big-store';\n      layer_color = config.BIG_STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 16;\n      }\n    } else if (layer_name.startsWith('route-path')) {\n      mesh_type = 'route-path';\n      mesh_draw = false;\n      path.subPaths.forEach(subPath => {\n        if (subPath.curves.length === 0) {\n          console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n        }\n\n        subPath.curves.forEach(curve => {\n          //@ts-ignore\n          const v1: Vector2 = curve.v1;\n          //@ts-ignore\n          const v2: Vector2 = curve.v2;\n\n          const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n          if (!exists1) {\n            floors[floor_index].route_points?.push({\n              name: node1_name,\n              node: new Vector3(v1.x, v1.y, 1)\n            });\n            allNodesFloor[node1_name] = floor_index;\n          }\n          const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n          if (!exists2) {\n            floors[floor_index].route_points?.push({\n              name: node2_name,\n              node: new Vector3(v2.x, v2.y, 1)\n            });\n            allNodesFloor[node2_name] = floor_index;\n          }\n          pathFinderGraph.addNode(node1_name, { ...v1 });\n          pathFinderGraph.addNode(node2_name, { ...v2 });\n\n          // pathFinderGraph.addLink(node1_name, node2_name);\n          pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n          pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n        });\n      });\n    } else if (layer_name.startsWith('escalator-')) {\n      mesh_type = 'escalator';\n      mesh_visible = false;\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('kiosk-')) {\n      mesh_type = 'kiosk';\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('amenity-')) {\n      mesh_type = 'amenity';\n      mesh_transparent = true;\n      z_index = 1;\n    } else if (layer_name.startsWith('overlay')) {\n      mesh_type = 'overlay';\n    } else if (layer_name.startsWith('special-shape')) {\n      mesh_type = 'special-shape';\n    } else {\n      extrude = 1;\n    }\n  } else {\n    console.warn(consolePrefix + 'Layer name is undefined, path', path)\n  }\n\n\n  /*console.debug({\n      mesh_type,\n      layer_color,\n      extrude,\n      z_index,\n      mesh_visible,\n      mesh_draw,\n      mesh_transparent,\n      line_thickness,\n      interactiveMesh,\n      path,\n      layer_name,\n  })*/\n  return {\n    mesh_type,\n    layer_color,\n    extrude,\n    z_index,\n    mesh_visible,\n    mesh_draw,\n    mesh_transparent,\n    line_thickness,\n    interactiveMesh,\n    path,\n    layer_name,\n  }\n}","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import ATMIcon from \"src/components/Amenities/ATM\";\nimport ElevatorIcon from \"src/components/Amenities/Elevator\";\nimport ManagementIcon from \"src/components/Amenities/Management\";\nimport PlayAreaIcon from \"src/components/Amenities/PlayArea\";\nimport RestroomIcon from \"src/components/Amenities/Restroom\";\nimport SecurityIcon from \"src/components/Amenities/Security\";\nimport DogPoopStation from \"src/components/Icons/DogPoopStation\";\nimport FamilyRestroom from \"src/components/Icons/FamilyRestroom\";\nimport { IAmenitiesInteractiveList } from \"src/types\";\n\nexport const amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        icon: ATMIcon,\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        icon: ManagementIcon,\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        icon: PlayAreaIcon,\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        icon: RestroomIcon,\n    },\n    {\n        name: 'Family Restroom',\n        type: 'family-restroom',\n        icon: FamilyRestroom,\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        icon: ElevatorIcon,\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        icon: SecurityIcon,\n    },\n    {\n        name: 'Dog Poop Station',\n        type: 'dog-poop-station',\n        icon: DogPoopStation,\n    },\n] \n\n","const ATMIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ATMIcon;","\nconst ManagementIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default ManagementIcon;","\nconst PlayAreaIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default PlayAreaIcon;","\nconst RestroomIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default RestroomIcon;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst ElevatorIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ElevatorIcon;","\nconst SecurityIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default SecurityIcon;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","import { Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry } from \"three\";\nimport { getWallShape } from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\n// import {allMapObjects} from \"../../globals\";\nimport { IConfig, IExtMesh, IMeshValues, TRoles } from \"../../types\";\nimport { hex_to_color } from \"../../helpers/misc\";\n\nimport { IRetailer, MapObj } from \"../../mapitApiTypes\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n  'route-path': 0,\n  'escalator': 0,\n  'underlay': 0,\n  'overlay': 1,\n  'building-base': 1,\n  'base': 2,\n  'store': 3,\n  'big-store': 4,\n  'kiosk': 5,\n  'wall': 6,\n  'outer-wall': 7,\n  'boundary': 8,\n  'amenity': 9,\n  'layer-image': 10,\n  'layer-text': 11,\n  'route-tube': 12,\n  'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n  if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n    return renderOrders[mesh_type];\n  }\n  // console.warn(`Unknown mesh type: ${mesh_type}`)\n  return 0;\n}\n\nexport const getMaterial = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  layer_color: Color | string,\n  mesh_transparent: boolean,\n  allIndexedMapObjects: Record<string, MapObj>,\n) => {\n  const material_settings = {\n    color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n    side: DoubleSide,\n    transparent: false,\n    depthWrite: true,\n    depthTest: true,\n    opacity: 1,\n  }\n  if (config.STYLE === '2D' || mesh_type === 'base' || mesh_type == null) {\n    if (mesh_type !== 'boundary') {\n      material_settings.depthWrite = false;\n      material_settings.depthTest = false;\n    }\n  }\n  if (mesh_type === 'overlay') {\n    material_settings.color = config.OVERLAY_COLOR;\n    material_settings.opacity = config.OVERLAY_OPACITY;\n  }\n  if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE !== 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent === 1) {\n    material_settings.opacity = 0;\n  }\n  var material = new MeshLambertMaterial(material_settings);\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    material.colorDefault = material.color;\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color !== '') {\n      material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n      //@ts-ignore\n      material.colorDefault = material.color;\n    }\n    //@ts-ignore\n    material.active = false;\n  }\n  if (config.ROLE !== 'PORTAL' && mesh_transparent) {\n    material.opacity = 0;\n    material.transparent = true;\n  }\n\n  material.transparent = material.opacity !== 1;\n\n  return material;\n}\n\nexport const getGeometry = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  extrude: number,\n  line_thickness: number,\n  path: any,\n) => {\n  const consolePrefix = 'MaterialAndGeometry';\n\n  let shapes = path.toShapes(true);\n\n  // shapes.forEach((shape, index) => {\n  let extrude_meshes;\n  if (config.STYLE === '2D') {\n    extrude_meshes = ['building-base'];\n  } else {\n    extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n  }\n\n  let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n  var geometry;\n  if (mesh_type && extrude_meshes.includes(mesh_type)) {\n    geometry = new ExtrudeGeometry(shapes, {\n      depth: -extrude,\n      bevelEnabled: false,\n    });\n  } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n    //@ts-ignore\n    let wall_geometries = [];\n    //@ts-ignore\n    path.subPaths.forEach(subPath => {\n      //@ts-ignore\n      subPath.curves.forEach(curve => {\n        if (curve.type === 'LineCurve') {\n          let shape_extend = 0;\n          if (mesh_type === 'boundary') {\n            shape_extend = 1;\n          } else if (mesh_type === 'wall') {\n            // shape_extend = 1 / 3;\n          }\n          let shape1 = getWallShape(curve, line_thickness, shape_extend);\n          let wall_geometry = new ExtrudeGeometry(shape1, {\n            depth: -extrude,\n            bevelEnabled: false,\n          });\n          wall_geometries.push(wall_geometry);\n        } else {\n          console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n        }\n      });\n    });\n\n    if (wall_geometries.length === 1) {\n      //@ts-ignore\n      geometry = wall_geometries[0];\n    } else if (wall_geometries.length > 1) {\n      //@ts-ignore\n      geometry = mergeGeometries(wall_geometries);\n    } else {\n      console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n    }\n  } else {\n    geometry = new ShapeGeometry(shapes);\n    try {\n      //@ts-ignore\n      if (geometry.attributes.position.count === 0) {\n        console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n      }\n    } catch (e: any) {\n      console.error(e.message);\n    }\n  }\n\n  return geometry;\n}\n\nexport const getMaterialAndGeometry = (allMapObjects: string[], config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n\n  const material = getMaterial(\n    config,\n    mesh_type,\n    layer_name,\n    layer_color,\n    mesh_transparent,\n    allIndexedMapObjects\n  );\n\n  const geometry = getGeometry(\n    config,\n    mesh_type,\n    layer_name,\n    extrude,\n    line_thickness,\n    path\n  );\n\n  const mesh = new Mesh(geometry, material) as IExtMesh;\n  mesh.object_id = layer_name;\n  mesh.mesh_type = mesh_type;\n  mesh.floor_index = floor_index;\n  mesh.visible = mesh_visible;\n  mesh.position.z = z_index;\n  let storeName = '';\n  if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n    if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type === 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n      storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].custom_text;\n      if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n        storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n      }\n    } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].value;\n      if (storeName.length > 1) {\n        const amenity = amenitiesList.find(item => item.type === storeName)\n        if (amenity) {\n          storeName = amenity.name;\n        }\n      }\n    }\n  }\n  mesh.userData.storeName = storeName;\n  if (config.STYLE === '2D') {\n    mesh.renderOrder = getRenderOrder(mesh_type);\n    if (layer_name && layer_name.includes('underlay')) {\n      mesh.renderOrder = getRenderOrder('underlay');\n    }\n  }\n\n  floors[floor_index].objsGroup.add(mesh);\n\n  if (mesh_type === 'escalator') {\n    floors[floor_index].escalatorsNodes[layer_name] = null;\n    floors[floor_index].escalatorsObjs.push(mesh);\n    mesh.escalator_id = floor_index + '-' + layer_name;\n  }\n\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    mesh.route_node_id = null;\n\n    // add floor_index to the kiosks\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'kiosk') {\n      // var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n      /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n          ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n      }*/\n    }\n\n    if (config.ROLE === 'PORTAL') {\n      allMapObjects.push(layer_name);\n    }\n    if (\n      (config.ROLE !== 'PORTAL' && mesh_type === 'kiosk') ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'amenity' && allIndexedMapObjects[layer_name].value !== '') ||\n      (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n      (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type ?? ''))\n    ) {\n      // if (interactiveMesh) {\n      floors[floor_index].interactiveObjs.push(mesh);\n      // }\n    } else if (\n      (config.ROLE === 'PORTAL')\n    ) {\n      floors[floor_index].interactiveObjs.push(mesh);\n    }\n  }\n\n  // if (['store', 'big-store'].includes(mesh_type as string)) {\n  //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n  // }\n\n  return {\n    mesh,\n    geometry,\n    material,\n    object_id: layer_name,\n    mesh_type,\n    floor_index,\n    visible: mesh_visible,\n    renderOrder: mesh.renderOrder,\n  }\n  // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n  BufferGeometry,\n  CanvasTexture,\n  CurvePath,\n  DoubleSide,\n  LineCurve3,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Raycaster,\n  Scene,\n  TubeGeometry,\n  Vector3,\n} from \"three\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\n// import {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport { PathFinder } from \"ngraph.path\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\nimport { IExtMesh, IFloorData } from \"../types\";\nimport { Graph, Node } from \"ngraph.graph\";\n// import { allNodesFloor } from \"src/globals\";\n\nconst consolePrefix = 'ROUTE: ';\n\n\n\nexport function delete_route_path(floors: IFloorData[]) {\n  for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n    const floor = floors[floor_index];\n    floor.route_active = false;\n\n    if (floor.route_tube != null) {\n      floor.route_tube.geometry.dispose();\n      //@ts-ignore\n      floor.route_tube.material.dispose();\n      floor.objsGroup?.remove(floor.route_tube);\n    }\n\n    floor.route_tube = undefined;\n    floor.route_texture = null;\n    floor.escalatorMeshes = [];\n  }\n}\n\nexport function create_route(allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n  if (from_mesh_object_id === to_mesh_object_id) {\n    return [];\n  }\n  const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n  if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n  return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[], floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n  // TODO: remove scene dependency and scene.getObjectByProperty\n  const routePaths = [] as any[];\n  delete_route_path(floors);\n  let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n  let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n  let from_node_name = from_obj.route_node_id;\n  let to_node_name = to_obj.route_node_id;\n\n  // console.log({\n  //     from_mesh_object_id,\n  //     to_mesh_object_id,\n  //     from_obj,\n  //     to_obj,\n  //     from_node_name,\n  //     to_node_name,\n  // })\n\n  // from_node_name = 'node-147';\n  // to_node_name = 'node-221';\n\n  if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n  if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n  if (!from_node_name || !to_node_name) return routePaths;\n\n  const from_route_floor_index = from_obj.floor_index;\n  const to_route_floor_index = to_obj.floor_index;\n\n  const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n    distance: function (fromNode, toNode, link) {\n      if (link.data) return link.data.weight;\n      return false;\n    },\n    //@ts-ignore\n    debug: true,\n  });\n  const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n  const routeNodesEsclators = [];\n  if (!routeNodes) {\n    return [];\n  }\n  const floor_routes = [];\n\n  for (let index = 0; index < routeNodes.length; index++) {\n    const routeNode = routeNodes[index];\n    if (floor_routes[allNodesFloor[routeNode.id]]) {\n      floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n    } else {\n      floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n    }\n\n    if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n      // don't consider these middle escalators nodes\n    } else {\n      routeNodesEsclators.push(routeNode);\n    }\n  }\n  for (let index = 0; index < routeNodesEsclators.length; index++) {\n    const routeNode = routeNodesEsclators[index];\n    if (\n      allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n      && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n    ) {\n      const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n      const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n\n      let goToFloor = null;\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index + 1].id],\n          direction: 'Next',\n        };\n      }\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index - 1].id],\n          direction: 'Previous',\n        };\n      }\n\n\n      if (goToFloor && escalator_mesh) {\n        escalator_mesh.goToFloor = goToFloor;\n        const escalator_clone = escalator_mesh.clone();\n        escalator_clone.goToFloor = goToFloor;\n        //@ts-ignore\n        floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_clone);\n      }\n    }\n\n  }\n  for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n    const floor_route = floor_routes[floor_index];\n    if (floor_route && floor_route.length > 1) {\n      const routePath = create_route_path(floor_route, floor_index, floors, style);\n      routePaths[floor_index] = routePath;\n\n      floors[floor_index].route_active = true;\n      floors[floor_index].routeMeshes = [routePath];\n      if (floor_index === from_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(from_obj);\n      }\n      if (floor_index === to_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(to_obj);\n\n      }\n    }\n  }\n\n  // setTimeout(function () {\n  //     //TODO openFloorMap functionality\n  //     // openFloorMap(from_route_floor_index);\n  // });\n\n  return routePaths;\n}\n\nfunction create_route_path(\n  routeNodes: Node<any>[],\n  floor_index: number,\n  floors: IFloorData[],\n  style = '2D',// config.STYLE\n) {\n  let distance = 0;\n  let route_path = new CurvePath<Vector3>();\n  for (let i = 1; i < routeNodes.length; i++) {\n    let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n    let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n    route_path.add(new LineCurve3(from_node, to_node));\n    distance += from_node.distanceTo(to_node);\n  };\n  var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n  //@ts-ignore\n  geometry = new BufferGeometry().copy(geometry);\n  var material = new MeshBasicMaterial({\n    map: get_route_texture(distance, floor_index, floors),\n    transparent: true,\n    side: DoubleSide,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  let route_tube = new Mesh(geometry, material) as IExtMesh;\n  if (style === '2D') {\n    route_tube.position.z = -10;\n    route_tube.scale.z = 0.1;\n  }\n  route_tube.position.z = 0;\n  route_tube.renderOrder = getRenderOrder('route-tube');\n  route_tube.mesh_type = 'route-tube';\n  //@ts-ignore\n  route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n  // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n  floors[floor_index].route_tube = route_tube;\n  floors[floor_index].objsGroup?.add(route_tube);\n\n  return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n  return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n  let distance = 0;\n\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n\n  for (let i = 1; i < routeNodes.length; i++) {\n    let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n    distance += link?.data.weight || 0;\n  };\n  return distance;\n}\n\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n  let canvas = document.createElement(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    ctx.canvas.width = distance;\n    ctx.canvas.height = 80;\n\n    ctx.fillStyle = \"#4ea5ff\";\n    ctx.fillRect(0, 0, distance, 80);\n\n    let grd_width = 0.1 * distance;\n    const min_grd_width = 60;\n    const max_grd_width = 120;\n    if (grd_width < min_grd_width) grd_width = min_grd_width;\n    if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n    let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n    grd.addColorStop(0, \"#4ea5ff\");\n    grd.addColorStop(0.4, \"white\");\n    grd.addColorStop(0.6, \"white\");\n    grd.addColorStop(1, \"#4ea5ff\");\n\n    ctx.fillStyle = grd;\n    ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n    floors[floor_index].route_texture = route_texture;\n\n    return route_texture;\n  } else {\n    return undefined;\n  }\n}\n\n//TODO\n\nexport function assign_route_nodes_to_stores(\n  floor_index: number,\n  floors: IFloorData[],\n  allIndexedMapObjects: Record<string, MapObj>,\n  allIndexedRetailers: Record<string, IRetailer>,\n  allNodesFloor: Record<string, number>,\n  escalator_nodes: string[],\n  find_store_node_raycaster: Raycaster,\n  role: string, //config.ROLE\n) {\n  const result = new Map();\n  const currentFloor = floors[floor_index];\n  if (currentFloor && currentFloor.route_points) {\n    currentFloor.route_points.forEach(point => {\n      let origin_point = new Vector3(point.node.x, point.node.y, -10);\n      let target_direction = new Vector3(0, 0, 1);\n      find_store_node_raycaster.set(origin_point, target_direction);\n      //@ts-ignore\n      var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n      if (storeIntersects.length) {\n        //@ts-ignore\n        storeIntersects[0].object.route_node_id = point.name;\n        //@ts-ignore\n        result.set(storeIntersects[0].object.object_id, point.name);\n        if (false && role !== 'PORTAL') {\n          //@ts-ignore\n          var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n          if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n            // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n          }\n        }\n      }\n\n      var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n      if (escalatorIntersects.length) {\n        const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n        let escalator_obj_id = obj.object_id;\n        const escalatorNodes = floors[floor_index].escalatorsNodes;\n        if (escalatorNodes) {\n          escalatorNodes[escalator_obj_id as string] = point.name;\n          allNodesFloor[point.name] = floor_index;\n          escalator_nodes.push(point.name);\n        }\n      }\n    });\n  }\n  return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n  // console.log('linkFloorEscalators', floors)\n  if (floors.length > 1) {\n    for (let i = 0; i < (floors.length - 1); i++) {\n      // console.log('floors[i]',i, floors[i])\n      const floor_escalators = floors[i].escalatorsNodes;\n      // console.log('floor_escalators', floor_escalators);\n      Object.keys(floor_escalators as object).forEach(escalator => {\n        if (floors[i].escalatorsNodes?.[escalator] != null && floors[i + 1].escalatorsNodes?.[escalator] != null) {\n          // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n          const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n          const nodeIdTo = floors[i + 1].escalatorsNodes?.[escalator];\n          if (nodeIdFrom && nodeIdTo) {\n            pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n            pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n          }\n        } else {\n          // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n        }\n      })\n    }\n  }\n}\n\nexport function make_amenity_route(allNodesFloor: Record<string, number>, kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string): Mesh[] {\n  let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n  // if (!kiosk_obj) return [];\n  let kiosk_node_name = kiosk_obj ? kiosk_obj.route_node_id : '';\n\n  var to_obj_name = null;\n\n  var shortest_distance = 9999;\n  // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n  const map_objs: string[] = [];\n  for (let key in allIndexedMapObjects) {\n    const mapObject = allIndexedMapObjects[key];\n    if (\n      mapObject.layer_type === 'amenity'\n      && mapObject.obj_type === 'special'\n      && mapObject.value === amenity_type\n    ) {\n      map_objs.push(key);\n    }\n  }\n  map_objs.forEach((amenity_obj_name: string) => {\n    let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n      distance: function (fromNode, toNode, link) {\n        if (link.data) return link.data.weight;\n        return false;\n      },\n      //@ts-ignore\n      debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n      var amenity_node_name = amenity_obj.route_node_id;\n      try {\n        var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n        if (route_distance && route_distance < shortest_distance) {\n          shortest_distance = route_distance;\n          to_obj_name = amenity_obj_name;\n        }\n      } catch (e: any) {\n        console.warn(`Amenity Path: ${e.message}`);\n      }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n      to_obj_name = amenity_node_name;\n    }\n  });\n  return create_route(allNodesFloor, kiosk_obj_name, to_obj_name ?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import { getMeshParams } from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport { IConfig, IFloorData, IMeshValues, TRoles } from \"src/types\";\n// import {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport { getMaterialAndGeometry } from \"./getMaterialAndGeometry\";\nimport { Raycaster } from \"three\";\nimport { assign_route_nodes_to_stores, linkFloorEscalators } from \"src/helpers/route.helpers\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { Graph } from \"ngraph.graph\";\nimport { EventedType } from \"ngraph.events\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, allMapObjects: string[], allNodesFloor: Record<string, number>, pathFinderGraph: Graph<any, any> & EventedType, floors: IFloorData[], config: IConfig, results: SVGResult[], role?: TRoles) {\n  const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n  const escalator_nodes: string[] = [];\n  results.forEach((result, floor_index) => {\n    if (result.paths && result.paths.length) {\n      const pathIds = [];\n      for (let i = 0; i < result.paths.length; i++) {\n        pathIds.push(result.paths[i]?.userData?.node.id);\n      }\n      const paths = result.paths;\n      for (let i = 0; i < paths.length; i++) {\n        const {\n          mesh_type,\n          layer_color,\n          extrude,\n          z_index,\n          mesh_visible,\n          mesh_draw,\n          mesh_transparent,\n          line_thickness,\n          path,\n          layer_name,\n        } = getMeshParams(\n          paths[i],\n          paths,\n          floors,\n          floor_index,\n          config,\n          ++node_count,\n          //@ts-ignore\n          allNodesFloor,\n          pathFinderGraph\n        );\n\n        if (mesh_draw) {\n          const meshParams = getMaterialAndGeometry(\n            allMapObjects,\n            config,\n            mesh_type,\n            layer_name,\n            layer_color,\n            mesh_transparent,\n            mesh_visible,\n            z_index,\n            extrude,\n            line_thickness,\n            floors,\n            floor_index,\n            allIndexedMapObjects,\n            allIndexedRetailers,\n            path,\n            role\n          );\n\n          if (layer_name.startsWith('kiosk-')) {\n            if (role === 'PORTAL') {\n              // meshParams.mesh.visible = false;\n              //@ts-ignore\n              // meshParams.mesh.material.visible = false;\n            }\n          }\n\n          if (!GeometriesAndMaterials[floor_index]) {\n            GeometriesAndMaterials[floor_index] = [];\n          }\n\n          GeometriesAndMaterials[floor_index].push(meshParams);\n        }\n      }\n      const findStoreNodeRaycaster = new Raycaster();\n      const routeNodeIds = assign_route_nodes_to_stores(\n        floor_index,\n        floors,\n        allIndexedMapObjects,\n        allIndexedRetailers,\n        allNodesFloor,\n        escalator_nodes,\n        findStoreNodeRaycaster,\n        config.ROLE\n      );\n\n      if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n        for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n          if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n            GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n          }\n        }\n      }\n\n      linkFloorEscalators(floors, pathFinderGraph);\n\n    }\n  })\n\n  return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes };\n}","import { IJsonConfig } from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n  ROLE: 'WEBSITE',\n  DEVICE: 'display_app',\n  CENTER_ID: '',\n  KIOSK: '',\n  STYLE: '3D',\n  DEFAULT_SELECTED_STORE: '',\n  DEBUG: '1',\n\n  MAP_BACKGROUND_COLOR: \"FFFFFF\",\n  ACCENT_COLOR: \"4EA5FF\",\n  STORE_DEFAULT_COLOR: \"E2E2E2\",\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n  WALL_THICKNESS: '0.6',\n  WALL_COLOR: \"888888\",\n  BOUNDARY_THICKNESS: '0.8',\n  BOUNDARY_COLOR: \"888888\",\n  BASE_COLOR: \"25292B\",\n  STORE_TEXT_COLOR: \"222222\",\n  OVERLAY_COLOR: \"FFFFFF\",\n  OVERLAY_OPACITY: '0.7',\n  // AMENITIES_NAV_BG_COLOR: \"000000\",\n  // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  }\n}\n\nexport const defaultVars: IJsonConfig = {\n  MAP_BACKGROUND_COLOR: '',\n  ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n  DEVICE: 'display_app',\n  KIOSK: '',\n  FLOORS: [],\n  KIOSKS: {},\n  CENTER_ID: null,\n  STATS: 'false',\n  STYLE: '3D', // 2D, 3D\n  DEBUG: '0',\n  ACCENT_COLOR: '4EA5FF',\n  STORE_DEFAULT_COLOR: 'E2E2E2',\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n  WALL_THICKNESS: '0.6',\n  BOUNDARY_THICKNESS: '0.8',\n  WALL_COLOR: '888888',\n  BOUNDARY_COLOR: '888888',\n  BASE_COLOR: '25292B',\n  BUILDING_BASE_COLOR: 'DADADA',\n  STORE_TEXT_COLOR: '222222',\n  OVERLAY_COLOR: 'FFFFFF',\n  OVERLAY_OPACITY: '0.7',\n  CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n  ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n  DEFAULT_CAMERA_POSITION: null, // custom default camera position\n  DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n  DEFAULT_SELECTED_STORE: null,\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  },\n  KIOSK_SIZE: '15',\n  ZOOM_STEP: '100',\n  SELECTED_ZOOM_LIMIT: '',\n};","// import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3 } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh } from \"../types\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { hex_to_color } from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n    addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n  }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  //@ts-ignore\n  let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n  if (mesh) {\n    //@ts-ignore\n    add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n  }\n}\n\n\n\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n  if (!Array.isArray(mesh)) {\n    mesh = [mesh];\n  }\n  const box = mesh.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    //@ts-ignore\n    box.union(obj.geometry.boundingBox);\n    return box;\n  }, new Box3());\n  return box;\n}\n\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n  let map_obj = allIndexedMapObjects[object_id];\n\n  if (!map_obj) {\n    map_obj = {\n      offsetX: \"0\",\n      offsetY: \"0\",\n      rotate: \"0\",\n    }\n  }\n\n  let offsetX = parseInt(map_obj.offsetX);\n  let offsetY = parseInt(map_obj.offsetY);\n\n  newMeshPos.z = -mesh_size.z;\n\n  //@ts-ignore\n  newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n  //@ts-ignore\n  newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n  newMesh.scale.y *= -1;\n\n  newMeshPos.x += offsetX;\n  newMeshPos.y += offsetY;\n\n  newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  if (map_obj.obj_type === 'retailer') {\n    if (retailer) {\n      img.src = retailer.logo;\n    } else {\n      console.error('retailer not found');\n      return null;\n    }\n  } else if (map_obj.obj_type === 'special') {\n\n    let svg_image_name = map_obj.value;\n    if (map_obj.layer_type === 'kiosk') svg_image_name = 'kiosk';\n    if (map_obj.layer_type === 'escalator') svg_image_name = 'escalator';\n    if (svg_image_name) {\n      let svg_color = '222222';\n      if (map_obj.text_color != null) {\n        svg_color = map_obj.text_color;\n      }\n\n      const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n      if (!svg_block) {\n        console.error('svg_block not found', svg_image_name);\n        return null;\n      }\n      const svg_element = svg_block.querySelector(\"svg\");\n      if (!svg_element) {\n        console.error('svg_element not found', svg_image_name);\n        return null;\n      }\n\n      const svgColoredParts = svg_element.querySelectorAll('[fill]');\n      svgColoredParts.forEach((svgColoredPart) => {\n        svgColoredPart.setAttribute('fill', '#' + svg_color);\n      })\n\n      const svgData = (new XMLSerializer()).serializeToString(svg_element);\n      img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n    }\n\n  } else {\n    if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n      img.src = map_obj.custom_image;\n    } else {\n      return null;\n    }\n  }\n\n  return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n  img.onload = function () {\n    const c = document.createElement(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n\n    c.width = img.width;\n    c.height = img.height;\n\n    ctx?.drawImage(img, 0, 0);\n\n    let texture = new CanvasTexture(c);\n    texture.colorSpace = 'srgb'\n\n    const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n    const material = new MeshBasicMaterial({\n      map: texture,\n      transparent: true,\n      side: DoubleSide,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    if (map_obj.layer_type === 'kiosk') {\n      material.visible = false;\n    }\n\n    afterOnload(geometry, material);\n  };\n}\n\nfunction getImageLogo(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry, object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: { storeLogo: Object3D }) => void): void {\n  const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n  if (img === null) return;\n\n  processImage(img, map_obj, (geometry, material) => {\n    const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n    // @ts-ignore\n    const floor_index = mesh.floor_index;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n    logoMesh.object_id = new_object_id;\n    logoMesh.floor_index = floor_index;\n    logoMesh.renderOrder = getRenderOrder('layer-image');\n    floors[floor_index]?.objsGroup.add(logoMesh);\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    logoMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    //@ts-ignore\n    BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    \n    handleAsync({storeLogo: BoundingSphereMesh});\n    */\n    handleAsync({ storeLogo: logoMesh });\n  })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id: string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): { textMesh: IExtMesh } | null | false {\n  const new_object_id = textLogoNamePrefix + object_id;\n  // deleteMeshByObjectID(new_object_id, scene, floors);\n  let result = null;\n\n  if (!geometry.boundingBox) {\n    geometry.computeBoundingBox();\n  }\n  if (!geometry.boundingBox) {\n    return null;\n  }\n\n  const boundingBox = geometry.boundingBox;\n\n  const mesh_center_point = new Vector3();\n  boundingBox.getCenter(mesh_center_point);\n\n  const mesh_size = new Vector3();\n  boundingBox.getSize(mesh_size);\n\n  //@ts-ignore\n  let map_obj: MapObj = allIndexedMapObjects[object_id] ? allIndexedMapObjects[object_id] : { layer_type: object_id.startsWith('escalator') ? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8 };\n\n  if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n    let text = '';\n    if (map_obj.layer_type === 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n      text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n      text = map_obj.custom_text;\n    } else {\n      text = '';\n    }\n\n    let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n    if (map_obj.text_color) {\n      text_color = hex_to_color(map_obj.text_color);\n    }\n\n    const material_settings = {\n      color: text_color,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false,\n      depthTest: false,\n    };\n    let text_material = new MeshPhongMaterial(material_settings);\n    let text_geometry = new TextGeometry(text, {\n      font: myFont,\n      size: parseInt(map_obj.size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n\n    const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n    textMesh.userData.font = myFont;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n    textMesh.object_id = new_object_id;\n    textMesh.floor_index = floor_index;\n    textMesh.renderOrder = getRenderOrder('layer-text');\n    if (map_obj.layer_type === 'retail_name') {\n      textMesh.userData.retail_name = text;\n    }\n\n    floors[floor_index].objsGroup.add(textMesh);\n\n    //scene.add(textMesh);\n    //console.debug({UpdateTexts: scene});\n\n    // Show bounding sphere\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    textMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    @ts-ignore\n    BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    scene.add(BoundingSphereMesh);\n    */\n    result = { textMesh };\n  }\n\n  else if (\n    map_obj.layer_type === 'retail_logo' ||\n    map_obj.layer_type === 'custom_image' ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id != null) ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    || (map_obj.layer_type === 'escalator')\n  ) {\n    getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n  }\n  return result;\n}","import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport type { Mesh } from \"three\";\nimport path from \"ngraph.path\";\nimport { EventedType } from \"ngraph.events\";\nimport { IFloorData } from \"src/types\";\n\n\ntype MapBoxContextType = {\n  meshByObjectId: Map<string, Mesh>;\n  setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>> | Function;\n  allMapObjects: Array<string>;\n  setAllMapObjects: Dispatch<SetStateAction<Array<string>>> | Function;\n  allIndexedMapObjects: Record<string, MapObj>;\n  setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObj>>> | Function;\n  allIndexedRetailers: Record<string, IRetailer>;\n  setAllIndexedRetailers: Dispatch<SetStateAction<Record<string, IRetailer>>> | Function;\n  allNodesFloor: Record<string, number>;\n  setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>> | Function;\n  pathFinderGraph: Graph<any, any> & EventedType\n  setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>> | Function;\n  ngraphPath: typeof path;\n  setNgraphPath: Dispatch<SetStateAction<typeof path>> | Function;\n  floorsData: IFloorData[];\n}\nconst MapBoxContext = createContext<MapBoxContextType>({\n  meshByObjectId: new Map<string, Mesh>(),\n  setMeshByObjectId: () => null,\n  allMapObjects: [],\n  setAllMapObjects: () => null,\n  allIndexedMapObjects: {},\n  setAllIndexedMapObjects: () => null,\n  allIndexedRetailers: {},\n  setAllIndexedRetailers: () => null,\n  allNodesFloor: {},\n  setAllNodesFloor: () => null,\n  pathFinderGraph: createGraph(),\n  setPathFinderGraph: () => null,\n  ngraphPath: path,\n  setNgraphPath: () => null,\n  floorsData: []\n})\n\nconst MapBoxContextProvider = ({ children }: { children: ReactNode }) => {\n\n  const [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string, Mesh>());\n  const [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\n  const [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\n  const [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\n  const [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n  //<{ x:number, y:number }, { weight: number }>\n  const [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\n  const [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n  const [floorsData] = useState<MapBoxContextType['floorsData']>([]);\n\n  return (\n    <MapBoxContext.Provider value={{\n      meshByObjectId,\n      setMeshByObjectId,\n      allMapObjects,\n      setAllMapObjects,\n      allIndexedMapObjects,\n      setAllIndexedMapObjects,\n      allIndexedRetailers,\n      setAllIndexedRetailers,\n      allNodesFloor,\n      setAllNodesFloor,\n      pathFinderGraph,\n      setPathFinderGraph,\n      ngraphPath,\n      setNgraphPath,\n      floorsData\n    }}\n    >\n      {children}\n    </MapBoxContext.Provider>\n  )\n\n}\n\nexport function useMapBoxContext() {\n  const context = useContext(MapBoxContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n  }\n\n  return context;\n}\n\nexport default MapBoxContextProvider;\n","import {\n  Group,\n  Mesh,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { loadFloors } from \"./loadFloors\";\nimport type { IConfig, IExtMesh, IFloorData, IMeshValues, TRoles } from \"../../types\";\nimport { defaultVars, mapit2DefaultVars } from \"../../defaults\";\n// import {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport { get_store_name_logo_geo } from \"src/helpers/draw.logo.helpers\";\nimport { IJsonConfig, IMeshParamsTmp } from \"../../types\";\nimport { hex_to_color } from \"src/helpers/misc\";\nimport { Kiosk, MapIt2Response, MapObj, IRetailer } from \"../../mapitApiTypes\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars }\n\nconst defaultMapObjValues = {\n  id: null,\n  center_id: config.CENTER_ID,\n  retailer_id: null,\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: 8,\n  rotate: 0,\n  offsetX: 0,\n  offsetY: 0,\n} as Record<string, string | number | null | undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\n\n// const floorsData:IFloorData[] = [];\nlet MEDIA_STORAGE_URI: string = '';\n\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n  for (let key in obj) {\n    delete obj[key];\n  }\n}\n\nfunction makeIndexedMapObjects(allIndexedMapObjects: Record<string, MapObj>, map_objs: MapObj[]) {\n  clearObject(allIndexedMapObjects);\n\n  allNonIndexedMapObjects = map_objs;\n\n  for (let i = 0; i < map_objs.length; i++) {\n    const obj = map_objs[i];\n    allIndexedMapObjects[obj.map_obj_name] = obj;\n    for (let key in defaultMapObjValues) {\n      const value = defaultMapObjValues[key];\n      //@ts-ignore\n      if (value != null && obj[key] == null) {\n        //@ts-ignore\n        allIndexedMapObjects[obj.map_obj_name][key] = value;\n      }\n    }\n  }\n}\n\nconst init = (allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: IJsonConfig, floors: IFloorData[], response: MapIt2Response) => {\n  const KIOSKS: Record<string, Kiosk> = {};\n  response.kiosks.forEach((kiosk) => {\n    const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n    if (mapObj) {\n      kiosk.map_obj_name = mapObj.map_obj_name;\n    }\n    KIOSKS[kiosk.id] = kiosk;\n  });\n\n\n  for (let index in response.retailers) {\n    const retailer = response.retailers[index];\n    allIndexedRetailers[retailer.id] = retailer;\n    allIndexedRetailers[retailer.id].index = index;\n  }\n\n  // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n  // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n  makeIndexedMapObjects(allIndexedMapObjects, response.map_objs);\n\n  floors.length = 0;\n  response.floors.forEach((value: IFloorData, index: number) => {\n    const objsGroup = new Group();\n    objsGroup.scale.y *= -1;\n    objsGroup.lookAt(0, 1, 0);\n\n    floors.push({\n      id: value.id,\n      // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n      svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n      title: value.title,\n      objsGroup: objsGroup,\n      interactiveObjs: [],\n      escalatorsObjs: [],\n      escalatorsNodes: {},\n      escalatorMeshes: [],\n      route_points: [],\n      route_tube: undefined,\n      route_texture: null,\n      routeMeshes: [],\n      route_active: false,\n    });\n  });\n  const DEFAULT_CAMERA_FOV = 75;\n  const DEFAULT_CAMERA_FAR = 10000;\n  config.CAMERA.far = DEFAULT_CAMERA_FAR;\n  config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n  const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n  config.CAMERA.maxDistance *= fovCorrection;\n  config.CAMERA.far *= fovCorrection;\n\n  const processedConfig: IConfig = {\n    ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n    BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n    BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n    BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n    BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n    BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n    CAMERA: {\n      ...config.CAMERA,\n      minZoom: parseInt(response.settings.MIN_ZOOM) ? parseInt(response.settings.MIN_ZOOM) : config.CAMERA.minZoom,\n      maxZoom: parseInt(response.settings.MAX_ZOOM) ? parseInt(response.settings.MAX_ZOOM) : config.CAMERA.maxZoom,\n      minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n      maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE) ? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n    },\n    CAMERA_CONTROLS_STATES: (() => {\n      const canvasWidth = window.screen.width;\n      if (config.CAMERA_CONTROLS_STATES) {\n        console.debug('config', { ...config.CAMERA_CONTROLS_STATES })\n        return { ...config.CAMERA_CONTROLS_STATES };\n      } else {\n\n        const roles: TRoles[] = [\"PORTAL\", \"PORTAL_RESPONSIVE\"]\n\n        if (!roles.includes(config.ROLE) && canvasWidth) {\n          if (canvasWidth <= 600) {\n            return response.camera_controls_states.mobile;\n          } else if (canvasWidth <= 1024) {\n            return response.camera_controls_states.tablet;\n          }\n        }\n        return response.camera_controls_states[config.DEVICE];\n      }\n    })(),\n    // CAMERA_CONTROLS_STATES: config.CAMERA_CONTROLS_STATES ? config.CAMERA_CONTROLS_STATES : response.camera_controls_states[config.DEVICE],\n    CENTER_ID: config.CENTER_ID,\n    CONTROLS: null,\n    DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n    DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n    DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n    DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n    DEVICE: config.DEVICE,\n    KIOSK: config.KIOSK ? config.KIOSK : '',\n    KIOSKS: KIOSKS,\n    MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n    ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n    OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n    OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n    ROLE: config.ROLE,\n    SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n    STATS: config.STATS === 'true' || config.STATS === '1',\n    STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n    STORE_HEIGHT: response.settings.STORE_HEIGHT ? response.settings.STORE_HEIGHT : config.STORE_HEIGHT ? config.STORE_HEIGHT : '8',\n    STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n    STYLE: response.settings.STYLE ? response.settings.STYLE : config.STYLE ? config.STYLE : '3D',\n    WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n    WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n    FLOORS: response.floors,\n    AMENITIES: response.amenities,\n    RETAILERS: response.retailers,\n    AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n    AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n    KIOSK_SIZE: response.settings.KIOSK_SIZE ? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    ZOOM_STEP: response.settings.ZOOM_STEP ? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n    SELECTED_ZOOM_LIMIT: config.SELECTED_ZOOM_LIMIT ? config.SELECTED_ZOOM_LIMIT : response.settings.SELECTED_ZOOM_LIMIT ? response.settings.SELECTED_ZOOM_LIMIT : '4800',\n    SELECTED_ZOOM_LIMIT_DISTANCE: parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) ? parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) : parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n  };\n\n  // AMENITIES_NAV_BG_COLOR: string;\n  // AMENITIES_NAV_ICON_COLOR: string;\n\n  return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response | null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n  const { floorsData } = useMapBoxContext();\n  const { allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph } = useMapBoxContext();\n  const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n  const [textParams, setTextParams] = useState<Array<{ textMesh: IExtMesh }[]>>([]);\n  const [storeLogos, setStoreLogos] = useState<{ storeLogo: Mesh }[][]>([]);\n  // const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n  const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n  const [urls, setUrls] = useState<string[]>([]);\n  const [processedConfig, setProcessedConfig] = useState<IConfig | null>(null);\n  let result = useLoader(SVGLoader, urls);\n\n  MEDIA_STORAGE_URI = useMemo(() => {\n    const r = /\\/$/;\n    if (mediaStorageURI) {\n      return mediaStorageURI?.replace(r, '');\n    }\n\n    return '';\n\n  }, [mediaStorageURI])\n\n  // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n  const myFont = useFont(fontData as unknown as FontData);\n\n  // const getWallShape = (...params: any): Shape | Shape[] => {\n  //     return []\n  // }\n\n\n  const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: { storeLogo: Mesh }) => {\n    setStoreLogos((prevLogos) => {\n      // console.debug({floorIndex});\n      if (prevLogos[floorIndex]) {\n        prevLogos[floorIndex].push({ ...meshLogo });\n      } else {\n        prevLogos[floorIndex] = [{ ...meshLogo }];\n      }\n      // console.debug({prevLogos});\n      return [...prevLogos];\n    });\n  }), [])\n\n  const mergedConfig = useMemo(() => {\n    let result = config;\n\n    if (jsonConfig) {\n      result = {\n        ...config,\n        ...jsonConfig,\n      }\n\n      if (jsonConfig.CAMERA) {\n        result.CAMERA = {\n          ...config.CAMERA,\n          ...jsonConfig.CAMERA,\n        }\n      }\n    }\n    if (!jsonConfig?.DEVICE && result.ROLE === 'WP_SITE') {\n      result.DEVICE = 'desktop';\n    }\n    return result;\n\n  }, [jsonConfig])\n\n  useEffect(() => {\n    if (!data) return;\n\n\n    // console.log('useMeshFloors[data]', {data})\n\n    const processedConfig = init(allIndexedMapObjects, allIndexedRetailers, mergedConfig, floorsData, data as MapIt2Response);\n    const values: string[] = [];\n    processedConfig.FLOORS.forEach((value) => {\n      // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n      //@ts-ignore\n      values.push(`${value.svg}`);\n    });\n\n    setProcessedConfig(processedConfig);\n    setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n  }, [data, allIndexedMapObjects, allIndexedRetailers, floorsData, jsonConfig, mergedConfig]);\n\n  const clearScene = useCallback(() => {\n    if (meshParams) {\n      meshParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.mesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (textParams) {\n      textParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.textMesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (storeLogos) {\n      storeLogos.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.storeLogo.removeFromParent();\n          })\n        }\n      })\n    }\n\n    setMeshParams([]);\n    setTextParams([]);\n    setStoreLogos([]);\n  }, [meshParams, textParams, storeLogos])\n\n  useEffect(() => {\n    return () => {\n      clearScene();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!processedConfig || !urls.length || !myFont || !result) return;\n\n    const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, processedConfig, result, role);\n    const TextsAndLogos: Array<{ textMesh: IExtMesh }[]> = [];\n    allNonIndexedMapObjects.forEach((params) => {\n      let values: IMeshValues | undefined;\n      for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n        //@ts-ignore\n        values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n        if (values !== undefined) {\n          break;\n        }\n      }\n      if (!values) return null;\n      const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n      if (textParams) {\n        if (!TextsAndLogos[values.floor_index]) {\n          TextsAndLogos[values.floor_index] = [];\n        }\n        TextsAndLogos[values.floor_index].push(textParams);\n      }\n    })\n    const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n      return (acc + item.length);\n    }, 0);\n    const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n    if (countNonIndexedObjs !== 0) {\n      const mapObjNames = new Set<string>();\n      allNonIndexedMapObjects.forEach((item) => {\n        mapObjNames.add(item.map_obj_name);\n      });\n      GeometriesAndMaterials.forEach((items) => {\n        items.forEach(item => {\n          if (!mapObjNames.has(item.object_id)) {\n            const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n            if (textParams) {\n              if (!TextsAndLogos[item.floor_index]) {\n                TextsAndLogos[item.floor_index] = [];\n              }\n              TextsAndLogos[item.floor_index].push(textParams);\n            }\n          }\n        })\n      });\n    }\n    setMeshParams([...GeometriesAndMaterials]);\n    setTextParams(TextsAndLogos);\n    setPathFinderGraph(graph);\n    setEscalatorNodes([...escalator_nodes]);\n\n  }, [processedConfig, urls, result, myFont, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, role, setPathFinderGraph, handleAsyncStoreLogos]);\n\n  return useMemo(() => {\n    return {\n      config: processedConfig,\n      meshParams: meshParams,\n      textParams,\n      storeLogos,\n      floors: floorsData,\n      pathFinderGraph,\n      escalator_nodes: escalatorNodes,\n    }\n  }, [processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useState } from \"react\"\nimport { IConfig, IExtMesh } from \"src/types\";\n\n\nexport type TMeshObjectContext = {\n  MeshObject: IExtMesh[] | null;\n  SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n  cameraLength: number | undefined,\n  setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n  config: IConfig | undefined,\n  setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n  MeshObject: null,\n  SetMeshObject: () => null,\n  cameraLength: undefined,\n  setCameraLength: () => null,\n  config: undefined,\n  setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({ children }: { children: React.ReactNode }) {\n  const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n  const [config, setConfig] = useState<IConfig | undefined>();\n  const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n  return (\n    <MeshObjectContext.Provider\n      value={{\n        MeshObject,\n        SetMeshObject,\n        cameraLength,\n        setCameraLength,\n        config,\n        setConfig\n      }}\n    >\n      {children}\n    </MeshObjectContext.Provider>\n  )\n}\n\nexport function useMeshObjectContext() {\n  const context = useContext(MeshObjectContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n  }\n\n  return context;\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { IConfig } from \"src/types\";\nimport { SpriteMaterial, Texture } from \"three\";\nimport styles from '../../MapBox.module.scss';\nimport { Html } from \"@react-three/drei\";\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, config }: { size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined }) => {\n  const [, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && config !== undefined && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n    }\n  }, [lockSize, config, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize, depthTest: false, depthWrite: false, color: \"black\" });\n    return material;\n  }, [lockSize, texture])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const svgData = (new XMLSerializer()).serializeToString(svgOrigin);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n\n    }\n  }, []);\n\n  if (material) {\n    // console.log('RENDER SPRITE')\n    return (\n      <group>\n        <sprite scale={scale} material={material}>\n        </sprite>\n        {blink && <Html><div className={styles.mapCenterMarker}></div></Html>}\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, IMeshParams, IMeshValues } from \"../../types\";\nimport { ThreeEvent } from \"@react-three/fiber\";\nimport React, { } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from '../../MapBox.module.scss';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: IMeshParams;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, currentFloorIndex: number, params?: IMeshValues }) {\n  const [, setUpdate] = React.useState(false);\n  const { type, mesh, currentFloorIndex } = props;\n  React.useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      // setUpdate((value) => !value);\n    };\n    return () => mesh.userData.triggerUpdate = undefined\n  }, [mesh.userData, setUpdate]);\n\n  const { config, cameraLength } = useMeshObjectContext();\n\n  // console.warn({update});\n\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </primitive>\n      } else {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </>\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n\n  const { config, meshParams, textParams, storeLogos } = meshFloors;\n  const floor = meshFloors.floors[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            // @ts-ignore\n            const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n            //console.log('Map', {baseColor, active, hovered})\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n      {escalatorMeshes?.map((params) => {\n        //@ts-ignore\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div onClick={() => handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n              <div className={styles.element} id={params.object_id as string}>\n                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? meshFloors.floors.length - params.goToFloor.index : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type { Mesh } from \"three\";\nimport { Box3, Vector3 } from \"three\";\n\nexport function get_camera_focus_object(objs: Mesh[], fov: number, aspectRatio: number, style: string) {\n  // config.STYLE\n  // config.CAMERA.fov\n\n  if (!Array.isArray(objs)) {\n    objs = [objs];\n  }\n  if (!objs.length) {\n    console.warn('get_camera_focus_object: no objects passed');\n    return { position: new Vector3(), target: new Vector3() };\n  }\n\n  const objsBoundingBox = objs.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    if (obj.geometry.boundingBox) {\n      box.union(obj.geometry.boundingBox);\n    }\n    return box;\n  }, new Box3());\n\n  const obj_size = new Vector3();\n  objsBoundingBox.getSize(obj_size);\n\n  const center = new Vector3();\n  objsBoundingBox.getCenter(center);\n\n  objs[0].localToWorld(center);\n\n  // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n  // var padding = max_length * 0.2;\n  // if (padding > 50) padding = 50;\n  // max_length += padding;\n  // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n  let tanFOV = Math.tan(Math.PI * fov / 360);\n  let padding = 1.1;\n  let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n  let new_height = (obj_size.y * padding) / 2 / tanFOV;\n  let new_y = Math.max(new_width, new_height);\n  let new_z = getCameraTiltPosition(new_y, style);\n\n  const target = new Vector3(center.x, 0, center.z);\n  const position = new Vector3(center.x, new_y, center.z + new_z);\n\n  // createjs.Ticker.framerate = 60;\n  // createjs.Tween.get(config.CONTROLS.target)\n  //     .to({ x: center.x, z: center.z }, 400);\n  // createjs.Tween.get(config.CAMERA.position)\n  //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n  return { position, target };\n}\n\nfunction getCameraTiltPosition(y: number, style: string): number {\n  let angle = 60;\n  if (style === '2D') angle = 89.9;\n  return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IMeshParams } from \"../../types\";\nimport { Map } from \"./Map\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\n// import { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { defaultVars } from \"src/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\n// import { allNodesFloor } from \"src/globals\";\n\ninterface IFloorsMapProps {\n  meshFloors: IMeshParams;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  onCameraMove?: (e: any) => void;\n  currKioskObj: Mesh;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: IZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  config: IConfig;\n  cameraPos?: { x: number, y: number, z: number } | undefined | null;\n  controlPos?: { x: number, y: number, z: number } | undefined | null;\n  handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n  isSelectedRetailerSlug: boolean;\n  setIsCameraInit: Function;\n  retailers: IRetailer[],\n  mapObjs: MapObj[],\n  handleObjectClick: (object: IExtMesh, targetId: string) => void,\n  triggerClick: boolean,\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n  const { allIndexedMapObjects, allNodesFloor } = useMapBoxContext();\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const { meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    config,\n    handleCameraAndControlsChange,\n    activeObjectId,\n    isSelectedRetailerSlug,\n    setIsCameraInit,\n    retailers,\n    mapObjs,\n    handleObjectClick,\n    triggerClick, } = params;\n  const { floors } = meshFloors;\n  const [cameraLimits, SetCameraLimits] = useState({ min: config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: 0, needsUpdate: true })\n  const { setCameraLength } = useMeshObjectContext();\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = meshFloors.config.STYLE;\n  const accentColor = meshFloors.config.ACCENT_COLOR;\n  const pathFinderGraph = meshFloors.pathFinderGraph;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n  const isUseDefaultsLimits = config.ROLE === \"PORTAL\" && routeTargetId;\n\n  const resetCamera = useCallback((fullReset: boolean = false) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n\n\n    let isZeroCCS = true;\n\n    if (config.CAMERA_CONTROLS_STATES) {\n      let cameraV3 = config.CAMERA_CONTROLS_STATES.camera;\n      if (!(cameraV3 instanceof Vector3)) {\n        cameraV3 = new Vector3(cameraV3.x, cameraV3.y, cameraV3.z);\n      }\n      isZeroCCS = (cameraV3 as Vector3).length() === 0;\n    }\n\n    if (!fullReset && config.CAMERA_CONTROLS_STATES && !isZeroCCS && !['PORTAL'].includes(config.ROLE)) {\n      focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n      focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n    }\n\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && cameraLimits.needsUpdate === false && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => ({\n        ...cl,\n        min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance,\n        max: config.CAMERA.maxDistance,\n      }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [camera, cameraLimits.needsUpdate, config.CAMERA.animSpeed, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA_CONTROLS_STATES, config.ROLE, currKioskFloorIndex, meshFloors.meshParams, style]);\n\n  const focusDistance = cameraFocus.current ? cameraFocus.current.position.distanceTo(cameraFocus.current.target) : 0;\n\n  useEffect(() => {\n\n    if (focusDistance > 0 && cameraLimits.needsUpdate) {\n      SetCameraLimits({ min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: focusDistance, needsUpdate: false })\n      setIsCameraInit(true);\n    }\n\n  }, [focusDistance, cameraLimits.needsUpdate, config.CAMERA])\n\n  useEffect(() => {\n\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && routeTargetId && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => {\n        const minDistance = (config?.SELECTED_ZOOM_LIMIT_DISTANCE ? Number(config.SELECTED_ZOOM_LIMIT_DISTANCE) : config.CAMERA.maxZoom);\n        return {\n          ...cl,\n          needsUpdate: false,\n          min: minDistance < 0.1 ? 0.1 : minDistance,\n          max: config.CAMERA.maxDistance,\n        }\n      });\n    }\n  }, [config.CAMERA.maxZoom, config.CAMERA.minZoom, config.SELECTED_ZOOM_LIMIT, routeTargetId, cameraLimits.initialDistance])\n\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length, resetCamera])\n\n  useEffect(() => {\n    if (!amenityTargetType || config.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(allNodesFloor, from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n    setRouteTubes(route);\n\n    if (currKioskObj && config.ROLE === \"DISPLAY_APP\") {\n      handleChangeFloor(currKioskFloorIndex);\n    }\n\n  }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from, config.ROLE, allNodesFloor, allIndexedMapObjects])\n\n  const clearEscalators = useCallback(() => {\n    meshFloors.floors.flat().forEach((item) => item.escalatorMeshes = []);\n  }, [meshFloors])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n      if (config.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          clearEscalators();\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        clearEscalators();\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floors.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n    console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE, allNodesFloor, triggerClick]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && (config.ROLE === 'PORTAL' || isSelectedRetailerSlug)) {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max,\n      Math.max(\n        isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed, floors, activeObjectId, amenityTargetType, isSelectedRetailerSlug]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n      const zoomStep = config.ZOOM_STEP ? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= zoomStep;\n      } else {\n        cameraDistance += zoomStep;\n      }\n\n      cameraDistance = Math.min(\n        cameraLimits.max,\n        Math.max(\n          cameraLimits.min,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoom])\n\n  console.log('CameraLimits', cameraLimits)\n\n  const getInitialDistance = () => {\n    return cameraLimits.initialDistance\n  }\n\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange) {\n        handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n      }\n\n      console.log('Camera Distance', mapControlRef.current.object.position.distanceTo(mapControlRef.current.target).toFixed(2))\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const createRouteToStore = useCallback((retailerSlug: string) => {\n    if (retailerSlug.length) {\n      const retailer = retailers.find(item => item.slug === retailerSlug);\n      if (retailer) {\n        const mapObj = mapObjs.find(item => item.retailer_id === retailer.id);\n        if (mapObj) {\n          const obj = scene.getObjectByProperty('object_id', mapObj.map_obj_name);\n          if (obj) {\n            handleObjectClick(obj as IExtMesh, mapObj.map_obj_name);\n          }\n        }\n      }\n    }\n  }, [handleObjectClick, mapObjs, retailers, scene]);\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n    createRouteToStore,\n    getInitialDistance,\n  }))\n\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min}\n        maxDistance={isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max}\n        enableZoom={config.ROLE === \"PORTAL\" || config.ROLE === \"DISPLAY_APP\"}\n        enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floors && floors.map((value: IFloorData, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { IRetailer } from 'src/mapitApiTypes';\n\nexport const retailersApi = createApi({\n  reducerPath: 'retailersApi',\n  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\n  endpoints: (builder) => ({\n    getRetailers: builder.query<{ count: number, items: IRetailer[] }, { baseQuery: string, center_id: string, limit: number, page?: number }>({\n      query: ({ baseQuery, center_id, limit, page = 1 }) => ({\n        url: `${baseQuery}/v1/retailers?limit=${limit}&page=${page}`,\n        headers: {\n          center_id,\n        },\n      }),\n    })\n  })\n})\n\nexport const { useGetRetailersQuery, useLazyGetRetailersQuery } = retailersApi;","import { retailersApi, useGetRetailersQuery, useLazyGetRetailersQuery } from \"src/services/retailersApi\"\nimport { fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\nconst useAllRetailers = (baseUrl: string, center_id: string, limit: number) => {\n  const [retailers, setRetailers] = useState<{ count: number, items: IRetailer[] }>({ count: 0, items: [] })\n  const baseQuery = baseUrl?.lastIndexOf('/') === baseUrl.length - 1 ? baseUrl.slice(0, -1) : baseUrl;\n\n  const [getRetailers] = useLazyGetRetailersQuery()\n\n  const fetchAllRetailers = useCallback(async (page: number, totalPages: number) => {\n    const requests = [];\n    const result: { count: number, items: IRetailer[] } = { count: 0, items: [] };\n    if (totalPages >= page) {\n      for (let currentPage = page; currentPage <= totalPages; currentPage++) {\n        requests.push(getRetailers({ baseQuery, center_id, limit, page: currentPage }, true));\n      }\n      if (requests.length) {\n        const data = await Promise.all(requests);\n        data.forEach(item => {\n          if (item && item.data && item.data.items.length) {\n            const { count, items } = item.data;\n            result.count = count;\n            result.items = [\n              ...result.items as IRetailer[],\n              ...items as IRetailer[],\n            ]\n          }\n        })\n        if (result) {\n          setRetailers(ret => ({\n            count: result.count,\n            items: [...ret.items, ...result.items],\n          }))\n        }\n        return { ...result };\n      }\n    } else {\n      return { ...result };\n    }\n  }, [baseQuery, center_id, getRetailers, limit])\n\n  const getAll = useCallback(() => new Promise<{ count: number, items: IRetailer[] }>((resolve, reject) => {\n    let result: { count: number, items: IRetailer[] } = { count: 0, items: [] };\n    getRetailers({ baseQuery, center_id, limit, page: 1 }, true).then(data => {\n      if (data.status === 'rejected') {\n        reject(data.error);\n      }\n      if (data.data) {\n        result = { ...data.data };\n        const totalPages = Math.round(result.count / limit);\n        if (totalPages > 1) {\n          console.debug({ totalPages })\n          fetchAllRetailers(2, totalPages).then(data => {\n            if (data) {\n              resolve({\n                count: result.count,\n                items: [...result.items, ...(data.items ?? [])],\n              })\n            } else {\n              resolve({ ...result });\n            }\n          });\n        } else {\n          resolve({ ...result })\n        }\n      } else {\n        resolve({ ...result });\n      }\n    });\n  }), [baseQuery, center_id, fetchAllRetailers, getRetailers, limit])\n\n  return { retailers, getAll }\n}\n\nexport default useAllRetailers;","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.scss';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\n\nconst UIComponent = ({\n  floors,\n  accentColor,\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  role,\n  mapObjs,\n  onExtractedAmenities,\n}: IFloorSelectorProps & {\n  amenitiesList: IAmenitiesInteractiveList[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: (fullReset?: boolean) => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  role?: TRoles,\n  mapObjs?: MapObj[],\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      if (role === 'PORTAL_RESPONSIVE' || role === 'PORTAL') {\n        reset(true)\n      }\n      else {\n        reset();\n      }\n    }\n  }\n\n  const extractValues = useMemo<AmenityID[]>(() => {\n\n    if (!mapObjs) {\n      return [];\n    }\n\n    return mapObjs\n      .filter(obj => obj.layer_type === \"amenity\")\n      .map(obj => obj.value as AmenityID);\n  }, [mapObjs])\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [mapObjs, onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floors.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              {floors.length > 1 && (\n                <div className=\"floors btn_group\">\n                  {floors.map((floor: any, index: number) => (\n                    <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                      handleFloorChange(index)\n                    }}>{floor.title}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(role as string) &&\n          <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                  <div className={styles.img}>\n                    {/* <img src={amenity.icon} alt={amenity.name} /> */}\n                    <amenity.icon />\n                  </div>\n                  <div className={`${styles.name}`}>{amenity.name}</div>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { useCallback, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, MeshPhongMaterial, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IMeshParamsTmp } from \"src/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useRetailersOptions, { RetailerOption } from \"./hooks/useRetailersOptions\";\n\n\ninterface IMapboxForm {\n  floorIndex: number;\n  meshFloors: IMeshParamsTmp;\n  config: IConfig;\n  data: any;\n  setData: (index: number, data: MapObj) => void;\n  selectedId: string;\n  centerId: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  apiURI?: string;\n  onResetData?: (data: MapObj) => void;\n  triggerSceneUpdate: Function;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n  [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n  id: '',\n  center_id: centerId,\n  retailer_id: '',\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: '8',\n  lock_size: '0',\n  rotate: '0',\n  offsetX: '0',\n  offsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj, floorIndex: Number) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData, floorIndex) => {\n  const kioskConfig = obj.userData.kioskConfig;\n  if (kioskConfig) {\n    //TODO use 'value' until api with lock_size will be working\n    obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n    obj.userData.kioskConfig = {\n      ...kioskConfig,\n      lockSize: formData.value === '1',\n      blink: kioskConfig.blink,\n      size: Number(formData.size),\n      floorIndex: floorIndex\n    }\n    // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n    obj.userData.triggerUpdate?.();\n  }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n  const { data, setData, selectedId, centerId, config, floorIndex, onResetData, triggerSceneUpdate } = params;\n\n  const myFont = useFont(fontData as unknown as FontData);\n  const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n  const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n  const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n  const [formData, setFormData] = useState<MapObj | null>(null);\n  const [rotation] = useState<number | undefined>(undefined);\n  const context = useMeshObjectContext();\n  const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [, startTransition] = useTransition();\n  const intervalRefs = useRef<TIncDecInterval>({});\n\n  const { isLoading: isLoadingRetailers, loadOptions: loadRetailersOptions, retailers } = useRetailersOptions(centerId, params.apiURI ?? '');\n\n  const [selectedKiosksId, setSelectedKiosksId] = useState<number[]>([]);\n\n  const recheckSelectedKiosksId = useCallback((mapObjs: any[]) => {\n    if (mapObjs) {\n      const ids = (mapObjs as { kiosk_id: number }[]).reduce<number[]>((prev, cur) => {\n        if (cur.kiosk_id !== null) {\n          return [...prev, cur.kiosk_id];\n        }\n        return prev;\n      }, [])\n      setSelectedKiosksId([...ids]);\n    }\n  }, [])\n\n  useEffect(() => {\n    recheckSelectedKiosksId(data.map_objs);\n  }, [data.map_objs, recheckSelectedKiosksId])\n\n  const loadKiosksOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    // console.debug({ inputValue })\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.filter((item: any) => {\n        if (inputValue) {\n          return (item.title as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    callback(result);\n  }, [data.kiosks, selectedKiosksId])\n\n  const loadAmenitiesOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    let result: any[] = [];\n    if (Object.keys(data.amenities).length) {\n      result = Object.keys(data.amenities).filter((item: string) => {\n        if (inputValue) {\n          return (data.amenities[item].name as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: string) => {\n        return {\n          value: item,\n          label: data.amenities[item].name,\n        }\n      })\n    }\n    callback(result);\n  }, [data.amenities])\n\n  const getDefaultKioksOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    return result;\n  }, [data.kiosks, selectedKiosksId])\n\n  const getDefaultAmenitiesOptions = useCallback(() => {\n    let result: any[] = [];\n    if (Object.keys(data.amenities)?.length) {\n      result = Object.keys(data.amenities).map((item: any) => {\n        return {\n          value: item,\n          label: data.amenities[item].name,\n        }\n      })\n    }\n    return result;\n  }, [data.amenities])\n\n  const makeImage = useCallback((formData: MapObj, obj: IExtMesh) => {\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let img = null;\n    if (formData.layer_type === 'retail_logo') {\n      const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n      if (retailIndex !== -1) {\n        img = getImage(formData, data.retailers[retailIndex]);\n      }\n    } else {\n      img = getImage(formData);\n    }\n    if (img instanceof HTMLImageElement) {\n      processImage(img, formData, (geometry, material) => {\n        obj.geometry = geometry;\n        obj.material = material;\n\n        const boundingBox = geometry.boundingBox;\n\n        const mesh_center_point = new Vector3();\n        if (boundingBox) {\n          boundingBox.getCenter(mesh_center_point);\n\n          const mesh_size = new Vector3();\n          boundingBox.getSize(mesh_size);\n          if (obj.object_id) {\n            layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n          }\n        }\n      });\n    }\n  }, [data.retailers, oldMapObjName])\n\n  const makeTextGeometry = useCallback((obj: IExtMesh, text: string, size: string) => {\n    if (!obj) return;\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let text_geometry = new TextGeometry(text, {\n      font: (obj.userData && obj.userData.font) ? obj.userData.font : myFont,\n      size: parseInt(size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n    if (obj.geometry) {\n      obj.geometry.dispose();\n    }\n    obj.geometry = text_geometry;\n  }, [formData?.map_obj_name, myFont, oldMapObjName])\n\n  const updateData = useCallback((formData: MapObj) => {\n    const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n    if (index !== -1) {\n      data.map_objs[index] = { ...formData };\n      setData(index, { ...formData });\n      recheckSelectedKiosksId(data.map_objs);\n    }\n  }, [data.map_objs, setData, recheckSelectedKiosksId])\n\n\n  const handleChangeTab = useCallback((k: any | null) => {\n    if (!formData) return;\n    const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n    if (key !== null) {\n      if (isTMainTabsKey(key)) {\n        setMainTabKey(key);\n        if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n          formData.obj_type = key;\n          if (key === 'retailer') {\n            formData.layer_type = 'retail_name';\n            clearKioskConfig(context, params.meshFloors);\n          } else if (key === 'special') {\n            formData.layer_type = 'kiosk';\n            formData.retailer_id = '';\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              if (obj) {\n                if (!obj.userData) {\n                  obj.userData = {};\n                }\n                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                obj.userData.kioskConfig = {\n                  lockSize: formData.value === '1',\n                  blink: false,\n                  size: Number(formData.size)\n\n                }\n                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n              }\n            }\n          } else if (key === 'custom') {\n            formData.layer_type = 'custom_text';\n            formData.retailer_id = '';\n            clearKioskConfig(context, params.meshFloors);\n          }\n          setMainTabKey('');\n          setRetailerTabsKey('');\n          setSpecialTabsKey('');\n          setFormData({ ...formData });\n          updateData({\n            ...formData,\n          });\n        }\n      } else if (isTRetailerTabsKey(key)) {\n        setRetailerTabsKey(key);\n        clearKioskConfig(context, params.meshFloors);\n        if (formData.id && retailerTabsKey && key) {\n          formData.layer_type = key;\n          if (formData.layer_type !== key) {\n            setFormData({ ...formData });\n          }\n          updateData({\n            ...formData,\n          })\n          if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n            let text = '';\n            switch (key) {\n              case 'retail_name':\n\n                if (!formData.retailer_id) {\n                  break;\n                }\n\n                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n\n                if (retailIndex !== -1) {\n                  text = data.retailers[retailIndex].retail_name;\n\n                }\n                break;\n              case 'retail_text':\n              case 'custom_text':\n                text = formData.custom_text;\n                break;\n            }\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              makeTextGeometry(obj, text, formData.size);\n            }\n          }\n\n          if (['retail_logo', 'custom_image'].includes(key)) {\n            context?.MeshObject?.forEach((obj, index) => {\n              if (index === 0) return;\n\n              makeImage(formData, obj);\n            })\n          }\n        }\n      } else if (isTSpecialTabsKey(key)) {\n        setSpecialTabsKey(key);\n        formData.layer_type = key;\n        if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n          if (key !== 'kiosk') {\n            clearKioskConfig(context, params.meshFloors);\n          }\n          formData.layer_type = key;\n          formData.kiosk_id = '';\n          formData.retailer_id = '';\n          formData.value = '';\n          setFormData({ ...formData });\n          updateData({ ...formData });\n        }\n      }\n    }\n  }, [context, data.retailers, formData, mainTabKey, makeImage, makeTextGeometry, retailerTabsKey, specialTabsKey, updateData])\n\n\n  useEffect(() => {\n    switch (mainTabKey) {\n      case 'retailer':\n        handleChangeTab(retailerTabsKey);\n        break;\n    }\n  }, [formData, handleChangeTab, mainTabKey, retailerTabsKey])\n\n\n  const handleReset = () => {\n    if (!formData) return;\n    const defaultValues = getDefaultMapOjbValues(formData.center_id);\n    if (onResetData) {\n      onResetData({\n        ...formData,\n      })\n    }\n    setFormData({\n      ...defaultValues,\n      id: formData.id,\n    });\n    updateData({\n      ...defaultValues,\n      id: formData.id,\n    });\n  }\n\n  const handleChangeRetailer = (value: number | undefined) => {\n    if (value && formData) {\n      formData.retailer_id = value.toString();\n      formData.kiosk_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n    }\n  }\n\n  const handleChangeKiosk = ({ value }: { value: string }) => {\n    if (value && formData) {\n      formData.kiosk_id = value;\n      formData.retailer_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        updateMapCenterMarkerFor(obj, formData, floorIndex);\n        triggerSceneUpdate();\n      })\n    }\n  }\n\n  const handleChangeAmenity = (newValue: any) => {\n    const { value } = newValue;\n    if (value && formData) {\n      formData.value = value as string;\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        makeImage(formData, obj);\n      })\n    }\n  }\n\n  const changeValue = (name: string, value: string) => {\n    if (!formData) return;\n    // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n    //     formData.custom_image = value;\n    //     setFormData({...formData});\n    //     updateData({...formData});\n    // }\n\n    context?.MeshObject?.forEach((obj, index) => {\n      if (!obj.userData) {\n        obj.userData = {};\n      }\n      if (!obj.userData.position) {\n        obj.userData.position = new Vector3();\n        if (obj.position) {\n          obj.userData.position.copy(obj.position);\n        }\n      }\n      const position = new Vector3();\n      if (obj.userData.position) {\n        position.copy(obj.userData.position);\n      }\n      switch (name) {\n        case 'custom_text':\n          if (index === 0) break;\n          formData.custom_text = value;\n          if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n            makeTextGeometry(obj, formData.custom_text, formData.size);\n          }\n          break;\n        case 'custom_image':\n          if (index === 0) break;\n          formData.custom_image = value;\n          makeImage(formData, obj);\n          updateData({\n            ...formData,\n          })\n          break;\n        case 'size':\n          if (index === 0) break;\n          formData.size = value;\n          if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n            let text = '';\n            if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n              const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n              if (retailIndex !== -1) {\n                text = data.retailers[retailIndex].retail_name;\n              }\n            } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n              text = formData.custom_text;\n            }\n            makeTextGeometry(obj, text, formData.size);\n          } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n            makeImage(formData, obj);\n            if (timeoutRef.current) {\n              clearInterval(timeoutRef.current);\n            }\n            timeoutRef.current = setTimeout(() => {\n              updateData({ ...formData });\n            }, 300);\n          } else if (['amenity'].includes(formData.layer_type)) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              setFormData({ ...formData });\n              updateData({ ...formData });\n            })\n          } else if (['kiosk'].includes(formData.layer_type)) {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'lock_size':\n          formData.lock_size = value;\n          //TODO use 'value' until api with lock_size will be working\n          formData.value = value;\n          if (formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'rotate':\n          if (index === 0) break;\n          formData.rotate = value;\n          obj.rotation.set(\n            obj.rotation.x,\n            obj.rotation.y,\n            parseFloat(formData.rotate) * Math.PI / 180\n          );\n          break;\n\n        case 'offsetX':\n          if (index === 0) break;\n          position.x += parseFloat(value);\n          obj.position.setX(position.x);\n          formData.offsetX = value;\n          break;\n\n        case 'offsetY':\n          if (index === 0) break;\n          position.y += parseFloat(value);\n          obj.position.setY(position.y);\n          formData.offsetY = value;\n          break;\n\n        case 'text_color':\n          if (index === 0) break;\n          formData.text_color = value;\n          if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n            const material_settings = {\n              // color: hex_to_color(formData.text_color),\n              color: formData.text_color,\n              transparent: true,\n              side: DoubleSide,\n              depthWrite: false,\n              depthTest: false,\n            };\n            let text_material = new MeshPhongMaterial(material_settings);\n            obj.material = text_material;\n          } else if (\n            formData.layer_type === 'retail_logo' ||\n            formData.layer_type === 'custom_image' ||\n            (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n            (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              updateData({\n                ...formData,\n                text_color: formData.text_color.replace('#', ''),\n              });\n            })\n          }\n          break;\n\n        case 'bg_color':\n          if (index !== 0) break;\n          formData.bg_color = value;\n          let meshType: MeshType = 'store';\n          if (obj.object_id?.startsWith('big-store')) {\n            meshType = 'big-store';\n          }\n          obj.material = getMaterial(\n            config,\n            meshType,\n            formData.map_obj_name,\n            formData.bg_color,\n            formData.transparent === \"1\" ? true : false,\n            { [formData.map_obj_name]: { ...formData } }\n          );\n          // updateData({...formData});\n          break;\n\n        default:\n          break;\n      }\n      startTransition(() => {\n        setFormData({ ...formData })\n        updateData({ ...formData });\n      });\n\n    })\n  }\n  const handleChange = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value;\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  const handleChangeLock = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value === '0' ? '1' : '0';\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  useEffect(() => {\n    if (data && data.map_objs && selectedId) {\n      const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n      if (index !== -1) {\n        setFormData({ ...data.map_objs[index] });\n      } else {\n        setFormData({\n          ...getDefaultMapOjbValues(centerId),\n          id: 'new-' + (new Date()).getTime(),\n        });\n      }\n    }\n    return () => {\n      setRetailerTabsKey('');\n    }\n  }, [centerId, data, selectedId])\n\n  useEffect(() => {\n    if (!formData) return;\n    if (formData.obj_type) {\n      handleChangeTab(formData.obj_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n    if (formData.layer_type) {\n      handleChangeTab(formData.layer_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n  }, [formData, handleChangeTab])\n\n  const decrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value -= 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const incrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const rotateByFixedAngle = (key: TIncDecKey, angle: number) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += angle;\n      if (value > 360) {\n        value = angle;\n      } else if (value === 360) {\n        value = 0;\n      }\n\n      changeValue(key, value.toString());\n    }\n  }\n\n  const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      rotateByFixedAngle(key, angle);\n    }, 200);\n  }\n\n  const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      decrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        decrementValue(key);\n      }, 50);\n    }, 200);\n  }\n\n  const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      incrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        incrementValue(key);\n      }, 50)\n    }, 200);\n  }\n\n  const stopIntervals = () => {\n    let key: TIncDecKey;\n    for (key in intervalRefs.current) {\n      if (intervalRefs.current[key])\n        clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = null;\n    }\n  }\n\n  const handleOnSubmit = () => {\n    if (params.onSubmit && context && context.MeshObject && formData) {\n      formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n      const kioskId = formData.kiosk_id !== null ? parseInt(formData.kiosk_id) : null;\n      params.onSubmit({ ...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId });\n    }\n  }\n\n  if (!formData) return null;\n\n  return (\n    <>\n      <Tab.Container activeKey={mainTabKey}>\n        <Col>\n          <Row>\n            <Col sm=\"9\">\n              <Nav\n                variant=\"tabs\"\n                className=\"flex-row\"\n                // activeKey={mainTabKey}\n                onSelect={handleChangeTab}\n              >\n                <Nav.Item>\n                  <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm=\"3\" className=\"px-0\">\n              {/* \n                //@ts-ignore */}\n              <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\">\n              <Tab.Content>\n                <Tab.Pane eventKey={\"retailer\"}>\n                  <AsyncSelect\n                    className=\"mb-3\"\n                    aria-label=\"Choose a Retailer\"\n                    loadOptions={loadRetailersOptions}\n                    isLoading={isLoadingRetailers}\n                    loadingMessage={() => <div>loading retailers...</div>}\n                    noOptionsMessage={() => 'Retailers not found'}\n                    placeholder=\"Choose a Retailer...\"\n                    value={retailers.filter((item: RetailerOption) => item.value === Number(formData.retailer_id))?.map((item: RetailerOption) => ({\n                      value: item.value,\n                      label: item.label,\n                    }))}\n                    defaultOptions={retailers.map((item: RetailerOption) => ({ value: item.value, label: item.label }))}\n                    onChange={(item) => handleChangeRetailer(item?.value)}\n\n                  />\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"retail-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                    <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                    <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              as=\"textarea\"\n                              name=\"custom_text\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"special\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"special-tab-form\"\n                    activeKey={specialTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose a Kiosk\"\n                        loadOptions={loadKiosksOptions}\n                        noOptionsMessage={() => 'Kiosks not found'}\n                        placeholder=\"Choose a Kiosk...\"\n                        value={data.kiosks?.filter((item: any) => formData.kiosk_id === item.id)?.map((item: any) => ({\n                          value: item.id,\n                          label: item.title,\n                        }))}\n                        defaultOptions={getDefaultKioksOptions()}\n                        onChange={handleChangeKiosk}\n\n                      />\n                    </Tab>\n                    <Tab eventKey=\"amenity\" title=\"Amenity\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose Amenity\"\n                        loadOptions={loadAmenitiesOptions}\n                        noOptionsMessage={() => 'Amenity not found'}\n                        placeholder=\"Choose Amenity...\"\n                        value={Object.keys(data.amenities).filter((item: string) => formData.value === item).map((item: string) => ({\n                          value: item,\n                          label: data.amenities[item].name,\n                        }))}\n                        defaultOptions={getDefaultAmenitiesOptions()}\n                        onChange={handleChangeAmenity}\n\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"custom\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"custom-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"custom_text\" title=\"Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              name=\"custom_text\"\n                              as=\"textarea\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                    <Tab eventKey=\"custom_image\" title=\"Image\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              type=\"string\"\n                              name=\"custom_image\"\n                              value={formData.custom_image}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Col>\n      </Tab.Container>\n      <Form.Group className=\"mb-3 mt-3\">\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Size</Form.Label>\n          </Col>\n          <Col>\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('size')}\n                  onMouseDown={handleDecrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"size\"\n                  type=\"text\"\n                  value={formData.size}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('size')}\n                  onMouseDown={handleIncrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                <Row>\n                  <Col sm=\"4\">\n                    <Form.Check\n                      name=\"lock_size\"\n                      id=\"lock_size\"\n                      type=\"checkbox\"\n                      //TODO use 'value' until api with lock_size will be working\n                      value={formData.value}\n                      checked={formData.value === '1'}\n                      onChange={handleChangeLock}\n                    />\n                  </Col>\n                  <Col sm=\"8\" className=\"p-0\">\n                    <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Rotate</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('rotate')}\n                  onMouseDown={handleDecrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"rotate\"\n                  type=\"number\"\n                  value={rotation ?? formData.rotate}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('rotate')}\n                  onMouseDown={handleIncrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div style={{ maxWidth: 50, height: 50 }}>\n                <Button\n                  onClick={() => rotateByFixedAngle('rotate', 45)}\n                  onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >\n                  <ArrowClockwise size={'1rem'} />\n                </Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset X</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetX')}\n                  onMouseDown={handleDecrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n\n                <Form.Control\n                  name=\"offsetX\"\n                  type=\"number\"\n                  value={formData.offsetX}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetX')}\n                  onMouseDown={handleIncrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetY')}\n                  onMouseDown={handleDecrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"offsetY\"\n                  type=\"number\"\n                  value={formData.offsetY}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetY')}\n                  onMouseDown={handleIncrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"3\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">BG Color</Form.Label>\n          </Col>\n          <Col sm=\"3\" className=\"p-0\">\n            <Form.Control\n              name=\"bg_color\"\n              type=\"string\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"2\">\n            <Form.Control\n              type=\"color\"\n              name=\"bg_color\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Row>\n              <Col sm=\"3\">\n                <input\n                  name=\"transparent\"\n                  id=\"transparent\"\n                  type=\"checkbox\"\n                  value={formData.transparent}\n                  onChange={handleChange}\n                ></input>\n              </Col>\n              <Col sm=\"9\" className=\"p-0\">\n                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"4\" className=\"d-flex justify-content-start\">\n              <Form.Label className=\"mb-0\">Text Color</Form.Label>\n            </Col>\n            <Col sm=\"5\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                name=\"text_color\"\n                type=\"color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        {['kiosk', 'amenity'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"3\">\n              <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n            </Col>\n            <Col sm=\"6\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                type=\"color\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        <Row className=\"justify-content-center px-5 py-5\">\n          <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-') ? 'Save' : 'Update'}</button>\n        </Row>\n      </Form.Group>\n    </>\n  );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext, meshFloors: IMeshParamsTmp) {\n  if (context && context.MeshObject) {\n    const obj = context.MeshObject[1];\n    if (obj && obj.userData && obj.userData.kioskConfig) {\n      obj.userData.kioskConfig = null;\n      obj.userData?.triggerUpdate();\n      meshFloors.storeLogos.flat().filter(item => item !== undefined).forEach(item => {\n        if (item.storeLogo.object_id === obj.object_id && item.storeLogo.userData.kioskConfig !== undefined) {\n          item.storeLogo.userData.kioskConfig = null;\n          item.storeLogo.userData?.triggerUpdate();\n        }\n      });\n    }\n  }\n}\n\n","import { useCallback, useEffect, useState } from \"react\"\nimport useGetRetailers, { Data } from \"../useGetRetailersBySearch\";\nexport type RetailerOption = {\n  value: number,\n  label: string,\n  isDisabled?: boolean,\n  isFixed?: boolean,\n}\ntype UseRetailersOptions = (centerId: string, apiURI: string) => {\n  isLoading: boolean,\n  loadOptions: (inputValue: string, callback: (options: RetailerOption[]) => void) => void,\n  retailers: RetailerOption[],\n};\nconst useRetailersOptions: UseRetailersOptions = (centerId, apiURI) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [retailers, setRetailers] = useState<any[]>([]);\n  const [limit] = useState<number>(100);\n  const fetchRetailers = useGetRetailers({ centerId, apiURI });\n\n  const processData = useCallback((data: Data, isLoadingMore?: boolean) => {\n    setIsLoading(false);\n    let result: any = [];\n    if (!data) return result;\n    if (!data.isError) {\n      result = data.items.map((item: any) => {\n        return {\n          value: item.id,\n          label: `${item.name}${item.location && item.location.length > 1 ? item.location : ''}`,\n        }\n      })\n    } else {\n      console.error(`Fetch Retailers error: ${data.error}`)\n    }\n    return result;\n  }, []);\n\n  const loadOptions = useCallback((inputValue: string, callback: (options: RetailerOption[]) => void) => {\n    callback(retailers.filter(item => (item.label as string).toLowerCase().includes(inputValue)));\n  }, [retailers])\n\n  useEffect(() => {\n    setIsLoading(true);\n    const retailersData = fetchRetailers('', limit);\n    retailersData.then(data => {\n      const result = processData(data);\n      setRetailers([...result]);\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchRetailers, limit, processData])\n\n  return {\n    isLoading,\n    loadOptions,\n    retailers,\n  }\n}\n\nexport default useRetailersOptions;","import { useCallback, useState } from \"react\";\nimport useAllRetailers from \"src/Hooks/useAllRetailers\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype GetRetailersParams = {\n  centerId: string | number,\n  apiURI?: string,\n}\n\nexport type Data = {\n  isError: boolean,\n  error: string | null,\n  items: IRetailer[],\n  count: number,\n}\n\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n  const { centerId, apiURI } = params;\n\n  const { getAll } = useAllRetailers(apiURI ?? '', centerId.toString(), 100);\n\n  const fetchRetailers = useCallback((search: string, limit?: number): Promise<Data> => {\n\n    const fetchAll = (): Promise<Data> => new Promise((resolve, reject) => {\n\n      getAll().then(data => {\n        resolve({\n          isError: false,\n          error: null,\n          items: data.items,\n          count: data.count,\n        });\n      }).catch((e: any) => {\n        reject(e.message ? e.message : 'useGetRetailer: something went wrong!');\n      });\n\n    });\n\n    return fetchAll();\n\n  }\n    , [getAll]);\n\n  return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n    centerId: string,\n    slug: string,\n    webApiURI: string,\n}\n\nexport type RetailerData = {\n    data: IRetailer | null,\n    isLoading: boolean,\n    isError: boolean,\n    error: string | null,\n}\n\nconst defaultData: RetailerData = {\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n} \nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n    const {centerId, slug, webApiURI} = props;\n    const [data, setData] = useState<RetailerData>(defaultData);\n\n    useMemo(() => {\n        if (!slug || !centerId) {\n            setData({...defaultData});\n            return false;\n        }\n\n        let apiURI = webApiURI;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            setData({\n                isLoading: true,\n                data: null,\n                isError: false,\n                error: null,\n            })\n            fetch(`${apiURI}/v1/retailers/${slug}`, {\n                headers: {\n                    center_id: centerId,\n                }\n            }).then(\n                (response) => response.json()\n            ).then(data => {\n                setData({\n                    isLoading: false,\n                    isError: false,\n                    error: null,\n                    data: {\n                        id: data.id,\n                        retail_name: data.name,\n                        slug: data.slug,\n                        location: data.location && data.location !== '-'? data.location : '',\n                        retailer_phone: data.retailer_phone,\n                        retailer_description: data.global_retailer.description,\n                        logo: data.media.url,\n                        map_obj_name: '',\n                    }\n                });\n            }).catch((e: any) => {\n                setData({\n                    data: null,\n                    isLoading: false,\n                    isError: true,\n                    error: `Error fetch retaler data: ${e.message}`,\n                })\n            })\n        } else {\n            setData({\n                isLoading: false,\n                isError: true,\n                error: 'webApiURI not provided!',\n                data: null,\n            })\n        }\n\n    }, [centerId, slug, webApiURI]);\n\n    return data;\n\n}\n\nexport default useRetailerData;\n","import { Form, FormGroup, Modal, Placeholder, Spinner } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n  amenity: string,\n  show: boolean,\n  onHide: () => void,\n  centerId: string,\n  retailers?: IRetailer[],\n  mapObjs?: MapObj[],\n  mapObjectName?: string,\n  webApiURI: string,\n  onClick?: (id: string, amenityType?: string) => void,\n  kioskId: string,\n}\n\nconst RetailerInfoList = ({ retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId }: { retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string }) => {\n  const [retailerId, setRetailerId] = useState<string>('');\n\n  const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    if (onClick) {\n      onClick(retailerId);\n    }\n  }\n\n  const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setRetailerId(e.target.value);\n  }\n\n  const filterRetailers = (retailers: IRetailer[], arrayObjects: MapObj[]) => {\n    return retailers.filter(retailer =>\n      arrayObjects.some(obj => obj.retailer_id === retailer.id)\n    );\n  }\n\n  if (!isAmenity && (isLoading || !retailer)) {\n    return (\n      <div>\n        <div className={styles['retailer-info-spinner']} >\n          <Spinner animation=\"border\" role=\"status\" variant=\"secondary\" />\n        </div>\n        <div className={styles['retailer-info-content']} >\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={5} /> <Placeholder bg=\"secondary\" xs={3} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={7} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {!!retailer && (\n        <>\n          <div className={styles['retailer-logo']}>\n            <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n          </div>\n          <div className={styles['retailer-info-content']} >\n            <div>\n              <b>Retailer:</b> {retailer.retail_name}\n            </div>\n            {retailer.location &&\n              <div>\n                <b>Location:</b> {retailer.location}\n              </div>\n            }\n            {retailer.retailer_phone &&\n              <div>\n                <b>Phone:</b> {retailer.retailer_phone}\n              </div>\n            }\n            {retailer.retailer_description &&\n              <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n            }\n          </div>\n        </>\n      )}\n      <Form className={styles['get-directions-from']}>\n        <FormGroup>\n          <div className=\"d-flex align-items-center gap-3\">\n            {!kioskId.length ?\n              <>\n                <Form.Select\n                  name=\"retailer\"\n                  onChange={onChange}\n                  value={retailerId}\n                >\n                  <option value={''} disabled>Get direction from ...</option>\n                  {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                    if (retailer && item.id === retailer.id) return null;\n                    return (\n                      <option key={index} value={item.id}>{item.retail_name}</option>\n                    )\n                  }\n                  )}\n                </Form.Select>\n                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n              </>\n              : null\n            }\n          </div>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n  const {\n    amenity,\n    show,\n    onHide,\n    centerId,\n    retailers,\n    mapObjs,\n    mapObjectName,\n    webApiURI,\n    onClick,\n    kioskId,\n  } = props;\n  const slug = useMemo(() => {\n    if (centerId && mapObjs && retailers && mapObjectName) {\n      const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n      if (mapObj && mapObj.retailer_id) {\n        const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n        if (retailer) {\n          return retailer.slug;\n        }\n      }\n    }\n    return '';\n  }, [centerId, mapObjectName, mapObjs, retailers]);\n  const data = useRetailerData({ centerId, slug, webApiURI });\n  const handleOnClick = (retailerId: string) => {\n    if (!onClick) return;\n    let mapObj = null;\n    if (kioskId) {\n      mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id ?? '') === parseInt(kioskId));\n    } else {\n      mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n    }\n\n    let mapObjectName = '';\n\n\n    if (mapObj) {\n      mapObjectName = mapObj.map_obj_name;\n    }\n\n    if (amenity) {\n      onClick(mapObjectName, amenity);\n    } else {\n      onClick(mapObjectName);\n    }\n  }\n\n  const isAmenity = (amenity !== '' || (mapObjectName ? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n  return (\n    <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n      <div className={styles['retailerInfoCloseBtn']}>\n        <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n      </div>\n      <Modal.Body className=\"p-3\">\n        <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState, useTransition } from \"react\";\nimport { Canvas, ThreeEvent, useThree } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { Mesh, Object3D } from \"three\";\nimport { IExtMesh, IJsonConfig, IMeshParams, IMeshValues } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.scss';\nimport { Alert } from 'react-bootstrap';\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { AmenityID } from \"src/MapBox\";\nimport { defaultVars } from \"src/defaults\";\nimport useAllRetailers from \"src/Hooks/useAllRetailers\";\n\ninterface ISceneComponentProps {\n  mapitData?: MapIt2Response;\n  config: Partial<IJsonConfig>;\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObj[]) => void;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n}\n\nexport interface IZoomData {\n  direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n  const { data, refreshData, removeMissingMapObjects } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n  const [triggerClick, setTriggerClick] = useState<boolean>(false);\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlState, setCameraControlState] = useState<any>(null);\n  const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition } = params;\n  const [IsCameraInit, setIsCameraInit] = useState(false);\n\n  const [, startTransition] = useTransition();\n  const [disableClicks, setDisableClicks] = useState(false);\n\n  const [selectedRetailerSlug, setSelectedRetailerSlug] = useState<string>('');\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n  const [, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n  const cameraControlStateRef = useRef<any>(null);\n  cameraControlStateRef.current = cameraControlState;\n  const deviceTypeRef = useRef<string | undefined | null>(null);\n  deviceTypeRef.current = deviceType;\n  // console.log('DEVICE TYPE', deviceType);\n  const floorsMapRef = useRef<{\n    resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null,\n    createRouteToStore: (retailerSlug: string) => void | null,\n    getInitialDistance: () => number,\n  }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const handleFloorChange = (floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }\n\n  const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n\n  useEffect(() => {\n    if (data?.map_objs && data.map_objs.length > 0 && meshFloors.meshParams.length) {\n      const objectNames = meshFloors.meshParams.reduce<string[]>((prev, cur) => {\n        const curVal = cur.reduce<string[]>((subPrev, subCur) => {\n\n          return [...subPrev, subCur.object_id];\n        }, []);\n        return [...prev, ...curVal];\n      }, [])\n      if (objectNames) {\n        removeMissingMapObjects(objectNames);\n      }\n    }\n  }, [data?.map_objs, meshFloors.meshParams, removeMissingMapObjects])\n\n  const mapCenterMarkerRef = useRef(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const context = useMeshObjectContext();\n  const { SetMeshObject } = context;\n  const [, setSceneKey] = useState(0);\n\n  const updateKey = useCallback(() => {\n    setSceneKey((value) => value + 1)\n  }, [])\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n  const config = meshFloors.config;\n  const floors = meshFloors.floors;\n  const meshParams = meshFloors.meshParams;\n\n  const { setConfig: setCxtConfig } = context;\n\n  useEffect(() => {\n    if (context && meshFloors && meshFloors.config) {\n      setCxtConfig(meshFloors.config);\n    }\n  }, [context, meshFloors, setCxtConfig])\n\n  useImperativeHandle(ref, () => ({\n    refreshData,\n    createRouteToAmenity: handleAmenityClick,\n    createRouteToStore: floorsMapRef.current?.createRouteToStore,\n    getInitialDistance: floorsMapRef.current?.getInitialDistance,\n  }))\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      const resizeWidth = () => {\n        setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      }\n      window.addEventListener('resize', () => {\n        resizeWidth();\n        // Update your map or camera settings based on newWidth\n      });\n      resizeWidth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statsParentRef.current]);\n\n  const setCameraControlPos = useCallback((camera_controls_states: any) => {\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraPos(camera_controls_states.display_app.camera)\n      setControlPos(camera_controls_states.display_app.controls)\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n      if (canvasWidth > 1024) {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (canvasWidth > 600) {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      } else {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraPos(camera_controls_states.display_app.camera)\n        setControlPos(camera_controls_states.display_app.controls)\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      }\n    }\n  }, [canvasWidth, config?.ROLE])\n\n  useEffect(() => {\n    if (data && data.camera_controls_states) {\n      setCameraControlState(data.camera_controls_states);\n      setCameraControlPos(data.camera_controls_states);\n    }\n  }, [data, setCameraControlPos]);\n\n  useEffect(() => {\n    if (cameraControlStateRef.current) {\n      setCameraControlPos(cameraControlStateRef.current);\n    }\n  }, [deviceType, canvasWidth, setCameraControlPos])\n\n\n  const { onSettingsLoading } = params;\n  useEffect(() => {\n    if (data && meshFloors.config && onSettingsLoading) {\n      onSettingsLoading?.(\n        {\n          ...data,\n          settings: {\n            ...data.settings,\n            STYLE: meshFloors.config.STYLE,\n            ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n            AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n            AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n            BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n            BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n            BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n            BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n            MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n            OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n            OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n            STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n            STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n            WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n            WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n            KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n            STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n            MIN_ZOOM: meshFloors.config.CAMERA?.minZoom?.toString(),\n            MAX_ZOOM: meshFloors.config.CAMERA?.maxZoom?.toString(),\n            CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n            CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n            ZOOM_STEP: meshFloors.config.ZOOM_STEP ?? defaultVars.ZOOM_STEP ?? '100',\n            SELECTED_ZOOM_LIMIT: meshFloors.config.SELECTED_ZOOM_LIMIT ?? defaultVars.SELECTED_ZOOM_LIMIT ?? '400',\n            SELECTED_ZOOM_LIMIT_DISTANCE: meshFloors.config.SELECTED_ZOOM_LIMIT_DISTANCE?.toString()\n          }\n        });\n    }\n  }, [data, meshFloors, onSettingsLoading])\n\n  const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n    if (canvasWidthRef.current === 0) return;\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n      if (canvasWidthRef.current > 1024) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (canvasWidthRef.current > 600) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      } else {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      }\n    }\n  }, [config?.ROLE])\n\n  useEffect(() => {\n    if (cameraControlStateRef.current && setCameraControlPosition) {\n      setCameraControlPosition(cameraControlStateRef.current);\n    }\n  }, [cameraControlState, setCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapitData = useCallback((index: number, newData: MapObj) => {\n    setFormMapObjData((prev) => {\n      const itemIndex = prev.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n      if (itemIndex !== -1) {\n        prev[itemIndex] = { index, data: { ...newData } };\n      } else {\n        prev.push({ index, data: { ...newData } })\n      }\n\n      return [...prev];\n    });\n\n  }, [])\n\n  const getMapitData = useCallback((): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }, [data, formMapObjData])\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refreshData);\n    }\n  }\n\n  const floorsCount = data?.floors?.length ?? 0;\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    if (!config) {\n      return [null, 0, ''] // not an error - loading/initializing\n    }\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = floorsCount ? floorsCount - 1 : 0;\n    if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n      const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n      const currKioskMeshParams = meshParams?.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (config.ROLE === 'WEBSITE') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n      }\n      if (config.ROLE === 'WEBSITE') {\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [config, meshParams, floorsCount]);\n\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsCount ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = (fullReset: boolean = false) => {\n\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n    setSelectedRetailerSlug('');\n\n    if (floorsMapRef.current) {\n      if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n        let ccs = null;\n        if (deviceTypeRef.current === \"desktop\") {\n          ccs = { ...data.camera_controls_states.desktop }\n        } else if (deviceTypeRef.current === \"display_app\") {\n          ccs = { ...data.camera_controls_states.display_app }\n        } else if (deviceTypeRef.current === \"mobile\") {\n          ccs = { ...data.camera_controls_states.mobile }\n        } else if (deviceTypeRef.current === \"tablet\") {\n          ccs = { ...data.camera_controls_states.tablet }\n        }\n\n        if (ccs) {\n          floorsMapRef?.current?.resetCamera(fullReset, ccs);\n        }\n      } else {\n\n        floorsMapRef?.current?.resetCamera(fullReset);\n\n      }\n    }\n\n  }\n\n  const ccsInit = useRef<{ [key: string]: boolean }>({\n    display_app: false,\n    desktop: false,\n    tablet: false,\n    mobile: false,\n  })\n\n  useEffect(() => {\n\n    if (!config || !deviceType) {\n      return;\n    }\n\n\n    if (!params.config.CAMERA_CONTROLS_STATES) {\n      //@ts-ignore\n      config.CAMERA_CONTROLS_STATES = data.camera_controls_states[deviceType]\n    }\n\n    floorsMapRef?.current?.resetCamera();\n\n  }, [deviceType, config, data?.camera_controls_states])\n\n  useEffect(() => {\n    if (!config) {\n      return;\n    }\n\n    const kiosks: IMeshValues[] = [];\n    meshFloors.meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n    // console.log('kiosks', kiosks);\n\n    const mapObjectIdToKiosk = new Map();\n    const mapObjectIdToLogo = new Map();\n    kiosks.forEach(item => {\n      mapObjectIdToKiosk.set(item.object_id, item.mesh);\n    });\n    // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n    meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n    // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n    // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    const mapData = getMapitData();\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        //TODO use 'value' until api with lock_size will be working\n        // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n        if (logo.userData.kioskConfig !== null) {\n          logo.userData.kioskConfig = {\n            lockSize: mapObj?.value === '1',\n            blink: item.object_id === currKioskId,\n            size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE),\n            floorIndex: kiosk.floor_index,\n          }\n          // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n          logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n          logo.visible = true;\n        }\n        currKioskLogo.push(logo);\n      }\n    });\n\n    // return () => {\n    //     currKioskLogo?.forEach(mesh => {\n    //         mesh.userData.htmlContent = null;\n    //     });\n    // }\n  }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObj[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData, onMapDataUpdate])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (config?.SELECTED_RETAILER_SLUG && IsCameraInit) {\n      setSelectedRetailerSlug(config.SELECTED_RETAILER_SLUG);\n    }\n  }, [config?.SELECTED_RETAILER_SLUG, IsCameraInit])\n\n  useEffect(() => {\n    if (config && data && data.retailers && data.map_objs && selectedRetailerSlug !== '') {\n      const retailer = data.retailers.find(item => {\n        return item.slug === selectedRetailerSlug;\n      })\n      if (retailer) {\n        const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n        const meshParam = meshParams?.flat().find(item => item.object_id === mapObject?.map_obj_name);\n        if (meshParam) {\n          setSelectedFloorIndex(meshParam.floor_index);\n        }\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [config, data, setSelectedActiveObjectId, selectedRetailerSlug, meshParams])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const textParams = meshFloors.textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const logoParams = meshFloors.storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const result = [object as IExtMesh];\n\n    if (textParams) {\n      result.push(textParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    SetMeshObject([...result]);\n  }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n      const object = meshFloors.meshParams[currentFloorIndex]?.find((value) => value.object_id === selectedActiveObjectId);\n      if (object) {\n        //@ts-ignore\n        handleMeshObjectContext(object);\n      }\n      //@ts-ignore\n    }\n  }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [config, setSelectedActiveObjectId]);\n\n  const handleObjectClick = useCallback((object: IExtMesh, targetId: string) => {\n    if (config?.ROLE === 'DISPLAY_APP' && currKioskObj) {\n      handleFloorChange(currKioskFloorIndex);\n    }\n    startTransition(() => {\n      handleMeshObjectContext(object);\n      setSelectedActiveObjectId(targetId ?? '');\n      setTriggerClick(t => !t);\n      setSelectedRetailerSlug('');\n      setAmenityTargetType('');\n      setFromObjectId('');\n    })\n\n  }, [handleMeshObjectContext, setSelectedActiveObjectId])\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    // console.log('onClick', e.object)\n    if (disableClicks) {\n      setDisableClicks(false);\n      return false;\n    }\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value);\n      if (config && config.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleObjectClick(e.object as IExtMesh, targetId ?? '');\n      if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext, disableClicks, handleObjectClick]);\n\n  const onCameraMove = useCallback((e: any) => {\n    if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n      return\n    }\n  }, []);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    // console.log('onPointerEnter', e.object)\n    if (e.object.userData.storeName === '') {\n      // console.warn('onPointerEnter no storeName', e.object);\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerLeave', e.object)\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const startMousePos = useRef<{ x: number | null, y: number | null, distance: number }>({ x: null, y: null, distance: -Infinity });\n\n  const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    if (e.buttons > 0) {\n      if (startMousePos.current.x === null) {\n        startMousePos.current.x = e.clientX;\n      }\n      if (startMousePos.current.y === null) {\n        startMousePos.current.y = e.clientY;\n      }\n      if (startMousePos.current.x !== null && startMousePos.current.y !== null) {\n        let newDistance = Math.sqrt(Math.pow(startMousePos.current.x - e.clientX, 2) + Math.pow(startMousePos.current.y - e.clientY, 2));\n        if (newDistance > startMousePos.current.distance) {\n          startMousePos.current.distance = newDistance;\n        }\n      }\n\n      startTransition(() => {\n        // Disable dragging if the user accidentally moved the map within 15 pixels by clicking on the store\n        if (startMousePos.current.distance > 15) {\n          setDisableClicks(true);\n        }\n      });\n    } else {\n      startMousePos.current.x = startMousePos.current.y = null;\n      startMousePos.current.distance = -Infinity;\n    }\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n  }\n\n  if (data && (!data.floors || data.floors.length <= 0)) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!config || !meshFloors.meshParams.length) {\n    console.warn('LOADING MAP')\n    if (config?.ROLE === 'WP_SITE') {\n      return <div className=\"messageStyle\" style={messageStyle}>No Map for Center</div>\n    }\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div className=\"messageStyle\" style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && config.ROLE === 'WEBSITE') {\n    console.error('NO KIOSK OBJECT FOUND');\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      // setSelectedActiveObjectId(retailerId);\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }\n\n  return (\n    <>\n      {config.ROLE === 'PORTAL' &&\n        <div className={styles['mapbox-admin-form']}>\n          {!selectedActiveObjectId ?\n            <Alert variant=\"info\">Select a store to customize.</Alert>\n            :\n            <MapboxForm\n              floorIndex={currentFloorIndex}\n              meshFloors={meshFloors}\n              config={config}\n              data={getMapitData()}\n              setData={handleChangeMapitData}\n              selectedId={selectedActiveObjectId}\n              centerId={params.config.CENTER_ID as string}\n              onSubmit={handleOnSubmit}\n              apiURI={params.webApiURI}\n              onResetData={params.onResetData}\n              triggerSceneUpdate={updateKey}\n            />\n          }\n        </div>\n      }\n\n      <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n        <UIComponent\n          accentColor={config.ACCENT_COLOR.getStyle()}\n          floors={floors}\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          amenitiesList={amenitiesList}\n          handleAmenityClick={handleAmenityClick}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          role={config.ROLE}\n          mapObjs={data?.map_objs}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n          <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n          {/*<axesHelper args={[5000]} />*/}\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n\n          <FloorsMap\n            onCameraMove={onCameraMove}\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            // @ts-ignore\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            config={config}\n            ref={floorsMapRef}\n            cameraPos={cameraPos}\n            controlPos={controlPos}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n            isSelectedRetailerSlug={true}\n            setIsCameraInit={setIsCameraInit}\n            retailers={data?.retailers ?? []}\n            mapObjs={data?.map_objs ?? []}\n            handleObjectClick={handleObjectClick}\n            triggerClick={triggerClick}\n          />\n        </Canvas>\n\n        {config.ROLE !== 'DISPLAY_APP' && (\n          <div ref={labelRef}\n            className=\"store-name-placeholder\"\n            style={{\n              position: 'absolute',\n              padding: 10,\n              background: '#ffffff',\n              fontWeight: 600,\n              color: '#000000',\n              fontSize: 16,\n              display: currentHoveredObject ? 'block' : 'none',\n              top: 300,\n              left: 400,\n              opacity: .8,\n            }}\n          >{currentHoveredObject && currentHoveredObject.userData.storeName}</div>\n        )}\n      </div>\n      {\n        config.ROLE !== 'PORTAL' ?\n          <RetailerInfoModal\n            amenity={selectedAmenityType}\n            show={showRetailerInfo}\n            onHide={() => setShowRetailerInfo(false)}\n            centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n            mapObjectName={selectedActiveObjectId}\n            retailers={data?.retailers}\n            mapObjs={data?.map_objs}\n            webApiURI={params.webApiURI ?? ''}\n            onClick={handleRetailerInfoOnClick}\n            kioskId={config.KIOSK.toString()}\n          />\n          : null\n      }\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\nimport useAllRetailers from \"./Hooks/useAllRetailers\";\n\ninterface useMapIt2DataProps {\n  CENTER_ID: string;\n  mapitData?: MapIt2Response;\n  webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n  data: MapIt2Response | null,\n  refreshData: () => void,\n  removeMissingMapObjects: (objectNames: string[]) => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n  const [data, setData] = useState<MapIt2Response | null>(null);\n\n  if (!CENTER_ID && !mapitData) {\n    console.error('useMapit2Data requires either CENTER_ID or mapitData');\n  }\n\n  const { getAll } = useAllRetailers(webApiURI as string, CENTER_ID as string, 100);\n\n  const getData = useCallback(() => {\n    let apiURI = webApiURI || null;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n      const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n      const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n      const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n      const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n      const mapObjsPromise = fetch(mapObjsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const floorsPromise = fetch(floorsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      })\n        .then(data => {\n          if (!data\n            || !data.items\n            || (data.items && !data.items.length)) {\n            console.error('Empty floors data from server');\n          }\n          return data;\n        }).catch(e => { console.error(e) })\n\n      const kiosksPromise = fetch(kioskApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const settingsPromise = fetch(settingsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { console.error(e) })\n\n      const responsivePromise = fetch(responsiveApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { throw new Error(e) })\n\n      Promise.all<Array<any>>([\n        // retailersPromise,\n        // getAllRetailers(CENTER_ID, 1, 100, apiURI, 0),\n        getAll(),\n        mapObjsPromise,\n        floorsPromise,\n        kiosksPromise,\n        settingsPromise,\n        responsivePromise\n      ]).then(data => {\n        if (data.length >= 5) {\n          const responseData: Partial<MapIt2Response> = {};\n          responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n            id: item.id,\n            retail_name: item.name,\n            slug: item.slug,\n            location: item.location,\n            retailer_phone: '',\n            retailer_description: '',\n            logo: item.media.url,\n            map_obj_name: '',\n          }));\n          responseData.map_objs = [...data[1].items].map(item => ({\n            ...item,\n            offsetX: item.offset_x,\n            offsetY: item.offset_y,\n          }));\n          responseData.floors = [...data[2].items];\n          responseData.settings = {\n            ...demoData.settings as Settings,\n            KIOSK_SIZE: \"1\",\n          }\n          responseData.kiosks = [];\n          responseData.amenities = { ...demoData.amenities };\n          responseData.kiosks = [...data[3].items];\n          const settings: Settings = data[4]?.settings ? data[4].settings : {\n            \"STYLE\": \"3D\",\n            \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n            \"ACCENT_COLOR\": \"4EA5FF\",\n            \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n            \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n            \"WALL_THICKNESS\": \"0.6\",\n            \"WALL_COLOR\": \"888888\",\n            \"BOUNDARY_THICKNESS\": \"0.8\",\n            \"BOUNDARY_COLOR\": \"888888\",\n            \"BASE_COLOR\": \"25292B\",\n            \"STORE_TEXT_COLOR\": \"222222\",\n            \"OVERLAY_COLOR\": \"FFFFFF\",\n            \"OVERLAY_OPACITY\": \"0.7\",\n            \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n            \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n            \"ZOOM_STEP\": \"100\",\n          };\n          if (data[5]) {\n            responseData.camera_controls_states = data[5];\n          } else {\n            responseData.camera_controls_states = { ...demoData.camera_controls_states }\n          }\n          responseData.settings = settings;\n\n          setData({ ...responseData as MapIt2Response })\n        }\n      })\n    }\n  }, [CENTER_ID, getAll, webApiURI])\n\n  useEffect(() => {\n    if (mapitData) {\n      setData(mapitData);\n      return;\n    }\n\n    if (!CENTER_ID) {\n      return;\n    }\n\n    getData();\n\n  }, [CENTER_ID, mapitData, getData]);\n\n  const removeMissingMapObjects = useCallback((objectNames: string[]) => {\n    if (data?.map_objs) {\n      const mapObjects = data.map_objs.filter(item => {\n        return objectNames.includes(item.map_obj_name)\n      })\n      if (mapObjects.length < data.map_objs.length) {\n        setData({\n          ...data,\n          map_objs: [...mapObjects],\n        })\n      }\n    }\n  }, [data]);\n\n  const refreshData = () => getData();\n  return { data, refreshData, removeMissingMapObjects };\n}","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport { retailersApi } from './services/retailersApi'\n\nexport const store = configureStore({\n  reducer: {\n    [retailersApi.reducerPath]: retailersApi.reducer,\n  },\n  middleware: (getDefalultMiddleware) => getDefalultMiddleware().concat(retailersApi.middleware),\n})\n\nsetupListeners(store.dispatch);\n","import { MutableRefObject, forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport styles from './MapBox.module.scss';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport { isMapIt2Response, MapIt2Response, MapObj, MapObjToSave } from \"./mapitApiTypes\";\nimport { IJsonConfig } from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapBoxContextProvider from './contexts/MapBoxContextProvider';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n  createRouteToStore: (retailerSlug: string) => void;\n  getInitialDistance: () => number;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station';\n\nexport interface IAppProps {\n  mapitData?: unknown;\n  config: Partial<IJsonConfig>;\n  stats?: boolean;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n\n\nconst MapBox = forwardRef(({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, deviceType, setCameraControlPosition, onResetData, onExtractedAmenities }: IAppProps, ref) => {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n  useImperativeHandle(ref, () => {\n    return {\n      getInitialDistance: refObj?.current?.getInitialDistance\n    }\n  });\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <MapBoxContextProvider>\n        <MeshObjectContextProvider>\n          <div className={`${styles['mapbox-component']} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n            <SceneComponent\n              ref={refObj}\n              setSelectedActiveObjectId={setSelectedActiveObjectId}\n              selectedActiveObjectId={selectedActiveObjectId}\n              mapitData={mapData}\n              config={config}\n              onSettingsLoading={onSettingsLoading}\n              webApiURI={webApiURI}\n              mediaStorageURI={mediaStorageURI}\n              onSubmit={handleOnSubmit}\n              onResetData={onResetData}\n              deviceType={deviceType}\n              setCameraControlPosition={setCameraControlPosition}\n              onExtractedAmenities={onExtractedAmenities}\n            />\n            <div className={styles.hide}>\n              <div id=\"map-special-svg-kiosk\">\n                <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n                  <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-atm\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n                  <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n                  <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-management\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n                  <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n                  <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-playarea\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n                  <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                  <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                  <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-restroom\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n                  <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-family-restroom\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n                  <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                  <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                  <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                  <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                  <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-elevator\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n                  <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                  <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                  <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-security\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n                  <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-dog-poop-station\">\n                <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n                  <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n                  <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n                  <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n                  <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n                  <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n                </svg>\n              </div>\n              <div id=\"map-special-svg-escalator\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"398\" viewBox=\"0 0 512 398\">\n                  <g fillRule=\"evenodd\">\n                    <path fill=\"#FFF\" d=\"M217.01,68.67 C235.674,68.677 250.846,53.503 250.85,34.83 C250.846,16.072 235.674,0.9 217.01,0.87 C198.243,0.9 183.071,16.072 183.05,34.83 C183.071,53.503 198.243,68.677 217.01,68.67\"></path>\n                    <path fill=\"#FFF\" d=\"M250.49,129.63 L250.49,108.27 C250.507,62.826 183.412,63.326 183.41,108.27 L183.41,195.39 L183.53,195.39 L120.17,258.87 C114.172,264.805 113.443,265.065 101.69,265.11 C101.691,265.075 62.93,265.11 62.93,265.11 C23.943,265.065 0.557,300.113 0.53,329.79 C0.557,359.539 23.943,397.1 66.41,397.11 C66.41,397.11 119.149,397.1 135.41,397.11 C151.738,397.1 171.491,390.871 187.73,375.51 L389.93,174.03 C394.237,170.175 396.633,168.978 404.09,168.99 C404.09,168.99 431.929,168.978 454.01,168.99 C478,168.978 512,141.75 511.97,102.51 C512,63.651 477.75,37.75 451.97,37.71 L373.25,37.71 C356.899,37.664 335.943,44.326 323.45,56.79 L250.49,129.63\"></path>\n                    <path fill=\"#FFF\" d=\"M377.93,71.19 L448.85,71.19 C466.144,71.211 477.75,90.498 477.77,102.03 C477.75,113.502 469.516,134.969 448.37,134.91 L405.77,134.91 C387.75,134.969 379.75,137.5 369.41,147.87 L165.65,351.63 C157.443,359.826 146.989,363.093 133.61,363.15 L66.41,363.15 C49.149,363.093 33.943,348.496 33.89,329.31 C33.943,310.156 48.443,299.415 63.41,299.43 L109.49,299.43 C122.943,299.415 131.775,295.581 139.49,287.91 L346.61,80.79 C355.083,72.276 363.502,71.211 377.93,71.19\"></path>\n                  </g>\n                </svg>\n              </div>\n            </div>\n          </div>\n        </MeshObjectContextProvider>\n      </MapBoxContextProvider>\n    </Provider>\n\n\n  );\n})\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n  id: string;\n  index?: string;\n  retail_name: string;\n  slug: string;\n  location: string;\n  retailer_phone: string;\n  retailer_description: string;\n  logo: string;\n  map_obj_name: string;\n};\n\nexport type MapObj = {\n  id: string | number;\n  center_id: string;\n  retailer_id: string;\n  kiosk_id: string | null;\n  map_obj_name: string;\n  obj_type: string;\n  layer_type: string;\n  value: string;\n  custom_text: string;\n  custom_image: string;\n  hover_text: string;\n  bg_color: string;\n  transparent: string | number;\n  text_color: string;\n  size: string;\n  lock_size: string;\n  rotate: string;\n  offsetX: string;\n  offsetY: string;\n  goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & { kiosk_id: number | null };\n\nexport type Floor = {\n  id: string;\n  svg_map?: string;\n  objsGroup?: Group;\n  interactiveObjs?: any[];\n  escalatorsObjs?: any[];\n  escalatorsNodes?: Record<any, any>;\n  escalatorMeshes?: any[];\n  route_points?: IRoutePoint[];\n  route_tube?: any;\n  route_texture?: Texture | null | undefined;\n  routeMeshes?: any[];\n  route_active?: boolean;\n  center_id?: string;\n  title: string;\n  svg?: string;\n  status?: string;\n  created_at?: string;\n};\n\nexport type CameraControlsState = {\n  camera: { x: number, y: number, z: number };\n  controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n  STYLE: '2D' | '3D',\n  MAP_BACKGROUND_COLOR: string;\n  ACCENT_COLOR: string;\n  STORE_DEFAULT_COLOR: string;\n  BIG_STORE_DEFAULT_COLOR: string;\n  WALL_THICKNESS: string;\n  WALL_COLOR: string;\n  BOUNDARY_THICKNESS: string;\n  BOUNDARY_COLOR: string;\n  BASE_COLOR: string;\n  STORE_TEXT_COLOR: string;\n  STORE_HEIGHT: string;\n  OVERLAY_COLOR: string;\n  OVERLAY_OPACITY: string;\n  AMENITIES_NAV_BG_COLOR: string;\n  AMENITIES_NAV_ICON_COLOR: string;\n  KIOSK_SIZE: string;\n  MIN_ZOOM: string;\n  MAX_ZOOM: string;\n  CAMERA_MIN_DISTANCE: string;\n  CAMERA_MAX_DISTANCE: string;\n  ZOOM_STEP: string;\n  SELECTED_ZOOM_LIMIT: string;\n  SELECTED_ZOOM_LIMIT_DISTANCE: string;\n};\n\nexport type Kiosk = {\n  id: string;\n  title: string;\n  map_obj_name: string;\n};\n\nexport type Amenity = {\n  name: string;\n  image: string;\n};\n\nexport type MapIt2Response = {\n  retailers: IRetailer[];\n  map_objs: MapObj[];\n  floors: Floor[];\n  camera_controls_states: {\n    display_app: CameraControlsState;\n    desktop: CameraControlsState;\n    tablet: CameraControlsState;\n    mobile: CameraControlsState;\n  };\n  settings: Settings;\n  kiosks: Kiosk[];\n  amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n  name: string;\n  node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n  if (typeof obj !== 'object' || obj === null) return false;\n\n  const response = obj as Record<string, unknown>;\n\n  return (\n    Array.isArray(response.retailers) &&\n    Array.isArray(response.map_objs) &&\n    Array.isArray(response.floors) &&\n    typeof response.camera_controls_states === 'object' &&\n    response.camera_controls_states !== null &&\n    typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n    typeof response.settings === 'object' &&\n    Array.isArray(response.kiosks) &&\n    typeof response.amenities === 'object'\n  );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","hex_to_color","hex_code","Color","getFormatedColor","replace","amenitiesList","type","icon","ATMIcon","_jsxs","xmlns","viewBox","children","_jsx","d","transform","fill","ManagementIcon","PlayAreaIcon","jsx","RestroomIcon","FamilyRestroom","ElevatorIcon","SecurityIcon","DogPoopStation","cx","cy","rx","ry","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","allMapObjects","allIndexedRetailers","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","item","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","escalator_clone","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minZoom","maxZoom","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","SELECTED_ZOOM_LIMIT","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","set","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","size","get_store_name_logo_geo","textLogoNamePrefix","myFont","handleAsync","new_object_id","result","boundingBox","computeBoundingBox","mesh_center_point","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","logoMesh","storeLogo","getImageLogo","MapBoxContext","createContext","meshByObjectId","Map","setMeshByObjectId","setAllMapObjects","setAllIndexedMapObjects","setAllIndexedRetailers","setAllNodesFloor","createGraph","setPathFinderGraph","setNgraphPath","floorsData","MapBoxContextProvider","useState","Provider","useMapBoxContext","context","useContext","Error","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","meshParams","setMeshParams","textParams","setTextParams","storeLogos","setStoreLogos","escalatorNodes","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","mergedConfig","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","MIN_ZOOM","MAX_ZOOM","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","canvasWidth","screen","camera_controls_states","mobile","tablet","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","SELECTED_ZOOM_LIMIT_DISTANCE","values","clearScene","removeFromParent","GeometriesAndMaterials","graph","results","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","point","origin_point","target_direction","storeIntersects","intersectObjects","object","escalatorIntersects","assign_route_nodes_to_stores","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","loadFloors","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","useMeshObjectContext","MapCenterMarker","lockSize","blink","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","svgOrigin","svgBlob","Blob","svgUrl","URL","createObjectURL","svgTexture","Texture","needsUpdate","jsxs","Html","className","MapObject","setUpdate","React","currentFloorIndex","triggerUpdate","kioskConfig","htmlContent","pointerEvents","distanceFactor","uuid","_Fragment","Fragment","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","boundingSphere","display","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","isSelectedRetailerSlug","setIsCameraInit","mapObjs","handleObjectClick","triggerClick","cameraLimits","SetCameraLimits","min","initialDistance","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","isUseDefaultsLimits","resetCamera","fullReset","selectedFloorMeshParams","meshes","focus","aspect","isZeroCCS","cameraV3","controls","cameraDistance","setLength","fromPosition","fromTarget","animationStartTime","duration","cl","focusDistance","Number","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","clearEscalators","flat","targetMesh","currentActiveObject","zoomStep","getInitialDistance","onCameraMove","vector","toFixed","animationTime","animationProgress","lerpVectors","createRouteToStore","retailerSlug","slug","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","retailersApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getRetailers","query","limit","page","url","headers","useLazyGetRetailersQuery","useAllRetailers","setRetailers","lastIndexOf","slice","fetchAllRetailers","totalPages","requests","Promise","resolve","currentPage","all","then","ret","reject","getAll","status","round","UIComponent","selectedFloorIndex","handleFloorChange","zoomIn","zoomOut","reset","handleAmenityClick","onExtractedAmenities","extractValues","filter","preventDefault","Function","styles","backgroundColor","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","MapboxForm","setData","selectedId","onResetData","triggerSceneUpdate","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","isLoadingRetailers","loadOptions","loadRetailersOptions","useRetailersOptions","apiURI","setIsLoading","fetchRetailers","toString","search","isError","catch","useGetRetailers","processData","isLoadingMore","label","location","inputValue","callback","toLowerCase","selectedKiosksId","setSelectedKiosksId","recheckSelectedKiosksId","ids","prev","cur","loadKiosksOptions","isDisabled","loadAmenitiesOptions","getDefaultKioksOptions","getDefaultAmenitiesOptions","makeImage","retailIndex","findIndex","HTMLImageElement","makeTextGeometry","updateData","handleChangeTab","k","clearKioskConfig","isTRetailerTabsKey","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadingMessage","noOptionsMessage","placeholder","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","handleChangeKiosk","newValue","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","kioskId","handleRotateByFixedAngle","defaultData","RetailerInfoList","isAmenity","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","Select","disabled","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","fetch","json","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","SceneComponent","refreshData","removeMissingMapObjects","mapitData","getData","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","mapObjsPromise","ok","statusText","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","responseData","offset_x","offset_y","demoData","objectNames","mapObjects","useMapit2Data","setTriggerClick","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","IsCameraInit","disableClicks","setDisableClicks","selectedRetailerSlug","setSelectedRetailerSlug","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","subPrev","subCur","labelRef","currentHoveredObject","setCurrentHoveredObject","setSceneKey","updateKey","showRetailerInfo","setShowRetailerInfo","setCxtConfig","createRouteToAmenity","offsetWidth","resizeWidth","addEventListener","setCameraControlPos","display_app","desktop","onSettingsLoading","getHexString","camPos","ctrlTarget","activeFromObjectId","handleChangeMapitData","newData","itemIndex","getMapitData","floorsCount","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","meshParam","handleMeshObjectContext","logoParams","targetId","t","stopPropagation","startMousePos","Infinity","messageStyle","top","left","meshFloorsChecked","Alert","getStyle","resetHandle","ccs","Canvas","Stats","parent","intensity","buttons","clientX","clientY","newDistance","sqrt","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","configureStore","reducer","middleware","getDefalultMiddleware","concat","setupListeners","dispatch","MapBox","_ref","refObj","setMapData","_refObj$current","isMapIt2Response","fillRule"],"mappings":"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"}