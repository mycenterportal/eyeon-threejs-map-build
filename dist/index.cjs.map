{"version":3,"file":"index.cjs","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/globals.ts","../src/helpers/misc.ts","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/helpers/draw.logo.helpers.ts","../src/Hooks/useMeshFloors/index.tsx","../src/defaults.ts","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent/FloorSelector.tsx","../src/components/Icons/ATM.tsx","../src/components/Icons/DogPoopStation.tsx","../src/components/Icons/Elevator.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Icons/Management.tsx","../src/components/Icons/PlayArea.tsx","../src/components/Icons/Restroom.tsx","../src/components/Icons/Security.tsx","../src/components/UIComponent/index.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/components/MapboxForm/MapboxForm.tsx","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type {Vector2} from \"three\";\nimport {IFloorData} from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n    return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string , boolean] {\n    let exists = false;\n    let node_name:string = '-name-not-found-';\n    const currentFloor = floors[floor_index];\n    if (currentFloor.route_points !== undefined) {\n        for (let i = 0; i < currentFloor.route_points.length; i++) {\n            if (vertex.x == currentFloor.route_points[i].node.x && vertex.y == currentFloor.route_points[i].node.y) {\n                exists = true;\n                node_name = currentFloor.route_points[i].name;\n                break;\n            }\n        }\n        if (!exists) {\n            node_name = next_node_name(node_count);\n            // draw_points([{ x: vertex.x, y: vertex.y }]);\n        }\n    }\n    return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport {Graph} from \"ngraph.graph\";\nimport {Color, LineCurve, Vector2, Vector3} from \"three\";\nimport {get_node_name} from \"./nodesUtils\";\nimport {MeshType} from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n    const consolePrefix = 'MeshParams';\n    let mesh_type:MeshType = null;\n    var layer_color: Color | string = path.color.clone();\n    var extrude = 0;\n    var z_index = 0;\n    var mesh_visible = true;\n    var mesh_draw = true;\n    var mesh_transparent = false;\n    var line_thickness = config.WALL_THICKNESS;\n    var interactiveMesh = true;\n    var layer_name = path.userData?.node.id;\n    if (layer_name != undefined) {\n        if (layer_name.startsWith('boundary')) {\n            mesh_type = 'boundary';\n            layer_color = config.BOUNDARY_COLOR;\n            line_thickness = config.BOUNDARY_THICKNESS;\n            if (config.STYLE == '3D') {\n                extrude = 9;\n            }\n        } else if (layer_name.startsWith('wall')) {\n            mesh_type = 'wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 8.5;\n            }\n        } else if (layer_name.startsWith('outer-wall')) {\n            mesh_type = 'outer-wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                mesh_draw = false;\n            }\n        } else if (layer_name.startsWith('building-base')) {\n            mesh_type = 'building-base';\n            layer_color = config.BUILDING_BASE_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 12;\n                z_index = -12;\n            }\n        } else if (layer_name.startsWith('base')) {\n            mesh_type = 'base';\n            layer_color = config.BASE_COLOR;\n        } else if (layer_name.startsWith('store')) {\n            mesh_type = 'store';\n            layer_color = config.STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = parseInt(config.STORE_HEIGHT);\n            }\n            if (layer_name.startsWith('store-underlay')) {\n                interactiveMesh = false;\n            }\n        } else if (layer_name.startsWith('big-store')) {\n            mesh_type = 'big-store';\n            layer_color = config.BIG_STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 16;\n            }\n        } else if (layer_name.startsWith('route-path')) {\n            mesh_type = 'route-path';\n            mesh_draw = false;\n            path.subPaths.forEach(subPath => {\n                if (subPath.curves.length == 0) {\n                    console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n                }\n\n                subPath.curves.forEach(curve => {\n                    //@ts-ignore\n                    const v1:Vector2 = curve.v1;\n                    //@ts-ignore\n                    const v2:Vector2 = curve.v2;\n\n                    const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n                    if (!exists1) {\n                        floors[floor_index].route_points?.push({\n                            name: node1_name,\n                            node: new Vector3(v1.x, v1.y, 1)\n                        });\n                        allNodesFloor[node1_name] = floor_index;\n                    }\n                    const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n                    if (!exists2) {\n                        floors[floor_index].route_points?.push({\n                            name: node2_name,\n                            node: new Vector3(v2.x, v2.y, 1)\n                        });\n                        allNodesFloor[node2_name] = floor_index;\n                    }\n                    pathFinderGraph.addNode(node1_name, { ...v1 });\n                    pathFinderGraph.addNode(node2_name, { ...v2 });\n\n                    // pathFinderGraph.addLink(node1_name, node2_name);\n                    pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n                    pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n                });\n            });\n        } else if (layer_name.startsWith('escalator-')) {\n            mesh_type = 'escalator';\n            mesh_visible = false;\n        } else if (layer_name.startsWith('kiosk-')) {\n            mesh_type = 'kiosk';\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('amenity-')) {\n            mesh_type = 'amenity';\n            mesh_transparent = true;\n            z_index = 1;\n        } else if (layer_name.startsWith('overlay')) {\n            mesh_type = 'overlay';\n        } else if (layer_name.startsWith('special-shape')) {\n            mesh_type = 'special-shape';\n        } else {\n            extrude = 1;\n        }\n    } else {\n        console.warn(consolePrefix + 'Layer name is undefined, path', path)\n    }\n\n\n    /*console.debug({\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    })*/\n    return {\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    }\n}","import createGraph from \"ngraph.graph\";\nimport {IRetailer, MapObj} from \"./mapitApiTypes\";\nimport type {Mesh} from \"three\";\nimport path from \"ngraph.path\";\n\nexport const meshByObjectId = new Map<string,Mesh>();\nexport const allMapObjects:string[] = [];\nexport const allIndexedMapObjects = {} as Record<string, MapObj>;\nexport const allIndexedRetailers = {} as Record<string, IRetailer>;\nexport const allNodesFloor = {} as Record<string, number>;\n\n//<{ x:number, y:number }, { weight: number }>\nexport const pathFinderGraph = createGraph();\nexport const ngraphPath = path;\n","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import {BackSide, Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry, Vector3} from \"three\";\nimport {getWallShape} from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\nimport {allMapObjects} from \"../../globals\";\nimport {IConfig, IExtMesh, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {hex_to_color} from \"../../helpers/misc\";\n\nimport {IRetailer, MapObj} from \"../../mapitApiTypes\";\n\n\nconst renderOrders = {\n    'route-path': 0,\n    'escalator': 0,\n    'underlay': 0,\n    'overlay': 1,\n    'building-base': 1,\n    'base': 2,\n    'store': 3,\n    'big-store': 4,\n    'kiosk': 5,\n    'wall': 6,\n    'outer-wall': 7,\n    'boundary': 8,\n    'amenity': 9,\n    'layer-image': 10,\n    'layer-text': 11,\n    'route-tube': 12,\n    'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n        return renderOrders[mesh_type];\n    }\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\n    return 0;\n}\n\nexport const getMaterial = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    layer_color: Color | string,\n    mesh_transparent: boolean,\n    allIndexedMapObjects: Record<string, MapObj>,\n) => {\n    const material_settings = {\n        color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n        side: DoubleSide,\n        transparent: false,\n        depthWrite: true,\n        depthTest: true,\n        opacity: 1,\n    }\n    if (config.STYLE == '2D' || mesh_type == 'base' || mesh_type == null) {\n        if (mesh_type != 'boundary') {\n            material_settings.depthWrite = false;\n            material_settings.depthTest = false;\n        }\n    }\n    if (mesh_type == 'overlay') {\n        material_settings.color = config.OVERLAY_COLOR;\n        material_settings.opacity = config.OVERLAY_OPACITY;\n    }\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE != 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent == 1) {\n        material_settings.opacity = 0;\n    }\n    var material = new MeshLambertMaterial(material_settings);\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        material.colorDefault = material.color;\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color != '') {\n            material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n            //@ts-ignore\n            material.colorDefault = material.color;\n        }\n        //@ts-ignore\n        material.active = false;\n    }\n    if (config.ROLE != 'PORTAL' && mesh_transparent) {\n        material.opacity = 0;\n        material.transparent = true;\n    }\n\n    material.transparent = material.opacity !== 1;\n\n    return material;\n}\n\nexport const getGeometry = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    extrude: number,\n    line_thickness: number,\n    path: any,\n) => {\n    const consolePrefix = 'MaterialAndGeometry';\n\n    let shapes = path.toShapes(true);\n\n    // shapes.forEach((shape, index) => {\n    let extrude_meshes;\n    if (config.STYLE == '2D') {\n        extrude_meshes = ['building-base'];\n    } else {\n        extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n    }\n\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n    var geometry;\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\n        geometry = new ExtrudeGeometry(shapes, {\n            depth: -extrude,\n            bevelEnabled: false,\n        });\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n        //@ts-ignore\n        let wall_geometries = [];\n        //@ts-ignore\n        path.subPaths.forEach(subPath => {\n            //@ts-ignore\n            subPath.curves.forEach(curve => {\n                if (curve.type == 'LineCurve') {\n                    let shape_extend = 0;\n                    if (mesh_type == 'boundary') {\n                        shape_extend = 1;\n                    } else if (mesh_type == 'wall') {\n                        // shape_extend = 1 / 3;\n                    }\n                    let shape1 = getWallShape(curve, line_thickness, shape_extend);\n                    let wall_geometry = new ExtrudeGeometry(shape1, {\n                        depth: -extrude,\n                        bevelEnabled: false,\n                    });\n                    wall_geometries.push(wall_geometry);\n                } else {\n                    console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n                }\n            });\n        });\n\n        if (wall_geometries.length == 1) {\n            //@ts-ignore\n            geometry = wall_geometries[0];\n        } else if (wall_geometries.length > 1) {\n            //@ts-ignore\n            geometry = mergeGeometries(wall_geometries);\n        } else {\n            console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n        }\n    } else {\n        geometry = new ShapeGeometry(shapes);\n        try {\n            //@ts-ignore\n            if (geometry.attributes.position.count == 0) {\n                console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n            }\n        } catch (e: any) {\n            console.error(e.message);\n        }\n    }\n\n    return geometry;\n}\n\nexport const getMaterialAndGeometry = (config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n    \n    const material = getMaterial(\n        config,\n        mesh_type,\n        layer_name,\n        layer_color,\n        mesh_transparent,\n        allIndexedMapObjects\n    );\n\n    const geometry = getGeometry(\n        config,\n        mesh_type,\n        layer_name,\n        extrude,\n        line_thickness,\n        path\n    );\n\n    const mesh = new Mesh(geometry, material) as IExtMesh;\n    mesh.object_id = layer_name;\n    mesh.mesh_type = mesh_type;\n    mesh.floor_index = floor_index;\n    mesh.visible = mesh_visible;\n    mesh.position.z = z_index;\n    let storeName = '';\n    if (['retail_name', 'retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n        if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type == 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n            storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].custom_text;\n            if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n                storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n            }\n        }\n    }\n    mesh.userData.storeName = storeName;\n    if (config.STYLE == '2D') {\n        mesh.renderOrder = getRenderOrder(mesh_type);\n        if (layer_name && layer_name.includes('underlay')) {\n            mesh.renderOrder = getRenderOrder('underlay');\n        }\n    }\n\n    floors[floor_index].objsGroup.add(mesh);\n\n    if (mesh_type == 'escalator') {\n        floors[floor_index].escalatorsNodes[layer_name] = null;\n        floors[floor_index].escalatorsObjs.push(mesh);\n        mesh.escalator_id = floor_index + '-' + layer_name;\n    }\n\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        mesh.route_node_id = null;\n\n        // add floor_index to the kiosks\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'kiosk') {\n            var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n            /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n                ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n            }*/\n        }\n\n        if (config.ROLE === 'PORTAL') {\n            allMapObjects.push(layer_name);\n        }\n        if (\n            (config.ROLE !== 'PORTAL' && mesh_type == 'kiosk') ||\n            (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type == 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n            (config.ROLE !== 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'amenity' && allIndexedMapObjects[layer_name].value != '') ||\n            (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n            (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type?? ''))\n        ) {\n            // if (interactiveMesh) {\n            floors[floor_index].interactiveObjs.push(mesh);\n            // }\n        } else if (\n            (config.ROLE === 'PORTAL')\n        ) {\n            floors[floor_index].interactiveObjs.push(mesh);\n        }\n    }\n\n    // if (['store', 'big-store'].includes(mesh_type as string)) {\n    //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n    // }\n\n    return {\n        mesh,\n        geometry,\n        material,\n        object_id: layer_name,\n        mesh_type,\n        floor_index,\n        visible: mesh_visible,\n        renderOrder: mesh.renderOrder,\n    }\n    // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n    BufferGeometry,\n    CanvasTexture,\n    Color,\n    CurvePath,\n    DoubleSide,\n    LineCurve3,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    Raycaster,\n    Scene,\n    TubeGeometry,\n    Vector3,\n} from \"three\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport {PathFinder} from \"ngraph.path\";\nimport {IRetailer, MapObj} from \"../mapitApiTypes\";\nimport {IExtMesh, IFloorData} from \"../types\";\nimport {Graph, Node} from \"ngraph.graph\";\n\nconst consolePrefix = 'ROUTE: ';\nlet route_exists = null;\nlet activeMapObjectName: string | null = null;\n\nfunction makeObjectActive(object_id: string | null = null, accentColor: string | Color, scene: Scene) {\n    clearActiveEffect(scene);\n    if (object_id != null) activeMapObjectName = object_id;\n    let obj = scene.getObjectByProperty('object_id', activeMapObjectName as string) as IExtMesh;\n    // obj.material.color = config.ACCENT_COLOR;\n    //@ts-ignore\n    obj.material.color = new Color(`#${accentColor}`);\n    //@ts-ignore\n    obj.material.active = true;\n    return obj;\n}\n\nfunction clearActiveEffect(scene: Scene) {\n    if (activeMapObjectName) {\n        let obj = scene.getObjectByProperty('object_id', activeMapObjectName) as IExtMesh;\n        //@ts-ignore\n        obj.material.color = { ...obj.material.colorDefault };\n        //@ts-ignore\n        obj.material.active = false;\n        activeMapObjectName = null;\n    }\n}\n\nexport function delete_route_path(floors: IFloorData[]) {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n        const floor = floors[floor_index];\n        floor.route_active = false;\n\n        if (floor.route_tube != null) {\n            floor.route_tube.geometry.dispose();\n            //@ts-ignore\n            floor.route_tube.material.dispose();\n            floor.objsGroup?.remove(floor.route_tube);\n        }\n\n        floor.route_tube = undefined;\n        floor.route_texture = null;\n        floor.escalatorMeshes = [];\n    }\n}\n\nexport function create_route(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n    if (from_mesh_object_id === to_mesh_object_id) {\n        return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[] , floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    // console.log({\n    //     from_mesh_object_id,\n    //     to_mesh_object_id,\n    //     from_obj,\n    //     to_obj,\n    //     from_node_name,\n    //     to_node_name,\n    // })\n\n    // from_node_name = 'node-147';\n    // to_node_name = 'node-221';\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n        return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n        const routeNode = routeNodes[index];\n        if (floor_routes[allNodesFloor[routeNode.id]]) {\n            floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n        } else {\n            floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n        }\n\n        if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n            // don't consider these middle escalators nodes\n        } else {\n            routeNodesEsclators.push(routeNode);\n        }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n        const routeNode = routeNodesEsclators[index];\n        if (\n            allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n            && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n        ) {\n            const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n            const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n            let goToFloor = null;\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index + 1].id],\n                    direction: 'Next',\n                };\n            }\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index - 1].id],\n                    direction: 'Previous',\n                };\n            }\n\n            if (goToFloor && escalator_mesh) {\n                escalator_mesh.goToFloor = goToFloor;\n                //@ts-ignore\n                floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n            }\n        }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n        const floor_route = floor_routes[floor_index];\n        if (floor_route && floor_route.length > 1) {\n            const routePath = create_route_path(floor_route, floor_index, floors, style);\n            routePaths[floor_index] = routePath;\n\n            floors[floor_index].route_active = true;\n            floors[floor_index].routeMeshes = [ routePath ];\n            if (floor_index === from_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(from_obj);\n            }\n            if (floor_index === to_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(to_obj);\n            }\n        }\n    }\n\n    // setTimeout(function () {\n    //     //TODO openFloorMap functionality\n    //     // openFloorMap(from_route_floor_index);\n    // });\n\n    return routePaths;\n}\n\nfunction create_route_path(\n    routeNodes: Node<any>[],\n    floor_index: number,\n    floors: IFloorData[],\n    style = '2D',// config.STYLE\n) {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n        let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n        let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n        route_path.add(new LineCurve3(from_node, to_node));\n        distance += from_node.distanceTo(to_node);\n    };\n    var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    //@ts-ignore\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n        map: get_route_texture(distance, floor_index, floors),\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style === '2D') {\n        route_tube.position.z = -10;\n        route_tube.scale.z = 0.1;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n    return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n        let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n        distance += link?.data.weight || 0;\n    };\n    return distance;\n}\n\nfunction draw_route_tube(route_tube: IExtMesh, total_faces: number) {\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, total_faces);\n    /*createjs.Ticker.framerate = 60;\n    createjs.Tween.get({ x: 0 },\n        {\n            onChange: function (event) {\n                route_tube.geometry.setDrawRange(0, event.target.target.x);\n            },\n            onComplete: function () {\n                animate_route_path(floors);\n            }\n        })\n        .to({ x: total_faces }, 1000, createjs.Ease.cubicInOut);\n    */\n}\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n        ctx.canvas.width = distance;\n        ctx.canvas.height = 80;\n\n        ctx.fillStyle = \"#4ea5ff\";\n        ctx.fillRect(0, 0, distance, 80);\n\n        let grd_width = 0.1 * distance;\n        const min_grd_width = 60;\n        const max_grd_width = 120;\n        if (grd_width < min_grd_width) grd_width = min_grd_width;\n        if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n        let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n        grd.addColorStop(0, \"#4ea5ff\");\n        grd.addColorStop(0.4, \"white\");\n        grd.addColorStop(0.6, \"white\");\n        grd.addColorStop(1, \"#4ea5ff\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n        floors[floor_index].route_texture = route_texture;\n\n        return route_texture;\n    } else {\n        return undefined;\n    }\n}\n\n//TODO\nfunction animate_route_path(floors: IFloorData[]) {\n    /*floors.forEach(floor => {\n        if (floor.route_texture != null) {\n            createjs.Ticker.framerate = 60;\n            createjs.Tween.get(floor.route_texture.offset, { loop: true })\n                .to({ x: -1 }, 2000, createjs.Ease.cubicInOut)\n        }\n    });*/\n}\n\nexport function assign_route_nodes_to_stores(\n    floor_index: number,\n     floors: IFloorData[],\n     allIndexedMapObjects: Record<string, MapObj>,\n     allIndexedRetailers: Record<string, IRetailer>,\n     allNodesFloor: Record<string, number>,\n     escalator_nodes: string[],\n     find_store_node_raycaster: Raycaster,\n     role: string, //config.ROLE\n     ) {\n    const result = new Map();\n    const currentFloor = floors[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n        currentFloor.route_points.forEach(point => {\n            let origin_point = new Vector3(point.node.x, point.node.y, -10);\n            let target_direction = new Vector3(0, 0, 1);\n            find_store_node_raycaster.set(origin_point, target_direction);\n            //@ts-ignore\n            var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n            if (storeIntersects.length) {\n                //@ts-ignore\n                storeIntersects[0].object.route_node_id = point.name;\n                //@ts-ignore\n                result.set(storeIntersects[0].object.object_id, point.name);\n                if (false && role != 'PORTAL') {\n                    //@ts-ignore\n                    var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n                    if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n                        var retailer_index = allIndexedRetailers[retailer_id].index;\n                        // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n                    }\n                }\n            }\n\n            var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n            if (escalatorIntersects.length) {\n                const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n                let escalator_obj_id = obj.object_id;\n                const escalatorNodes = floors[floor_index].escalatorsNodes;\n                if (escalatorNodes) {\n                    escalatorNodes[escalator_obj_id as string] = point.name;\n                    allNodesFloor[point.name] = floor_index;\n                    escalator_nodes.push(point.name);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n    // console.log('linkFloorEscalators', floors)\n    if (floors.length > 1) {\n        for(let i=0; i < (floors.length-1); i++) {\n            // console.log('floors[i]',i, floors[i])\n            const floor_escalators = floors[i].escalatorsNodes;\n            // console.log('floor_escalators', floor_escalators);\n            Object.keys(floor_escalators as object).forEach(escalator => {\n                if (floors[i].escalatorsNodes?.[escalator] != null && floors[i+1].escalatorsNodes?.[escalator] != null) {\n                    // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n                    const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n                    const nodeIdTo = floors[i+1].escalatorsNodes?.[escalator];\n                    if (nodeIdFrom && nodeIdTo) {\n                        pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                        pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n                    }\n                } else {\n                    // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n                }\n            })\n        }\n    }\n}\n\nexport function make_amenity_route(kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string ): Mesh[] {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    // if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj? kiosk_obj.route_node_id : '';\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for(let key in allIndexedMapObjects) {\n        const mapObject = allIndexedMapObjects[key];\n        if (\n            mapObject.layer_type === 'amenity'\n            && mapObject.obj_type === 'special'\n            && mapObject.value === amenity_type\n        ) {\n            map_objs.push(key);\n        }\n    }\n    map_objs.forEach((amenity_obj_name: string, index: number) => {\n        let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n            var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n            if (route_distance && route_distance < shortest_distance) {\n                shortest_distance = route_distance;\n                to_obj_name = amenity_obj_name;\n            }\n        } catch(e: any) {\n            console.warn(`Amenity Path: ${e.message}`);\n        }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n        to_obj_name = amenity_node_name;\n    }\n    });\n    return create_route(kiosk_obj_name, to_obj_name?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import {getMeshParams} from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport {IConfig, IFloorData, IMeshValues, TMapMode, TRoles} from \"src/types\";\nimport {allIndexedMapObjects, allIndexedRetailers, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport {getMaterialAndGeometry} from \"./getMaterialAndGeometry\";\nimport {Raycaster} from \"three\";\nimport {assign_route_nodes_to_stores, linkFloorEscalators} from \"src/helpers/route.helpers\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(floors:IFloorData[], config:IConfig, results:SVGResult[], role?: TRoles) {\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n    const escalator_nodes: string[] = [];\n    results.forEach((result, floor_index) => {\n        if (result.paths && result.paths.length) {\n            const pathIds = [];\n            for (let i = 0; i < result.paths.length; i++) {\n                pathIds.push(result.paths[i]?.userData?.node.id);\n            }\n            const paths = result.paths;\n            for (let i = 0; i < paths.length; i++) {\n                const {\n                    mesh_type,\n                    layer_color,\n                    extrude,\n                    z_index,\n                    mesh_visible,\n                    mesh_draw,\n                    mesh_transparent,\n                    line_thickness,\n                    interactiveMesh,\n                    path,\n                    layer_name,\n                } = getMeshParams(\n                    paths[i],\n                    paths,\n                    floors,\n                    floor_index,\n                    config,\n                    ++node_count,\n                    //@ts-ignore\n                    allNodesFloor,\n                    pathFinderGraph\n                );\n\n                if (mesh_draw) {\n                    const meshParams = getMaterialAndGeometry(\n                        config,\n                        mesh_type,\n                        layer_name,\n                        layer_color,\n                        mesh_transparent,\n                        mesh_visible,\n                        z_index,\n                        extrude,\n                        line_thickness,\n                        floors,\n                        floor_index,\n                        allIndexedMapObjects,\n                        allIndexedRetailers,\n                        path,\n                        role\n                    );\n\n                    if (layer_name.startsWith('kiosk-')) {\n                        if (role === 'PORTAL') {\n                            // meshParams.mesh.visible = false;\n                            //@ts-ignore\n                            // meshParams.mesh.material.visible = false;\n                        }\n                    }\n\n                    if (!GeometriesAndMaterials[floor_index]) {\n                        GeometriesAndMaterials[floor_index] = [];\n                    }\n\n                    GeometriesAndMaterials[floor_index].push(meshParams);\n                }\n            }\n            const findStoreNodeRaycaster = new Raycaster();\n            const routeNodeIds = assign_route_nodes_to_stores(\n                floor_index,\n                floors,\n                allIndexedMapObjects,\n                allIndexedRetailers,\n                allNodesFloor,\n                escalator_nodes,\n                findStoreNodeRaycaster,\n                config.ROLE\n            );\n            \n            if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n                for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n                    if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n                        GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n                    }\n                }\n            }\n\n            linkFloorEscalators(floors, pathFinderGraph);\n\n        }\n    })\n\n    return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes};\n}","import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3, Color, SphereGeometry } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport {IExtMesh} from \"../types\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {hex_to_color} from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n        addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n        //@ts-ignore\n        add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n}\n\nfunction deleteMeshByObjectID(object_id: string, scene: Scene, floors: Record<any, any>) {\n    if (object_id) {\n        let mesh = scene.getObjectByProperty('object_id', object_id);\n        if (mesh) {\n            //@ts-ignore\n            mesh.geometry.dispose();\n            //@ts-ignore\n            mesh.material.dispose();\n            //@ts-ignore\n            floors[mesh.floor_index].objsGroup.remove(mesh);\n        }\n    }\n}\n\nfunction getCenterPoint(mesh: Mesh) {\n    var mesh_center_point = new Vector3();\n    getMeshGroupBoundingBox(mesh).getCenter(mesh_center_point);\n    return mesh_center_point;\n}\n\nfunction getMeshSize(mesh: Mesh) {\n    var point = new Vector3();\n    //@ts-ignore\n    getMeshGroupBoundingBox(mesh).getSize(point);\n    return point;\n}\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n    if (!Array.isArray(mesh)) {\n        mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        //@ts-ignore\n        box.union(obj.geometry.boundingBox);\n        return box;\n    }, new Box3());\n    return box;\n}\n\nfunction layer_text_logo_position(mesh: Mesh, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    const object_id = (mesh as IExtMesh).object_id;\n    if (!object_id) return;\n    return layer_text_logo_position_by_id(object_id, newMeshPos, mesh_size, newMesh, allIndexedMapObjects);\n}\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    let map_obj = allIndexedMapObjects[object_id];\n\n    if (!map_obj) {\n        map_obj = {\n            offsetX: \"0\",\n            offsetY: \"0\",\n            rotate: \"0\",\n        }\n    }\n\n    let offsetX = parseInt(map_obj.offsetX);\n    let offsetY = parseInt(map_obj.offsetY);\n\n    newMeshPos.z = -mesh_size.z;\n\n    //@ts-ignore\n    newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n    //@ts-ignore\n    newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += offsetX;\n    newMeshPos.y += offsetY;\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n        const img = new Image();\n        img.crossOrigin = 'Anonymous';\n        if (map_obj.obj_type == 'retailer') {\n            if (retailer) {\n                img.src = retailer.logo;\n            } else {\n                console.error('retailer not found');\n                return null;\n            }\n        } else if (map_obj.obj_type == 'special') {\n    \n            let svg_image_name = map_obj.value;\n            if (map_obj.layer_type == 'kiosk') svg_image_name = 'kiosk';\n            if (svg_image_name) {\n                let svg_color = '222222';\n                if (map_obj.text_color != null) {\n                    svg_color = map_obj.text_color;\n                }\n    \n                const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n                if (!svg_block) {\n                    console.error('svg_block not found', svg_image_name);\n                    return null;\n                }\n                const svg_element = svg_block.querySelector(\"svg\");\n                if (!svg_element) {\n                    console.error('svg_element not found', svg_image_name);\n                    return null;\n                }\n    \n                const svgColoredParts = svg_element.querySelectorAll('[fill]');\n                svgColoredParts.forEach((svgColoredPart) => {\n                    svgColoredPart.setAttribute('fill', '#' + svg_color);\n                })\n    \n                const svgData = (new XMLSerializer()).serializeToString(svg_element);\n                img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n            }\n    \n        } else {\n            img.src = map_obj.custom_image;\n        }\n\n        return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    img.onload = function () {\n        const c = document.createElement(\"canvas\");\n        const ctx = c.getContext(\"2d\");\n\n        c.width = img.width;\n        c.height = img.height;\n\n        ctx?.drawImage(img, 0, 0);\n\n        let texture = new CanvasTexture(c);\n        texture.colorSpace = 'srgb'\n\n        const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n        const material = new MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            side: DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n        });\n        \n        afterOnload(geometry, material);\n    };\n}\n\nfunction getImageLogo(allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry,object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: {storeLogo: Object3D}) => void): void {\n    const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n    if (img === null) return;\n\n    processImage(img, map_obj, (geometry, material) => {\n        const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n        // @ts-ignore\n        const floor_index = mesh.floor_index;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n        logoMesh.object_id = new_object_id;\n        logoMesh.floor_index = floor_index;\n        logoMesh.renderOrder = getRenderOrder('layer-image');\n        floors[floor_index]?.objsGroup.add(logoMesh);\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        logoMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        //@ts-ignore\n        BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        \n        handleAsync({storeLogo: BoundingSphereMesh});\n        */\n        handleAsync({storeLogo: logoMesh});\n    })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id:string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): {textMesh: IExtMesh} | null | false {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n        return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    const map_obj: MapObj = allIndexedMapObjects[object_id]? allIndexedMapObjects[object_id] : {layer_type: 'custom_text', 'custom_text': '', 'size': 8};\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            text = '';\n        }\n\n        let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n        if (map_obj.text_color) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n        textMesh.userData.font = myFont;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        textMesh.object_id = new_object_id;\n        textMesh.floor_index = floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        if (map_obj.layer_type === 'retail_name') {\n            textMesh.userData.retail_name = text;\n        }\n\n        floors[floor_index].objsGroup.add(textMesh);\n\n        //scene.add(textMesh);\n        //console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        */\n        result = { textMesh };\n    }\n\n    else if (\n       map_obj.layer_type == 'retail_logo' ||\n       map_obj.layer_type == 'custom_image' ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'kiosk' && map_obj.kiosk_id != null) ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'amenity' && map_obj.value != '')\n   ) {\n        getImageLogo(allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n   }\n   return result;\n}","import {\n    Group,\n    Scene,\n    Object3D,\n    Mesh,\n    BufferGeometry,\n    Color,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport {loadFloors} from \"./loadFloors\";\nimport type {IConfig, IExtMesh, IFloorData, IMeshParams, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {defaultVars, mapit2DefaultVars} from \"../../defaults\";\nimport {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport {drawTextLogoStoreOnMap, get_store_name_logo_geo} from \"src/helpers/draw.logo.helpers\";\nimport { FontLoader, Font } from \"three-stdlib\";\nimport { IJsonConfig, IMeshParamsTmp} from \"../../types\";\nimport {hex_to_color} from \"src/helpers/misc\";\nimport {Kiosk, Floor, MapIt2Response, MapObj} from \"../../mapitApiTypes\";\nimport { EventedType } from \"ngraph.events\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars}\n\nconst defaultMapObjValues = {\n\tid: null,\n\tcenter_id: config.CENTER_ID,\n\tretailer_id: null,\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: 8,\n\trotate: 0,\n\toffsetX: 0,\n\toffsetY: 0,\n} as Record<string, string | number | null| undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\nconst extraMapObjects = []\nlet activeMapObjectName = null;\nconst floorsData:IFloorData[] = [];\nconst floors = [] as Floor[];\nlet floors_loaded = 0;\nlet MEDIA_STORAGE_URI: string = '';\n\nfunction select<T>(...values: T[]) {\n    return values.find(value => value !== '' && value != null) || values.at(-1);\n}\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n\tfor (let key in obj) {\n\t\tdelete obj[key];\n\t}\n}\n\nfunction makeIndexedMapObjects(map_objs: MapObj[]) {\n\tclearObject(allIndexedMapObjects);\n\n    allNonIndexedMapObjects = map_objs;\n\n    for (let i = 0; i < map_objs.length; i++) {\n        const obj = map_objs[i];\n        allIndexedMapObjects[obj.map_obj_name] = obj;\n        for (let key in defaultMapObjValues) {\n            const value = defaultMapObjValues[key];\n            //@ts-ignore\n            if (value != null && obj[key] == null) {\n                //@ts-ignore\n                allIndexedMapObjects[obj.map_obj_name][key] = value;\n            }\n        }\n    }\n}\n\nconst init = (config: IJsonConfig, floors:IFloorData[], response: MapIt2Response) => {\n    const KIOSKS:Record<string, Kiosk> = {};\n\n    response.kiosks.forEach((kiosk) => {\n        const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n        if (mapObj) {\n            kiosk.map_obj_name = mapObj.map_obj_name;\n        }\n        KIOSKS[kiosk.id] = kiosk;\n    });\n\n\n    for (let index in response.retailers) {\n        const retailer = response.retailers[index];\n        allIndexedRetailers[retailer.id] = retailer;\n        allIndexedRetailers[retailer.id].index = index;\n    }\n\n    // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n    // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n    makeIndexedMapObjects(response.map_objs);\n\n    floors.length = 0;\n    response.floors.forEach((value: IFloorData, index: number) => {\n        const objsGroup = new Group();\n        objsGroup.scale.y *= -1;\n        objsGroup.lookAt(0, 1, 0);\n\n        floors.push({\n            id: value.id,\n            // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n            svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n            title: value.title,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n        });\n    });\n    const DEFAULT_CAMERA_FOV = 75;\n    const WP_SITE_CAMERA_FOV = 30;\n    const DEFAULT_CAMERA_FAR = 10000;\n    config.CAMERA.far = DEFAULT_CAMERA_FAR;\n    config.CAMERA.fov = config.ROLE === 'WP_SITE'? WP_SITE_CAMERA_FOV : DEFAULT_CAMERA_FOV;\n    const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n    config.CAMERA.maxDistance *= fovCorrection;\n    config.CAMERA.far *= fovCorrection;\n\n    const processedConfig: IConfig = {\n        ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n        BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n        BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n        BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n        BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n        BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n        CAMERA: config.CAMERA,\n        CAMERA_CONTROLS_STATES: response.camera_controls_states[config.DEVICE],\n        CENTER_ID: config.CENTER_ID,\n        CONTROLS: null,\n        DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n        DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n        DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n        DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n        DEVICE: config.DEVICE,\n        KIOSK: config.KIOSK? config.KIOSK : '',\n        KIOSKS: KIOSKS,\n        MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n        ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n        OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n        OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n        ROLE: config.ROLE,\n        STATS: config.STATS === 'true' || config.STATS === '1',\n        STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n        STORE_HEIGHT: response.settings.STORE_HEIGHT? response.settings.STORE_HEIGHT : config.STORE_HEIGHT? config.STORE_HEIGHT : '8',\n        STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n        STYLE: config.STYLE? config.STYLE : response.settings.STYLE? response.settings.STYLE : config.STYLE,\n        WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n        WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n        FLOORS: response.floors,\n        AMENITIES: response.amenities,\n        RETAILERS: response.retailers,\n        AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n        AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n        KIOSK_SIZE: response.settings.KIOSK_SIZE? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    };\n\n    // AMENITIES_NAV_BG_COLOR: string;\n    // AMENITIES_NAV_ICON_COLOR: string;\n\n    return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response|null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n    const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n    const [textParams, setTextParams] = useState<Array<{textMesh:IExtMesh}[]>>([]);\n    const [storeLogos, setStoreLogos] = useState<{storeLogo: Mesh}[][]>([]);\n    const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n    const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n    const [urls, setUrls] = useState<string[]>([]);\n    const [ processedConfig, setProcessedConfig ] = useState<IConfig|null>(null);\n    let result = useLoader(SVGLoader, urls);\n\n    MEDIA_STORAGE_URI = useMemo(() => {\n        const r = /\\/$/;\n        if (mediaStorageURI) {\n            return mediaStorageURI?.replace(r, '');\n        }\n\n        return '';\n\n    }, [mediaStorageURI])\n\n    const consolePrefix = 'MAPIT2';\n    // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n    const myFont = useFont(fontData as unknown as FontData);\n\n    // const getWallShape = (...params: any): Shape | Shape[] => {\n    //     return []\n    // }\n\n\n    const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: {storeLogo: Mesh}) => {\n        setStoreLogos((prevLogos) => {\n            // console.debug({floorIndex});\n            if (prevLogos[floorIndex]) {\n                prevLogos[floorIndex].push({...meshLogo});\n            } else {\n                prevLogos[floorIndex] = [{...meshLogo}];\n            }\n            // console.debug({prevLogos});\n            return [...prevLogos];\n        });\n    }), [])\n\n\n    useEffect(() => {\n        if (!data) return;\n\n\n        // console.log('useMeshFloors[data]', {data})\n\n        const processedConfig = init(jsonConfig ? {...config, ...jsonConfig} : config, floorsData, data as MapIt2Response);\n        const values: string[] = [];\n        processedConfig.FLOORS.forEach((value) => {\n            // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n            //@ts-ignore\n            values.push(`${value.svg}`);\n        });\n\n        setProcessedConfig(processedConfig);\n        setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n    return () => {\n        if (meshParams) {\n            meshParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.mesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (textParams) {\n            textParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.textMesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (storeLogos) {\n            storeLogos.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.storeLogo.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        setMeshParams([]);\n        setTextParams([]);\n        setStoreLogos([]);\n    }\n    }, [data]);\n\n    useEffect(() => {\n        if (!processedConfig || !urls.length || !myFont || !result) return;\n\n        const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(floorsData, processedConfig, result, role);\n        const TextsAndLogos:Array<{textMesh:IExtMesh}[]> = [];\n        allNonIndexedMapObjects.forEach((params) => {\n            let values: IMeshValues | undefined;\n            for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n                //@ts-ignore\n                values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n                if (values !== undefined) {\n                    break;\n                } \n            }\n            if (!values) return null;\n            const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n            if (textParams) {\n                if (!TextsAndLogos[values.floor_index]) {\n                    TextsAndLogos[values.floor_index] = [];\n                }\n                TextsAndLogos[values.floor_index].push(textParams);\n            }\n        })\n        const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n            return (acc + item.length);\n        }, 0);\n        const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n        if (countNonIndexedObjs > 0) {\n            const mapObjNames = new Set<string>();\n            allNonIndexedMapObjects.forEach((item) => {\n                mapObjNames.add(item.map_obj_name);\n            });\n            GeometriesAndMaterials.forEach((items) => {\n                items.forEach(item => {\n                    if (!mapObjNames.has(item.object_id)) {\n                        const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n                        if (textParams) {\n                            \n                            if (!TextsAndLogos[item.floor_index]) {\n                                TextsAndLogos[item.floor_index] = [];\n                            }\n                            TextsAndLogos[item.floor_index].push(textParams);\n                        }\n                    };\n                })\n            });\n        }\n        setMeshParams(GeometriesAndMaterials);\n        setTextParams(TextsAndLogos);\n        setPathFinderGraph(graph);\n        setEscalatorNodes([...escalator_nodes]);\n\n    }, [processedConfig, urls, result, myFont]);\n\n    return useMemo(() => {\n        return {\n            config: processedConfig,\n            meshParams,\n            textParams,\n            storeLogos,\n            floors: floorsData,\n            pathFinderGraph,\n            escalator_nodes: escalatorNodes,\n        }\n    }, [ processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes ])\n}\n\nexport default useMeshFloors","import {IJsonConfig} from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n    ROLE: 'WEBSITE',\n    DEVICE: 'display_app',\n    CENTER_ID: '',\n    KIOSK: '',\n    STYLE: '3D',\n    DEFAULT_SELECTED_STORE: '',\n    DEBUG: '1',\n\n    MAP_BACKGROUND_COLOR: \"FFFFFF\",\n    ACCENT_COLOR: \"4EA5FF\",\n    STORE_DEFAULT_COLOR: \"E2E2E2\",\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n    WALL_THICKNESS: '0.6',\n    WALL_COLOR: \"888888\",\n    BOUNDARY_THICKNESS: '0.8',\n    BOUNDARY_COLOR: \"888888\",\n    BASE_COLOR: \"25292B\",\n    STORE_TEXT_COLOR: \"222222\",\n    OVERLAY_COLOR: \"FFFFFF\",\n    OVERLAY_OPACITY: '0.7',\n    // AMENITIES_NAV_BG_COLOR: \"000000\",\n    // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    }\n}\n\nexport const defaultVars: IJsonConfig = {\n    MAP_BACKGROUND_COLOR: '',\n    ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n    DEVICE: 'display_app',\n    KIOSK: '',\n    FLOORS: [],\n    KIOSKS: {},\n    CENTER_ID: null,\n    STATS: 'false',\n    STYLE: '3D', // 2D, 3D\n    DEBUG: '0',\n    ACCENT_COLOR: '4EA5FF',\n    STORE_DEFAULT_COLOR: 'E2E2E2',\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n    WALL_THICKNESS: '0.6',\n    BOUNDARY_THICKNESS: '0.8',\n    WALL_COLOR: '888888',\n    BOUNDARY_COLOR: '888888',\n    BASE_COLOR: '25292B',\n    BUILDING_BASE_COLOR: 'DADADA',\n    STORE_TEXT_COLOR: '222222',\n    OVERLAY_COLOR: 'FFFFFF',\n    OVERLAY_OPACITY: '0.7',\n    CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n    ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n    DEFAULT_CAMERA_POSITION: null, // custom default camera position\n    DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n    DEFAULT_SELECTED_STORE: null,\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    },\n    KIOSK_SIZE: '15',\n};","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import {IMeshParams, TRoles} from \"../../types\";\nimport {ThreeEvent} from \"@react-three/fiber\";\nimport React, {MouseEventHandler} from \"react\";\nimport {Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB, BoxHelper} from \"three\";\nimport {RouteTube} from \"./RouteTube\";\nimport {Html} from \"@react-three/drei\";\nimport styles from '../../MapBox.module.css';\n\ninterface IMapProps {\n    floorIndex: number,\n    meshFloors: IMeshParams;\n    currKioskObj: Mesh | null;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    routeTube?: Mesh;\n    visible: boolean,\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>;\n}\n\nconst getDarkerColor = (color: RGB) => {\n    if (color) {\n        var newColor = { ...color }\n        newColor.r = color.r * 0.92;\n        newColor.g = color.g * 0.92;\n        newColor.b = color.b * 0.92;\n        return newColor;\n    }\n    return null;\n}\n\nexport const Map = (params: IMapProps) => {\n    const {meshFloors, routeTube, floorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor} = params;\n\n    const { config, meshParams, textParams, storeLogos} = meshFloors;\n    const floor = meshFloors.floors[floorIndex];\n\n    const onPointerMove = params.onPointerMove;\n    const onPointerOver = params.onPointerEnter;\n    const onPointerOut = params.onPointerLeave;\n    const onClick = params.onClick;\n\n    const floorMeshParams = meshParams[floorIndex];\n    const floorTextParams = textParams[floorIndex];\n    const floorStoreLogos = storeLogos[floorIndex];\n    const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n    // console.log('Map', floorIndex, { meshParams, floorIndex, floorMeshParams, floorTextParams, floorStoreLogos, routeTubes})\n    return (\n        <group visible={visible}>\n            {floorMeshParams?.map((params) => {\n                if (!params.mesh) return null;\n\n                const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n                const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n                const active = activeObjectId && params.mesh.object_id === activeObjectId;\n                if (interactive) {\n                    // TODO: move those colorDefault, active, etc to userData of mesh or material\n                    if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n                        // @ts-ignore\n                        const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n                        //console.log('Map', {baseColor, active, hovered})\n                        params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n                    } else {\n                        // @ts-ignore\n                        params.mesh.material.color = params.mesh.material.colorDefault;\n                    }\n                }\n\n                return <group key={params.mesh.uuid} {...(interactive? {onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n                    <primitive object={params.mesh}></primitive>\n                </group>\n            })}\n            {floorTextParams?.map((params) => {\n                if (!params.textMesh) return null;\n                return <primitive key={params.textMesh.uuid} object={params.textMesh}>\n                </primitive>\n            })}\n            {floorStoreLogos?.map((params) => {\n                if (!params.storeLogo) return null;\n\n                return <primitive key={params.storeLogo.uuid} object={params.storeLogo}>\n                    {visible && params.storeLogo.userData.htmlContent? <Html>{params.storeLogo.userData.htmlContent}</Html> : null}\n                </primitive>\n            })}\n            {escalatorMeshes?.map((params) => {\n                //@ts-ignore\n                return <primitive key={`escalator-${params.object_id}`} object={params}>\n                    <Html visible={false} position={params.geometry.boundingSphere?.center}>\n                        <div onClick={handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n                            <div className={styles.element} id={params.object_id as string}>\n                                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\n                            </div>\n                        </div>\n                    </Html>\n                </primitive>\n            })}\n            <RouteTube mesh={routeTube} />\n        </group>\n    )\n}","import type {Mesh} from \"three\";\nimport {Box3, Vector3} from \"three\";\n\nexport function get_camera_focus_object(objs:Mesh[], fov:number, aspectRatio: number, style: string) {\n    // config.STYLE\n    // config.CAMERA.fov\n\n    if (!Array.isArray(objs)) {\n        objs = [objs];\n    }\n    if (!objs.length) {\n        console.warn('get_camera_focus_object: no objects passed');\n        return { position: new Vector3(), target: new Vector3() };\n    }\n\n    const objsBoundingBox = objs.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        if (obj.geometry.boundingBox) {\n            box.union(obj.geometry.boundingBox);\n        }\n        return box;\n    }, new Box3());\n\n    const obj_size = new Vector3();\n    objsBoundingBox.getSize(obj_size);\n\n    const center = new Vector3();\n    objsBoundingBox.getCenter(center);\n\n    objs[0].localToWorld(center);\n\n    // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n    // var padding = max_length * 0.2;\n    // if (padding > 50) padding = 50;\n    // max_length += padding;\n    // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n    let tanFOV = Math.tan(Math.PI * fov / 360);\n    let padding = 1.1;\n    let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n    let new_height = (obj_size.y * padding) / 2 / tanFOV;\n    let new_y = Math.max(new_width, new_height);\n    let new_z = getCameraTiltPosition(new_y, style);\n\n    const target = new Vector3(center.x, 0, center.z);\n    const position = new Vector3(center.x, new_y, center.z + new_z);\n\n    // createjs.Ticker.framerate = 60;\n    // createjs.Tween.get(config.CONTROLS.target)\n    //     .to({ x: center.x, z: center.z }, 400);\n    // createjs.Tween.get(config.CAMERA.position)\n    //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n    return {position, target};\n}\n\nfunction getCameraTiltPosition(y:number, style:string): number {\n    let angle = 60;\n    if (style == '2D') angle = 89.9;\n    return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IJsonConfig, IMeshParams, TMapMode } from \"../../types\";\nimport { Map } from \"./Map\";\nimport React, { MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\nimport { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { isMobile } from \"react-device-detect\";\n\ninterface IFloorsMapProps {\n    meshFloors: IMeshParams;\n    currentFloorIndex: number;\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    onCameraMove?: (e: any) => void;\n    currKioskObj: Mesh;\n    routeTargetId?: string;\n    routeTargetFromId?: string;\n    amenityTargetType: string;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>,\n    escalatorNodes: string[];\n    zoom: IZoomData | null;\n    handleCameraLength?: (length: number) => void;\n    config: IConfig;\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n    const [firstMove, setFirstMove] = useState<boolean>(false);\n    const { meshFloors, currentFloorIndex, currKioskObj, routeTargetId, routeTargetFromId, amenityTargetType, handleChangeFloor, escalatorNodes, zoom, handleCameraLength, config } = params;\n    const { floors } = meshFloors;\n\n    const groupRef = useRef<Group>(null);\n    const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n    const mapControlRef = useRef<any>(null);\n    const { camera, scene } = useThree();\n    const cameraFocus = useRef<{\n        position: Vector3, target: Vector3,\n        fromPosition: Vector3, fromTarget: Vector3,\n        animationStartTime: number, duration: number\n    } | null>(null);\n    // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n    const style = meshFloors.config.STYLE;\n    const accentColor = meshFloors.config.ACCENT_COLOR;\n    const pathFinderGraph = meshFloors.pathFinderGraph;\n    const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n        routeTargetFromId ? routeTargetFromId : undefined;\n\n    useEffect(() => {\n        if (!amenityTargetType || config.ROLE === 'PORTAL') {\n            setRouteTubes([]);\n            return;\n        }\n        const route = make_amenity_route(from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n        setRouteTubes(route);\n    }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from])\n\n    useEffect(() => {\n        if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n            if (config.ROLE === 'PORTAL') {\n                if (routeTargetId) {\n                    const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n                    if (targetMesh) {\n                        setRouteTubes([targetMesh as IExtMesh])\n                    }\n                } else {\n                    setRouteTubes([]);\n                }\n            } else {\n                // setRouteTubes([]);\n            }\n            return;\n        }\n        if (!amenityTargetType) {\n            floors.forEach(floor => {\n                floor.escalatorMeshes = [];\n            });\n        }\n\n\n        console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n        /* MAKE ROUTE PATH */\n\n        const route = create_route(from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n        // TODO: activate object (moved out of create_route function)\n        // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n        // TODO: focus object (moved out of create_route function)\n        // if (!routePaths.length) {\n        //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n        //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n        //     camera.position.copy(position);\n        // }\n\n\n        setRouteTubes(route);\n\n    }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE]);\n\n    const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n    useEffect(() => {\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n        let meshes: Mesh[];\n        if (routeTubes[currentFloorIndex]) {\n            meshes = [routeTubes[currentFloorIndex]];\n\n            const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n            if (currentActiveObject) {\n                meshes.push(currentActiveObject.mesh);\n            }\n        } else {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n\n        return () => {\n            cameraFocus.current = null;\n        };\n    }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed]);\n\n    useEffect(() => {\n        if (zoom?.direction && mapControlRef.current) {\n            if (!(camera instanceof PerspectiveCamera)) {\n                console.error('Camera is not a PerspectiveCamera');\n                return;\n            }\n\n            if (!selectedFloorMeshParams.length) {\n                console.warn('objects not loaded yet');\n                return;\n            }\n\n            let meshes: Mesh[];\n            if (routeTubes[currentFloorIndex]) {\n                meshes = [routeTubes[currentFloorIndex]];\n\n                const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n                if (currentActiveObject) {\n                    meshes.push(currentActiveObject.mesh);\n                }\n            } else {\n                meshes = selectedFloorMeshParams.map(item => item.mesh);\n            }\n            const focus = {\n                position: mapControlRef.current.object.position.clone(),\n                target: mapControlRef.current.target.clone()\n            };\n\n            let cameraDistance = focus.position.distanceTo(focus.target);\n            const zoomStep = cameraDistance * 0.4;\n\n            if (zoom.direction === 'in') {\n                cameraDistance -= zoomStep;\n            } else {\n                cameraDistance += zoomStep;\n            }\n\n            cameraDistance = Math.min(\n                config.CAMERA.maxDistance,\n                Math.max(\n                    config.CAMERA.minDistance,\n                    cameraDistance\n                )\n            );\n\n            focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n            cameraFocus.current = {\n                ...focus,\n                fromPosition: mapControlRef.current.object.position.clone(),\n                fromTarget: mapControlRef.current.target.clone(),\n                animationStartTime: performance.now(),\n                duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n            };\n        }\n    }, [zoom])\n\n    const onCameraMove = useCallback((e: any) => {\n        if (handleCameraLength) {\n            const vector = new Vector3();\n            vector.copy(e.target.object.position);\n            vector.sub(mapControlRef.current.target);\n            handleCameraLength(vector.length());\n        }\n    }, [handleCameraLength])\n\n    useFrame(() => {\n        if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n            if (!firstMove) {\n                setFirstMove(true);\n                cameraFocus.current.duration = 0;\n            }\n            const focus = cameraFocus.current;\n            const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n            const animationProgress = Math.min(1, animationTime / focus?.duration);\n            mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n            mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n            mapControlRef.current.object.updateProjectionMatrix();\n            if (animationProgress >= 1) {\n                cameraFocus.current = null;\n            }\n        }\n    })\n\n    const resetCamera = (fullReset: boolean = false) => {\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n        let meshes: Mesh[];\n        if (routeTubes[currentFloorIndex]) {\n            meshes = [routeTubes[currentFloorIndex]];\n\n            const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n            if (currentActiveObject) {\n                meshes.push(currentActiveObject.mesh);\n            }\n        } else {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n    };\n\n    useImperativeHandle(ref, () => ({\n        resetCamera,\n    }))\n\n    return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n        <>\n            <MapControls\n                makeDefault\n                onChange={onCameraMove}\n                ref={mapControlRef}\n                maxPolarAngle={Math.PI / 2}\n                minDistance={config.CAMERA.minDistance}\n                maxDistance={config.CAMERA.maxDistance}\n                enableZoom={config.ROLE !== \"WP_SITE\" || (config.ROLE === 'WP_SITE' && isMobile)}\n                enableRotate={config.ROLE !== \"WP_SITE\"}\n            />\n\n            {floors && floors.map((value: IFloorData, index: number) => (\n                <Map\n                    key={`Map-${index}`}\n                    visible={currentFloorIndex === index}\n                    floorIndex={index}\n                    currKioskObj={params.currKioskObj}\n                    activeObjectId={params.activeObjectId}\n                    hoverObjectId={params.hoverObjectId}\n                    meshFloors={meshFloors}\n                    routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n                    onPointerEnter={params.onPointerEnter}\n                    onPointerLeave={params.onPointerLeave}\n                    onPointerMove={params.onPointerMove}\n                    onClick={params.onClick}\n                    handleChangeFloor={handleChangeFloor}\n                />\n            ))}\n        </>\n    </group>)\n})","import { IFloorSelectorProps } from \"../../types\";\nimport styles from '../../MapBox.module.css';\n\ntype TFloorButtonProps = {\n    isActive: boolean,\n    onClick: (e: any) => void,\n    text: string,\n}\n\nconst FloorButton = ({isActive, onClick, text }: TFloorButtonProps) => {\n    return (\n\n        <div\n            className={`${styles.floor} ${styles.control_btn} ${isActive ? styles.active : ''}`} onClick={onClick}\n        >\n            {text}\n        </div>\n    )\n}\n\nconst FloorSelector = ({floors, selectedFloorIndex, handleFloorChange, accentColor}: IFloorSelectorProps) => {\n    const floorButtons: Array<TFloorButtonProps & {key: string}> = [];\n    for (let i = 0; i < floors.length; i++) {\n        const style = {display: 'flex', cursor: 'pointer', background: 'white'};\n        if (i === selectedFloorIndex) {\n            style.background = accentColor;\n        }\n        floorButtons.push({\n            key: `floor-change-btn-${i}`,\n            isActive: i === selectedFloorIndex,\n            onClick: handleFloorChange(i),\n            text: floors[i].title,\n        })\n    }\n\n    return (\n        <div className={`${styles.floors} ${styles.btn_group}`}>\n            {floorButtons.map(value => <FloorButton key={value.key} isActive={value.isActive} onClick={value.onClick} text={value.text} ></FloorButton>)}\n        </div>\n    );\n}\n\nexport default FloorSelector;\n","const ATM = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n        </svg>\n    )\n}\n\nexport default ATM;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","\nconst Elevator = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n        </svg>\n    )\n}\n\nexport default Elevator;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst Management = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Management;","\nconst PlayArea = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default PlayArea;","\nconst Restroom = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Restroom;","\nconst Security = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n        </svg>\n\n    )\n}\n\nexport default Security;","import { IAmenitiesInteractiveList, IFloorSelectorProps, TMapMode, TRoles } from \"src/types\";\nimport FloorSelector from \"./FloorSelector\";\nimport { MouseEventHandler, useMemo } from \"react\";\nimport styles from '../../MapBox.module.css';\nimport ATM from \"../Icons/ATM\";\nimport DogPoopStation from \"../Icons/DogPoopStation\";\nimport Elevator from \"../Icons/Elevator\";\nimport FamilyRestroom from \"../Icons/FamilyRestroom\";\nimport Management from \"../Icons/Management\";\nimport PlayArea from \"../Icons/PlayArea\";\nimport Restroom from \"../Icons/Restroom\";\nimport Security from \"../Icons/Security\";\nimport { MapObj } from \"src/mapitApiTypes\";\n\nconst Names = ['atm', 'dog-poop-station', 'elevator', 'family-restroom', 'management', 'playarea', 'restroom', 'security'] as const;\n\ntype TIconName = (typeof Names)[number];\n\ntype TAmenityIconProps = {\n    type: TIconName,\n}\n\ntype TElement =  undefined | (() => JSX.Element);\n\nconst AmenityIcon = ({type}: TAmenityIconProps) => {\n    let name: TElement;\n    name = undefined;\n\n    switch (type) {\n        case 'atm':\n                name = ATM;\n            break;\n        case 'dog-poop-station':\n                name = DogPoopStation;\n            break;\n        case 'elevator':\n                name = Elevator;\n            break;\n        case 'family-restroom':\n                name = FamilyRestroom;\n            break;\n        case 'management':\n                name = Management;\n            break;\n        case 'playarea':\n                name = PlayArea;\n            break;\n        case 'restroom':\n                name = Restroom;\n            break;\n        case 'security':\n                name = Security;\n            break;\n    \n        default:\n            break;\n    }\n    if (name !== undefined) {\n        const Comp = name;\n        return (\n            <>\n                <Comp></Comp>\n            </>\n        )\n    } else {\n        return null;\n    }\n\n}\n\n\nconst UIComponent = ({\n    floors,\n    accentColor,\n    selectedFloorIndex,\n    handleFloorChange,\n    amenitiesList,\n    zoomIn,\n    zoomOut,\n    reset,\n    clearRoute,\n    handleAmenityClick,\n    role,\n    mapObjs\n}: IFloorSelectorProps & {\n    amenitiesList: IAmenitiesInteractiveList[],\n    zoomIn?: MouseEventHandler<HTMLDivElement>,\n    zoomOut?: MouseEventHandler<HTMLDivElement>,\n    reset?: () => void,\n    clearRoute?: MouseEventHandler<HTMLDivElement>,\n    handleAmenityClick: (type: string) => void,\n    role?: TRoles,\n    mapObjs?: MapObj[]\n}\n) => {\n    const handleResetClick: MouseEventHandler = (e) => {\n        e.preventDefault();\n        if (reset instanceof Function) {\n            reset();\n        }\n    }\n\n    const extractValues = useMemo(() => {\n\n        if(!mapObjs)\n        {\n            return [];\n        }\n        \n        return mapObjs\n          .filter(obj => obj.layer_type === \"amenity\")\n          .map(obj => obj.value);\n      }, [mapObjs])\n\n return(\n        <div id={styles['threejs-map-wrapper']}>\n            <div id={styles['threejs-map']}>\n                <div id={styles['map_controls']} className={`${!floors? 'hide' : ''}`}>\n                    <div className={styles['btn_group']}>\n                        <div onClick={handleResetClick} className={`${styles['reset']} ${styles['control_btn']}`}>RESET</div>\n                        <div onClick={clearRoute} className={`${styles['clear_route']} ${styles['control_btn']} ${clearRoute? '' : styles.hide}`}>Clear Route</div>\n                    </div>\n                    <FloorSelector  accentColor={accentColor} floors={floors} selectedFloorIndex={selectedFloorIndex} handleFloorChange={handleFloorChange}/>\n                    <div className={`${styles['btn_group']} ${styles['zoom_btns']}`}>\n                        <div onClick={zoomOut} className={`${styles['zoom-out']} ${styles['control_btn']}`}>–</div>\n                        <div onClick={zoomIn} className={`${styles['zoom-in']} ${styles['control_btn']}`}>+</div>\n                    </div>\n                </div>\n                <div id={styles['mapit2_loader']} className={styles['hide']}>Loading map, please wait...</div>\n                    {role !== 'PORTAL' &&\n                        <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n                            {amenitiesList.map((amenity, index) => {\n                                if(!extractValues.includes(amenity.type))\n                                {\n                                    return null;\n                                }\n                                return (\n                                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                                    <div className={styles.img}>\n                                        <AmenityIcon type={amenity.type as TIconName}></AmenityIcon>\n                                     \n                                    </div>\n                                    <div className={`${styles.name}`}>{amenity.name}</div>\n                                </div>\n                            )})}\n                        </div>\n                    }\n            </div>\n        </div>\n )   \n}\n\nexport default UIComponent;\n","import React, {useEffect} from \"react\";\nimport styles from '../../MapBox.module.css';\n\nexport const MapCenterMarker = ({size, koef}: {size: number, koef: number}) => {\n    const kioskElementRef = React.useRef<HTMLDivElement>(null);\n\n    // todo figure out better way\n    useEffect(() => {\n        if (!kioskElementRef.current) return;\n        const kioskElement = kioskElementRef.current;\n        const svgOrigin = document.querySelector('#map-special-svg-kiosk svg');\n        let svgClone:Node;\n        if (svgOrigin) {\n            svgClone = svgOrigin.cloneNode(true);\n            kioskElement.appendChild(svgClone);\n        }\n\n        return () => {\n            if (svgClone) {\n                kioskElement.removeChild(svgClone);\n            }\n        }\n    }, []);\n\n    return <>\n        <div className={styles['mapCenterMarker']}></div>\n        <div className={styles['kioskMarker']} ref={kioskElementRef} style={{width: koef*10+size, height: koef*10+size*2}}></div>\n    </>\n}","import { createContext, useContext, useState } from \"react\"\nimport { Object3D } from \"three\";\nimport { IExtMesh } from \"src/types\";\n\n\ntype TMeshObjectContext = {\n    MeshObject: IExtMesh[] | null;\n    SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>>;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext | null>(null);\n\nexport default function MeshObjectContextProvider({children}: {children: React.ReactNode}) {\n    const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n\n    return (\n        <MeshObjectContext.Provider\n            value={{\n                MeshObject,\n                SetMeshObject,\n            }}\n        >\n            {children}\n        </MeshObjectContext.Provider>\n    )\n}\n\nexport function useMeshObjectContext() {\n    const context = useContext(MeshObjectContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n    }\n\n    return context;\n}\n","import { useCallback, useMemo, useState } from \"react\";\n\ntype GetRetailersParams = {\n    centerId: string | number,\n    apiURI?: string,\n    limit?: number,\n    page?: number,\n}\n\ntype Data = {\n    isError: boolean,\n    error: string | null,\n    items: any[],\n    count: number,\n}\n\nconst defaultData: Data = {\n    isError: false,\n    error: null,\n    items: [],\n    count: 0,\n}\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n    const { centerId, apiURI, limit, page } = params;\n\n    const fetchRetailers = useCallback((search: string) => {\n        const r = /\\/$/;\n        const uri = apiURI?.replace(r, '');\n        const url = `${uri}/v1/retailers/?limit=${limit ? limit : 100}&page=${page ? page : 1}&search=${search ? search : ''}`;\n\n        return fetch(url, {\n            headers: {\n                center_id: centerId.toString(),\n            },\n        }).then(response => {\n            if (!response.ok) {\n                return {\n                    ...defaultData,\n                    isError: true,\n                    error: `Server error: [${response.status}] [${response.statusText}] [${response.url}]`,\n                    items: [],\n                };\n            }\n            return (async () => {\n                return await response.json().then(retailers => {\n                    return {\n                        ...defaultData,\n                        items: retailers.items,\n                        count: retailers.count,\n                    }\n                });\n            })()\n        }).catch((e: any) => {\n            return {\n                ...defaultData,\n                isError: true,\n                error: e.message ? e.message : 'useGetRetailer: something went wrong!',\n                items: [],\n            };\n        })\n    }\n        , [centerId, limit, page, apiURI]);\n\n    return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor, hex_to_color } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { MouseEventHandler, SyntheticEvent, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, FormControl, FormControlProps, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, Euler, MeshBasicMaterial, MeshPhongMaterial, Object3D, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { Geometry, TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IJsonConfig, IMeshParamsTmp } from \"src/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useGetRetailers from \"./useGetRetailersBySearch\";\n\n\ninterface IMapboxForm {\n    floorIndex: number;\n    meshFloors: IMeshParamsTmp;\n    config: IConfig;\n    data: any;\n    setData: (index: number, data: MapObj) => void;\n    selectedId: string;\n    centerId: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    apiURI?: string;\n    onResetData?: (data: MapObj) => void;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n    [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n\tid: '',\n\tcenter_id: centerId,\n\tretailer_id: '',\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: '8',\n\trotate: '0',\n\toffsetX: '0',\n\toffsetY: '0',\n});\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n    const {data, setData, selectedId, centerId, config, floorIndex, meshFloors, onResetData} = params;\n\n    const myFont = useFont(fontData as unknown as FontData);\n    const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n    const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n    const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n    const [formData, setFormData] = useState<MapObj | null>(null);\n    const [rotation, setRotation] = useState<number | undefined>(undefined);\n    const context = useMeshObjectContext();\n    const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [, startTransition] = useTransition();\n    const intervalRefs = useRef<TIncDecInterval>({});\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const fetchRetailers = useGetRetailers({centerId, apiURI: params.apiURI});\n\n    const loadOptions = (inputValue: string, callback: (options: any[]) => void) => {\n        setIsLoading(true);\n        const retailersData = fetchRetailers(inputValue);\n        retailersData.then(data => {\n            setIsLoading(false);\n            let result: any = [];\n            if (!data) return result;\n            if (!data.isError) {\n                result = data.items.map((item: any) => {\n                    return {\n                        value: item.id,\n                        label: item.name,\n                    }\n                })\n            } else {\n                console.error(`Fetch Retailers error: ${data.error}`)\n            }\n            callback(result);\n        })\n    }\n\n    useEffect(() => {\n        switch(mainTabKey) {\n            case 'retailer':\n                handleChangeTab(retailerTabsKey);\n                break;\n        }\n    }, [formData, mainTabKey, retailerTabsKey])\n\n    const handleChangeTab = (k:  any | null) => {\n        if (!formData) return;\n        const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n        if (key !== null) {\n            if (isTMainTabsKey(key)) {\n                setMainTabKey(key);\n                if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n                    formData.obj_type = key;\n                    if (key === 'retailer') {\n                        formData.layer_type = 'retail_name';\n                    } else if (key === 'special') {\n                        formData.layer_type = 'kiosk';\n                        formData.retailer_id = '';\n                    } else if (key === 'custom') {\n                        formData.layer_type = 'custom_text';\n                        formData.retailer_id = '';\n                    }\n                    setMainTabKey('');\n                    setRetailerTabsKey('');\n                    setSpecialTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    });\n                }\n            } else if (isTRetailerTabsKey(key)) {\n                setRetailerTabsKey(key);\n                if (formData.id && retailerTabsKey && key) {\n                    formData.layer_type = key;\n                    if (formData.layer_type !== key) {\n                        setFormData({ ...formData });\n                    }\n                    updateData({\n                        ...formData,\n                    })\n                    if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n                        let text = '';\n                        switch (key) {\n                            case 'retail_name':\n                               \n                                if(!formData.retailer_id)\n                                {\n                                    break;\n                                }\n\n                                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                               \n                                if (retailIndex !== -1) {\n                                    text = data.retailers[retailIndex].retail_name;\n\n                                }\n                                break;\n                            case 'retail_text':\n                            case 'custom_text':\n                                text = formData.custom_text;\n                                break;\n                        }\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            makeTextGeometry(obj, text, formData.size);\n                        }\n                    }\n\n                    if (['retail_logo', 'custom_image'].includes(key)) {\n                        context?.MeshObject?.forEach((obj, index) => {\n                            if (index === 0) return;\n\n                            makeImage(formData, obj);\n                        })\n                    }\n                }\n            } else if (isTSpecialTabsKey(key)) {\n                setSpecialTabsKey(key);\n                if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n                    formData.layer_type = key;\n                    formData.kiosk_id = '';\n                    formData.retailer_id = '';\n                    formData.value = '';\n                    setFormData({ ...formData });\n                    updateData({ ...formData });\n                }\n            }\n        }\n    }\n\n    const handleRotateChange = (e: any) => {\n        if (!formData) return;\n        formData.rotate = e.target.value;\n        setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = {...formData};\n            setData(index, {...data});\n        }\n    }\n\n    const handleReset = () => {\n        if (!formData) return;\n        const defaultValues = getDefaultMapOjbValues(formData.center_id);\n        if (onResetData) {\n            onResetData({\n                ...formData,\n            })\n        }\n        setFormData({\n            ...defaultValues,\n            id: formData.id,\n        });\n        updateData({\n            ...defaultValues,\n            id: formData.id,\n        });\n    }\n\n    const updateData = (formData: MapObj) => {\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = { ...formData };\n            setData(index, { ...formData });\n        }\n    }\n\n    const handleChangeRetailer = ({value}: {value: string}) => {\n        if (value && formData) {\n            formData.retailer_id = value;\n            formData.kiosk_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeKiosk = (e: any) => {\n        if (e.target.value && formData) {\n            formData.kiosk_id = e.target.value;\n            formData.retailer_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const handleChangeAmenity = (e: any) => {\n        if (e.target.value && formData) {\n            formData.value = e.target.value; \n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const makeTextGeometry = (obj: IExtMesh, text: string, size: string) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let text_geometry = new TextGeometry(text, {\n            font: (obj.userData && obj.userData.font)? obj.userData.font : myFont,\n            size: parseInt(size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n        if (obj.geometry) {\n            obj.geometry.dispose();\n        }\n        obj.geometry = text_geometry;\n    }\n\n    const makeImage = (formData: MapObj, obj: IExtMesh) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let img = null;\n        if (formData.layer_type === 'retail_logo') {\n            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n            if (retailIndex !== -1) {\n                img = getImage(formData, data.retailers[retailIndex]);\n            }\n        } else {\n            img = getImage(formData);\n        }\n        if (img instanceof HTMLImageElement) {\n            processImage(img, formData, (geometry, material) => {\n                obj.geometry = geometry;\n                obj.material = material;\n\n                const boundingBox = geometry.boundingBox;\n\n                const mesh_center_point = new Vector3();\n                if (boundingBox) {\n                    boundingBox.getCenter(mesh_center_point);\n\n                    const mesh_size = new Vector3();\n                    boundingBox.getSize(mesh_size);\n                    if (obj.object_id) {\n                        layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n                    }\n                }\n            });\n        }\n    }\n\n    const changeValue = (name: string, value: string) => {\n        if (!formData) return;\n        // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n        //     formData.custom_image = value;\n        //     setFormData({...formData});\n        //     updateData({...formData});\n        // }\n\n        context?.MeshObject?.forEach((obj, index) => {\n            if (!obj.userData) {\n                obj.userData = {};\n            }\n            if (!obj.userData.position) {\n                obj.userData.position = new Vector3();\n                obj.userData.position.copy(obj.position);\n            }\n            const position = new Vector3();\n            position.copy(obj.userData.position);\n            switch (name) {\n                case 'custom_text':\n                    if (index === 0) break;\n                    formData.custom_text = value;\n                    if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        makeTextGeometry(obj, formData.custom_text, formData.size);\n                    }\n                    break;\n                case 'custom_image':\n                    if (index === 0) break;\n                    formData.custom_image = value;\n                    makeImage(formData, obj);\n                    updateData({\n                        ...formData,\n                    })\n                    break;\n                case 'size':\n                    if (index === 0) break;\n                    formData.size = value;\n                    if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n                        let text = '';\n                        if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n                            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                            if (retailIndex !== -1) {\n                                text = data.retailers[retailIndex].retail_name;\n                            }\n                        } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                            text = formData.custom_text;\n                        }\n                        makeTextGeometry(obj, text, formData.size);\n                    } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n                        makeImage(formData, obj);\n                        if (timeoutRef.current) {\n                            clearInterval(timeoutRef.current);\n                        }\n                        timeoutRef.current = setTimeout(() => {\n                            updateData({ ...formData });\n                        }, 300);\n                    } else if (['amenity', 'kiosk'].includes(formData.layer_type)) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            setFormData({ ...formData });\n                            updateData({ ...formData });\n                        })\n                    } \n                    break;\n\n                case 'rotate':\n                    if (index === 0) break;\n                    formData.rotate = value;\n                    obj.rotation.set(\n                        obj.rotation.x,\n                        obj.rotation.y,\n                        parseFloat(formData.rotate) * Math.PI / 180\n                    );\n                    break;\n\n                case 'offsetX':\n                    if (index === 0) break;\n                    position.x += parseFloat(value);\n                    obj.position.setX(position.x);\n                    formData.offsetX = value;\n                    break;\n\n                case 'offsetY':\n                    if (index === 0) break;\n                    position.y += parseFloat(value);\n                    obj.position.setY(position.y);\n                    formData.offsetY = value;\n                    break;\n\n                case 'text_color':\n                    if (index === 0) break;\n                    formData.text_color = value;\n                    if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        const material_settings = {\n                            // color: hex_to_color(formData.text_color),\n                            color: formData.text_color,\n                            transparent: true,\n                            side: DoubleSide,\n                            depthWrite: false,\n                            depthTest: false,\n                        };\n                        let text_material = new MeshPhongMaterial(material_settings);\n                        obj.material = text_material;\n                    } else if (\n                        formData.layer_type === 'retail_logo' ||\n                        formData.layer_type === 'custom_image' ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            updateData({\n                                ...formData,\n                                text_color: formData.text_color.replace('#', ''),\n                            });\n                        })\n                    }\n                    break;\n\n                case 'bg_color':\n                    if (index !== 0) break;\n                    formData.bg_color = value;\n                    let meshType: MeshType = 'store';\n                    if (obj.object_id?.startsWith('big-store')) {\n                        meshType = 'big-store';\n                    }\n                    obj.material = getMaterial(\n                        config,\n                        meshType,\n                        formData.map_obj_name,\n                        formData.bg_color,\n                        formData.transparent === \"1\"? true : false,\n                        {[formData.map_obj_name]: {...formData}}\n                        );\n                    // updateData({...formData});\n                    break;\n            \n                default:\n                    break;\n            }\n            startTransition(() => {\n                setFormData({ ...formData })\n                updateData({ ...formData });\n            });\n\n        })\n    }\n    const handleChange = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value;\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    useEffect(() => {\n        if (data && data.map_objs && selectedId) {\n            const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n            if (index !== -1) {\n                setFormData({...data.map_objs[index]});\n            } else {\n                setFormData({\n                    ...getDefaultMapOjbValues(centerId),\n                    id: 'new-' + (new Date()).getTime(),\n                });\n            }\n        }\n        return () => {\n            setRetailerTabsKey('');\n        }\n    }, [data, selectedId])\n\n    useEffect(() => {\n        if (!formData) return;\n        if (formData.obj_type) {\n            handleChangeTab(formData.obj_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n        if (formData.layer_type) {\n            handleChangeTab(formData.layer_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n    }, [formData])\n\n    const decrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value -= 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const incrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const rotateByFixedAngle = (key:TIncDecKey, angle: number) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += angle;\n            if (value > 360) {\n                value = angle;\n            } else if (value === 360) {\n                value = 0;\n            }\n\n            changeValue(key, value.toString());\n        }\n    }\n\n    const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            rotateByFixedAngle(key, angle);\n        }, 100);\n    } \n\n    const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            decrementValue(key);\n        }, 100);\n    }\n\n    const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            incrementValue(key);\n        }, 100);\n    }\n\n    const stopIntervals = () => {\n        let key:TIncDecKey;\n        for (key in intervalRefs.current) {\n            if (intervalRefs.current[key])\n                clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n                intervalRefs.current[key] = null;\n        }\n    }\n\n    const handleOnSubmit = () => {\n        if (params.onSubmit && context && context.MeshObject && formData) {\n            formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n            params.onSubmit({...formData, map_obj_name: context.MeshObject[0].object_id as string});\n        }\n    }\n\n    if (!formData) return null;\n\n    return (\n        <>\n            <Tab.Container activeKey={mainTabKey}>\n                <Col>\n                    <Row>\n                        <Col sm=\"9\">\n                            <Nav\n                                variant=\"tabs\"\n                                className=\"flex-row\"\n                                // activeKey={mainTabKey}\n                                onSelect={handleChangeTab}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col sm=\"3\" className=\"px-0\">\n                            {/* \n                //@ts-ignore */}\n                            <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Tab.Content>\n                                <Tab.Pane eventKey={\"retailer\"}>\n                            <AsyncSelect\n                                className=\"mb-3\"\n                                aria-label=\"Choose a Retailer\"\n                                loadOptions={loadOptions}\n                                noOptionsMessage={() => 'Retailers not found'}\n                                placeholder=\"Choose a Retailer...\"\n                                value={data.retailers?.filter((item: IRetailer) => item.id === formData.retailer_id)?.map((item: IRetailer) => ({\n                                    value: item.id,\n                                    label: `${item.retail_name}${item.location && item.location.length > 1 ? item.location : ''}`,\n                                }))}\n                                defaultOptions={data.retailers?.map((item: any) => ({value: item.id, label: `${item.retail_name}${item.location && item.location.length > 1? item.location : ''}`}))}\n                                onChange={handleChangeRetailer}\n\n                            />\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"retail-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                    >\n                        <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                        <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                        <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"custom_text\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"special\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"special-tab-form\"\n                        activeKey={specialTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.kiosk_id?? ''} onChange={handleChangeKiosk}>\n                                <option value={''} disabled hidden>Choose a Kiosk...</option>\n                                {data.kiosks?.map((value: any, index: number) => <option key={`kiosk-${value.id}-${index}`} value={value.id}>{value.title}</option>)}\n                            </Form.Select>\n                        </Tab>\n                        <Tab eventKey=\"amenity\" title=\"Amenity\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                                <option value={''} disabled hidden>Choose Amenity...</option>\n                                {Object.keys(data.amenities)?.map((value: string) => (\n                                    <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                                ))}\n                            </Form.Select>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"custom\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"custom-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"custom_text\" title=\"Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            name=\"custom_text\"\n                                            as=\"textarea\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"custom_image\" title=\"Image\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            type=\"string\"\n                                            name=\"custom_image\"\n                                            value={formData.custom_image}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Col>\n            </Tab.Container>\n            <Form.Group className=\"mb-3 mt-3\">\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Size</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('size')}\n                                    onMouseDown={handleDecrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"size\"\n                                    type=\"text\"\n                                    value={formData.size}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('size')}\n                                    onMouseDown={handleIncrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Rotate</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('rotate')}\n                                    onMouseDown={handleDecrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"rotate\"\n                                    type=\"number\"\n                                    value={rotation ?? formData.rotate}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('rotate')}\n                                    onMouseDown={handleIncrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                            <div style={{maxWidth: 50, height: 50}}>\n                                <Button\n                                    onClick={() => rotateByFixedAngle('rotate', 45)}\n                                    onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >\n                                    <ArrowClockwise size={'1rem'} />\n                                </Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset X</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetX')}\n                                    onMouseDown={handleDecrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n\n                                <Form.Control\n                                    name=\"offsetX\"\n                                    type=\"number\"\n                                    value={formData.offsetX}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetX')}\n                                    onMouseDown={handleIncrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetY')}\n                                    onMouseDown={handleDecrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"offsetY\"\n                                    type=\"number\"\n                                    value={formData.offsetY}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetY')}\n                                    onMouseDown={handleIncrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"3\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">BG Color</Form.Label>\n                    </Col>\n                    <Col sm=\"3\" className=\"p-0\">\n                        <Form.Control\n                            name=\"bg_color\"\n                            type=\"string\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"2\">\n                        <Form.Control\n                            type=\"color\"\n                            name=\"bg_color\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Row>\n                            <Col sm=\"3\">\n                                <input\n                                        name=\"transparent\"\n                                        id=\"transparent\"\n                                        type=\"checkbox\"\n                                        value={formData.transparent}\n                                        onChange={handleChange}\n                                ></input>\n                            </Col>\n                            <Col sm=\"9\" className=\"p-0\">\n                                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                            <Form.Label className=\"mb-0\">Text Color</Form.Label>\n                        </Col>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                name=\"text_color\"\n                                type=\"color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                {['kiosk', 'amenity'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                type=\"color\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                <Row className=\"justify-content-center px-5 py-5\">\n                    <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-')? 'Save' : 'Update'}</button>\n                </Row>\n            </Form.Group>\n        </>\n    );\n}\n\nexport default MapboxForm;\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n    centerId: string,\n    slug: string,\n    webApiURI: string,\n}\n\nexport type RetailerData = {\n    data: IRetailer | null,\n    isLoading: boolean,\n    isError: boolean,\n    error: string | null,\n}\n\nconst defaultData: RetailerData = {\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n} \nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n    const {centerId, slug, webApiURI} = props;\n    const [data, setData] = useState<RetailerData>(defaultData);\n\n    useMemo(() => {\n        if (!slug || !centerId) {\n            setData({...defaultData});\n            return false;\n        }\n\n        let apiURI = webApiURI;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            setData({\n                isLoading: true,\n                data: null,\n                isError: false,\n                error: null,\n            })\n            fetch(`${apiURI}/v1/retailers/${slug}`, {\n                headers: {\n                    center_id: centerId,\n                }\n            }).then(\n                (response) => response.json()\n            ).then(data => {\n                setData({\n                    isLoading: false,\n                    isError: false,\n                    error: null,\n                    data: {\n                        id: data.id,\n                        retail_name: data.name,\n                        slug: data.slug,\n                        location: data.location && data.location !== '-'? data.location : '',\n                        retailer_phone: data.retailer_phone,\n                        retailer_description: data.global_retailer.description,\n                        logo: data.media.url,\n                        map_obj_name: '',\n                    }\n                });\n            }).catch((e: any) => {\n                setData({\n                    data: null,\n                    isLoading: false,\n                    isError: true,\n                    error: `Error fetch retaler data: ${e.message}`,\n                })\n            })\n        } else {\n            setData({\n                isLoading: false,\n                isError: true,\n                error: 'webApiURI not provided!',\n                data: null,\n            })\n        }\n\n    }, [centerId, slug, webApiURI]);\n\n    return data;\n\n}\n\nexport default useRetailerData;\n","import { Col, Form, FormGroup, Modal, Placeholder, Row, Spinner  } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { XCircleFill } from \"react-bootstrap-icons\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { CSSProperties, ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n    amenity: string,\n    show: boolean,\n    onHide: () => void,\n    centerId: string,\n    retailers?: IRetailer[],\n    mapObjs?: MapObj[],\n    mapObjectName?: string,\n    webApiURI: string,\n    onClick?: (id: string, amenityType?: string) => void,\n}\n\nconst RetailerInfoList = ({retailers, retailer, isLoading, onClick, isAmenity, mapObjs}: {retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[]}) => {\n\n    const [retailerId, setRetailerId] = useState<string>('');\n\n    const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n        e.preventDefault();\n        if (onClick) {\n            onClick(retailerId);\n        }\n    }\n\n    const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n        setRetailerId(e.target.value);\n    }\n\n    const filterRetailers = (retailers:IRetailer[], arrayObjects:MapObj[]) => {\n        return retailers.filter(retailer => \n            arrayObjects.some(obj => obj.retailer_id === retailer.id)\n        );\n    }\n\n    if (!isAmenity && (isLoading || !retailer )) {\n        return (\n        <div>\n            <div className={styles['retailer-info-spinner']} >\n                <Spinner animation=\"border\" role=\"status\" variant=\"secondary\"/>\n            </div>\n            <div className={styles['retailer-info-content']} >\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={5} /> <Placeholder bg=\"secondary\"  xs={3} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={7} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            {!!retailer && (\n                <>\n                    <div className={styles['retailer-logo']}>\n                        <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n                    </div>\n                    <div className={styles['retailer-info-content']} >\n                        <div>\n                            <b>Retailer:</b> {retailer.retail_name}\n                        </div>\n                        {retailer.location &&\n                            <div>\n                                <b>Location:</b> {retailer.location}\n                            </div>\n                        }\n                        {retailer.retailer_phone &&\n                            <div>\n                                <b>Phone:</b> {retailer.retailer_phone}\n                            </div>\n                        }\n                        {retailer.retailer_description &&\n                            <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n                        }\n                    </div>\n                </>\n            )}\n            <Form className={styles['get-directions-from']}>\n                <FormGroup>\n                    <div className=\"d-flex align-items-center gap-3\">\n                        <div className=\"label text-nowrap\">Get directions from</div>\n                        <Form.Select\n                            name=\"retailer\"\n                            onChange={onChange}\n                            value={retailerId}\n                            >\n                            <option value={''} selected disabled>Choose Retailer ...</option>\n                            {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                                if (retailer && item.id === retailer.id) return null;\n                                return (\n                                    <option key={index} value={item.id}>{item.retail_name}</option>\n                                )\n                            }\n                            )}\n                        </Form.Select>\n                        <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n                    </div>\n                </FormGroup>\n            </Form>\n        </div>\n    );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n    const {\n        amenity,\n        show,\n        onHide,\n        centerId,\n        retailers,\n        mapObjs,\n        mapObjectName,\n        webApiURI,\n        onClick,\n    } = props;\n    const slug = useMemo(() => {\n        if (centerId && mapObjs && retailers && mapObjectName) {\n            const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n            if (mapObj && mapObj.retailer_id) {\n                const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n                if (retailer) {\n                    return retailer.slug;\n                }\n            }\n        }\n        return '';\n    }, [centerId, mapObjectName, mapObjs, retailers]);\n    const data = useRetailerData({ centerId, slug, webApiURI });\n    const handleOnClick = (retailerId: string) => {\n        if (!onClick) return;\n        const mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n        let mapObjectName = '';\n\n        if (mapObj) {\n            mapObjectName = mapObj.map_obj_name;\n        }\n        if (amenity) {\n            onClick(mapObjectName, amenity);\n        } else {\n            onClick(mapObjectName);\n        }\n    }\n\n    const isAmenity = amenity !== '' && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n    return (\n        <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n            <div className={styles['retailerInfoCloseBtn']}>\n                <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n            </div>\n            <Modal.Body className=\"p-3\">\n                <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} />\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default RetailerInfoModal;\n","import React, {CSSProperties, MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState} from \"react\";\nimport {Canvas, ThreeEvent, useThree} from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport {SceneProperties} from \"./SceneProperties\";\nimport {CameraProperties} from \"./CameraProperties\";\nimport {DoubleSide, Mesh, MeshLambertMaterial, Object3D} from \"three\";\nimport {IAmenitiesInteractiveList, IExtMesh, IJsonConfig, IMeshParams, TMapMode, TMapSettingsProps} from \"src/types\";\nimport {FloorsMap} from \"./FloorsMap\";\nimport {useMapit2Data} from \"../../useMapit2Data\";\nimport {MapIt2Response, MapObj, MapObjToSave} from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport {MapCenterMarker} from \"./MapCenterMarker\";\nimport { delete_route_path } from \"src/helpers/route.helpers\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.css';\nimport {Alert} from 'react-bootstrap';\nimport { hex_to_color } from \"src/helpers/misc\";\nimport RetailerInfoModal from \"./RetailerInfoModal\";\n\nconst amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        imageUrl: '/assets/threejs/assets/img/amenities/atm.svg?color=FFFFFF',\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        imageUrl: '/assets/threejs/assets/img/amenities/management.svg?color=FFFFFF',\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        imageUrl: '/assets/threejs/assets/img/amenities/playarea.svg?color=FFFFFF',\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        imageUrl: '/assets/threejs/assets/img/amenities/restroom.svg?color=FFFFFF',\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        imageUrl: '/assets/threejs/assets/img/amenities/elevator.svg?color=FFFFFF',\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        imageUrl: '/assets/threejs/assets/img/amenities/security.svg?color=FFFFFF',\n    },\n] \n\ninterface ISceneComponentProps {\n    mapitData?: MapIt2Response;\n    config: Partial<IJsonConfig>;\n    selectedActiveObjectId: string;\n    setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n    onMapDataUpdate?: (data: MapObj[]) => void;\n    onSettingsLoading?: (settings: MapIt2Response) => void;\n    webApiURI?: string;\n    mediaStorageURI?: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    onResetData?: (data: MapObj) => void;\n}\n\nexport interface IZoomData {\n    direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params:ISceneComponentProps, ref) => {\n    const {data, refreshData} = useMapit2Data({ mapitData:params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n    const [fromObjectId, setFromObjectId] = useState<string>('');\n    const [hovered, setHovered] = useState<boolean>(false);\n    const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n    const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n\n    const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate } = params;\n\n    const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n    const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n    const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n    const [cameraLength, setCameraLength] = useState<number>(0);\n\n    const statsParentRef = useRef(null);\n\n    const floorsMapRef = useRef<{resetCamera: () => void | null}>(null);\n\n    const handleCameraLength = useCallback((length: number) => {\n        setCameraLength(length);\n    }, [])\n\n    const handleFloorChange = (floorIndex: number): MouseEventHandler<HTMLDivElement> => (e) => {\n        setSelectedFloorIndex(floorIndex);\n    }\n\n\n    const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n    const mapCenterMarkerRef = useRef(null);\n    const labelRef = useRef<HTMLDivElement>(null);\n    const [ currentHoveredObject, setCurrentHoveredObject ] = useState<Object3D | null>(null);\n    const meshObjectContext = useMeshObjectContext();\n\n    const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n\n    const config = meshFloors.config;\n    const floors = meshFloors.floors;\n    const meshParams = meshFloors.meshParams;\n    \n    useImperativeHandle(ref, () => ({\n        refreshData,\n    }))\n\n    useEffect(() => {\n        if (data && meshFloors.config && params.onSettingsLoading) {\n            params.onSettingsLoading(\n                {\n                    ...data,\n                    settings: {\n                        ...data.settings,\n                        STYLE: meshFloors.config.STYLE,\n                        ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n                        AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n                        AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n                        BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n                        BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n                        BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n                        BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n                        MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n                        OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n                        OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n                        STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n                        STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n                        WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n                        WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n                        KIOSK_SIZE: meshFloors.config.KIOSK_SIZE? meshFloors.config.KIOSK_SIZE : '15',\n                        STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n                    }\n                });\n        }\n    }, [data, meshFloors])\n\n\n    // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n    let activeFromObjectId = '';\n    let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n    if (selectedActiveObjectId) {\n        activeObjectId = selectedActiveObjectId;\n        activeFromObjectId = fromObjectId;\n    } else if (amenityTargetType) {\n        activeObjectId = '';\n        activeFromObjectId = fromObjectId;\n        // activeFromObjectId = '';\n    }\n\n    const handleChangeMapitData = (index: number, newData: MapObj) => {\n        const itemIndex = formMapObjData.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n        if (itemIndex !== -1) {\n            formMapObjData[itemIndex] = { index, data: { ...newData } };\n        } else {\n            formMapObjData.push({ index, data: { ...newData } })\n        }\n\n        setFormMapObjData([...formMapObjData]);\n    }\n\n  const getMapitData = (): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n        params.onSubmit(data, refreshData);\n    }\n  }\n\n    useEffect(() => {\n        // console.log('useEffect currentHoveredObject', currentHoveredObject)\n        document.body.style.cursor = currentHoveredObject? 'pointer' : 'default';\n    }, [currentHoveredObject]);\n\n    const [ currKioskObj, currKioskFloorIndex, kioskError ]: [ Mesh | null, number, string ] = useMemo(() => {\n        if (!config) {\n            return [ null, 0, '' ] // not an error - loading/initializing\n        }\n        let kioskError = '';\n        let currKioskObj: Mesh | null = null;\n        let currKioskFloorIndex = 0;\n        if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n            const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n            const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n            if (currKioskMeshParams) {\n                currKioskObj = currKioskMeshParams.mesh;\n                currKioskFloorIndex = currKioskMeshParams.floor_index;\n            }\n        } else {\n            if (config.ROLE === 'WEBSITE') {\n                // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n            }\n            if (config.ROLE !== 'PORTAL') {\n                console.error('Kiosk not found in config');\n                // kioskError = 'Map initialization error';\n            }\n        }\n\n        return [ currKioskObj, currKioskFloorIndex, kioskError]\n    }, [config, meshParams]);\n\n    const resetHandle = () => {\n        setSelectedFloorIndex(currKioskFloorIndex);\n        setSelectedActiveObjectId('');\n        setFromObjectId('');\n        setAmenityTargetType('');\n    }\n\n    useEffect(() => {\n            if (!selectedActiveObjectId && floorsMapRef.current) {\n                floorsMapRef.current.resetCamera();\n            }\n    }, [selectedActiveObjectId])\n\n    useEffect(() => {\n        const currKioskLogo = currKioskObj? meshFloors.storeLogos.flat().filter(item => item !== undefined).find(storeLogo => storeLogo.storeLogo.object_id === 'custom-layer-' + (currKioskObj as IExtMesh).object_id)?.storeLogo : null;\n        if (currKioskLogo && config?.ROLE !== 'PORTAL' && config) {\n            const koef = cameraLength/(config.CAMERA.maxDistance - config.CAMERA.minDistance);\n            currKioskLogo.userData.htmlContent = <MapCenterMarker size={Number(config.KIOSK_SIZE)} koef={1-koef} />\n            currKioskLogo.position.z = -(koef*80);\n            meshFloors.storeLogos.flat().filter(item => item !== undefined).map(storeLogo => {\n                if (storeLogo.storeLogo.object_id === currKioskLogo.object_id) {\n                    storeLogo.storeLogo.visible = false;\n                }\n                return null;\n            })\n        }\n        return () => {\n            if (currKioskLogo) {\n                currKioskLogo.userData.htmlContent = null;\n            }\n        }\n    }, [meshFloors, currKioskObj, cameraLength]);\n\n    useEffect(() => {\n        if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId && meshObjectContext?.SetMeshObject) {\n            const object = meshFloors.meshParams[selectedFloorIndex === -1? 0 : selectedFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n            if (object) {\n                //@ts-ignore\n                handleMeshObjectContext(object);\n            }\n            //@ts-ignore\n        }\n    }, [meshFloors])\n\n    useEffect(() => {\n        if (onMapDataUpdate) {\n            const exportData: MapObj[] = [];\n\n            formMapObjData.forEach((value) => {\n                exportData.push({...value.data});\n            })\n        }\n    }, [formMapObjData])\n\n    useEffect(() => {\n        document.body.style.cursor = hovered? 'pointer' : 'auto';\n\n    }, [hovered])\n\n    const handleMeshObjectContext = (object: IExtMesh) => {\n        if (meshObjectContext?.SetMeshObject) {\n            const textParams = meshFloors.textParams[selectedFloorIndex === -1? 0 : selectedFloorIndex]?.find(value => {\n                return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const logoParams = meshFloors.storeLogos[selectedFloorIndex === -1? 0 : selectedFloorIndex]?.find(value => {\n                return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const result = [object as IExtMesh];\n\n            if (textParams) {\n                result.push(textParams.textMesh);\n            }\n\n            if (logoParams) {\n                result.push(logoParams.storeLogo)\n            }\n\n            // if (result.length === 1) {\n            //     const mediaObject = new Object3D() as IExtMesh; \n            //     mediaObject.object_id =  `${textLogoNamePrefix}${(object as IExtMesh).object_id}`;\n\n            //     result.push(mediaObject);\n            // }\n\n            meshObjectContext.SetMeshObject([...result]);\n        }\n    }\n\n    const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n        e.stopPropagation();\n        // console.log('onClick', e.object)\n\n        const targetId = (e.object as IExtMesh).object_id;\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n        // console.log('set active object', targetId);\n        setAmenityTargetType('');\n        setFromObjectId('');\n        if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n            setShowRetailerInfo(true);\n        }\n    }, [selectedFloorIndex, meshFloors.meshParams.length]);\n\n    const handleAmenityClick = (type: string) => {\n        setSelectedActiveObjectId('')\n        setFromObjectId('')\n        if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n            setSelectedAmenityType(type)\n            setShowRetailerInfo(true);\n        } else {\n            setAmenityTargetType(type)\n        }\n    };\n\n    const onCameraMove = useCallback((e: any) => {\n        if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n            return\n        }\n    }, []);\n\n    const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        console.debug()\n        setHovered(true);\n        // console.log('onPointerEnter', e.object)\n        if (!e.object.userData.storeName && config && config.ROLE !== 'PORTAL') {\n            // console.warn('onPointerEnter no storeName', e.object);\n            return;\n        }\n        setCurrentHoveredObject(e.object);\n    }, []);\n\n    const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerLeave', e.object)\n        setCurrentHoveredObject(null);\n        setHovered(false);\n        if (labelRef && labelRef.current) {\n            labelRef.current.style.display = 'none';\n        }\n    }, []);\n\n    const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerMove', e.object)\n\n        if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n                        labelRef.current.style.top = `${e.offsetY - 65}px`;\n            labelRef.current.style.left = `${e.offsetX}px`;\n            labelRef.current.style.display = 'block';\n        } else if (labelRef.current) {\n            labelRef.current.style.display = 'none';\n        }\n    }\n\n    const messageStyle: CSSProperties = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%',\n    }\n\n    if (data && (!data.floors || data.floors.length <= 0)) {\n        return <div style={messageStyle}>Map doesn't have any floors</div>\n    }\n\n    if (!config || !meshFloors.meshParams.length) {\n        console.warn('LOADING MAP')\n        if(config?.ROLE === 'WP_SITE')\n        {\n            return <div style={messageStyle}>No map for Center</div> \n        }\n        return <div style={messageStyle}>Map loading, please wait...</div>\n    }\n\n    if (kioskError) {\n        return <div style={messageStyle}>{kioskError}</div>\n    }\n\n    const currentFloorIndex = selectedFloorIndex > -1 ? selectedFloorIndex : currKioskFloorIndex;\n\n    if (!currKioskObj && config.ROLE !== 'PORTAL') {\n        console.error('NO KIOSK OBJECT FOUND');\n        // return <div style={messageStyle}>Map initialization error</div>\n    }\n\n    // make sure that meshFloors conditionals are not null\n    const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n\n    let hoverObject = currentHoveredObject as IExtMesh\n    let hoverObjectId = '';\n    if (hoverObject && hoverObject.object_id) {\n        hoverObjectId = hoverObject.object_id;\n    }\n\n    const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n        if (!amenityType) {\n            setFromObjectId(retailerId);\n        } else {\n            // setSelectedActiveObjectId(retailerId);\n            setFromObjectId(retailerId);\n            setAmenityTargetType(amenityType);\n        }\n        setShowRetailerInfo(false);\n    }\n\n    return (\n        <>\n            {config.ROLE === 'PORTAL' &&\n                <div className={styles['mapbox-admin-form']}>\n                    {!selectedActiveObjectId? \n                    <Alert variant=\"info\">Select a store to customize.</Alert>\n                    :\n                        <MapboxForm\n                            floorIndex={currentFloorIndex}\n                            meshFloors={meshFloors}\n                            config={config}\n                            data={getMapitData()}\n                            setData={handleChangeMapitData}\n                            selectedId={selectedActiveObjectId}\n                            centerId={params.config.CENTER_ID as string}\n                            onSubmit={handleOnSubmit}\n                            apiURI={params.webApiURI}\n                            onResetData={params.onResetData}\n                        />\n                    }\n                </div>\n            }\n\n            <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n                <UIComponent \n                    accentColor={config.ACCENT_COLOR.getStyle()} \n                    floors={floors} \n                    selectedFloorIndex={currentFloorIndex} \n                    handleFloorChange={handleFloorChange} \n                    amenitiesList={amenitiesList} \n                    handleAmenityClick={handleAmenityClick} \n                    reset={resetHandle} \n                    zoomIn={() => setZoom({ direction: 'in' })} \n                    zoomOut={() => setZoom({ direction: 'out' })} \n                    role={config.ROLE}\n                    mapObjs={data?.map_objs}\n                 />\n                <Canvas style={{position: 'absolute', top: 0, left: 0}} flat>\n                    {Number(params.config.STATS)? <Stats className={styles.stats} parent={statsParentRef} /> : null }\n                    <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n                    <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n                    {/*<axesHelper args={[5000]} />*/}\n\n                    <ambientLight intensity={1} color={'#c4c4c4'} />\n                    <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n                    <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n                    <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n                    <FloorsMap\n                        onCameraMove={onCameraMove}\n                        meshFloors={meshFloorsChecked}\n                        activeObjectId={activeObjectId}\n                        hoverObjectId={hoverObjectId}\n                        // @ts-ignore\n                        currKioskObj={currKioskObj}\n                        routeTargetId={activeObjectId}\n                        routeTargetFromId={activeFromObjectId}\n                        currentFloorIndex={currentFloorIndex}\n                        onPointerEnter={onPointerEnter}\n                        onPointerLeave={onPointerLeave}\n                        onPointerMove={onPointerMove}\n                        onClick={onClick}\n                        handleChangeFloor={handleFloorChange}\n                        amenityTargetType={amenityTargetType}\n                        escalatorNodes={meshFloors.escalator_nodes}\n                        zoom={zoom}\n                        handleCameraLength={handleCameraLength}\n                        config={config}\n                        ref={floorsMapRef}\n                    />\n                </Canvas>\n                <div ref={labelRef}\n                    style={{\n                        position: 'absolute',\n                        padding: 10,\n                        background: '#ffffff',\n                        fontWeight: 600,\n                        color: '#000000',\n                        fontSize: 16,\n                        display: currentHoveredObject ? 'block' : 'none',\n                        top: 300,\n                        left: 400,\n                        opacity: .8,\n                    }}\n                >\n                    <div>\n                        {currentHoveredObject && currentHoveredObject.userData.storeName}\n                    </div>\n                </div>\n\n            </div>\n            \n            <RetailerInfoModal\n                amenity={selectedAmenityType}\n                show={showRetailerInfo}\n                onHide={() => setShowRetailerInfo(false)}\n                centerId={params.config.CENTER_ID? params.config.CENTER_ID.toString() : ''}\n                mapObjectName={selectedActiveObjectId}\n                retailers={data?.retailers}\n                mapObjs={data?.map_objs}\n                webApiURI={params.webApiURI?? ''}\n                onClick={handleRetailerInfoOnClick}\n            />\n        </>\n    )\n});\n\n\n\nexport default SceneComponent;\n","import {useCallback, useEffect, useState} from \"react\";\nimport {IRetailer, MapIt2Response, Settings} from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\n\ninterface useMapIt2DataProps {\n    CENTER_ID: string;\n    mapitData?: MapIt2Response;\n    webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n    data: MapIt2Response | null,\n    refreshData: () => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps) : Mapit2DataReturn {\n    const [data, setData] = useState<MapIt2Response|null>(null);\n\n    if (!CENTER_ID && !mapitData) {\n        console.error('useMapit2Data requires either CENTER_ID or mapitData');\n    }\n\n    const getData = useCallback(() => {\n        let apiURI = webApiURI || null;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            const retailersApiUri = `${apiURI}/v1/retailers/?limit=1000&page=1`;\n            const mapObjsApiUri = `${apiURI}/v1/mapit2/data/`;\n            const floorsApiUri = `${apiURI}/v1/mapit2/floors/?limit=1000&offset=0`;\n            const kioskApiUri = `${apiURI}/v1/display_kiosks/?limit=1000&page=1`;\n            const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n\n            const retailersPromise = fetch(retailersApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => {console.error(e)})\n\n            const mapObjsPromise = fetch(mapObjsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => {console.error(e)})\n\n            const floorsPromise = fetch(floorsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            })\n            .then(data => {\n                if (!data\n                    || !data.items\n                    || (data.items && !data.items.length)) {\n                    console.error('Empty floors data from server');\n                }\n                return data;\n            }).catch(e => {console.error(e)})\n\n            const kiosksPromise = fetch(kioskApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => {console.error(e)})\n\n            const settingsPromise = fetch(settingsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => {console.error(e)})\n\n            Promise.all<Array<any>>([\n                retailersPromise,\n                mapObjsPromise,\n                floorsPromise,\n                kiosksPromise,\n                settingsPromise,\n            ]).then(data => {\n                if (data.length >= 5) {\n                    const responseData: Partial<MapIt2Response> = {};\n                    responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n                        id: item.id,\n                        retail_name: item.name,\n                        slug: item.slug,\n                        location: item.location,\n                        retailer_phone: '',\n                        retailer_description: '',\n                        logo: item.media.url,\n                        map_obj_name: '',\n                    }));\n                    responseData.map_objs = [...data[1].items].map(item => ({\n                        ...item,\n                        offsetX: item.offset_x,\n                        offsetY: item.offset_y,\n                    }));\n                    responseData.floors = [...data[2].items];\n                    responseData.camera_controls_states = {...demoData.camera_controls_states};\n                    responseData.settings = {\n                        ...demoData.settings as Settings,\n                        KIOSK_SIZE: \"1\",\n                    }\n                    responseData.kiosks = [];\n                    responseData.amenities = {...demoData.amenities};\n                    responseData.kiosks = [...data[3].items];\n                    const settings: Settings = data[4]?.settings? data[4].settings : {\n                        \"STYLE\": \"3D\",\n                        \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n                        \"ACCENT_COLOR\": \"4EA5FF\",\n                        \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n                        \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n                        \"WALL_THICKNESS\": \"0.6\",\n                        \"WALL_COLOR\": \"888888\",\n                        \"BOUNDARY_THICKNESS\": \"0.8\",\n                        \"BOUNDARY_COLOR\": \"888888\",\n                        \"BASE_COLOR\": \"25292B\",\n                        \"STORE_TEXT_COLOR\": \"222222\",\n                        \"OVERLAY_COLOR\": \"FFFFFF\",\n                        \"OVERLAY_OPACITY\": \"0.7\",\n                        \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n                        \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\"\n                    };\n                    responseData.settings = settings;\n\n                    setData({...responseData as MapIt2Response})\n                }\n            })\n        }\n    }, [CENTER_ID, webApiURI])\n\n    useEffect(() => {\n        if (mapitData) {\n            setData(mapitData);\n            return;\n        }\n\n        if (!CENTER_ID) {\n            return;\n        }\n\n        getData();\n\n    }, [CENTER_ID, mapitData, getData]);\n\n    const refreshData = () => getData();\n    return {data, refreshData};\n}","import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport styles from './MapBox.module.css';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport {isMapIt2Response, MapIt2Response, MapObj, MapObjToSave} from \"./mapitApiTypes\";\nimport {IJsonConfig, TMapMode, TMapSettingsProps, TRoles} from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n}\nexport interface IAppProps {\n    mapitData?: unknown;\n    config: Partial<IJsonConfig>;\n    stats?: boolean;\n    onSettingsLoading?: (settings: MapIt2Response) => void;\n    webApiURI?: string;\n    mediaStorageURI?: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n    onResetData?: (data: MapObj) => void;\n}\n\n\nfunction MapBox({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, onResetData }: IAppProps) {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <MeshObjectContextProvider>\n      <div className={`${styles['mapbox-component']} ${config.ROLE !== 'PORTAL'? styles.view : ''}`}>\n        <SceneComponent\n          ref={refObj}\n          setSelectedActiveObjectId={setSelectedActiveObjectId}\n          selectedActiveObjectId={selectedActiveObjectId}\n          mapitData={mapData}\n          config={config}\n          onSettingsLoading={onSettingsLoading}\n          webApiURI={webApiURI}\n          mediaStorageURI={mediaStorageURI}\n          onSubmit={handleOnSubmit}\n          onResetData={onResetData}\n        />\n        <div className={styles.hide}>\n          <div id=\"map-special-svg-kiosk\">\n            <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n              <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-atm\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n              <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-management\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n              <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-playarea\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n              <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n              <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-family-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n              <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-elevator\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n              <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-security\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n              <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-dog-poop-station\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n              <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n              <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n              <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n              <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n              <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </MeshObjectContextProvider>\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n    id: string;\n    index?: string;\n    retail_name: string;\n    slug: string;\n    location: string;\n    retailer_phone: string;\n    retailer_description: string;\n    logo: string;\n    map_obj_name: string;\n};\n\nexport type MapObj = {\n    id: string | number;\n    center_id: string;\n    retailer_id: string;\n    kiosk_id: string | null;\n    map_obj_name: string;\n    obj_type: string;\n    layer_type: string;\n    value: string;\n    custom_text: string;\n    custom_image: string;\n    hover_text: string;\n    bg_color: string;\n    transparent: string | number;\n    text_color: string;\n    size: string;\n    rotate: string;\n    offsetX: string;\n    offsetY: string;\n    goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<MapObj, 'goToFloor'>;\n\nexport type Floor = {\n    id: string;\n    svg_map?: string;\n    objsGroup?: Group;\n    interactiveObjs?: any[];\n    escalatorsObjs?: any[];\n    escalatorsNodes?: Record<any, any>;\n    escalatorMeshes?: any[];\n    route_points?: IRoutePoint[];\n    route_tube?: any;\n    route_texture?: Texture | null | undefined;\n    routeMeshes?: any[];\n    route_active?: boolean;\n    center_id?: string;\n    title: string;\n    svg?: string;\n    status?: string;\n    created_at?: string;\n};\n\nexport type CameraControlsState = {\n    camera: null;\n    controls: null;\n};\n\nexport type Settings = {\n    STYLE: '2D' | '3D',\n    MAP_BACKGROUND_COLOR: string;\n    ACCENT_COLOR: string;\n    STORE_DEFAULT_COLOR: string;\n    BIG_STORE_DEFAULT_COLOR: string;\n    WALL_THICKNESS: string;\n    WALL_COLOR: string;\n    BOUNDARY_THICKNESS: string;\n    BOUNDARY_COLOR: string;\n    BASE_COLOR: string;\n    STORE_TEXT_COLOR: string;\n    STORE_HEIGHT: string;\n    OVERLAY_COLOR: string;\n    OVERLAY_OPACITY: string;\n    AMENITIES_NAV_BG_COLOR: string;\n    AMENITIES_NAV_ICON_COLOR: string;\n    KIOSK_SIZE: string;\n};\n\nexport type Kiosk = {\n    id: string;\n    title: string;\n    map_obj_name: string;\n};\n\nexport type Amenity = {\n    name: string;\n    image: string;\n};\n\nexport type MapIt2Response = {\n    retailers: IRetailer[];\n    map_objs: MapObj[];\n    floors: Floor[];\n    camera_controls_states: {\n        display_app: CameraControlsState;\n        desktop: CameraControlsState;\n        tablet: CameraControlsState;\n        mobile: CameraControlsState;\n    };\n    settings: Settings;\n    kiosks: Kiosk[];\n    amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n    name: string;\n    node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const response = obj as Record<string, unknown>;\n\n    return (\n        Array.isArray(response.retailers) &&\n        Array.isArray(response.map_objs) &&\n        Array.isArray(response.floors) &&\n        typeof response.camera_controls_states === 'object' &&\n        response.camera_controls_states !== null &&\n        typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n        typeof response.settings === 'object' &&\n        Array.isArray(response.kiosks) &&\n        typeof response.amenities === 'object'\n    );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","allIndexedMapObjects","allIndexedRetailers","createGraph","hex_to_color","hex_code","Color","getFormatedColor","replace","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","type","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","value","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","find","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","loadFloors","results","GeometriesAndMaterials","result","meshParams","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","Map","point","origin_point","target_direction","set","storeIntersects","intersectObjects","object","escalatorIntersects","escalatorNodes","assign_route_nodes_to_stores","size","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","graph","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","getImageLogo","new_object_id","mesh_center_point","handleAsync","logoMesh","storeLogo","get_store_name_logo_geo","textLogoNamePrefix","myFont","boundingBox","computeBoundingBox","getCenter","getSize","text","STORE_TEXT_COLOR","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minDistance","maxDistance","animSpeed","KIOSK_SIZE","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","floorsData","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","setMeshParams","useState","textParams","setTextParams","storeLogos","setStoreLogos","setPathFinderGraph","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","useEffect","init","response","kiosks","mapObj","map_objs","item","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","camera_controls_states","CONTROLS","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","values","removeFromParent","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","_jsx","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","_jsxs","children","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","uuid","htmlContent","Html","boundingSphere","styles","escalator_elems","display","className","element","label","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currentFloorIndex","currKioskObj","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","targetMesh","selectedFloorMeshParams","meshes","currentActiveObject","focus","aspect","cameraDistance","min","setLength","fromPosition","fromTarget","animationStartTime","duration","zoomStep","onCameraMove","vector","animationTime","animationProgress","lerpVectors","resetCamera","fullReset","useImperativeHandle","rotation","jsxs","_Fragment","Fragment","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","isMobile","enableRotate","FloorButton","isActive","control_btn","FloorSelector","selectedFloorIndex","handleFloorChange","floorButtons","btn_group","jsx","ATM","xmlns","viewBox","d","transform","fill","DogPoopStation","cx","cy","rx","ry","Elevator","FamilyRestroom","Management","PlayArea","Restroom","Security","AmenityIcon","UIComponent","amenitiesList","zoomIn","zoomOut","reset","clearRoute","handleAmenityClick","mapObjs","extractValues","filter","preventDefault","Function","hide","backgroundColor","MapCenterMarker","koef","kioskElementRef","React","kioskElement","svgOrigin","svgClone","cloneNode","appendChild","removeChild","MeshObjectContext","createContext","MeshObjectContextProvider","MeshObject","SetMeshObject","Provider","useMeshObjectContext","context","useContext","Error","defaultData","isError","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","MapboxForm","setData","selectedId","onResetData","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","formData","setFormData","setRotation","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","setIsLoading","fetchRetailers","apiURI","limit","page","search","uri","fetch","headers","toString","then","ok","Promise","resolve","json","reject","status","statusText","url","catch","useGetRetailers","handleChangeTab","k","updateData","isTRetailerTabsKey","retailIndex","findIndex","makeTextGeometry","makeImage","HTMLImageElement","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadOptions","inputValue","callback","noOptionsMessage","placeholder","location","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","Select","disabled","hidden","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","ArrowClockwise","htmlFor","handleOnSubmit","onSubmit","handleRotateByFixedAngle","RetailerInfoList","isAmenity","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","selected","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","slug","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","imageUrl","SceneComponent","refreshData","mapitData","getData","mapObjsApiUri","floorsApiUri","kioskApiUri","settingsApiUri","retailersPromise","mapObjsPromise","floorsPromise","kiosksPromise","settingsPromise","all","responseData","offset_x","offset_y","demoData","useMapit2Data","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","cameraLength","setCameraLength","statsParentRef","floorsMapRef","labelRef","currentHoveredObject","setCurrentHoveredObject","meshObjectContext","showRetailerInfo","setShowRetailerInfo","onSettingsLoading","getHexString","activeFromObjectId","body","cursor","currKioskFloorIndex","kioskError","kioskMapObjName","currKioskMeshParams","flat","currKioskLogo","Number","handleMeshObjectContext","logoParams","stopPropagation","targetId","messageStyle","top","left","meshFloorsChecked","handleChangeMapitData","newData","itemIndex","Alert","getStyle","resetHandle","Canvas","Stats","stats","parent","intensity","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","_ref","refObj","mapData","setMapData","display_app","desktop","tablet","mobile","isMapIt2Response","view"],"mappings":"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"}