{"version":3,"file":"index.module.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/components/Amenities/ATM.tsx","../src/components/Amenities/Management.tsx","../src/components/Amenities/PlayArea.tsx","../src/components/Amenities/Restroom.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Amenities/Elevator.tsx","../src/components/Amenities/Security.tsx","../src/components/Icons/DogPoopStation.tsx","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/contexts/MapBoxContextProvider.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/components/MapboxForm/MapboxForm.tsx","../src/components/MapboxForm/hooks/useRetailersOptions.ts","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type { Vector2 } from \"three\";\nimport { IFloorData } from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n  return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string, boolean] {\n  let exists = false;\n  let node_name: string = '-name-not-found-';\n  const currentFloor = floors[floor_index];\n  if (currentFloor.route_points !== undefined) {\n    for (let i = 0; i < currentFloor.route_points.length; i++) {\n      if (vertex.x === currentFloor.route_points[i].node.x && vertex.y === currentFloor.route_points[i].node.y) {\n        exists = true;\n        node_name = currentFloor.route_points[i].name;\n        break;\n      }\n    }\n    if (!exists) {\n      node_name = next_node_name(node_count);\n      // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n  }\n  return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport { Graph } from \"ngraph.graph\";\nimport { Color, Vector2, Vector3 } from \"three\";\nimport { get_node_name } from \"./nodesUtils\";\nimport { MeshType } from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n  const consolePrefix = 'MeshParams';\n  let mesh_type: MeshType = null;\n  var layer_color: Color | string = path.color.clone();\n  var extrude = 0;\n  var z_index = 0;\n  var mesh_visible = true;\n  var mesh_draw = true;\n  var mesh_transparent = false;\n  var line_thickness = config.WALL_THICKNESS;\n  var interactiveMesh = true;\n  var layer_name = path.userData?.node.id;\n  if (layer_name !== undefined) {\n    if (layer_name.startsWith('boundary')) {\n      mesh_type = 'boundary';\n      layer_color = config.BOUNDARY_COLOR;\n      line_thickness = config.BOUNDARY_THICKNESS;\n      if (config.STYLE === '3D') {\n        extrude = 9;\n      }\n    } else if (layer_name.startsWith('wall')) {\n      mesh_type = 'wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 8.5;\n      }\n    } else if (layer_name.startsWith('outer-wall')) {\n      mesh_type = 'outer-wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        mesh_draw = false;\n      }\n    } else if (layer_name.startsWith('building-base')) {\n      mesh_type = 'building-base';\n      layer_color = config.BUILDING_BASE_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 12;\n        z_index = -12;\n      }\n    } else if (layer_name.startsWith('base')) {\n      mesh_type = 'base';\n      layer_color = config.BASE_COLOR;\n    } else if (layer_name.startsWith('store')) {\n      mesh_type = 'store';\n      layer_color = config.STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = parseInt(config.STORE_HEIGHT);\n      }\n      if (layer_name.startsWith('store-underlay')) {\n        interactiveMesh = false;\n      }\n    } else if (layer_name.startsWith('big-store')) {\n      mesh_type = 'big-store';\n      layer_color = config.BIG_STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 16;\n      }\n    } else if (layer_name.startsWith('route-path')) {\n      mesh_type = 'route-path';\n      mesh_draw = false;\n      path.subPaths.forEach(subPath => {\n        if (subPath.curves.length === 0) {\n          console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n        }\n\n        subPath.curves.forEach(curve => {\n          //@ts-ignore\n          const v1: Vector2 = curve.v1;\n          //@ts-ignore\n          const v2: Vector2 = curve.v2;\n\n          const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n          if (!exists1) {\n            floors[floor_index].route_points?.push({\n              name: node1_name,\n              node: new Vector3(v1.x, v1.y, 1)\n            });\n            allNodesFloor[node1_name] = floor_index;\n          }\n          const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n          if (!exists2) {\n            floors[floor_index].route_points?.push({\n              name: node2_name,\n              node: new Vector3(v2.x, v2.y, 1)\n            });\n            allNodesFloor[node2_name] = floor_index;\n          }\n          pathFinderGraph.addNode(node1_name, { ...v1 });\n          pathFinderGraph.addNode(node2_name, { ...v2 });\n\n          // pathFinderGraph.addLink(node1_name, node2_name);\n          pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n          pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n        });\n      });\n    } else if (layer_name.startsWith('escalator-')) {\n      mesh_type = 'escalator';\n      mesh_visible = false;\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('kiosk-')) {\n      mesh_type = 'kiosk';\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('amenity-')) {\n      mesh_type = 'amenity';\n      mesh_transparent = true;\n      z_index = 1;\n    } else if (layer_name.startsWith('overlay')) {\n      mesh_type = 'overlay';\n    } else if (layer_name.startsWith('special-shape')) {\n      mesh_type = 'special-shape';\n    } else {\n      extrude = 1;\n    }\n  } else {\n    console.warn(consolePrefix + 'Layer name is undefined, path', path)\n  }\n\n\n  /*console.debug({\n      mesh_type,\n      layer_color,\n      extrude,\n      z_index,\n      mesh_visible,\n      mesh_draw,\n      mesh_transparent,\n      line_thickness,\n      interactiveMesh,\n      path,\n      layer_name,\n  })*/\n  return {\n    mesh_type,\n    layer_color,\n    extrude,\n    z_index,\n    mesh_visible,\n    mesh_draw,\n    mesh_transparent,\n    line_thickness,\n    interactiveMesh,\n    path,\n    layer_name,\n  }\n}","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import ATMIcon from \"src/components/Amenities/ATM\";\nimport ElevatorIcon from \"src/components/Amenities/Elevator\";\nimport ManagementIcon from \"src/components/Amenities/Management\";\nimport PlayAreaIcon from \"src/components/Amenities/PlayArea\";\nimport RestroomIcon from \"src/components/Amenities/Restroom\";\nimport SecurityIcon from \"src/components/Amenities/Security\";\nimport DogPoopStation from \"src/components/Icons/DogPoopStation\";\nimport FamilyRestroom from \"src/components/Icons/FamilyRestroom\";\nimport { IAmenitiesInteractiveList } from \"src/types\";\n\nexport const amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        icon: ATMIcon,\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        icon: ManagementIcon,\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        icon: PlayAreaIcon,\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        icon: RestroomIcon,\n    },\n    {\n        name: 'Family Restroom',\n        type: 'family-restroom',\n        icon: FamilyRestroom,\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        icon: ElevatorIcon,\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        icon: SecurityIcon,\n    },\n    {\n        name: 'Dog Poop Station',\n        type: 'dog-poop-station',\n        icon: DogPoopStation,\n    },\n] \n\n","const ATMIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ATMIcon;","\nconst ManagementIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default ManagementIcon;","\nconst PlayAreaIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default PlayAreaIcon;","\nconst RestroomIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default RestroomIcon;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst ElevatorIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ElevatorIcon;","\nconst SecurityIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default SecurityIcon;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","import { Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry } from \"three\";\nimport { getWallShape } from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\n// import {allMapObjects} from \"../../globals\";\nimport { IConfig, IExtMesh, IMeshValues, TRoles } from \"../../types\";\nimport { hex_to_color } from \"../../helpers/misc\";\n\nimport { IRetailer, MapObj } from \"../../mapitApiTypes\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n  'route-path': 0,\n  'escalator': 0,\n  'underlay': 0,\n  'overlay': 1,\n  'building-base': 1,\n  'base': 2,\n  'store': 3,\n  'big-store': 4,\n  'kiosk': 5,\n  'wall': 6,\n  'outer-wall': 7,\n  'boundary': 8,\n  'amenity': 9,\n  'layer-image': 10,\n  'layer-text': 11,\n  'route-tube': 12,\n  'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n  if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n    return renderOrders[mesh_type];\n  }\n  // console.warn(`Unknown mesh type: ${mesh_type}`)\n  return 0;\n}\n\nexport const getMaterial = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  layer_color: Color | string,\n  mesh_transparent: boolean,\n  allIndexedMapObjects: Record<string, MapObj>,\n) => {\n  const material_settings = {\n    color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n    side: DoubleSide,\n    transparent: false,\n    depthWrite: true,\n    depthTest: true,\n    opacity: 1,\n  }\n  if (config.STYLE === '2D' || mesh_type === 'base' || mesh_type == null) {\n    if (mesh_type !== 'boundary') {\n      material_settings.depthWrite = false;\n      material_settings.depthTest = false;\n    }\n  }\n  if (mesh_type === 'overlay') {\n    material_settings.color = config.OVERLAY_COLOR;\n    material_settings.opacity = config.OVERLAY_OPACITY;\n  }\n  if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE !== 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent === 1) {\n    material_settings.opacity = 0;\n  }\n  var material = new MeshLambertMaterial(material_settings);\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    material.colorDefault = material.color;\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color !== '') {\n      material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n      //@ts-ignore\n      material.colorDefault = material.color;\n    }\n    //@ts-ignore\n    material.active = false;\n  }\n  if (config.ROLE !== 'PORTAL' && mesh_transparent) {\n    material.opacity = 0;\n    material.transparent = true;\n  }\n\n  material.transparent = material.opacity !== 1;\n\n  return material;\n}\n\nexport const getGeometry = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  extrude: number,\n  line_thickness: number,\n  path: any,\n) => {\n  const consolePrefix = 'MaterialAndGeometry';\n\n  let shapes = path.toShapes(true);\n\n  // shapes.forEach((shape, index) => {\n  let extrude_meshes;\n  if (config.STYLE === '2D') {\n    extrude_meshes = ['building-base'];\n  } else {\n    extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n  }\n\n  let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n  var geometry;\n  if (mesh_type && extrude_meshes.includes(mesh_type)) {\n    geometry = new ExtrudeGeometry(shapes, {\n      depth: -extrude,\n      bevelEnabled: false,\n    });\n  } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n    //@ts-ignore\n    let wall_geometries = [];\n    //@ts-ignore\n    path.subPaths.forEach(subPath => {\n      //@ts-ignore\n      subPath.curves.forEach(curve => {\n        if (curve.type === 'LineCurve') {\n          let shape_extend = 0;\n          if (mesh_type === 'boundary') {\n            shape_extend = 1;\n          } else if (mesh_type === 'wall') {\n            // shape_extend = 1 / 3;\n          }\n          let shape1 = getWallShape(curve, line_thickness, shape_extend);\n          let wall_geometry = new ExtrudeGeometry(shape1, {\n            depth: -extrude,\n            bevelEnabled: false,\n          });\n          wall_geometries.push(wall_geometry);\n        } else {\n          console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n        }\n      });\n    });\n\n    if (wall_geometries.length === 1) {\n      //@ts-ignore\n      geometry = wall_geometries[0];\n    } else if (wall_geometries.length > 1) {\n      //@ts-ignore\n      geometry = mergeGeometries(wall_geometries);\n    } else {\n      console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n    }\n  } else {\n    geometry = new ShapeGeometry(shapes);\n    try {\n      //@ts-ignore\n      if (geometry.attributes.position.count === 0) {\n        console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n      }\n    } catch (e: any) {\n      console.error(e.message);\n    }\n  }\n\n  return geometry;\n}\n\nexport const getMaterialAndGeometry = (allMapObjects: string[], config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n\n  const material = getMaterial(\n    config,\n    mesh_type,\n    layer_name,\n    layer_color,\n    mesh_transparent,\n    allIndexedMapObjects\n  );\n\n  const geometry = getGeometry(\n    config,\n    mesh_type,\n    layer_name,\n    extrude,\n    line_thickness,\n    path\n  );\n\n  const mesh = new Mesh(geometry, material) as IExtMesh;\n  mesh.object_id = layer_name;\n  mesh.mesh_type = mesh_type;\n  mesh.floor_index = floor_index;\n  mesh.visible = mesh_visible;\n  mesh.position.z = z_index;\n  let storeName = '';\n  if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n    if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type === 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n      storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].custom_text;\n      if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n        storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n      }\n    } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].value;\n      if (storeName.length > 1) {\n        const amenity = amenitiesList.find(item => item.type === storeName)\n        if (amenity) {\n          storeName = amenity.name;\n        }\n      }\n    }\n  }\n  mesh.userData.storeName = storeName;\n  if (config.STYLE === '2D') {\n    mesh.renderOrder = getRenderOrder(mesh_type);\n    if (layer_name && layer_name.includes('underlay')) {\n      mesh.renderOrder = getRenderOrder('underlay');\n    }\n  }\n\n  floors[floor_index].objsGroup.add(mesh);\n\n  if (mesh_type === 'escalator') {\n    floors[floor_index].escalatorsNodes[layer_name] = null;\n    floors[floor_index].escalatorsObjs.push(mesh);\n    mesh.escalator_id = floor_index + '-' + layer_name;\n  }\n\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    mesh.route_node_id = null;\n\n    // add floor_index to the kiosks\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'kiosk') {\n      // var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n      /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n          ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n      }*/\n    }\n\n    if (config.ROLE === 'PORTAL') {\n      allMapObjects.push(layer_name);\n    }\n    if (\n      (config.ROLE !== 'PORTAL' && mesh_type === 'kiosk') ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'amenity' && allIndexedMapObjects[layer_name].value !== '') ||\n      (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n      (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type ?? ''))\n    ) {\n      // if (interactiveMesh) {\n      floors[floor_index].interactiveObjs.push(mesh);\n      // }\n    } else if (\n      (config.ROLE === 'PORTAL')\n    ) {\n      floors[floor_index].interactiveObjs.push(mesh);\n    }\n  }\n\n  // if (['store', 'big-store'].includes(mesh_type as string)) {\n  //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n  // }\n\n  return {\n    mesh,\n    geometry,\n    material,\n    object_id: layer_name,\n    mesh_type,\n    floor_index,\n    visible: mesh_visible,\n    renderOrder: mesh.renderOrder,\n  }\n  // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n  BufferGeometry,\n  CanvasTexture,\n  CurvePath,\n  DoubleSide,\n  LineCurve3,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Raycaster,\n  Scene,\n  TubeGeometry,\n  Vector3,\n} from \"three\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\n// import {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport { PathFinder } from \"ngraph.path\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\nimport { IExtMesh, IFloorData } from \"../types\";\nimport { Graph, Node } from \"ngraph.graph\";\n// import { allNodesFloor } from \"src/globals\";\n\nconst consolePrefix = 'ROUTE: ';\n\n\n\nexport function delete_route_path(floors: IFloorData[]) {\n  for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n    const floor = floors[floor_index];\n    floor.route_active = false;\n\n    if (floor.route_tube != null) {\n      floor.route_tube.geometry.dispose();\n      //@ts-ignore\n      floor.route_tube.material.dispose();\n      floor.objsGroup?.remove(floor.route_tube);\n    }\n\n    floor.route_tube = undefined;\n    floor.route_texture = null;\n    floor.escalatorMeshes = [];\n  }\n}\n\nexport function create_route(allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n  if (from_mesh_object_id === to_mesh_object_id) {\n    return [];\n  }\n  const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n  if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n  return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[], floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n  // TODO: remove scene dependency and scene.getObjectByProperty\n  const routePaths = [] as any[];\n  delete_route_path(floors);\n  let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n  let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n  let from_node_name = from_obj.route_node_id;\n  let to_node_name = to_obj.route_node_id;\n\n  // console.log({\n  //     from_mesh_object_id,\n  //     to_mesh_object_id,\n  //     from_obj,\n  //     to_obj,\n  //     from_node_name,\n  //     to_node_name,\n  // })\n\n  // from_node_name = 'node-147';\n  // to_node_name = 'node-221';\n\n  if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n  if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n  if (!from_node_name || !to_node_name) return routePaths;\n\n  const from_route_floor_index = from_obj.floor_index;\n  const to_route_floor_index = to_obj.floor_index;\n\n  const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n    distance: function (fromNode, toNode, link) {\n      if (link.data) return link.data.weight;\n      return false;\n    },\n    //@ts-ignore\n    debug: true,\n  });\n  const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n  const routeNodesEsclators = [];\n  if (!routeNodes) {\n    return [];\n  }\n  const floor_routes = [];\n\n  for (let index = 0; index < routeNodes.length; index++) {\n    const routeNode = routeNodes[index];\n    if (floor_routes[allNodesFloor[routeNode.id]]) {\n      floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n    } else {\n      floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n    }\n\n    if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n      // don't consider these middle escalators nodes\n    } else {\n      routeNodesEsclators.push(routeNode);\n    }\n  }\n  for (let index = 0; index < routeNodesEsclators.length; index++) {\n    const routeNode = routeNodesEsclators[index];\n    if (\n      allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n      && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n    ) {\n      const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n      const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n      let goToFloor = null;\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index + 1].id],\n          direction: 'Next',\n        };\n      }\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index - 1].id],\n          direction: 'Previous',\n        };\n      }\n\n      if (goToFloor && escalator_mesh) {\n        escalator_mesh.goToFloor = goToFloor;\n        //@ts-ignore\n        floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n      }\n    }\n\n  }\n  for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n    const floor_route = floor_routes[floor_index];\n    if (floor_route && floor_route.length > 1) {\n      const routePath = create_route_path(floor_route, floor_index, floors, style);\n      routePaths[floor_index] = routePath;\n\n      floors[floor_index].route_active = true;\n      floors[floor_index].routeMeshes = [routePath];\n      if (floor_index === from_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(from_obj);\n      }\n      if (floor_index === to_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(to_obj);\n\n      }\n    }\n  }\n\n  // setTimeout(function () {\n  //     //TODO openFloorMap functionality\n  //     // openFloorMap(from_route_floor_index);\n  // });\n\n  return routePaths;\n}\n\nfunction create_route_path(\n  routeNodes: Node<any>[],\n  floor_index: number,\n  floors: IFloorData[],\n  style = '2D',// config.STYLE\n) {\n  let distance = 0;\n  let route_path = new CurvePath<Vector3>();\n  for (let i = 1; i < routeNodes.length; i++) {\n    let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n    let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n    route_path.add(new LineCurve3(from_node, to_node));\n    distance += from_node.distanceTo(to_node);\n  };\n  var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n  //@ts-ignore\n  geometry = new BufferGeometry().copy(geometry);\n  var material = new MeshBasicMaterial({\n    map: get_route_texture(distance, floor_index, floors),\n    transparent: true,\n    side: DoubleSide,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  let route_tube = new Mesh(geometry, material) as IExtMesh;\n  if (style === '2D') {\n    route_tube.position.z = -10;\n    route_tube.scale.z = 0.1;\n  }\n  route_tube.position.z = 0;\n  route_tube.renderOrder = getRenderOrder('route-tube');\n  route_tube.mesh_type = 'route-tube';\n  //@ts-ignore\n  route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n  // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n  floors[floor_index].route_tube = route_tube;\n  floors[floor_index].objsGroup?.add(route_tube);\n\n  return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n  return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n  let distance = 0;\n\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n\n  for (let i = 1; i < routeNodes.length; i++) {\n    let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n    distance += link?.data.weight || 0;\n  };\n  return distance;\n}\n\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n  let canvas = document.createElement(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    ctx.canvas.width = distance;\n    ctx.canvas.height = 80;\n\n    ctx.fillStyle = \"#4ea5ff\";\n    ctx.fillRect(0, 0, distance, 80);\n\n    let grd_width = 0.1 * distance;\n    const min_grd_width = 60;\n    const max_grd_width = 120;\n    if (grd_width < min_grd_width) grd_width = min_grd_width;\n    if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n    let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n    grd.addColorStop(0, \"#4ea5ff\");\n    grd.addColorStop(0.4, \"white\");\n    grd.addColorStop(0.6, \"white\");\n    grd.addColorStop(1, \"#4ea5ff\");\n\n    ctx.fillStyle = grd;\n    ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n    floors[floor_index].route_texture = route_texture;\n\n    return route_texture;\n  } else {\n    return undefined;\n  }\n}\n\n//TODO\n\nexport function assign_route_nodes_to_stores(\n  floor_index: number,\n  floors: IFloorData[],\n  allIndexedMapObjects: Record<string, MapObj>,\n  allIndexedRetailers: Record<string, IRetailer>,\n  allNodesFloor: Record<string, number>,\n  escalator_nodes: string[],\n  find_store_node_raycaster: Raycaster,\n  role: string, //config.ROLE\n) {\n  const result = new Map();\n  const currentFloor = floors[floor_index];\n  if (currentFloor && currentFloor.route_points) {\n    currentFloor.route_points.forEach(point => {\n      let origin_point = new Vector3(point.node.x, point.node.y, -10);\n      let target_direction = new Vector3(0, 0, 1);\n      find_store_node_raycaster.set(origin_point, target_direction);\n      //@ts-ignore\n      var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n      if (storeIntersects.length) {\n        //@ts-ignore\n        storeIntersects[0].object.route_node_id = point.name;\n        //@ts-ignore\n        result.set(storeIntersects[0].object.object_id, point.name);\n        if (false && role !== 'PORTAL') {\n          //@ts-ignore\n          var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n          if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n            // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n          }\n        }\n      }\n\n      var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n      if (escalatorIntersects.length) {\n        const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n        let escalator_obj_id = obj.object_id;\n        const escalatorNodes = floors[floor_index].escalatorsNodes;\n        if (escalatorNodes) {\n          escalatorNodes[escalator_obj_id as string] = point.name;\n          allNodesFloor[point.name] = floor_index;\n          escalator_nodes.push(point.name);\n        }\n      }\n    });\n  }\n  return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n  // console.log('linkFloorEscalators', floors)\n  if (floors.length > 1) {\n    for (let i = 0; i < (floors.length - 1); i++) {\n      // console.log('floors[i]',i, floors[i])\n      const floor_escalators = floors[i].escalatorsNodes;\n      // console.log('floor_escalators', floor_escalators);\n      Object.keys(floor_escalators as object).forEach(escalator => {\n        if (floors[i].escalatorsNodes?.[escalator] != null && floors[i + 1].escalatorsNodes?.[escalator] != null) {\n          // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n          const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n          const nodeIdTo = floors[i + 1].escalatorsNodes?.[escalator];\n          if (nodeIdFrom && nodeIdTo) {\n            pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n            pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n          }\n        } else {\n          // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n        }\n      })\n    }\n  }\n}\n\nexport function make_amenity_route(allNodesFloor: Record<string, number>, kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string): Mesh[] {\n  let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n  // if (!kiosk_obj) return [];\n  let kiosk_node_name = kiosk_obj ? kiosk_obj.route_node_id : '';\n\n  var to_obj_name = null;\n\n  var shortest_distance = 9999;\n  // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n  const map_objs: string[] = [];\n  for (let key in allIndexedMapObjects) {\n    const mapObject = allIndexedMapObjects[key];\n    if (\n      mapObject.layer_type === 'amenity'\n      && mapObject.obj_type === 'special'\n      && mapObject.value === amenity_type\n    ) {\n      map_objs.push(key);\n    }\n  }\n  map_objs.forEach((amenity_obj_name: string) => {\n    let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n      distance: function (fromNode, toNode, link) {\n        if (link.data) return link.data.weight;\n        return false;\n      },\n      //@ts-ignore\n      debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n      var amenity_node_name = amenity_obj.route_node_id;\n      try {\n        var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n        if (route_distance && route_distance < shortest_distance) {\n          shortest_distance = route_distance;\n          to_obj_name = amenity_obj_name;\n        }\n      } catch (e: any) {\n        console.warn(`Amenity Path: ${e.message}`);\n      }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n      to_obj_name = amenity_node_name;\n    }\n  });\n  return create_route(allNodesFloor, kiosk_obj_name, to_obj_name ?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import { getMeshParams } from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport { IConfig, IFloorData, IMeshValues, TRoles } from \"src/types\";\n// import {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport { getMaterialAndGeometry } from \"./getMaterialAndGeometry\";\nimport { Raycaster } from \"three\";\nimport { assign_route_nodes_to_stores, linkFloorEscalators } from \"src/helpers/route.helpers\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { Graph } from \"ngraph.graph\";\nimport { EventedType } from \"ngraph.events\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, allMapObjects: string[], allNodesFloor: Record<string, number>, pathFinderGraph: Graph<any, any> & EventedType, floors: IFloorData[], config: IConfig, results: SVGResult[], role?: TRoles) {\n  const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n  const escalator_nodes: string[] = [];\n  results.forEach((result, floor_index) => {\n    if (result.paths && result.paths.length) {\n      const pathIds = [];\n      for (let i = 0; i < result.paths.length; i++) {\n        pathIds.push(result.paths[i]?.userData?.node.id);\n      }\n      const paths = result.paths;\n      for (let i = 0; i < paths.length; i++) {\n        const {\n          mesh_type,\n          layer_color,\n          extrude,\n          z_index,\n          mesh_visible,\n          mesh_draw,\n          mesh_transparent,\n          line_thickness,\n          path,\n          layer_name,\n        } = getMeshParams(\n          paths[i],\n          paths,\n          floors,\n          floor_index,\n          config,\n          ++node_count,\n          //@ts-ignore\n          allNodesFloor,\n          pathFinderGraph\n        );\n\n        if (mesh_draw) {\n          const meshParams = getMaterialAndGeometry(\n            allMapObjects,\n            config,\n            mesh_type,\n            layer_name,\n            layer_color,\n            mesh_transparent,\n            mesh_visible,\n            z_index,\n            extrude,\n            line_thickness,\n            floors,\n            floor_index,\n            allIndexedMapObjects,\n            allIndexedRetailers,\n            path,\n            role\n          );\n\n          if (layer_name.startsWith('kiosk-')) {\n            if (role === 'PORTAL') {\n              // meshParams.mesh.visible = false;\n              //@ts-ignore\n              // meshParams.mesh.material.visible = false;\n            }\n          }\n\n          if (!GeometriesAndMaterials[floor_index]) {\n            GeometriesAndMaterials[floor_index] = [];\n          }\n\n          GeometriesAndMaterials[floor_index].push(meshParams);\n        }\n      }\n      const findStoreNodeRaycaster = new Raycaster();\n      const routeNodeIds = assign_route_nodes_to_stores(\n        floor_index,\n        floors,\n        allIndexedMapObjects,\n        allIndexedRetailers,\n        allNodesFloor,\n        escalator_nodes,\n        findStoreNodeRaycaster,\n        config.ROLE\n      );\n\n      if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n        for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n          if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n            GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n          }\n        }\n      }\n\n      linkFloorEscalators(floors, pathFinderGraph);\n\n    }\n  })\n\n  return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes };\n}","import { IJsonConfig } from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n  ROLE: 'WEBSITE',\n  DEVICE: 'display_app',\n  CENTER_ID: '',\n  KIOSK: '',\n  STYLE: '3D',\n  DEFAULT_SELECTED_STORE: '',\n  DEBUG: '1',\n\n  MAP_BACKGROUND_COLOR: \"FFFFFF\",\n  ACCENT_COLOR: \"4EA5FF\",\n  STORE_DEFAULT_COLOR: \"E2E2E2\",\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n  WALL_THICKNESS: '0.6',\n  WALL_COLOR: \"888888\",\n  BOUNDARY_THICKNESS: '0.8',\n  BOUNDARY_COLOR: \"888888\",\n  BASE_COLOR: \"25292B\",\n  STORE_TEXT_COLOR: \"222222\",\n  OVERLAY_COLOR: \"FFFFFF\",\n  OVERLAY_OPACITY: '0.7',\n  // AMENITIES_NAV_BG_COLOR: \"000000\",\n  // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 400,\n    maxDistance: 3500,\n    animSpeed: 0.2,\n  }\n}\n\nexport const defaultVars: IJsonConfig = {\n  MAP_BACKGROUND_COLOR: '',\n  ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n  DEVICE: 'display_app',\n  KIOSK: '',\n  FLOORS: [],\n  KIOSKS: {},\n  CENTER_ID: null,\n  STATS: 'false',\n  STYLE: '3D', // 2D, 3D\n  DEBUG: '0',\n  ACCENT_COLOR: '4EA5FF',\n  STORE_DEFAULT_COLOR: 'E2E2E2',\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n  WALL_THICKNESS: '0.6',\n  BOUNDARY_THICKNESS: '0.8',\n  WALL_COLOR: '888888',\n  BOUNDARY_COLOR: '888888',\n  BASE_COLOR: '25292B',\n  BUILDING_BASE_COLOR: 'DADADA',\n  STORE_TEXT_COLOR: '222222',\n  OVERLAY_COLOR: 'FFFFFF',\n  OVERLAY_OPACITY: '0.7',\n  CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n  ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n  DEFAULT_CAMERA_POSITION: null, // custom default camera position\n  DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n  DEFAULT_SELECTED_STORE: null,\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 400,\n    maxDistance: 3500,\n    animSpeed: 0.2,\n  },\n  KIOSK_SIZE: '15',\n  ZOOM_STEP: '100',\n};","// import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3 } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh } from \"../types\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { hex_to_color } from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n    addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n  }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  //@ts-ignore\n  let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n  if (mesh) {\n    //@ts-ignore\n    add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n  }\n}\n\n\n\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n  if (!Array.isArray(mesh)) {\n    mesh = [mesh];\n  }\n  const box = mesh.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    //@ts-ignore\n    box.union(obj.geometry.boundingBox);\n    return box;\n  }, new Box3());\n  return box;\n}\n\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n  let map_obj = allIndexedMapObjects[object_id];\n\n  if (!map_obj) {\n    map_obj = {\n      offsetX: \"0\",\n      offsetY: \"0\",\n      rotate: \"0\",\n    }\n  }\n\n  let offsetX = parseInt(map_obj.offsetX);\n  let offsetY = parseInt(map_obj.offsetY);\n\n  newMeshPos.z = -mesh_size.z;\n\n  //@ts-ignore\n  newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n  //@ts-ignore\n  newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n  newMesh.scale.y *= -1;\n\n  newMeshPos.x += offsetX;\n  newMeshPos.y += offsetY;\n\n  newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  if (map_obj.obj_type === 'retailer') {\n    if (retailer) {\n      img.src = retailer.logo;\n    } else {\n      console.error('retailer not found');\n      return null;\n    }\n  } else if (map_obj.obj_type === 'special') {\n\n    let svg_image_name = map_obj.value;\n    if (map_obj.layer_type === 'kiosk') svg_image_name = 'kiosk';\n    if (map_obj.layer_type === 'escalator') svg_image_name = 'escalator';\n    if (svg_image_name) {\n      let svg_color = '222222';\n      if (map_obj.text_color != null) {\n        svg_color = map_obj.text_color;\n      }\n\n      const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n      if (!svg_block) {\n        console.error('svg_block not found', svg_image_name);\n        return null;\n      }\n      const svg_element = svg_block.querySelector(\"svg\");\n      if (!svg_element) {\n        console.error('svg_element not found', svg_image_name);\n        return null;\n      }\n\n      const svgColoredParts = svg_element.querySelectorAll('[fill]');\n      svgColoredParts.forEach((svgColoredPart) => {\n        svgColoredPart.setAttribute('fill', '#' + svg_color);\n      })\n\n      const svgData = (new XMLSerializer()).serializeToString(svg_element);\n      img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n    }\n\n  } else {\n    if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n      img.src = map_obj.custom_image;\n    } else {\n      return null;\n    }\n  }\n\n  return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n  img.onload = function () {\n    const c = document.createElement(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n\n    c.width = img.width;\n    c.height = img.height;\n\n    ctx?.drawImage(img, 0, 0);\n\n    let texture = new CanvasTexture(c);\n    texture.colorSpace = 'srgb'\n\n    const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n    const material = new MeshBasicMaterial({\n      map: texture,\n      transparent: true,\n      side: DoubleSide,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    if (map_obj.layer_type === 'kiosk') {\n      material.visible = false;\n    }\n\n    afterOnload(geometry, material);\n  };\n}\n\nfunction getImageLogo(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry, object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: { storeLogo: Object3D }) => void): void {\n  const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n  if (img === null) return;\n\n  processImage(img, map_obj, (geometry, material) => {\n    const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n    // @ts-ignore\n    const floor_index = mesh.floor_index;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n    logoMesh.object_id = new_object_id;\n    logoMesh.floor_index = floor_index;\n    logoMesh.renderOrder = getRenderOrder('layer-image');\n    floors[floor_index]?.objsGroup.add(logoMesh);\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    logoMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    //@ts-ignore\n    BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    \n    handleAsync({storeLogo: BoundingSphereMesh});\n    */\n    handleAsync({ storeLogo: logoMesh });\n  })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id: string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): { textMesh: IExtMesh } | null | false {\n  const new_object_id = textLogoNamePrefix + object_id;\n  // deleteMeshByObjectID(new_object_id, scene, floors);\n  let result = null;\n\n  if (!geometry.boundingBox) {\n    geometry.computeBoundingBox();\n  }\n  if (!geometry.boundingBox) {\n    return null;\n  }\n\n  const boundingBox = geometry.boundingBox;\n\n  const mesh_center_point = new Vector3();\n  boundingBox.getCenter(mesh_center_point);\n\n  const mesh_size = new Vector3();\n  boundingBox.getSize(mesh_size);\n\n  //@ts-ignore\n  let map_obj: MapObj = allIndexedMapObjects[object_id] ? allIndexedMapObjects[object_id] : { layer_type: object_id.startsWith('escalator') ? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8 };\n\n  if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n    let text = '';\n    if (map_obj.layer_type === 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n      text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n      text = map_obj.custom_text;\n    } else {\n      text = '';\n    }\n\n    let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n    if (map_obj.text_color) {\n      text_color = hex_to_color(map_obj.text_color);\n    }\n\n    const material_settings = {\n      color: text_color,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false,\n      depthTest: false,\n    };\n    let text_material = new MeshPhongMaterial(material_settings);\n    let text_geometry = new TextGeometry(text, {\n      font: myFont,\n      size: parseInt(map_obj.size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n\n    const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n    textMesh.userData.font = myFont;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n    textMesh.object_id = new_object_id;\n    textMesh.floor_index = floor_index;\n    textMesh.renderOrder = getRenderOrder('layer-text');\n    if (map_obj.layer_type === 'retail_name') {\n      textMesh.userData.retail_name = text;\n    }\n\n    floors[floor_index].objsGroup.add(textMesh);\n\n    //scene.add(textMesh);\n    //console.debug({UpdateTexts: scene});\n\n    // Show bounding sphere\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    textMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    @ts-ignore\n    BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    scene.add(BoundingSphereMesh);\n    */\n    result = { textMesh };\n  }\n\n  else if (\n    map_obj.layer_type === 'retail_logo' ||\n    map_obj.layer_type === 'custom_image' ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id != null) ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    || (map_obj.layer_type === 'escalator')\n  ) {\n    getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n  }\n  return result;\n}","import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport type { Mesh } from \"three\";\nimport path from \"ngraph.path\";\nimport { EventedType } from \"ngraph.events\";\nimport { IFloorData } from \"src/types\";\n\n\ntype MapBoxContextType = {\n  meshByObjectId: Map<string, Mesh>;\n  setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>> | Function;\n  allMapObjects: Array<string>;\n  setAllMapObjects: Dispatch<SetStateAction<Array<string>>> | Function;\n  allIndexedMapObjects: Record<string, MapObj>;\n  setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObj>>> | Function;\n  allIndexedRetailers: Record<string, IRetailer>;\n  setAllIndexedRetailers: Dispatch<SetStateAction<Record<string, IRetailer>>> | Function;\n  allNodesFloor: Record<string, number>;\n  setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>> | Function;\n  pathFinderGraph: Graph<any, any> & EventedType\n  setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>> | Function;\n  ngraphPath: typeof path;\n  setNgraphPath: Dispatch<SetStateAction<typeof path>> | Function;\n  floorsData: IFloorData[];\n}\nconst MapBoxContext = createContext<MapBoxContextType>({\n  meshByObjectId: new Map<string, Mesh>(),\n  setMeshByObjectId: () => null,\n  allMapObjects: [],\n  setAllMapObjects: () => null,\n  allIndexedMapObjects: {},\n  setAllIndexedMapObjects: () => null,\n  allIndexedRetailers: {},\n  setAllIndexedRetailers: () => null,\n  allNodesFloor: {},\n  setAllNodesFloor: () => null,\n  pathFinderGraph: createGraph(),\n  setPathFinderGraph: () => null,\n  ngraphPath: path,\n  setNgraphPath: () => null,\n  floorsData: []\n})\n\nconst MapBoxContextProvider = ({ children }: { children: ReactNode }) => {\n\n  const [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string, Mesh>());\n  const [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\n  const [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\n  const [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\n  const [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n  //<{ x:number, y:number }, { weight: number }>\n  const [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\n  const [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n  const [floorsData] = useState<MapBoxContextType['floorsData']>([]);\n\n  return (\n    <MapBoxContext.Provider value={{\n      meshByObjectId,\n      setMeshByObjectId,\n      allMapObjects,\n      setAllMapObjects,\n      allIndexedMapObjects,\n      setAllIndexedMapObjects,\n      allIndexedRetailers,\n      setAllIndexedRetailers,\n      allNodesFloor,\n      setAllNodesFloor,\n      pathFinderGraph,\n      setPathFinderGraph,\n      ngraphPath,\n      setNgraphPath,\n      floorsData\n    }}\n    >\n      {children}\n    </MapBoxContext.Provider>\n  )\n\n}\n\nexport function useMapBoxContext() {\n  const context = useContext(MapBoxContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n  }\n\n  return context;\n}\n\nexport default MapBoxContextProvider;\n","import {\n  Group,\n  Mesh,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { loadFloors } from \"./loadFloors\";\nimport type { IConfig, IExtMesh, IFloorData, IMeshValues, TRoles } from \"../../types\";\nimport { defaultVars, mapit2DefaultVars } from \"../../defaults\";\n// import {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport { get_store_name_logo_geo } from \"src/helpers/draw.logo.helpers\";\nimport { IJsonConfig, IMeshParamsTmp } from \"../../types\";\nimport { hex_to_color } from \"src/helpers/misc\";\nimport { Kiosk, MapIt2Response, MapObj, IRetailer } from \"../../mapitApiTypes\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars }\n\nconst defaultMapObjValues = {\n  id: null,\n  center_id: config.CENTER_ID,\n  retailer_id: null,\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: 8,\n  rotate: 0,\n  offsetX: 0,\n  offsetY: 0,\n} as Record<string, string | number | null | undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\n\n// const floorsData:IFloorData[] = [];\nlet MEDIA_STORAGE_URI: string = '';\n\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n  for (let key in obj) {\n    delete obj[key];\n  }\n}\n\nfunction makeIndexedMapObjects(allIndexedMapObjects: Record<string, MapObj>, map_objs: MapObj[]) {\n  clearObject(allIndexedMapObjects);\n\n  allNonIndexedMapObjects = map_objs;\n\n  for (let i = 0; i < map_objs.length; i++) {\n    const obj = map_objs[i];\n    allIndexedMapObjects[obj.map_obj_name] = obj;\n    for (let key in defaultMapObjValues) {\n      const value = defaultMapObjValues[key];\n      //@ts-ignore\n      if (value != null && obj[key] == null) {\n        //@ts-ignore\n        allIndexedMapObjects[obj.map_obj_name][key] = value;\n      }\n    }\n  }\n}\n\nconst init = (allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: IJsonConfig, floors: IFloorData[], response: MapIt2Response) => {\n  const KIOSKS: Record<string, Kiosk> = {};\n\n  response.kiosks.forEach((kiosk) => {\n    const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n    if (mapObj) {\n      kiosk.map_obj_name = mapObj.map_obj_name;\n    }\n    KIOSKS[kiosk.id] = kiosk;\n  });\n\n\n  for (let index in response.retailers) {\n    const retailer = response.retailers[index];\n    allIndexedRetailers[retailer.id] = retailer;\n    allIndexedRetailers[retailer.id].index = index;\n  }\n\n  // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n  // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n  makeIndexedMapObjects(allIndexedMapObjects, response.map_objs);\n\n  floors.length = 0;\n  response.floors.forEach((value: IFloorData, index: number) => {\n    const objsGroup = new Group();\n    objsGroup.scale.y *= -1;\n    objsGroup.lookAt(0, 1, 0);\n\n    floors.push({\n      id: value.id,\n      // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n      svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n      title: value.title,\n      objsGroup: objsGroup,\n      interactiveObjs: [],\n      escalatorsObjs: [],\n      escalatorsNodes: {},\n      escalatorMeshes: [],\n      route_points: [],\n      route_tube: undefined,\n      route_texture: null,\n      routeMeshes: [],\n      route_active: false,\n    });\n  });\n  const DEFAULT_CAMERA_FOV = 75;\n  const DEFAULT_CAMERA_FAR = 10000;\n  config.CAMERA.far = DEFAULT_CAMERA_FAR;\n  config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n  const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n  config.CAMERA.maxDistance *= fovCorrection;\n  config.CAMERA.far *= fovCorrection;\n\n  const processedConfig: IConfig = {\n    ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n    BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n    BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n    BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n    BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n    BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n    CAMERA: {\n      ...config.CAMERA,\n      minZoom: parseInt(response.settings.MIN_ZOOM) ? parseInt(response.settings.MIN_ZOOM) : config.CAMERA.minZoom,\n      maxZoom: parseInt(response.settings.MAX_ZOOM) ? parseInt(response.settings.MAX_ZOOM) : config.CAMERA.maxZoom,\n      minDistance: config.CAMERA.minDistance,\n      maxDistance: config.CAMERA.maxDistance,\n    },\n    CAMERA_CONTROLS_STATES: (() => {\n      if (config.CAMERA_CONTROLS_STATES) {\n        console.debug('config', { ...config.CAMERA_CONTROLS_STATES })\n        return { ...config.CAMERA_CONTROLS_STATES };\n      } else {\n        return response.camera_controls_states[config.DEVICE];\n      }\n    })(),\n    // CAMERA_CONTROLS_STATES: config.CAMERA_CONTROLS_STATES ? config.CAMERA_CONTROLS_STATES : response.camera_controls_states[config.DEVICE],\n    CENTER_ID: config.CENTER_ID,\n    CONTROLS: null,\n    DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n    DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n    DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n    DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n    DEVICE: config.DEVICE,\n    KIOSK: config.KIOSK ? config.KIOSK : '',\n    KIOSKS: KIOSKS,\n    MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n    ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n    OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n    OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n    ROLE: config.ROLE,\n    SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n    STATS: config.STATS === 'true' || config.STATS === '1',\n    STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n    STORE_HEIGHT: response.settings.STORE_HEIGHT ? response.settings.STORE_HEIGHT : config.STORE_HEIGHT ? config.STORE_HEIGHT : '8',\n    STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n    STYLE: response.settings.STYLE ? response.settings.STYLE : config.STYLE ? config.STYLE : '3D',\n    WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n    WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n    FLOORS: response.floors,\n    AMENITIES: response.amenities,\n    RETAILERS: response.retailers,\n    AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n    AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n    KIOSK_SIZE: response.settings.KIOSK_SIZE ? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    ZOOM_STEP: response.settings.ZOOM_STEP ? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n  };\n\n  // AMENITIES_NAV_BG_COLOR: string;\n  // AMENITIES_NAV_ICON_COLOR: string;\n\n  return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response | null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n  const { floorsData } = useMapBoxContext();\n  const { allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph } = useMapBoxContext();\n  const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n  const [textParams, setTextParams] = useState<Array<{ textMesh: IExtMesh }[]>>([]);\n  const [storeLogos, setStoreLogos] = useState<{ storeLogo: Mesh }[][]>([]);\n  // const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n  const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n  const [urls, setUrls] = useState<string[]>([]);\n  const [processedConfig, setProcessedConfig] = useState<IConfig | null>(null);\n  let result = useLoader(SVGLoader, urls);\n\n  MEDIA_STORAGE_URI = useMemo(() => {\n    const r = /\\/$/;\n    if (mediaStorageURI) {\n      return mediaStorageURI?.replace(r, '');\n    }\n\n    return '';\n\n  }, [mediaStorageURI])\n\n  // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n  const myFont = useFont(fontData as unknown as FontData);\n\n  // const getWallShape = (...params: any): Shape | Shape[] => {\n  //     return []\n  // }\n\n\n  const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: { storeLogo: Mesh }) => {\n    setStoreLogos((prevLogos) => {\n      // console.debug({floorIndex});\n      if (prevLogos[floorIndex]) {\n        prevLogos[floorIndex].push({ ...meshLogo });\n      } else {\n        prevLogos[floorIndex] = [{ ...meshLogo }];\n      }\n      // console.debug({prevLogos});\n      return [...prevLogos];\n    });\n  }), [])\n\n  const mergedConfig = useMemo(() => {\n    let result = config;\n\n    if (jsonConfig) {\n      result = {\n        ...config,\n        ...jsonConfig,\n      }\n\n      if (jsonConfig.CAMERA) {\n        result.CAMERA = {\n          ...config.CAMERA,\n          ...jsonConfig.CAMERA,\n        }\n      }\n    }\n\n    return result;\n\n  }, [jsonConfig])\n\n  useEffect(() => {\n    if (!data) return;\n\n\n    // console.log('useMeshFloors[data]', {data})\n\n    const processedConfig = init(allIndexedMapObjects, allIndexedRetailers, mergedConfig, floorsData, data as MapIt2Response);\n    const values: string[] = [];\n    processedConfig.FLOORS.forEach((value) => {\n      // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n      //@ts-ignore\n      values.push(`${value.svg}`);\n    });\n\n    setProcessedConfig(processedConfig);\n    setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n  }, [data, allIndexedMapObjects, allIndexedRetailers, floorsData, jsonConfig, mergedConfig]);\n\n  const clearScene = useCallback(() => {\n    if (meshParams) {\n      meshParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.mesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (textParams) {\n      textParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.textMesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (storeLogos) {\n      storeLogos.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.storeLogo.removeFromParent();\n          })\n        }\n      })\n    }\n\n    setMeshParams([]);\n    setTextParams([]);\n    setStoreLogos([]);\n  }, [meshParams, textParams, storeLogos])\n\n  useEffect(() => {\n    return () => {\n      clearScene();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!processedConfig || !urls.length || !myFont || !result) return;\n\n    const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, processedConfig, result, role);\n    const TextsAndLogos: Array<{ textMesh: IExtMesh }[]> = [];\n    allNonIndexedMapObjects.forEach((params) => {\n      let values: IMeshValues | undefined;\n      for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n        //@ts-ignore\n        values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n        if (values !== undefined) {\n          break;\n        }\n      }\n      if (!values) return null;\n      const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n      if (textParams) {\n        if (!TextsAndLogos[values.floor_index]) {\n          TextsAndLogos[values.floor_index] = [];\n        }\n        TextsAndLogos[values.floor_index].push(textParams);\n      }\n    })\n    const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n      return (acc + item.length);\n    }, 0);\n    const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n    if (countNonIndexedObjs !== 0) {\n      const mapObjNames = new Set<string>();\n      allNonIndexedMapObjects.forEach((item) => {\n        mapObjNames.add(item.map_obj_name);\n      });\n      GeometriesAndMaterials.forEach((items) => {\n        items.forEach(item => {\n          if (!mapObjNames.has(item.object_id)) {\n            const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n            if (textParams) {\n              if (!TextsAndLogos[item.floor_index]) {\n                TextsAndLogos[item.floor_index] = [];\n              }\n              TextsAndLogos[item.floor_index].push(textParams);\n            }\n          }\n        })\n      });\n    }\n    setMeshParams([...GeometriesAndMaterials]);\n    setTextParams(TextsAndLogos);\n    setPathFinderGraph(graph);\n    setEscalatorNodes([...escalator_nodes]);\n\n  }, [processedConfig, urls, result, myFont, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, role, setPathFinderGraph, handleAsyncStoreLogos]);\n\n  return useMemo(() => {\n    return {\n      config: processedConfig,\n      meshParams,\n      textParams,\n      storeLogos,\n      floors: floorsData,\n      pathFinderGraph,\n      escalator_nodes: escalatorNodes,\n    }\n  }, [processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useState } from \"react\"\nimport { IConfig, IExtMesh } from \"src/types\";\n\n\nexport type TMeshObjectContext = {\n  MeshObject: IExtMesh[] | null;\n  SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n  cameraLength: number | undefined,\n  setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n  config: IConfig | undefined,\n  setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n  MeshObject: null,\n  SetMeshObject: () => null,\n  cameraLength: undefined,\n  setCameraLength: () => null,\n  config: undefined,\n  setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({ children }: { children: React.ReactNode }) {\n  const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n  const [config, setConfig] = useState<IConfig | undefined>();\n  const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n  return (\n    <MeshObjectContext.Provider\n      value={{\n        MeshObject,\n        SetMeshObject,\n        cameraLength,\n        setCameraLength,\n        config,\n        setConfig\n      }}\n    >\n      {children}\n    </MeshObjectContext.Provider>\n  )\n}\n\nexport function useMeshObjectContext() {\n  const context = useContext(MeshObjectContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n  }\n\n  return context;\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { IConfig } from \"src/types\";\nimport { SpriteMaterial, Texture } from \"three\";\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, config }: { size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined }) => {\n  const [, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && config !== undefined && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n    }\n  }, [lockSize, config, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize, depthTest: false, depthWrite: false });\n    return material;\n  }, [lockSize, texture])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const svgData = (new XMLSerializer()).serializeToString(svgOrigin);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n\n    }\n  }, []);\n\n  if (material) {\n    // console.log('RENDER SPRITE')\n    return (\n      <group>\n        <sprite scale={scale} material={material}>\n        </sprite>\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, IMeshParams, IMeshValues } from \"../../types\";\nimport { ThreeEvent } from \"@react-three/fiber\";\nimport React, { } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from '../../MapBox.module.scss';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: IMeshParams;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, currentFloorIndex: number, params?: IMeshValues }) {\n  const [, setUpdate] = React.useState(false);\n  const { type, mesh, currentFloorIndex } = props;\n  React.useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      // setUpdate((value) => !value);\n    };\n    return () => mesh.userData.triggerUpdate = undefined\n  }, [mesh.userData, setUpdate]);\n\n  const { config, cameraLength } = useMeshObjectContext();\n\n  // console.warn({update});\n\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </primitive>\n      } else {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </>\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n\n  const { config, meshParams, textParams, storeLogos } = meshFloors;\n  const floor = meshFloors.floors[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            // @ts-ignore\n            const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n            //console.log('Map', {baseColor, active, hovered})\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n      {escalatorMeshes?.map((params) => {\n        //@ts-ignore\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div onClick={() => handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n              <div className={styles.element} id={params.object_id as string}>\n                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type { Mesh } from \"three\";\nimport { Box3, Vector3 } from \"three\";\n\nexport function get_camera_focus_object(objs: Mesh[], fov: number, aspectRatio: number, style: string) {\n  // config.STYLE\n  // config.CAMERA.fov\n\n  if (!Array.isArray(objs)) {\n    objs = [objs];\n  }\n  if (!objs.length) {\n    console.warn('get_camera_focus_object: no objects passed');\n    return { position: new Vector3(), target: new Vector3() };\n  }\n\n  const objsBoundingBox = objs.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    if (obj.geometry.boundingBox) {\n      box.union(obj.geometry.boundingBox);\n    }\n    return box;\n  }, new Box3());\n\n  const obj_size = new Vector3();\n  objsBoundingBox.getSize(obj_size);\n\n  const center = new Vector3();\n  objsBoundingBox.getCenter(center);\n\n  objs[0].localToWorld(center);\n\n  // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n  // var padding = max_length * 0.2;\n  // if (padding > 50) padding = 50;\n  // max_length += padding;\n  // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n  let tanFOV = Math.tan(Math.PI * fov / 360);\n  let padding = 1.1;\n  let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n  let new_height = (obj_size.y * padding) / 2 / tanFOV;\n  let new_y = Math.max(new_width, new_height);\n  let new_z = getCameraTiltPosition(new_y, style);\n\n  const target = new Vector3(center.x, 0, center.z);\n  const position = new Vector3(center.x, new_y, center.z + new_z);\n\n  // createjs.Ticker.framerate = 60;\n  // createjs.Tween.get(config.CONTROLS.target)\n  //     .to({ x: center.x, z: center.z }, 400);\n  // createjs.Tween.get(config.CAMERA.position)\n  //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n  return { position, target };\n}\n\nfunction getCameraTiltPosition(y: number, style: string): number {\n  let angle = 60;\n  if (style === '2D') angle = 89.9;\n  return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IMeshParams } from \"../../types\";\nimport { Map } from \"./Map\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\n// import { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { defaultVars } from \"src/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n// import { allNodesFloor } from \"src/globals\";\n\ninterface IFloorsMapProps {\n  meshFloors: IMeshParams;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  onCameraMove?: (e: any) => void;\n  currKioskObj: Mesh;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: IZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  config: IConfig;\n  cameraPos?: { x: number, y: number, z: number } | undefined | null;\n  controlPos?: { x: number, y: number, z: number } | undefined | null;\n  handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n  isSelectedRetailerSlug: boolean;\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n  const { allIndexedMapObjects, allNodesFloor } = useMapBoxContext();\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const { meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    config,\n    handleCameraAndControlsChange,\n    activeObjectId,\n    isSelectedRetailerSlug } = params;\n  const { floors } = meshFloors;\n  const [cameraLimits, SetCameraLimits] = useState({ min: config.CAMERA.minDistance, max: config.CAMERA.maxDistance, needsUpdate: true })\n\n  const { setCameraLength } = useMeshObjectContext();\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = meshFloors.config.STYLE;\n  const accentColor = meshFloors.config.ACCENT_COLOR;\n  const pathFinderGraph = meshFloors.pathFinderGraph;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n\n  const resetCamera = useCallback((fullReset: boolean = false) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    let isZeroCCS = true;\n\n    if (config.CAMERA_CONTROLS_STATES) {\n      let cameraV3 = config.CAMERA_CONTROLS_STATES.camera;\n      if (!(cameraV3 instanceof Vector3)) {\n        cameraV3 = new Vector3(cameraV3.x, cameraV3.y, cameraV3.z);\n      }\n      isZeroCCS = (cameraV3 as Vector3).length() === 0;\n    }\n\n    if (!fullReset && config.CAMERA_CONTROLS_STATES && !isZeroCCS && !['PORTAL'].includes(config.ROLE)) {\n      focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n      focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n    }\n\n\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n  }, [camera, cameraLimits, config.CAMERA.animSpeed, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA_CONTROLS_STATES, config.ROLE, currKioskFloorIndex, meshFloors.meshParams, style]);\n\n\n  const focusDistance = cameraFocus.current ? cameraFocus.current.position.distanceTo(cameraFocus.current.target) : 0;\n\n  useEffect(() => {\n\n    if (focusDistance > 0 && cameraLimits.needsUpdate) {\n      const maxDistance = focusDistance + config.CAMERA.minZoom\n      const minDistance = focusDistance - config.CAMERA.maxZoom\n      console.log('ConfigCamera', config.CAMERA)\n      SetCameraLimits({ min: minDistance, max: maxDistance, needsUpdate: false })\n    }\n\n  }, [focusDistance])\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length, resetCamera])\n\n  useEffect(() => {\n    if (!amenityTargetType || config.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(allNodesFloor, from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n    setRouteTubes(route);\n  }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from, config.ROLE, allNodesFloor, allIndexedMapObjects])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n      if (config.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floors.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n\n    console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    // TODO: activate object (moved out of create_route function)\n    // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n    // TODO: focus object (moved out of create_route function)\n    // if (!routePaths.length) {\n    //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n    //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n    //     camera.position.copy(position);\n    // }\n\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE, allNodesFloor]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && (config.ROLE === 'PORTAL' || isSelectedRetailerSlug)) {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed, floors, activeObjectId, amenityTargetType, isSelectedRetailerSlug]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n      const zoomStep = config.ZOOM_STEP ? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= zoomStep;\n      } else {\n        cameraDistance += zoomStep;\n      }\n\n      cameraDistance = Math.min(\n        cameraLimits.max,\n        Math.max(\n          cameraLimits.min,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoom])\n\n\n  // useEffect(() => {\n  //     if (mapControlRef.current) {\n\n  //         // Set initial camera position\n  //         if (cameraPos)\n  //             mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n  //         // Set initial controls target\n  //         if (controlPos)\n  //             mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n  //         mapControlRef.current.update();\n  //     }\n  // }, [mapControlRef]);\n\n  // useEffect(() => {\n  //     if (mapControlRef.current) {\n  //         if (cameraPos)\n  //             mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n  //         // Set initial controls target\n  //         if (controlPos)\n  //             mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n  //         mapControlRef.current.update();\n  //     }\n  // }, [cameraPos, controlPos]);\n\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange) {\n        handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n      }\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n  }))\n\n  // console.log('CAMERA LIMITs', \"MinLimits\", cameraLimits.min, \"Max\", cameraLimits.max)\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={cameraLimits.min}\n        maxDistance={cameraLimits.max}\n        enableZoom={config.ROLE === \"PORTAL\"}\n        enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floors && floors.map((value: IFloorData, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.scss';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\n\nconst UIComponent = ({\n  floors,\n  accentColor,\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  role,\n  mapObjs,\n  onExtractedAmenities,\n}: IFloorSelectorProps & {\n  amenitiesList: IAmenitiesInteractiveList[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: (fullReset?: boolean) => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  role?: TRoles,\n  mapObjs?: MapObj[],\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      if (role === 'PORTAL_RESPONSIVE' || role === 'PORTAL') {\n        reset(true)\n      }\n      else {\n        reset();\n      }\n    }\n  }\n\n  const extractValues = useMemo<AmenityID[]>(() => {\n\n    if (!mapObjs) {\n      return [];\n    }\n\n    return mapObjs\n      .filter(obj => obj.layer_type === \"amenity\")\n      .map(obj => obj.value as AmenityID);\n  }, [mapObjs])\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [mapObjs, onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floors.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              {floors.length > 1 && (\n                <div className=\"floors btn_group\">\n                  {floors.map((floor: any, index: number) => (\n                    <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                      console.log(floor, index);\n                      handleFloorChange(index)\n                    }}>{floor.title}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(role as string) &&\n          <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                  <div className={styles.img}>\n                    {/* <img src={amenity.icon} alt={amenity.name} /> */}\n                    <amenity.icon />\n                  </div>\n                  <div className={`${styles.name}`}>{amenity.name}</div>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { useCallback } from \"react\";\n\ntype GetRetailersParams = {\n  centerId: string | number,\n  apiURI?: string,\n}\n\nexport type Data = {\n  isError: boolean,\n  error: string | null,\n  items: any[],\n  count: number,\n}\n\nconst defaultData: Data = {\n  isError: false,\n  error: null,\n  items: [],\n  count: 0,\n}\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n  const { centerId, apiURI } = params;\n\n  const fetchRetailers = useCallback((search: string, page?: number, limit?: number) => {\n    const r = /\\/$/;\n    const uri = apiURI?.replace(r, '');\n    const url = `${uri}/v1/retailers?limit=${limit ? limit : 100}&page=${page ? page : 1}&search=${search ? search : ''}`;\n\n    return fetch(url, {\n      headers: {\n        center_id: centerId.toString(),\n      },\n    }).then(response => {\n      if (!response.ok) {\n        return {\n          ...defaultData,\n          isError: true,\n          error: `Server error: [${response.status}] [${response.statusText}] [${response.url}]`,\n          items: [],\n        };\n      }\n      return (async () => {\n        return await response.json().then(retailers => {\n          return {\n            ...defaultData,\n            items: retailers.items,\n            count: retailers.count,\n          }\n        });\n      })()\n    }).catch((e: any) => {\n      return {\n        ...defaultData,\n        isError: true,\n        error: e.message ? e.message : 'useGetRetailer: something went wrong!',\n        items: [],\n      };\n    })\n  }\n    , [centerId, apiURI]);\n\n  return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { useCallback, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, MeshPhongMaterial, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IMeshParamsTmp } from \"src/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useRetailersOptions, { RetailerOption } from \"./hooks/useRetailersOptions\";\n\n\ninterface IMapboxForm {\n  floorIndex: number;\n  meshFloors: IMeshParamsTmp;\n  config: IConfig;\n  data: any;\n  setData: (index: number, data: MapObj) => void;\n  selectedId: string;\n  centerId: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  apiURI?: string;\n  onResetData?: (data: MapObj) => void;\n  triggerSceneUpdate: Function;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n  [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n  id: '',\n  center_id: centerId,\n  retailer_id: '',\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: '8',\n  lock_size: '0',\n  rotate: '0',\n  offsetX: '0',\n  offsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj, floorIndex: Number) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData, floorIndex) => {\n  const kioskConfig = obj.userData.kioskConfig;\n  if (kioskConfig) {\n    //TODO use 'value' until api with lock_size will be working\n    obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n    obj.userData.kioskConfig = {\n      ...kioskConfig,\n      lockSize: formData.value === '1',\n      blink: kioskConfig.blink,\n      size: Number(formData.size),\n      floorIndex: floorIndex\n    }\n    // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n    obj.userData.triggerUpdate?.();\n  }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n  const { data, setData, selectedId, centerId, config, floorIndex, onResetData, triggerSceneUpdate } = params;\n\n  const myFont = useFont(fontData as unknown as FontData);\n  const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n  const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n  const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n  const [formData, setFormData] = useState<MapObj | null>(null);\n  const [rotation] = useState<number | undefined>(undefined);\n  const context = useMeshObjectContext();\n  const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [, startTransition] = useTransition();\n  const intervalRefs = useRef<TIncDecInterval>({});\n\n  const { isLoading: isLoadingRetailers, loadOptions: loadRetailersOptions, retailers, nextPage } = useRetailersOptions(centerId, params.apiURI ?? '');\n\n  const [selectedKiosksId, setSelectedKiosksId] = useState<number[]>([]);\n\n  useEffect(() => {\n    if (data?.map_objs) {\n      const ids = (data.map_objs as { kiosk_id: number }[]).reduce<number[]>((prev, cur) => {\n        if (cur.kiosk_id !== null) {\n          return [...prev, cur.kiosk_id];\n        }\n        return prev;\n      }, [])\n      setSelectedKiosksId([...ids]);\n    }\n  }, [data.map_objs])\n\n  const loadKiosksOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    // console.debug({ inputValue })\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.filter((item: any) => {\n        if (inputValue) {\n          return (item.title as string).toLowerCase().startsWith(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    callback(result);\n  }, [data.kiosks, selectedKiosksId])\n\n  const getDefaultKioksOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    return result;\n  }, [data.kiosks, selectedKiosksId])\n\n  const makeImage = useCallback((formData: MapObj, obj: IExtMesh) => {\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let img = null;\n    if (formData.layer_type === 'retail_logo') {\n      const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n      if (retailIndex !== -1) {\n        img = getImage(formData, data.retailers[retailIndex]);\n      }\n    } else {\n      img = getImage(formData);\n    }\n    if (img instanceof HTMLImageElement) {\n      processImage(img, formData, (geometry, material) => {\n        obj.geometry = geometry;\n        obj.material = material;\n\n        const boundingBox = geometry.boundingBox;\n\n        const mesh_center_point = new Vector3();\n        if (boundingBox) {\n          boundingBox.getCenter(mesh_center_point);\n\n          const mesh_size = new Vector3();\n          boundingBox.getSize(mesh_size);\n          if (obj.object_id) {\n            layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n          }\n        }\n      });\n    }\n  }, [data.retailers, oldMapObjName])\n\n  const makeTextGeometry = useCallback((obj: IExtMesh, text: string, size: string) => {\n    if (!obj) return;\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let text_geometry = new TextGeometry(text, {\n      font: (obj.userData && obj.userData.font) ? obj.userData.font : myFont,\n      size: parseInt(size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n    if (obj.geometry) {\n      obj.geometry.dispose();\n    }\n    obj.geometry = text_geometry;\n  }, [formData?.map_obj_name, myFont, oldMapObjName])\n\n  const updateData = useCallback((formData: MapObj) => {\n    const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n    if (index !== -1) {\n      data.map_objs[index] = { ...formData };\n      setData(index, { ...formData });\n    }\n  }, [data.map_objs, setData])\n\n\n  const handleChangeTab = useCallback((k: any | null) => {\n    if (!formData) return;\n    const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n    if (key !== null) {\n      if (isTMainTabsKey(key)) {\n        setMainTabKey(key);\n        if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n          formData.obj_type = key;\n          if (key === 'retailer') {\n            formData.layer_type = 'retail_name';\n            clearKioskConfig(context);\n          } else if (key === 'special') {\n            formData.layer_type = 'kiosk';\n            formData.retailer_id = '';\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              if (obj) {\n                if (!obj.userData) {\n                  obj.userData = {};\n                }\n                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                obj.userData.kioskConfig = {\n                  lockSize: formData.value === '1',\n                  blink: false,\n                  size: Number(formData.size)\n\n                }\n                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n              }\n            }\n          } else if (key === 'custom') {\n            formData.layer_type = 'custom_text';\n            formData.retailer_id = '';\n            clearKioskConfig(context);\n          }\n          setMainTabKey('');\n          setRetailerTabsKey('');\n          setSpecialTabsKey('');\n          setFormData({ ...formData });\n          updateData({\n            ...formData,\n          });\n        }\n      } else if (isTRetailerTabsKey(key)) {\n        setRetailerTabsKey(key);\n        clearKioskConfig(context);\n        if (formData.id && retailerTabsKey && key) {\n          formData.layer_type = key;\n          if (formData.layer_type !== key) {\n            setFormData({ ...formData });\n          }\n          updateData({\n            ...formData,\n          })\n          if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n            let text = '';\n            switch (key) {\n              case 'retail_name':\n\n                if (!formData.retailer_id) {\n                  break;\n                }\n\n                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n\n                if (retailIndex !== -1) {\n                  text = data.retailers[retailIndex].retail_name;\n\n                }\n                break;\n              case 'retail_text':\n              case 'custom_text':\n                text = formData.custom_text;\n                break;\n            }\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              makeTextGeometry(obj, text, formData.size);\n            }\n          }\n\n          if (['retail_logo', 'custom_image'].includes(key)) {\n            context?.MeshObject?.forEach((obj, index) => {\n              if (index === 0) return;\n\n              makeImage(formData, obj);\n            })\n          }\n        }\n      } else if (isTSpecialTabsKey(key)) {\n        setSpecialTabsKey(key);\n        formData.layer_type = key;\n        if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n          if (key !== 'kiosk') {\n            clearKioskConfig(context);\n          }\n          formData.layer_type = key;\n          formData.kiosk_id = '';\n          formData.retailer_id = '';\n          formData.value = '';\n          setFormData({ ...formData });\n          updateData({ ...formData });\n        }\n      }\n    }\n  }, [context, data.retailers, formData, mainTabKey, makeImage, makeTextGeometry, retailerTabsKey, specialTabsKey, updateData])\n\n\n  useEffect(() => {\n    switch (mainTabKey) {\n      case 'retailer':\n        handleChangeTab(retailerTabsKey);\n        break;\n    }\n  }, [formData, handleChangeTab, mainTabKey, retailerTabsKey])\n\n\n  const handleReset = () => {\n    if (!formData) return;\n    const defaultValues = getDefaultMapOjbValues(formData.center_id);\n    if (onResetData) {\n      onResetData({\n        ...formData,\n      })\n    }\n    setFormData({\n      ...defaultValues,\n      id: formData.id,\n    });\n    updateData({\n      ...defaultValues,\n      id: formData.id,\n    });\n  }\n\n  const handleChangeRetailer = (value: number | undefined) => {\n    if (value && formData) {\n      formData.retailer_id = value.toString();\n      formData.kiosk_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n    }\n  }\n\n  const handleChangeKiosk = ({ value }: { value: string }) => {\n    if (value && formData) {\n      formData.kiosk_id = value;\n      formData.retailer_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        updateMapCenterMarkerFor(obj, formData, floorIndex);\n        triggerSceneUpdate();\n      })\n    }\n  }\n\n  const handleChangeAmenity = (e: any) => {\n    if (e.target.value && formData) {\n      formData.value = e.target.value;\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        makeImage(formData, obj);\n      })\n    }\n  }\n\n  const changeValue = (name: string, value: string) => {\n    if (!formData) return;\n    // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n    //     formData.custom_image = value;\n    //     setFormData({...formData});\n    //     updateData({...formData});\n    // }\n\n    context?.MeshObject?.forEach((obj, index) => {\n      if (!obj.userData) {\n        obj.userData = {};\n      }\n      if (!obj.userData.position) {\n        obj.userData.position = new Vector3();\n        if (obj.position) {\n          obj.userData.position.copy(obj.position);\n        }\n      }\n      const position = new Vector3();\n      if (obj.userData.position) {\n        position.copy(obj.userData.position);\n      }\n      switch (name) {\n        case 'custom_text':\n          if (index === 0) break;\n          formData.custom_text = value;\n          if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n            makeTextGeometry(obj, formData.custom_text, formData.size);\n          }\n          break;\n        case 'custom_image':\n          if (index === 0) break;\n          formData.custom_image = value;\n          makeImage(formData, obj);\n          updateData({\n            ...formData,\n          })\n          break;\n        case 'size':\n          if (index === 0) break;\n          formData.size = value;\n          if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n            let text = '';\n            if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n              const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n              if (retailIndex !== -1) {\n                text = data.retailers[retailIndex].retail_name;\n              }\n            } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n              text = formData.custom_text;\n            }\n            makeTextGeometry(obj, text, formData.size);\n          } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n            makeImage(formData, obj);\n            if (timeoutRef.current) {\n              clearInterval(timeoutRef.current);\n            }\n            timeoutRef.current = setTimeout(() => {\n              updateData({ ...formData });\n            }, 300);\n          } else if (['amenity'].includes(formData.layer_type)) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              setFormData({ ...formData });\n              updateData({ ...formData });\n            })\n          } else if (['kiosk'].includes(formData.layer_type)) {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'lock_size':\n          formData.lock_size = value;\n          //TODO use 'value' until api with lock_size will be working\n          formData.value = value;\n          if (formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'rotate':\n          if (index === 0) break;\n          formData.rotate = value;\n          obj.rotation.set(\n            obj.rotation.x,\n            obj.rotation.y,\n            parseFloat(formData.rotate) * Math.PI / 180\n          );\n          break;\n\n        case 'offsetX':\n          if (index === 0) break;\n          position.x += parseFloat(value);\n          obj.position.setX(position.x);\n          formData.offsetX = value;\n          break;\n\n        case 'offsetY':\n          if (index === 0) break;\n          position.y += parseFloat(value);\n          obj.position.setY(position.y);\n          formData.offsetY = value;\n          break;\n\n        case 'text_color':\n          if (index === 0) break;\n          formData.text_color = value;\n          if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n            const material_settings = {\n              // color: hex_to_color(formData.text_color),\n              color: formData.text_color,\n              transparent: true,\n              side: DoubleSide,\n              depthWrite: false,\n              depthTest: false,\n            };\n            let text_material = new MeshPhongMaterial(material_settings);\n            obj.material = text_material;\n          } else if (\n            formData.layer_type === 'retail_logo' ||\n            formData.layer_type === 'custom_image' ||\n            (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n            (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              updateData({\n                ...formData,\n                text_color: formData.text_color.replace('#', ''),\n              });\n            })\n          }\n          break;\n\n        case 'bg_color':\n          if (index !== 0) break;\n          formData.bg_color = value;\n          let meshType: MeshType = 'store';\n          if (obj.object_id?.startsWith('big-store')) {\n            meshType = 'big-store';\n          }\n          obj.material = getMaterial(\n            config,\n            meshType,\n            formData.map_obj_name,\n            formData.bg_color,\n            formData.transparent === \"1\" ? true : false,\n            { [formData.map_obj_name]: { ...formData } }\n          );\n          // updateData({...formData});\n          break;\n\n        default:\n          break;\n      }\n      startTransition(() => {\n        setFormData({ ...formData })\n        updateData({ ...formData });\n      });\n\n    })\n  }\n  const handleChange = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value;\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  const handleChangeLock = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value === '0' ? '1' : '0';\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  useEffect(() => {\n    if (data && data.map_objs && selectedId) {\n      const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n      if (index !== -1) {\n        setFormData({ ...data.map_objs[index] });\n      } else {\n        setFormData({\n          ...getDefaultMapOjbValues(centerId),\n          id: 'new-' + (new Date()).getTime(),\n        });\n      }\n    }\n    return () => {\n      setRetailerTabsKey('');\n    }\n  }, [centerId, data, selectedId])\n\n  useEffect(() => {\n    if (!formData) return;\n    if (formData.obj_type) {\n      handleChangeTab(formData.obj_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n    if (formData.layer_type) {\n      handleChangeTab(formData.layer_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n  }, [formData, handleChangeTab])\n\n  const decrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value -= 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const incrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const rotateByFixedAngle = (key: TIncDecKey, angle: number) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += angle;\n      if (value > 360) {\n        value = angle;\n      } else if (value === 360) {\n        value = 0;\n      }\n\n      changeValue(key, value.toString());\n    }\n  }\n\n  const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      rotateByFixedAngle(key, angle);\n    }, 200);\n  }\n\n  const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      decrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        decrementValue(key);\n      }, 50);\n    }, 200);\n  }\n\n  const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      incrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        incrementValue(key);\n      }, 50)\n    }, 200);\n  }\n\n  const stopIntervals = () => {\n    let key: TIncDecKey;\n    for (key in intervalRefs.current) {\n      if (intervalRefs.current[key])\n        clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = null;\n    }\n  }\n\n  const handleOnSubmit = () => {\n    if (params.onSubmit && context && context.MeshObject && formData) {\n      formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n      const kioskId = formData.kiosk_id !== null ? parseInt(formData.kiosk_id) : null;\n      params.onSubmit({ ...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId });\n    }\n  }\n\n  if (!formData) return null;\n\n  return (\n    <>\n      <Tab.Container activeKey={mainTabKey}>\n        <Col>\n          <Row>\n            <Col sm=\"9\">\n              <Nav\n                variant=\"tabs\"\n                className=\"flex-row\"\n                // activeKey={mainTabKey}\n                onSelect={handleChangeTab}\n              >\n                <Nav.Item>\n                  <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm=\"3\" className=\"px-0\">\n              {/* \n                //@ts-ignore */}\n              <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\">\n              <Tab.Content>\n                <Tab.Pane eventKey={\"retailer\"}>\n                  <AsyncSelect\n                    className=\"mb-3\"\n                    aria-label=\"Choose a Retailer\"\n                    loadOptions={loadRetailersOptions}\n                    onMenuScrollToBottom={nextPage}\n                    isLoading={isLoadingRetailers}\n                    loadingMessage={() => <div>loading retailers...</div>}\n                    noOptionsMessage={() => 'Retailers not found'}\n                    placeholder=\"Choose a Retailer...\"\n                    value={retailers.filter((item: RetailerOption) => item.value === Number(formData.retailer_id))?.map((item: RetailerOption) => ({\n                      value: item.value,\n                      label: item.label,\n                    }))}\n                    defaultOptions={retailers.map((item: RetailerOption) => ({ value: item.value, label: item.label }))}\n                    onChange={(item) => handleChangeRetailer(item?.value)}\n\n                  />\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"retail-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                    <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                    <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              as=\"textarea\"\n                              name=\"custom_text\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"special\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"special-tab-form\"\n                    activeKey={specialTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose a Kiosk\"\n                        loadOptions={loadKiosksOptions}\n                        noOptionsMessage={() => 'Kiosks not found'}\n                        placeholder=\"Choose a Kiosk...\"\n                        value={data.kiosks?.filter((item: any) => formData.kiosk_id === item.id)?.map((item: any) => ({\n                          value: item.id,\n                          label: item.title,\n                        }))}\n                        defaultOptions={getDefaultKioksOptions()}\n                        onChange={handleChangeKiosk}\n\n                      />\n                    </Tab>\n                    <Tab eventKey=\"amenity\" title=\"Amenity\">\n                      <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                        <option value={''} disabled hidden>Choose Amenity...</option>\n                        {Object.keys(data.amenities)?.map((value: string) => (\n                          <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                        ))}\n                      </Form.Select>\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"custom\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"custom-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"custom_text\" title=\"Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              name=\"custom_text\"\n                              as=\"textarea\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                    <Tab eventKey=\"custom_image\" title=\"Image\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              type=\"string\"\n                              name=\"custom_image\"\n                              value={formData.custom_image}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Col>\n      </Tab.Container>\n      <Form.Group className=\"mb-3 mt-3\">\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Size</Form.Label>\n          </Col>\n          <Col>\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('size')}\n                  onMouseDown={handleDecrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"size\"\n                  type=\"text\"\n                  value={formData.size}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('size')}\n                  onMouseDown={handleIncrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                <Row>\n                  <Col sm=\"4\">\n                    <Form.Check\n                      name=\"lock_size\"\n                      id=\"lock_size\"\n                      type=\"checkbox\"\n                      //TODO use 'value' until api with lock_size will be working\n                      value={formData.value}\n                      checked={formData.value === '1'}\n                      onChange={handleChangeLock}\n                    />\n                  </Col>\n                  <Col sm=\"8\" className=\"p-0\">\n                    <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Rotate</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('rotate')}\n                  onMouseDown={handleDecrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"rotate\"\n                  type=\"number\"\n                  value={rotation ?? formData.rotate}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('rotate')}\n                  onMouseDown={handleIncrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div style={{ maxWidth: 50, height: 50 }}>\n                <Button\n                  onClick={() => rotateByFixedAngle('rotate', 45)}\n                  onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >\n                  <ArrowClockwise size={'1rem'} />\n                </Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset X</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetX')}\n                  onMouseDown={handleDecrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n\n                <Form.Control\n                  name=\"offsetX\"\n                  type=\"number\"\n                  value={formData.offsetX}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetX')}\n                  onMouseDown={handleIncrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetY')}\n                  onMouseDown={handleDecrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"offsetY\"\n                  type=\"number\"\n                  value={formData.offsetY}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetY')}\n                  onMouseDown={handleIncrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"3\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">BG Color</Form.Label>\n          </Col>\n          <Col sm=\"3\" className=\"p-0\">\n            <Form.Control\n              name=\"bg_color\"\n              type=\"string\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"2\">\n            <Form.Control\n              type=\"color\"\n              name=\"bg_color\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Row>\n              <Col sm=\"3\">\n                <input\n                  name=\"transparent\"\n                  id=\"transparent\"\n                  type=\"checkbox\"\n                  value={formData.transparent}\n                  onChange={handleChange}\n                ></input>\n              </Col>\n              <Col sm=\"9\" className=\"p-0\">\n                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"4\" className=\"d-flex justify-content-start\">\n              <Form.Label className=\"mb-0\">Text Color</Form.Label>\n            </Col>\n            <Col sm=\"5\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                name=\"text_color\"\n                type=\"color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        {['kiosk', 'amenity'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"3\">\n              <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n            </Col>\n            <Col sm=\"6\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                type=\"color\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        <Row className=\"justify-content-center px-5 py-5\">\n          <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-') ? 'Save' : 'Update'}</button>\n        </Row>\n      </Form.Group>\n    </>\n  );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext) {\n  if (context && context.MeshObject) {\n    const obj = context.MeshObject[1];\n    if (obj && obj.userData && obj.userData.kioskConfig) {\n      obj.userData.kioskConfig = undefined;\n    }\n  }\n}\n\n","import { useCallback, useEffect, useState } from \"react\"\nimport useGetRetailers, { Data } from \"../useGetRetailersBySearch\";\nexport type RetailerOption = {\n  value: number,\n  label: string,\n  isDisabled?: boolean,\n  isFixed?: boolean,\n}\ntype UseRetailersOptions = (centerId: string, apiURI: string) => {\n  isLoading: boolean,\n  loadOptions: (inputValue: string, callback: (options: any[]) => void) => void,\n  retailers: RetailerOption[],\n  nextPage: () => void,\n};\nconst useRetailersOptions: UseRetailersOptions = (centerId, apiURI) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [retailers, setRetailers] = useState<any[]>([]);\n  const [page, setPage] = useState<number>(1);\n  const [limit] = useState<number>(100);\n  const [pages, setPages] = useState<number>(0);\n  const fetchRetailers = useGetRetailers({ centerId, apiURI });\n\n  const processData = useCallback((data: Data, isLoadingMore?: boolean) => {\n    setIsLoading(false);\n    let result: any = [];\n    if (!data) return result;\n    if (!data.isError) {\n      result = data.items.map((item: any) => {\n        return {\n          value: item.id,\n          label: `${item.name}${item.location && item.location.length > 1 ? item.location : ''}`,\n        }\n      })\n    } else {\n      console.error(`Fetch Retailers error: ${data.error}`)\n    }\n    return result;\n  }, []);\n\n  const loadOptions = useCallback((inputValue: string, callback: (options: RetailerOption[]) => void) => {\n    setIsLoading(true);\n    const retailersData = fetchRetailers(inputValue);\n    retailersData.then(data => {\n      const result = processData(data)\n      callback(result);\n    })\n  }, [fetchRetailers, processData])\n\n  useEffect(() => {\n    setIsLoading(true);\n    const retailersData = fetchRetailers('', page, limit);\n    retailersData.then(data => {\n      setPages(Math.round(data.count / limit));\n      const result = processData(data);\n      if (Math.round(data.count / limit) > page) {\n        result.push({\n          value: -1,\n          label: 'Loading more...',\n          isDisabled: true,\n        })\n      }\n      setRetailers([...result]);\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchRetailers, limit, processData])\n\n  const nextPage = useCallback(() => {\n    if (page < pages) {\n      setIsLoading(true);\n      const retailersData = fetchRetailers('', page + 1, limit);\n      retailersData.then(data => {\n        setPage(page => page + 1);\n        const result: RetailerOption[] = processData(data);\n        if (pages > page + 1) {\n          result.push({\n            value: -1,\n            label: 'Loading more...',\n            isDisabled: true,\n          })\n        }\n        setRetailers(prev => ([...prev.filter(item => item.value !== -1), ...result]));\n      })\n    }\n  }, [fetchRetailers, limit, page, pages, processData]);\n\n\n  return {\n    isLoading,\n    loadOptions,\n    retailers,\n    nextPage,\n  }\n}\n\nexport default useRetailersOptions;","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n    centerId: string,\n    slug: string,\n    webApiURI: string,\n}\n\nexport type RetailerData = {\n    data: IRetailer | null,\n    isLoading: boolean,\n    isError: boolean,\n    error: string | null,\n}\n\nconst defaultData: RetailerData = {\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n} \nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n    const {centerId, slug, webApiURI} = props;\n    const [data, setData] = useState<RetailerData>(defaultData);\n\n    useMemo(() => {\n        if (!slug || !centerId) {\n            setData({...defaultData});\n            return false;\n        }\n\n        let apiURI = webApiURI;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            setData({\n                isLoading: true,\n                data: null,\n                isError: false,\n                error: null,\n            })\n            fetch(`${apiURI}/v1/retailers/${slug}`, {\n                headers: {\n                    center_id: centerId,\n                }\n            }).then(\n                (response) => response.json()\n            ).then(data => {\n                setData({\n                    isLoading: false,\n                    isError: false,\n                    error: null,\n                    data: {\n                        id: data.id,\n                        retail_name: data.name,\n                        slug: data.slug,\n                        location: data.location && data.location !== '-'? data.location : '',\n                        retailer_phone: data.retailer_phone,\n                        retailer_description: data.global_retailer.description,\n                        logo: data.media.url,\n                        map_obj_name: '',\n                    }\n                });\n            }).catch((e: any) => {\n                setData({\n                    data: null,\n                    isLoading: false,\n                    isError: true,\n                    error: `Error fetch retaler data: ${e.message}`,\n                })\n            })\n        } else {\n            setData({\n                isLoading: false,\n                isError: true,\n                error: 'webApiURI not provided!',\n                data: null,\n            })\n        }\n\n    }, [centerId, slug, webApiURI]);\n\n    return data;\n\n}\n\nexport default useRetailerData;\n","import { Form, FormGroup, Modal, Placeholder, Spinner } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n  amenity: string,\n  show: boolean,\n  onHide: () => void,\n  centerId: string,\n  retailers?: IRetailer[],\n  mapObjs?: MapObj[],\n  mapObjectName?: string,\n  webApiURI: string,\n  onClick?: (id: string, amenityType?: string) => void,\n  kioskId: string,\n}\n\nconst RetailerInfoList = ({ retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId }: { retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string }) => {\n  const [retailerId, setRetailerId] = useState<string>('');\n\n  const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    if (onClick) {\n      onClick(retailerId);\n    }\n  }\n\n  const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setRetailerId(e.target.value);\n  }\n\n  const filterRetailers = (retailers: IRetailer[], arrayObjects: MapObj[]) => {\n    return retailers.filter(retailer =>\n      arrayObjects.some(obj => obj.retailer_id === retailer.id)\n    );\n  }\n\n  if (!isAmenity && (isLoading || !retailer)) {\n    return (\n      <div>\n        <div className={styles['retailer-info-spinner']} >\n          <Spinner animation=\"border\" role=\"status\" variant=\"secondary\" />\n        </div>\n        <div className={styles['retailer-info-content']} >\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={5} /> <Placeholder bg=\"secondary\" xs={3} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={7} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {!!retailer && (\n        <>\n          <div className={styles['retailer-logo']}>\n            <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n          </div>\n          <div className={styles['retailer-info-content']} >\n            <div>\n              <b>Retailer:</b> {retailer.retail_name}\n            </div>\n            {retailer.location &&\n              <div>\n                <b>Location:</b> {retailer.location}\n              </div>\n            }\n            {retailer.retailer_phone &&\n              <div>\n                <b>Phone:</b> {retailer.retailer_phone}\n              </div>\n            }\n            {retailer.retailer_description &&\n              <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n            }\n          </div>\n        </>\n      )}\n      <Form className={styles['get-directions-from']}>\n        <FormGroup>\n          <div className=\"d-flex align-items-center gap-3\">\n            {!kioskId.length ?\n              <>\n                <Form.Select\n                  name=\"retailer\"\n                  onChange={onChange}\n                  value={retailerId}\n                >\n                  <option value={''} disabled>Get direction from ...</option>\n                  {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                    if (retailer && item.id === retailer.id) return null;\n                    return (\n                      <option key={index} value={item.id}>{item.retail_name}</option>\n                    )\n                  }\n                  )}\n                </Form.Select>\n                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n              </>\n              : null\n            }\n          </div>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n  const {\n    amenity,\n    show,\n    onHide,\n    centerId,\n    retailers,\n    mapObjs,\n    mapObjectName,\n    webApiURI,\n    onClick,\n    kioskId,\n  } = props;\n  const slug = useMemo(() => {\n    if (centerId && mapObjs && retailers && mapObjectName) {\n      const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n      if (mapObj && mapObj.retailer_id) {\n        const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n        if (retailer) {\n          return retailer.slug;\n        }\n      }\n    }\n    return '';\n  }, [centerId, mapObjectName, mapObjs, retailers]);\n  const data = useRetailerData({ centerId, slug, webApiURI });\n  const handleOnClick = (retailerId: string) => {\n    if (!onClick) return;\n    let mapObj = null;\n    if (kioskId) {\n      mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id ?? '') === parseInt(kioskId));\n    } else {\n      mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n    }\n\n    let mapObjectName = '';\n\n\n    if (mapObj) {\n      mapObjectName = mapObj.map_obj_name;\n    }\n\n    if (amenity) {\n      onClick(mapObjectName, amenity);\n    } else {\n      onClick(mapObjectName);\n    }\n  }\n\n  const isAmenity = (amenity !== '' || (mapObjectName ? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n  return (\n    <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n      <div className={styles['retailerInfoCloseBtn']}>\n        <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n      </div>\n      <Modal.Body className=\"p-3\">\n        <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState, useTransition } from \"react\";\nimport { Canvas, ThreeEvent } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { Mesh, Object3D } from \"three\";\nimport { IExtMesh, IJsonConfig, IMeshParams, IMeshValues } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.scss';\nimport { Alert } from 'react-bootstrap';\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { AmenityID } from \"src/MapBox\";\nimport { defaultVars } from \"src/defaults\";\n\ninterface ISceneComponentProps {\n  mapitData?: MapIt2Response;\n  config: Partial<IJsonConfig>;\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObj[]) => void;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n}\n\nexport interface IZoomData {\n  direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n  const { data, refreshData, removeMissingMapObjects } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlState, setCameraControlState] = useState<any>(null);\n  const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition } = params;\n\n  const [, startTransition] = useTransition();\n  const [disableClicks, setDisableClicks] = useState(false);\n\n  const [selectedRetailerSlug, setSelectedRetailerSlug] = useState<string>('');\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n  const [, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n  const cameraControlStateRef = useRef<any>(null);\n  cameraControlStateRef.current = cameraControlState;\n  const deviceTypeRef = useRef<string | undefined | null>(null);\n  deviceTypeRef.current = deviceType;\n  // console.log('DEVICE TYPE', deviceType);\n  const floorsMapRef = useRef<{ resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const handleFloorChange = (floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }\n\n  const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n\n  useEffect(() => {\n    if (data?.map_objs && data.map_objs.length > 0 && meshFloors.meshParams.length) {\n      const objectNames = meshFloors.meshParams.reduce<string[]>((prev, cur) => {\n        const curVal = cur.reduce<string[]>((subPrev, subCur) => {\n\n          return [...subPrev, subCur.object_id];\n        }, []);\n        return [...prev, ...curVal];\n      }, [])\n      if (objectNames) {\n        removeMissingMapObjects(objectNames);\n      }\n    }\n  }, [data?.map_objs, meshFloors.meshParams, removeMissingMapObjects])\n\n  const mapCenterMarkerRef = useRef(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const context = useMeshObjectContext();\n  const { SetMeshObject } = context;\n  const [, setSceneKey] = useState(0);\n\n  const updateKey = useCallback(() => {\n    setSceneKey((value) => value + 1)\n  }, [])\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n  const config = meshFloors.config;\n  const floors = meshFloors.floors;\n  const meshParams = meshFloors.meshParams;\n\n  const { setConfig: setCxtConfig } = context;\n\n  useEffect(() => {\n    if (context && meshFloors && meshFloors.config) {\n      setCxtConfig(meshFloors.config);\n    }\n  }, [context, meshFloors, setCxtConfig])\n\n  useImperativeHandle(ref, () => ({\n    refreshData,\n    createRouteToAmenity: handleAmenityClick,\n  }))\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      const resizeWidth = () => {\n        setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      }\n      window.addEventListener('resize', () => {\n        resizeWidth();\n        // Update your map or camera settings based on newWidth\n      });\n      resizeWidth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statsParentRef.current]);\n\n  const setCameraControlPos = useCallback((camera_controls_states: any) => {\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraPos(camera_controls_states.display_app.camera)\n      setControlPos(camera_controls_states.display_app.controls)\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n      if (canvasWidth > 1024) {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (canvasWidth > 600) {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      } else {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraPos(camera_controls_states.display_app.camera)\n        setControlPos(camera_controls_states.display_app.controls)\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      }\n    }\n  }, [canvasWidth, config?.ROLE])\n\n  useEffect(() => {\n    if (data && data.camera_controls_states) {\n      setCameraControlState(data.camera_controls_states);\n      setCameraControlPos(data.camera_controls_states);\n    }\n  }, [data, setCameraControlPos]);\n\n  useEffect(() => {\n    if (cameraControlStateRef.current) {\n      setCameraControlPos(cameraControlStateRef.current);\n    }\n  }, [deviceType, canvasWidth, setCameraControlPos])\n\n\n  const { onSettingsLoading } = params;\n  useEffect(() => {\n    if (data && meshFloors.config && onSettingsLoading) {\n      onSettingsLoading?.(\n        {\n          ...data,\n          settings: {\n            ...data.settings,\n            STYLE: meshFloors.config.STYLE,\n            ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n            AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n            AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n            BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n            BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n            BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n            BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n            MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n            OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n            OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n            STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n            STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n            WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n            WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n            KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n            STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n            MIN_ZOOM: meshFloors.config.CAMERA?.minZoom?.toString(),\n            MAX_ZOOM: meshFloors.config.CAMERA?.maxZoom?.toString(),\n            CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n            CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n            ZOOM_STEP: meshFloors.config.ZOOM_STEP ?? defaultVars.ZOOM_STEP ?? '100',\n          }\n        });\n    }\n  }, [data, meshFloors, onSettingsLoading])\n\n  const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n    if (canvasWidthRef.current === 0) return;\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n      if (canvasWidthRef.current > 1024) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (canvasWidthRef.current > 600) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      } else {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      }\n    }\n  }, [config?.ROLE])\n\n  useEffect(() => {\n    if (cameraControlStateRef.current && setCameraControlPosition) {\n      setCameraControlPosition(cameraControlStateRef.current);\n    }\n  }, [cameraControlState, setCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapitData = useCallback((index: number, newData: MapObj) => {\n    setFormMapObjData((prev) => {\n      const itemIndex = prev.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n      if (itemIndex !== -1) {\n        prev[itemIndex] = { index, data: { ...newData } };\n      } else {\n        prev.push({ index, data: { ...newData } })\n      }\n\n      return [...prev];\n    });\n\n  }, [])\n\n  const getMapitData = useCallback((): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }, [data, formMapObjData])\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refreshData);\n    }\n  }\n\n  const floorsCount = data?.floors?.length ?? 0;\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    if (!config) {\n      return [null, 0, ''] // not an error - loading/initializing\n    }\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = floorsCount ? floorsCount - 1 : 0;\n    if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n      const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n      const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (config.ROLE === 'WEBSITE') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n      }\n      if (config.ROLE === 'WEBSITE') {\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [config, meshParams, floorsCount]);\n\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsCount ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = (fullReset: boolean = false) => {\n\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n\n    if (floorsMapRef.current) {\n      if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n        let ccs = null;\n        if (deviceTypeRef.current === \"desktop\") {\n          ccs = { ...data.camera_controls_states.desktop }\n        } else if (deviceTypeRef.current === \"display_app\") {\n          ccs = { ...data.camera_controls_states.display_app }\n        } else if (deviceTypeRef.current === \"mobile\") {\n          ccs = { ...data.camera_controls_states.mobile }\n        } else if (deviceTypeRef.current === \"tablet\") {\n          ccs = { ...data.camera_controls_states.tablet }\n        }\n\n        if (ccs) {\n          floorsMapRef?.current?.resetCamera(fullReset, ccs);\n        }\n      } else {\n\n        floorsMapRef?.current?.resetCamera(fullReset);\n\n      }\n    }\n\n  }\n\n  const ccsInit = useRef<{ [key: string]: boolean }>({\n    display_app: false,\n    desktop: false,\n    tablet: false,\n    mobile: false,\n  })\n\n  useEffect(() => {\n\n    if (!config || !deviceType) {\n      return;\n    }\n\n\n    if (!params.config.CAMERA_CONTROLS_STATES) {\n      //@ts-ignore\n      config.CAMERA_CONTROLS_STATES = data.camera_controls_states[deviceType]\n    }\n\n    floorsMapRef?.current?.resetCamera();\n\n  }, [deviceType, config, data?.camera_controls_states])\n\n  useEffect(() => {\n    if (!config) {\n      return;\n    }\n\n    const kiosks: IMeshValues[] = [];\n    meshFloors.meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n    // console.log('kiosks', kiosks);\n\n    const mapObjectIdToKiosk = new Map();\n    const mapObjectIdToLogo = new Map();\n    kiosks.forEach(item => {\n      mapObjectIdToKiosk.set(item.object_id, item.mesh);\n    });\n    // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n    meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n    // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n    // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    const mapData = getMapitData();\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        //TODO use 'value' until api with lock_size will be working\n        // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n        logo.userData.kioskConfig = {\n          lockSize: mapObj?.value === '1',\n          blink: item.object_id === currKioskId,\n          size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE),\n          floorIndex: kiosk.floor_index,\n        }\n        // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n        logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n        logo.visible = true;\n\n        currKioskLogo.push(logo);\n      }\n    });\n\n    // return () => {\n    //     currKioskLogo?.forEach(mesh => {\n    //         mesh.userData.htmlContent = null;\n    //     });\n    // }\n  }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObj[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData, onMapDataUpdate])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (config?.SELECTED_RETAILER_SLUG) {\n      setSelectedRetailerSlug(config.SELECTED_RETAILER_SLUG);\n    }\n  }, [config?.SELECTED_RETAILER_SLUG])\n\n  useEffect(() => {\n    if (config && data && data.retailers && data.map_objs && selectedRetailerSlug !== '') {\n      const retailer = data.retailers.find(item => {\n        return item.slug === selectedRetailerSlug;\n      })\n      if (retailer) {\n        const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n        const meshParam = meshParams?.flat().find(item => item.object_id === mapObject?.map_obj_name);\n        if (meshParam) {\n          setSelectedFloorIndex(meshParam.floor_index);\n        }\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [config, data, setSelectedActiveObjectId, selectedRetailerSlug, meshParams])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const textParams = meshFloors.textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const logoParams = meshFloors.storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const result = [object as IExtMesh];\n\n    if (textParams) {\n      result.push(textParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    SetMeshObject([...result]);\n  }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n      const object = meshFloors.meshParams[currentFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n      if (object) {\n        //@ts-ignore\n        handleMeshObjectContext(object);\n      }\n      //@ts-ignore\n    }\n  }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [config, setSelectedActiveObjectId]);\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    // console.log('onClick', e.object)\n    if (disableClicks) {\n      setDisableClicks(false);\n      return false;\n    }\n\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value);\n      if (config && config.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleMeshObjectContext(e.object as IExtMesh);\n      setSelectedActiveObjectId(targetId ?? '');\n      setSelectedRetailerSlug('');\n      // console.log('set active object', targetId);\n      setAmenityTargetType('');\n      setFromObjectId('');\n      if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext, disableClicks]);\n\n  const onCameraMove = useCallback((e: any) => {\n    if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n      return\n    }\n  }, []);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    // console.log('onPointerEnter', e.object)\n    if (e.object.userData.storeName === '') {\n      // console.warn('onPointerEnter no storeName', e.object);\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerLeave', e.object)\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerMove', e.object)\n    if (e.buttons > 0) {\n      startTransition(() => {\n        setDisableClicks(true);\n      });\n    }\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n  }\n\n  if (data && (!data.floors || data.floors.length <= 0)) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!config || !meshFloors.meshParams.length) {\n    console.warn('LOADING MAP')\n    if (config?.ROLE === 'WP_SITE') {\n      return <div className=\"messageStyle\" style={messageStyle}>No Map for Center</div>\n    }\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div className=\"messageStyle\" style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && config.ROLE === 'WEBSITE') {\n    console.error('NO KIOSK OBJECT FOUND');\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      // setSelectedActiveObjectId(retailerId);\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }\n\n  return (\n    <>\n      {config.ROLE === 'PORTAL' &&\n        <div className={styles['mapbox-admin-form']}>\n          {!selectedActiveObjectId ?\n            <Alert variant=\"info\">Select a store to customize.</Alert>\n            :\n            <MapboxForm\n              floorIndex={currentFloorIndex}\n              meshFloors={meshFloors}\n              config={config}\n              data={getMapitData()}\n              setData={handleChangeMapitData}\n              selectedId={selectedActiveObjectId}\n              centerId={params.config.CENTER_ID as string}\n              onSubmit={handleOnSubmit}\n              apiURI={params.webApiURI}\n              onResetData={params.onResetData}\n              triggerSceneUpdate={updateKey}\n            />\n          }\n        </div>\n      }\n\n      <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n        <UIComponent\n          accentColor={config.ACCENT_COLOR.getStyle()}\n          floors={floors}\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          amenitiesList={amenitiesList}\n          handleAmenityClick={handleAmenityClick}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          role={config.ROLE}\n          mapObjs={data?.map_objs}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n          <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n          {/*<axesHelper args={[5000]} />*/}\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n          <FloorsMap\n\n            onCameraMove={onCameraMove}\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            // @ts-ignore\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            config={config}\n            ref={floorsMapRef}\n            cameraPos={cameraPos}\n            controlPos={controlPos}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n            isSelectedRetailerSlug={true}\n          />\n        </Canvas>\n        <div ref={labelRef}\n          style={{\n            position: 'absolute',\n            padding: 10,\n            background: '#ffffff',\n            fontWeight: 600,\n            color: '#000000',\n            fontSize: 16,\n            display: currentHoveredObject ? 'block' : 'none',\n            top: 300,\n            left: 400,\n            opacity: .8,\n          }}\n        >\n          <div>\n            {currentHoveredObject && currentHoveredObject.userData.storeName}\n          </div>\n        </div>\n\n      </div>\n\n      <RetailerInfoModal\n        amenity={selectedAmenityType}\n        show={showRetailerInfo}\n        onHide={() => setShowRetailerInfo(false)}\n        centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n        mapObjectName={selectedActiveObjectId}\n        retailers={data?.retailers}\n        mapObjs={data?.map_objs}\n        webApiURI={params.webApiURI ?? ''}\n        onClick={handleRetailerInfoOnClick}\n        kioskId={config.KIOSK.toString()}\n      />\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\n\ninterface useMapIt2DataProps {\n  CENTER_ID: string;\n  mapitData?: MapIt2Response;\n  webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n  data: MapIt2Response | null,\n  refreshData: () => void,\n  removeMissingMapObjects: (objectNames: string[]) => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n  const [data, setData] = useState<MapIt2Response | null>(null);\n\n  if (!CENTER_ID && !mapitData) {\n    console.error('useMapit2Data requires either CENTER_ID or mapitData');\n  }\n\n  const getData = useCallback(() => {\n    let apiURI = webApiURI || null;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      const retailersApiUri = `${apiURI}/v1/retailers?limit=100&page=1`;\n      const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n      const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n      const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n      const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n      const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n      const retailersPromise = fetch(retailersApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { console.error(e) })\n\n      const mapObjsPromise = fetch(mapObjsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const floorsPromise = fetch(floorsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      })\n        .then(data => {\n          if (!data\n            || !data.items\n            || (data.items && !data.items.length)) {\n            console.error('Empty floors data from server');\n          }\n          return data;\n        }).catch(e => { console.error(e) })\n\n      const kiosksPromise = fetch(kioskApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const settingsPromise = fetch(settingsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { console.error(e) })\n\n      const responsivePromise = fetch(responsiveApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { throw new Error(e) })\n\n      Promise.all<Array<any>>([\n        retailersPromise,\n        mapObjsPromise,\n        floorsPromise,\n        kiosksPromise,\n        settingsPromise,\n        responsivePromise\n      ]).then(data => {\n        if (data.length >= 5) {\n          const responseData: Partial<MapIt2Response> = {};\n          responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n            id: item.id,\n            retail_name: item.name,\n            slug: item.slug,\n            location: item.location,\n            retailer_phone: '',\n            retailer_description: '',\n            logo: item.media.url,\n            map_obj_name: '',\n          }));\n          responseData.map_objs = [...data[1].items].map(item => ({\n            ...item,\n            offsetX: item.offset_x,\n            offsetY: item.offset_y,\n          }));\n          responseData.floors = [...data[2].items];\n          responseData.settings = {\n            ...demoData.settings as Settings,\n            KIOSK_SIZE: \"1\",\n          }\n          responseData.kiosks = [];\n          responseData.amenities = { ...demoData.amenities };\n          responseData.kiosks = [...data[3].items];\n          const settings: Settings = data[4]?.settings ? data[4].settings : {\n            \"STYLE\": \"3D\",\n            \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n            \"ACCENT_COLOR\": \"4EA5FF\",\n            \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n            \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n            \"WALL_THICKNESS\": \"0.6\",\n            \"WALL_COLOR\": \"888888\",\n            \"BOUNDARY_THICKNESS\": \"0.8\",\n            \"BOUNDARY_COLOR\": \"888888\",\n            \"BASE_COLOR\": \"25292B\",\n            \"STORE_TEXT_COLOR\": \"222222\",\n            \"OVERLAY_COLOR\": \"FFFFFF\",\n            \"OVERLAY_OPACITY\": \"0.7\",\n            \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n            \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n            \"ZOOM_STEP\": \"100\",\n          };\n          if (data[5]) {\n            responseData.camera_controls_states = data[5];\n          } else {\n            responseData.camera_controls_states = { ...demoData.camera_controls_states }\n          }\n          responseData.settings = settings;\n\n          setData({ ...responseData as MapIt2Response })\n        }\n      })\n    }\n  }, [CENTER_ID, webApiURI])\n\n  useEffect(() => {\n    if (mapitData) {\n      setData(mapitData);\n      return;\n    }\n\n    if (!CENTER_ID) {\n      return;\n    }\n\n    getData();\n\n  }, [CENTER_ID, mapitData, getData]);\n\n  const removeMissingMapObjects = useCallback((objectNames: string[]) => {\n    if (data?.map_objs) {\n      const mapObjects = data.map_objs.filter(item => {\n        return objectNames.includes(item.map_obj_name)\n      })\n      if (mapObjects.length < data.map_objs.length) {\n        setData({\n          ...data,\n          map_objs: [...mapObjects],\n        })\n      }\n    }\n  }, [data]);\n\n  const refreshData = () => getData();\n  return { data, refreshData, removeMissingMapObjects };\n}","import { MutableRefObject, useEffect, useState } from 'react';\nimport styles from './MapBox.module.scss';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport { isMapIt2Response, MapIt2Response, MapObj, MapObjToSave } from \"./mapitApiTypes\";\nimport { IJsonConfig } from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapBoxContextProvider from './contexts/MapBoxContextProvider';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station';\n\nexport interface IAppProps {\n  mapitData?: unknown;\n  config: Partial<IJsonConfig>;\n  stats?: boolean;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n\n\nfunction MapBox({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, deviceType, setCameraControlPosition, onResetData, onExtractedAmenities }: IAppProps) {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <MapBoxContextProvider>\n      <MeshObjectContextProvider>\n        <div className={`${styles['mapbox-component']} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n          <SceneComponent\n            ref={refObj}\n            setSelectedActiveObjectId={setSelectedActiveObjectId}\n            selectedActiveObjectId={selectedActiveObjectId}\n            mapitData={mapData}\n            config={config}\n            onSettingsLoading={onSettingsLoading}\n            webApiURI={webApiURI}\n            mediaStorageURI={mediaStorageURI}\n            onSubmit={handleOnSubmit}\n            onResetData={onResetData}\n            deviceType={deviceType}\n            setCameraControlPosition={setCameraControlPosition}\n            onExtractedAmenities={onExtractedAmenities}\n          />\n          <div className={styles.hide}>\n            <div id=\"map-special-svg-kiosk\">\n              <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n                <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-atm\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n                <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n                <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-management\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n                <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n                <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-playarea\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n                <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n                <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-restroom\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n                <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-family-restroom\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n                <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n                <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-elevator\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n                <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n                <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-security\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n                <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n              </svg>\n            </div>\n            <div id=\"map-special-svg-dog-poop-station\">\n              <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n                <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n                <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n                <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n                <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n                <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n              </svg>\n            </div>\n            <div id=\"map-special-svg-escalator\">\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"398\" viewBox=\"0 0 512 398\">\n                <g fillRule=\"evenodd\">\n                  <path fill=\"#FFF\" d=\"M217.01,68.67 C235.674,68.677 250.846,53.503 250.85,34.83 C250.846,16.072 235.674,0.9 217.01,0.87 C198.243,0.9 183.071,16.072 183.05,34.83 C183.071,53.503 198.243,68.677 217.01,68.67\"></path>\n                  <path fill=\"#FFF\" d=\"M250.49,129.63 L250.49,108.27 C250.507,62.826 183.412,63.326 183.41,108.27 L183.41,195.39 L183.53,195.39 L120.17,258.87 C114.172,264.805 113.443,265.065 101.69,265.11 C101.691,265.075 62.93,265.11 62.93,265.11 C23.943,265.065 0.557,300.113 0.53,329.79 C0.557,359.539 23.943,397.1 66.41,397.11 C66.41,397.11 119.149,397.1 135.41,397.11 C151.738,397.1 171.491,390.871 187.73,375.51 L389.93,174.03 C394.237,170.175 396.633,168.978 404.09,168.99 C404.09,168.99 431.929,168.978 454.01,168.99 C478,168.978 512,141.75 511.97,102.51 C512,63.651 477.75,37.75 451.97,37.71 L373.25,37.71 C356.899,37.664 335.943,44.326 323.45,56.79 L250.49,129.63\"></path>\n                  <path fill=\"#FFF\" d=\"M377.93,71.19 L448.85,71.19 C466.144,71.211 477.75,90.498 477.77,102.03 C477.75,113.502 469.516,134.969 448.37,134.91 L405.77,134.91 C387.75,134.969 379.75,137.5 369.41,147.87 L165.65,351.63 C157.443,359.826 146.989,363.093 133.61,363.15 L66.41,363.15 C49.149,363.093 33.943,348.496 33.89,329.31 C33.943,310.156 48.443,299.415 63.41,299.43 L109.49,299.43 C122.943,299.415 131.775,295.581 139.49,287.91 L346.61,80.79 C355.083,72.276 363.502,71.211 377.93,71.19\"></path>\n                </g>\n              </svg>\n            </div>\n          </div>\n        </div>\n      </MeshObjectContextProvider>\n    </MapBoxContextProvider>\n\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n  id: string;\n  index?: string;\n  retail_name: string;\n  slug: string;\n  location: string;\n  retailer_phone: string;\n  retailer_description: string;\n  logo: string;\n  map_obj_name: string;\n};\n\nexport type MapObj = {\n  id: string | number;\n  center_id: string;\n  retailer_id: string;\n  kiosk_id: string | null;\n  map_obj_name: string;\n  obj_type: string;\n  layer_type: string;\n  value: string;\n  custom_text: string;\n  custom_image: string;\n  hover_text: string;\n  bg_color: string;\n  transparent: string | number;\n  text_color: string;\n  size: string;\n  lock_size: string;\n  rotate: string;\n  offsetX: string;\n  offsetY: string;\n  goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & { kiosk_id: number | null };\n\nexport type Floor = {\n  id: string;\n  svg_map?: string;\n  objsGroup?: Group;\n  interactiveObjs?: any[];\n  escalatorsObjs?: any[];\n  escalatorsNodes?: Record<any, any>;\n  escalatorMeshes?: any[];\n  route_points?: IRoutePoint[];\n  route_tube?: any;\n  route_texture?: Texture | null | undefined;\n  routeMeshes?: any[];\n  route_active?: boolean;\n  center_id?: string;\n  title: string;\n  svg?: string;\n  status?: string;\n  created_at?: string;\n};\n\nexport type CameraControlsState = {\n  camera: { x: number, y: number, z: number };\n  controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n  STYLE: '2D' | '3D',\n  MAP_BACKGROUND_COLOR: string;\n  ACCENT_COLOR: string;\n  STORE_DEFAULT_COLOR: string;\n  BIG_STORE_DEFAULT_COLOR: string;\n  WALL_THICKNESS: string;\n  WALL_COLOR: string;\n  BOUNDARY_THICKNESS: string;\n  BOUNDARY_COLOR: string;\n  BASE_COLOR: string;\n  STORE_TEXT_COLOR: string;\n  STORE_HEIGHT: string;\n  OVERLAY_COLOR: string;\n  OVERLAY_OPACITY: string;\n  AMENITIES_NAV_BG_COLOR: string;\n  AMENITIES_NAV_ICON_COLOR: string;\n  KIOSK_SIZE: string;\n  MIN_ZOOM: string;\n  MAX_ZOOM: string;\n  CAMERA_MIN_DISTANCE: string;\n  CAMERA_MAX_DISTANCE: string;\n  ZOOM_STEP: string;\n};\n\nexport type Kiosk = {\n  id: string;\n  title: string;\n  map_obj_name: string;\n};\n\nexport type Amenity = {\n  name: string;\n  image: string;\n};\n\nexport type MapIt2Response = {\n  retailers: IRetailer[];\n  map_objs: MapObj[];\n  floors: Floor[];\n  camera_controls_states: {\n    display_app: CameraControlsState;\n    desktop: CameraControlsState;\n    tablet: CameraControlsState;\n    mobile: CameraControlsState;\n  };\n  settings: Settings;\n  kiosks: Kiosk[];\n  amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n  name: string;\n  node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n  if (typeof obj !== 'object' || obj === null) return false;\n\n  const response = obj as Record<string, unknown>;\n\n  return (\n    Array.isArray(response.retailers) &&\n    Array.isArray(response.map_objs) &&\n    Array.isArray(response.floors) &&\n    typeof response.camera_controls_states === 'object' &&\n    response.camera_controls_states !== null &&\n    typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n    typeof response.settings === 'object' &&\n    Array.isArray(response.kiosks) &&\n    typeof response.amenities === 'object'\n  );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","hex_to_color","hex_code","Color","getFormatedColor","replace","amenitiesList","type","icon","ATMIcon","_jsxs","xmlns","viewBox","children","_jsx","d","transform","fill","ManagementIcon","PlayAreaIcon","RestroomIcon","FamilyRestroom","ElevatorIcon","SecurityIcon","DogPoopStation","cx","cy","rx","ry","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","allMapObjects","allIndexedRetailers","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","item","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minZoom","maxZoom","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","set","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","size","get_store_name_logo_geo","textLogoNamePrefix","myFont","handleAsync","new_object_id","result","boundingBox","computeBoundingBox","mesh_center_point","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","logoMesh","storeLogo","getImageLogo","MapBoxContext","createContext","meshByObjectId","Map","setMeshByObjectId","setAllMapObjects","setAllIndexedMapObjects","setAllIndexedRetailers","setAllNodesFloor","createGraph","setPathFinderGraph","setNgraphPath","floorsData","MapBoxContextProvider","useState","Provider","useMapBoxContext","context","useContext","Error","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","meshParams","setMeshParams","textParams","setTextParams","storeLogos","setStoreLogos","escalatorNodes","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","mergedConfig","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","MIN_ZOOM","MAX_ZOOM","camera_controls_states","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","values","clearScene","removeFromParent","GeometriesAndMaterials","graph","results","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","point","origin_point","target_direction","storeIntersects","intersectObjects","object","escalatorIntersects","assign_route_nodes_to_stores","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","loadFloors","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","useMeshObjectContext","MapCenterMarker","lockSize","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","svgOrigin","svgBlob","Blob","svgUrl","URL","createObjectURL","svgTexture","Texture","needsUpdate","MapObject","setUpdate","React","currentFloorIndex","triggerUpdate","kioskConfig","blink","htmlContent","Html","pointerEvents","distanceFactor","uuid","_Fragment","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","Fragment","boundingSphere","display","className","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","isSelectedRetailerSlug","cameraLimits","SetCameraLimits","min","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","resetCamera","fullReset","selectedFloorMeshParams","meshes","focus","aspect","cameraDistance","setLength","isZeroCCS","cameraV3","controls","fromPosition","fromTarget","animationStartTime","duration","focusDistance","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","targetMesh","currentActiveObject","zoomStep","onCameraMove","vector","animationTime","animationProgress","lerpVectors","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","UIComponent","selectedFloorIndex","handleFloorChange","zoomIn","zoomOut","reset","handleAmenityClick","mapObjs","onExtractedAmenities","extractValues","filter","preventDefault","Function","styles","backgroundColor","defaultData","isError","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","Number","MapboxForm","setData","selectedId","onResetData","triggerSceneUpdate","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","isLoadingRetailers","loadOptions","loadRetailersOptions","nextPage","useRetailersOptions","apiURI","setIsLoading","setRetailers","page","setPage","limit","pages","setPages","fetchRetailers","search","uri","fetch","headers","toString","then","ok","Promise","resolve","json","reject","status","statusText","url","catch","useGetRetailers","processData","isLoadingMore","label","location","inputValue","callback","round","isDisabled","prev","selectedKiosksId","setSelectedKiosksId","ids","cur","loadKiosksOptions","toLowerCase","getDefaultKioksOptions","makeImage","retailIndex","findIndex","HTMLImageElement","makeTextGeometry","updateData","handleChangeTab","k","clearKioskConfig","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","onMenuScrollToBottom","loadingMessage","noOptionsMessage","placeholder","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","handleChangeKiosk","Select","disabled","hidden","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","kioskId","handleRotateByFixedAngle","RetailerInfoList","isAmenity","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","slug","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","SceneComponent","refreshData","removeMissingMapObjects","mapitData","getData","mapObjsApiUri","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","retailersPromise","mapObjsPromise","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","all","responseData","offset_x","offset_y","demoData","objectNames","mapObjects","useMapit2Data","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","canvasWidth","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","disableClicks","setDisableClicks","selectedRetailerSlug","setSelectedRetailerSlug","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","subPrev","subCur","labelRef","currentHoveredObject","setCurrentHoveredObject","setSceneKey","updateKey","showRetailerInfo","setShowRetailerInfo","setCxtConfig","createRouteToAmenity","offsetWidth","resizeWidth","addEventListener","setCameraControlPos","display_app","desktop","tablet","mobile","onSettingsLoading","getHexString","CAMERA_MAX_DISTANCE","CAMERA_MIN_DISTANCE","camPos","ctrlTarget","activeFromObjectId","handleChangeMapitData","newData","itemIndex","getMapitData","floorsCount","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","flat","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","meshParam","handleMeshObjectContext","logoParams","stopPropagation","targetId","messageStyle","top","left","meshFloorsChecked","Alert","getStyle","resetHandle","ccs","Canvas","Stats","parent","intensity","buttons","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","MapBox","refObj","setMapData","isMapIt2Response","fillRule"],"mappings":"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"}