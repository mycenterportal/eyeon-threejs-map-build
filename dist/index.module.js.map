{"version":3,"file":"index.module.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/contexts/MapBoxContextProvider.tsx","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/services/retailersApi.tsx","../src/Hooks/useAllRetailers.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/MapboxForm.tsx","../src/components/MapboxForm/hooks/useRetailersOptions.ts","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/store.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type { Vector2 } from \"three\";\nimport { IFloorData } from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n  return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string, boolean] {\n  let exists = false;\n  let node_name: string = '-name-not-found-';\n  const currentFloor = floors[floor_index];\n  if (currentFloor.route_points !== undefined) {\n    for (let i = 0; i < currentFloor.route_points.length; i++) {\n      if (vertex.x === currentFloor.route_points[i].node.x && vertex.y === currentFloor.route_points[i].node.y) {\n        exists = true;\n        node_name = currentFloor.route_points[i].name;\n        break;\n      }\n    }\n    if (!exists) {\n      node_name = next_node_name(node_count);\n      // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n  }\n  return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport { Graph } from \"ngraph.graph\";\nimport { Color, Vector2, Vector3 } from \"three\";\nimport { get_node_name } from \"./nodesUtils\";\nimport { MeshType } from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n  const consolePrefix = 'MeshParams';\n  let mesh_type: MeshType = null;\n  var layer_color: Color | string = path.color.clone();\n  var extrude = 0;\n  var z_index = 0;\n  var mesh_visible = true;\n  var mesh_draw = true;\n  var mesh_transparent = false;\n  var line_thickness = config.WALL_THICKNESS;\n  var interactiveMesh = true;\n  var layer_name = path.userData?.node.id;\n  if (layer_name !== undefined) {\n    if (layer_name.startsWith('boundary')) {\n      mesh_type = 'boundary';\n      layer_color = config.BOUNDARY_COLOR;\n      line_thickness = config.BOUNDARY_THICKNESS;\n      if (config.STYLE === '3D') {\n        extrude = 9;\n      }\n    } else if (layer_name.startsWith('wall')) {\n      mesh_type = 'wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 8.5;\n      }\n    } else if (layer_name.startsWith('outer-wall')) {\n      mesh_type = 'outer-wall';\n      layer_color = config.WALL_COLOR;\n      if (config.STYLE === '3D') {\n        mesh_draw = false;\n      }\n    } else if (layer_name.startsWith('building-base')) {\n      mesh_type = 'building-base';\n      layer_color = config.BUILDING_BASE_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 12;\n        z_index = -12;\n      }\n    } else if (layer_name.startsWith('base')) {\n      mesh_type = 'base';\n      layer_color = config.BASE_COLOR;\n    } else if (layer_name.startsWith('store')) {\n      mesh_type = 'store';\n      layer_color = config.STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = parseInt(config.STORE_HEIGHT);\n      }\n      if (layer_name.startsWith('store-underlay')) {\n        interactiveMesh = false;\n      }\n    } else if (layer_name.startsWith('big-store')) {\n      mesh_type = 'big-store';\n      layer_color = config.BIG_STORE_DEFAULT_COLOR;\n      if (config.STYLE === '3D') {\n        extrude = 16;\n      }\n    } else if (layer_name.startsWith('route-path')) {\n      mesh_type = 'route-path';\n      mesh_draw = false;\n      path.subPaths.forEach(subPath => {\n        if (subPath.curves.length === 0) {\n          console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n        }\n\n        subPath.curves.forEach(curve => {\n          //@ts-ignore\n          const v1: Vector2 = curve.v1;\n          //@ts-ignore\n          const v2: Vector2 = curve.v2;\n\n          const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n          if (!exists1) {\n            floors[floor_index].route_points?.push({\n              name: node1_name,\n              node: new Vector3(v1.x, v1.y, 1)\n            });\n            allNodesFloor[node1_name] = floor_index;\n          }\n          const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n          if (!exists2) {\n            floors[floor_index].route_points?.push({\n              name: node2_name,\n              node: new Vector3(v2.x, v2.y, 1)\n            });\n            allNodesFloor[node2_name] = floor_index;\n          }\n          pathFinderGraph.addNode(node1_name, { ...v1 });\n          pathFinderGraph.addNode(node2_name, { ...v2 });\n\n          // pathFinderGraph.addLink(node1_name, node2_name);\n          pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n          pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n        });\n      });\n    } else if (layer_name.startsWith('escalator-')) {\n      mesh_type = 'escalator';\n      mesh_visible = false;\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('kiosk-')) {\n      mesh_type = 'kiosk';\n      mesh_transparent = true;\n    } else if (layer_name.startsWith('amenity-')) {\n      mesh_type = 'amenity';\n      mesh_transparent = true;\n      z_index = 1;\n    } else if (layer_name.startsWith('overlay')) {\n      mesh_type = 'overlay';\n    } else if (layer_name.startsWith('special-shape')) {\n      mesh_type = 'special-shape';\n    } else {\n      extrude = 1;\n    }\n  } else {\n    console.warn(consolePrefix + 'Layer name is undefined, path', path)\n  }\n\n\n  /*console.debug({\n      mesh_type,\n      layer_color,\n      extrude,\n      z_index,\n      mesh_visible,\n      mesh_draw,\n      mesh_transparent,\n      line_thickness,\n      interactiveMesh,\n      path,\n      layer_name,\n  })*/\n  return {\n    mesh_type,\n    layer_color,\n    extrude,\n    z_index,\n    mesh_visible,\n    mesh_draw,\n    mesh_transparent,\n    line_thickness,\n    interactiveMesh,\n    path,\n    layer_name,\n  }\n}","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import { IAmenitiesInteractiveList } from \"src/types\";\n\nconst amenities: IAmenitiesInteractiveList[] = [\n  {\n    name: \"ATM\",\n    type: \"atm\",\n  },\n  {\n    name: \"Management\",\n    type: \"management\",\n  },\n  {\n    name: \"Kids Area\",\n    type: \"playarea\",\n  },\n  {\n    name: \"Restroom\",\n    type: \"restroom\",\n  },\n  {\n    name: \"Family Restroom\",\n    type: \"family-restroom\",\n  },\n  {\n    name: \"Elevator\",\n    type: \"elevator\",\n  },\n  {\n    name: \"Security\",\n    type: \"security\",\n  },\n];\n\nexport const getAllAmenities = () => {\n  const amenitiesWithSvg = amenities.map((item) => {\n    let svg;\n    const svg_block = document.getElementById(`map-special-svg-${item.type}`);\n    if (svg_block) {\n      const svg_element = svg_block.querySelector('svg');\n      if (svg_element) {\n        const svgColoredParts = svg_element.querySelectorAll('[fill]');\n        svgColoredParts.forEach((svgColoredPart) => {\n          svgColoredPart.setAttribute('fill', '#FFFFFF');\n        });\n        svg = (new XMLSerializer()).serializeToString(svg_element);\n      }\n    }\n    return {\n      ...item,\n      svg\n    };\n  });\n  return amenitiesWithSvg;\n}","import { Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry } from \"three\";\nimport { getWallShape } from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\n// import {allMapObjects} from \"../../globals\";\nimport { IConfig, IExtMesh, IMeshValues, TRoles } from \"../../types\";\nimport { hex_to_color } from \"../../helpers/misc\";\n\nimport { IRetailer, MapObj } from \"../../mapitApiTypes\";\nimport { getAllAmenities } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n  'route-path': 0,\n  'escalator': 0,\n  'underlay': 0,\n  'overlay': 1,\n  'building-base': 1,\n  'base': 2,\n  'store': 3,\n  'big-store': 4,\n  'kiosk': 5,\n  'wall': 6,\n  'outer-wall': 7,\n  'boundary': 8,\n  'amenity': 9,\n  'layer-image': 10,\n  'layer-text': 11,\n  'route-tube': 12,\n  'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n  if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n    return renderOrders[mesh_type];\n  }\n  // console.warn(`Unknown mesh type: ${mesh_type}`)\n  return 0;\n}\n\nexport const getMaterial = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  layer_color: Color | string,\n  mesh_transparent: boolean,\n  allIndexedMapObjects: Record<string, MapObj>,\n) => {\n  const material_settings = {\n    color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n    side: DoubleSide,\n    transparent: false,\n    depthWrite: true,\n    depthTest: true,\n    opacity: 1,\n  }\n  if (config.STYLE === '2D' || mesh_type === 'base' || mesh_type == null) {\n    if (mesh_type !== 'boundary') {\n      material_settings.depthWrite = false;\n      material_settings.depthTest = false;\n    }\n  }\n  if (mesh_type === 'overlay') {\n    material_settings.color = config.OVERLAY_COLOR;\n    material_settings.opacity = config.OVERLAY_OPACITY;\n  }\n  if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE !== 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent === 1) {\n    material_settings.opacity = 0;\n  }\n  var material = new MeshLambertMaterial(material_settings);\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    material.colorDefault = material.color;\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color !== '') {\n      material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n      //@ts-ignore\n      material.colorDefault = material.color;\n    }\n    //@ts-ignore\n    material.active = false;\n  }\n  if (config.ROLE !== 'PORTAL' && mesh_transparent) {\n    material.opacity = 0;\n    material.transparent = true;\n  }\n\n  material.transparent = material.opacity !== 1;\n\n  return material;\n}\n\nexport const getGeometry = (\n  config: IConfig,\n  mesh_type: MeshType,\n  layer_name: string,\n  extrude: number,\n  line_thickness: number,\n  path: any,\n) => {\n  const consolePrefix = 'MaterialAndGeometry';\n\n  let shapes = path.toShapes(true);\n\n  // shapes.forEach((shape, index) => {\n  let extrude_meshes;\n  if (config.STYLE === '2D') {\n    extrude_meshes = ['building-base'];\n  } else {\n    extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n  }\n\n  let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n  var geometry;\n  if (mesh_type && extrude_meshes.includes(mesh_type)) {\n    geometry = new ExtrudeGeometry(shapes, {\n      depth: -extrude,\n      bevelEnabled: false,\n    });\n  } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n    //@ts-ignore\n    let wall_geometries = [];\n    //@ts-ignore\n    path.subPaths.forEach(subPath => {\n      //@ts-ignore\n      subPath.curves.forEach(curve => {\n        if (curve.type === 'LineCurve') {\n          let shape_extend = 0;\n          if (mesh_type === 'boundary') {\n            shape_extend = 1;\n          } else if (mesh_type === 'wall') {\n            // shape_extend = 1 / 3;\n          }\n          let shape1 = getWallShape(curve, line_thickness, shape_extend);\n          let wall_geometry = new ExtrudeGeometry(shape1, {\n            depth: -extrude,\n            bevelEnabled: false,\n          });\n          wall_geometries.push(wall_geometry);\n        } else {\n          console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n        }\n      });\n    });\n\n    if (wall_geometries.length === 1) {\n      //@ts-ignore\n      geometry = wall_geometries[0];\n    } else if (wall_geometries.length > 1) {\n      //@ts-ignore\n      geometry = mergeGeometries(wall_geometries);\n    } else {\n      console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n    }\n  } else {\n    geometry = new ShapeGeometry(shapes);\n    try {\n      //@ts-ignore\n      if (geometry.attributes.position.count === 0) {\n        console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n      }\n    } catch (e: any) {\n      console.error(e.message);\n    }\n  }\n\n  return geometry;\n}\n\nexport const getMaterialAndGeometry = (allMapObjects: string[], config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n\n  const material = getMaterial(\n    config,\n    mesh_type,\n    layer_name,\n    layer_color,\n    mesh_transparent,\n    allIndexedMapObjects\n  );\n\n  const geometry = getGeometry(\n    config,\n    mesh_type,\n    layer_name,\n    extrude,\n    line_thickness,\n    path\n  );\n\n  const mesh = new Mesh(geometry, material) as IExtMesh;\n  mesh.object_id = layer_name;\n  mesh.mesh_type = mesh_type;\n  mesh.floor_index = floor_index;\n  mesh.visible = mesh_visible;\n  mesh.position.z = z_index;\n  let storeName = '';\n  if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n    if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type === 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n      storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].custom_text;\n      if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n        storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n      }\n    } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n      storeName = allIndexedMapObjects[layer_name].value;\n      if (storeName.length > 1) {\n        const amenity = getAllAmenities().find(item => item.type === storeName)\n        if (amenity) {\n          storeName = amenity.name;\n        }\n      }\n    }\n  }\n  mesh.userData.storeName = storeName;\n  if (config.STYLE === '2D') {\n    mesh.renderOrder = getRenderOrder(mesh_type);\n    if (layer_name && layer_name.includes('underlay')) {\n      mesh.renderOrder = getRenderOrder('underlay');\n    }\n  }\n\n  floors[floor_index].objsGroup.add(mesh);\n\n  if (mesh_type === 'escalator') {\n    floors[floor_index].escalatorsNodes[layer_name] = null;\n    floors[floor_index].escalatorsObjs.push(mesh);\n    mesh.escalator_id = floor_index + '-' + layer_name;\n  }\n\n  if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n    //@ts-ignore\n    mesh.route_node_id = null;\n\n    // add floor_index to the kiosks\n    if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'kiosk') {\n      // var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n      /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n          ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n      }*/\n    }\n\n    if (config.ROLE === 'PORTAL') {\n      allMapObjects.push(layer_name);\n    }\n    if (\n      (config.ROLE !== 'PORTAL' && mesh_type === 'kiosk') ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type === 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n      (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type === 'amenity' && allIndexedMapObjects[layer_name].value !== '') ||\n      (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n      (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type ?? ''))\n    ) {\n      // if (interactiveMesh) {\n      floors[floor_index].interactiveObjs.push(mesh);\n      // }\n    } else if (\n      (config.ROLE === 'PORTAL')\n    ) {\n      floors[floor_index].interactiveObjs.push(mesh);\n    }\n  }\n\n  // if (['store', 'big-store'].includes(mesh_type as string)) {\n  //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n  // }\n\n  return {\n    mesh,\n    geometry,\n    material,\n    object_id: layer_name,\n    mesh_type,\n    floor_index,\n    visible: mesh_visible,\n    renderOrder: mesh.renderOrder,\n  }\n  // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n  BufferGeometry,\n  CanvasTexture,\n  CurvePath,\n  DoubleSide,\n  LineCurve3,\n  Mesh,\n  MeshBasicMaterial,\n  Object3D,\n  Raycaster,\n  Scene,\n  TubeGeometry,\n  Vector3,\n} from \"three\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\n// import {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport { PathFinder } from \"ngraph.path\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\nimport { IExtMesh, IFloorData } from \"../types\";\nimport { Graph, Node } from \"ngraph.graph\";\n// import { allNodesFloor } from \"src/globals\";\n\nconst consolePrefix = 'ROUTE: ';\n\n\n\nexport function delete_route_path(floors: IFloorData[]) {\n  for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n    const floor = floors[floor_index];\n    floor.route_active = false;\n\n    if (floor.route_tube != null) {\n      floor.route_tube.geometry.dispose();\n      //@ts-ignore\n      floor.route_tube.material.dispose();\n      floor.objsGroup?.remove(floor.route_tube);\n    }\n\n    floor.route_tube = undefined;\n    floor.route_texture = null;\n    floor.escalatorMeshes = [];\n  }\n}\n\nexport function create_route(allNodesFloor: Record<string, number>, from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n  if (from_mesh_object_id === to_mesh_object_id) {\n    return [];\n  }\n  const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n  if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n  return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[], floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n  // TODO: remove scene dependency and scene.getObjectByProperty\n  const routePaths = [] as any[];\n  delete_route_path(floors);\n  let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n  let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n  let from_node_name = from_obj.route_node_id;\n  let to_node_name = to_obj.route_node_id;\n\n  // console.log({\n  //     from_mesh_object_id,\n  //     to_mesh_object_id,\n  //     from_obj,\n  //     to_obj,\n  //     from_node_name,\n  //     to_node_name,\n  // })\n\n  // from_node_name = 'node-147';\n  // to_node_name = 'node-221';\n\n  if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n  if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n  if (!from_node_name || !to_node_name) return routePaths;\n\n  const from_route_floor_index = from_obj.floor_index;\n  const to_route_floor_index = to_obj.floor_index;\n\n  const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n    distance: function (fromNode, toNode, link) {\n      if (link.data) return link.data.weight;\n      return false;\n    },\n    //@ts-ignore\n    debug: true,\n  });\n  const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n  const routeNodesEsclators = [];\n  if (!routeNodes) {\n    return [];\n  }\n  const floor_routes = [];\n\n  for (let index = 0; index < routeNodes.length; index++) {\n    const routeNode = routeNodes[index];\n    if (floor_routes[allNodesFloor[routeNode.id]]) {\n      floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n    } else {\n      floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n    }\n\n    if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n      // don't consider these middle escalators nodes\n    } else {\n      routeNodesEsclators.push(routeNode);\n    }\n  }\n  for (let index = 0; index < routeNodesEsclators.length; index++) {\n    const routeNode = routeNodesEsclators[index];\n    if (\n      allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n      && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n    ) {\n      const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n      const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n\n      let goToFloor = null;\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index + 1].id],\n          direction: 'Next',\n        };\n      }\n\n      if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n        goToFloor = {\n          index: allNodesFloor[routeNodesEsclators[index - 1].id],\n          direction: 'Previous',\n        };\n      }\n\n\n      if (goToFloor && escalator_mesh) {\n        escalator_mesh.goToFloor = goToFloor;\n        const escalator_clone = escalator_mesh.clone();\n        escalator_clone.goToFloor = goToFloor;\n        //@ts-ignore\n        floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_clone);\n      }\n    }\n\n  }\n  for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n    const floor_route = floor_routes[floor_index];\n    if (floor_route && floor_route.length > 1) {\n      const routePath = create_route_path(floor_route, floor_index, floors, style);\n      routePaths[floor_index] = routePath;\n\n      floors[floor_index].route_active = true;\n      floors[floor_index].routeMeshes = [routePath];\n      if (floor_index === from_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(from_obj);\n      }\n      if (floor_index === to_route_floor_index) {\n        //@ts-ignore\n        floors[floor_index]?.routeMeshes?.push(to_obj);\n\n      }\n    }\n  }\n\n  // setTimeout(function () {\n  //     //TODO openFloorMap functionality\n  //     // openFloorMap(from_route_floor_index);\n  // });\n\n  return routePaths;\n}\n\nfunction create_route_path(\n  routeNodes: Node<any>[],\n  floor_index: number,\n  floors: IFloorData[],\n  style = '2D',// config.STYLE\n) {\n  let distance = 0;\n  let route_path = new CurvePath<Vector3>();\n  for (let i = 1; i < routeNodes.length; i++) {\n    let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n    let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n    route_path.add(new LineCurve3(from_node, to_node));\n    distance += from_node.distanceTo(to_node);\n  };\n  var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n  //@ts-ignore\n  geometry = new BufferGeometry().copy(geometry);\n  var material = new MeshBasicMaterial({\n    map: get_route_texture(distance, floor_index, floors),\n    transparent: true,\n    side: DoubleSide,\n    depthTest: false,\n    depthWrite: false,\n  });\n\n  let route_tube = new Mesh(geometry, material) as IExtMesh;\n  if (style === '2D') {\n    route_tube.position.z = -10;\n    route_tube.scale.z = 0.1;\n  }\n  route_tube.position.z = 0;\n  route_tube.renderOrder = getRenderOrder('route-tube');\n  route_tube.mesh_type = 'route-tube';\n  //@ts-ignore\n  route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n  // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n  floors[floor_index].route_tube = route_tube;\n  floors[floor_index].objsGroup?.add(route_tube);\n\n  return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n  return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n  let distance = 0;\n\n  let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n  if (routeNodes.length === 0) return false;\n\n  for (let i = 1; i < routeNodes.length; i++) {\n    let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n    distance += link?.data.weight || 0;\n  };\n  return distance;\n}\n\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n  let canvas = document.createElement(\"canvas\");\n  let ctx = canvas.getContext(\"2d\");\n  if (ctx) {\n    ctx.canvas.width = distance;\n    ctx.canvas.height = 80;\n\n    ctx.fillStyle = \"#4ea5ff\";\n    ctx.fillRect(0, 0, distance, 80);\n\n    let grd_width = 0.1 * distance;\n    const min_grd_width = 60;\n    const max_grd_width = 120;\n    if (grd_width < min_grd_width) grd_width = min_grd_width;\n    if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n    let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n    grd.addColorStop(0, \"#4ea5ff\");\n    grd.addColorStop(0.4, \"white\");\n    grd.addColorStop(0.6, \"white\");\n    grd.addColorStop(1, \"#4ea5ff\");\n\n    ctx.fillStyle = grd;\n    ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n    floors[floor_index].route_texture = route_texture;\n\n    return route_texture;\n  } else {\n    return undefined;\n  }\n}\n\n//TODO\n\nexport function assign_route_nodes_to_stores(\n  floor_index: number,\n  floors: IFloorData[],\n  allIndexedMapObjects: Record<string, MapObj>,\n  allIndexedRetailers: Record<string, IRetailer>,\n  allNodesFloor: Record<string, number>,\n  escalator_nodes: string[],\n  find_store_node_raycaster: Raycaster,\n  role: string, //config.ROLE\n) {\n  const result = new Map();\n  const currentFloor = floors[floor_index];\n  if (currentFloor && currentFloor.route_points) {\n    currentFloor.route_points.forEach(point => {\n      let origin_point = new Vector3(point.node.x, point.node.y, -10);\n      let target_direction = new Vector3(0, 0, 1);\n      find_store_node_raycaster.set(origin_point, target_direction);\n      //@ts-ignore\n      var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n      if (storeIntersects.length) {\n        //@ts-ignore\n        storeIntersects[0].object.route_node_id = point.name;\n        //@ts-ignore\n        result.set(storeIntersects[0].object.object_id, point.name);\n        if (false && role !== 'PORTAL') {\n          //@ts-ignore\n          var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n          if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n            // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n          }\n        }\n      }\n\n      var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n      if (escalatorIntersects.length) {\n        const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n        let escalator_obj_id = obj.object_id;\n        const escalatorNodes = floors[floor_index].escalatorsNodes;\n        if (escalatorNodes) {\n          escalatorNodes[escalator_obj_id as string] = point.name;\n          allNodesFloor[point.name] = floor_index;\n          escalator_nodes.push(point.name);\n        }\n      }\n    });\n  }\n  return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n  // console.log('linkFloorEscalators', floors)\n  if (floors.length > 1) {\n    for (let i = 0; i < (floors.length - 1); i++) {\n      // console.log('floors[i]',i, floors[i])\n      const floor_escalators = floors[i].escalatorsNodes;\n      // console.log('floor_escalators', floor_escalators);\n      Object.keys(floor_escalators as object).forEach(escalator => {\n        if (floors[i].escalatorsNodes?.[escalator] != null && floors[i + 1].escalatorsNodes?.[escalator] != null) {\n          // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n          const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n          const nodeIdTo = floors[i + 1].escalatorsNodes?.[escalator];\n          if (nodeIdFrom && nodeIdTo) {\n            pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n            pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n          }\n        } else {\n          // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n        }\n      })\n    }\n  }\n}\n\nexport function make_amenity_route(allNodesFloor: Record<string, number>, kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string): Mesh[] {\n  let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n  // if (!kiosk_obj) return [];\n  let kiosk_node_name = kiosk_obj ? kiosk_obj.route_node_id : '';\n\n  var to_obj_name = null;\n\n  var shortest_distance = 9999;\n  // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n  const map_objs: string[] = [];\n  for (let key in allIndexedMapObjects) {\n    const mapObject = allIndexedMapObjects[key];\n    if (\n      mapObject.layer_type === 'amenity'\n      && mapObject.obj_type === 'special'\n      && mapObject.value === amenity_type\n    ) {\n      map_objs.push(key);\n    }\n  }\n  map_objs.forEach((amenity_obj_name: string) => {\n    let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n      distance: function (fromNode, toNode, link) {\n        if (link.data) return link.data.weight;\n        return false;\n      },\n      //@ts-ignore\n      debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n      var amenity_node_name = amenity_obj.route_node_id;\n      try {\n        var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n        if (route_distance && route_distance < shortest_distance) {\n          shortest_distance = route_distance;\n          to_obj_name = amenity_obj_name;\n        }\n      } catch (e: any) {\n        console.warn(`Amenity Path: ${e.message}`);\n      }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n      to_obj_name = amenity_node_name;\n    }\n  });\n  return create_route(allNodesFloor, kiosk_obj_name, to_obj_name ?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import { getMeshParams } from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport { IConfig, IFloorData, IMeshValues, TRoles } from \"src/types\";\n// import {allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport { getMaterialAndGeometry } from \"./getMaterialAndGeometry\";\nimport { Raycaster } from \"three\";\nimport { assign_route_nodes_to_stores, linkFloorEscalators } from \"src/helpers/route.helpers\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { Graph } from \"ngraph.graph\";\nimport { EventedType } from \"ngraph.events\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, allMapObjects: string[], allNodesFloor: Record<string, number>, pathFinderGraph: Graph<any, any> & EventedType, floors: IFloorData[], config: IConfig, results: SVGResult[], role?: TRoles) {\n  const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n  const escalator_nodes: string[] = [];\n  results.forEach((result, floor_index) => {\n    if (result.paths && result.paths.length) {\n      const pathIds = [];\n      for (let i = 0; i < result.paths.length; i++) {\n        pathIds.push(result.paths[i]?.userData?.node.id);\n      }\n      const paths = result.paths;\n      for (let i = 0; i < paths.length; i++) {\n        const {\n          mesh_type,\n          layer_color,\n          extrude,\n          z_index,\n          mesh_visible,\n          mesh_draw,\n          mesh_transparent,\n          line_thickness,\n          path,\n          layer_name,\n        } = getMeshParams(\n          paths[i],\n          paths,\n          floors,\n          floor_index,\n          config,\n          ++node_count,\n          //@ts-ignore\n          allNodesFloor,\n          pathFinderGraph\n        );\n\n        if (mesh_draw) {\n          const meshParams = getMaterialAndGeometry(\n            allMapObjects,\n            config,\n            mesh_type,\n            layer_name,\n            layer_color,\n            mesh_transparent,\n            mesh_visible,\n            z_index,\n            extrude,\n            line_thickness,\n            floors,\n            floor_index,\n            allIndexedMapObjects,\n            allIndexedRetailers,\n            path,\n            role\n          );\n\n          if (layer_name.startsWith('kiosk-')) {\n            if (role === 'PORTAL') {\n              // meshParams.mesh.visible = false;\n              //@ts-ignore\n              // meshParams.mesh.material.visible = false;\n            }\n          }\n\n          if (!GeometriesAndMaterials[floor_index]) {\n            GeometriesAndMaterials[floor_index] = [];\n          }\n\n          GeometriesAndMaterials[floor_index].push(meshParams);\n        }\n      }\n      const findStoreNodeRaycaster = new Raycaster();\n      const routeNodeIds = assign_route_nodes_to_stores(\n        floor_index,\n        floors,\n        allIndexedMapObjects,\n        allIndexedRetailers,\n        allNodesFloor,\n        escalator_nodes,\n        findStoreNodeRaycaster,\n        config.ROLE\n      );\n\n      if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n        for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n          if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n            GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n          }\n        }\n      }\n\n      linkFloorEscalators(floors, pathFinderGraph);\n\n    }\n  })\n\n  return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes };\n}","import { IJsonConfig } from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n  ROLE: 'WEBSITE',\n  DEVICE: 'display_app',\n  CENTER_ID: '',\n  KIOSK: '',\n  STYLE: '3D',\n  DEFAULT_SELECTED_STORE: '',\n  DEBUG: '1',\n\n  MAP_BACKGROUND_COLOR: \"FFFFFF\",\n  ACCENT_COLOR: \"4EA5FF\",\n  STORE_DEFAULT_COLOR: \"E2E2E2\",\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n  WALL_THICKNESS: '0.6',\n  WALL_COLOR: \"888888\",\n  BOUNDARY_THICKNESS: '0.8',\n  BOUNDARY_COLOR: \"888888\",\n  BASE_COLOR: \"25292B\",\n  STORE_TEXT_COLOR: \"222222\",\n  OVERLAY_COLOR: \"FFFFFF\",\n  OVERLAY_OPACITY: '0.7',\n  // AMENITIES_NAV_BG_COLOR: \"000000\",\n  // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  }\n}\n\nexport const defaultVars: IJsonConfig = {\n  MAP_BACKGROUND_COLOR: '',\n  ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n  DEVICE: 'display_app',\n  KIOSK: '',\n  FLOORS: [],\n  KIOSKS: {},\n  CENTER_ID: null,\n  STATS: 'false',\n  STYLE: '3D', // 2D, 3D\n  DEBUG: '0',\n  ACCENT_COLOR: '4EA5FF',\n  STORE_DEFAULT_COLOR: 'E2E2E2',\n  STORE_HEIGHT: '8',\n  BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n  WALL_THICKNESS: '0.6',\n  BOUNDARY_THICKNESS: '0.8',\n  WALL_COLOR: '888888',\n  BOUNDARY_COLOR: '888888',\n  BASE_COLOR: '25292B',\n  BUILDING_BASE_COLOR: 'DADADA',\n  STORE_TEXT_COLOR: '222222',\n  OVERLAY_COLOR: 'FFFFFF',\n  OVERLAY_OPACITY: '0.7',\n  CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n  ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n  DEFAULT_CAMERA_POSITION: null, // custom default camera position\n  DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n  DEFAULT_SELECTED_STORE: null,\n  CAMERA: {\n    minZoom: 100,\n    maxZoom: 4800,\n    minDistance: 0.1,\n    maxDistance: 5000,\n    animSpeed: 0.2,\n  },\n  KIOSK_SIZE: '15',\n  ZOOM_STEP: '100',\n  SELECTED_ZOOM_LIMIT: '',\n};","// import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3 } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport { IExtMesh } from \"../types\";\nimport { getRenderOrder } from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { hex_to_color } from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n    addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n  }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n  //@ts-ignore\n  let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n  if (mesh) {\n    //@ts-ignore\n    add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n  }\n}\n\n\n\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n  if (!Array.isArray(mesh)) {\n    mesh = [mesh];\n  }\n  const box = mesh.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    //@ts-ignore\n    box.union(obj.geometry.boundingBox);\n    return box;\n  }, new Box3());\n  return box;\n}\n\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n  let map_obj = allIndexedMapObjects[object_id];\n\n  if (!map_obj) {\n    map_obj = {\n      offsetX: \"0\",\n      offsetY: \"0\",\n      rotate: \"0\",\n    }\n  }\n\n  let offsetX = parseInt(map_obj.offsetX);\n  let offsetY = parseInt(map_obj.offsetY);\n\n  newMeshPos.z = -mesh_size.z;\n\n  //@ts-ignore\n  newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n  //@ts-ignore\n  newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n  newMesh.scale.y *= -1;\n\n  newMeshPos.x += offsetX;\n  newMeshPos.y += offsetY;\n\n  newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n  const img = new Image();\n  img.crossOrigin = 'Anonymous';\n  if (map_obj.obj_type === 'retailer') {\n    if (retailer) {\n      img.src = retailer.logo;\n    } else {\n      console.error('retailer not found');\n      return null;\n    }\n  } else if (map_obj.obj_type === 'special') {\n\n    let svg_image_name = map_obj.value;\n    if (map_obj.layer_type === 'kiosk') svg_image_name = 'kiosk';\n    if (map_obj.layer_type === 'escalator') svg_image_name = 'escalator';\n    if (svg_image_name) {\n      let svg_color = '222222';\n      if (map_obj.text_color != null) {\n        svg_color = map_obj.text_color;\n      }\n\n      const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n      if (!svg_block) {\n        console.error('svg_block not found', svg_image_name);\n        return null;\n      }\n      const svg_element = svg_block.querySelector(\"svg\");\n      if (!svg_element) {\n        console.error('svg_element not found', svg_image_name);\n        return null;\n      }\n\n      const svgColoredParts = svg_element.querySelectorAll('[fill]');\n      svgColoredParts.forEach((svgColoredPart) => {\n        svgColoredPart.setAttribute('fill', '#' + svg_color);\n      })\n\n      const svgData = (new XMLSerializer()).serializeToString(svg_element);\n      img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n    }\n\n  } else {\n    if (map_obj.custom_image !== '' && map_obj?.custom_image?.startsWith('http')) {\n      img.src = map_obj.custom_image;\n    } else {\n      return null;\n    }\n  }\n\n  return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n  img.onload = function () {\n    const c = document.createElement(\"canvas\");\n    const ctx = c.getContext(\"2d\");\n\n    c.width = img.width;\n    c.height = img.height;\n\n    ctx?.drawImage(img, 0, 0);\n\n    let texture = new CanvasTexture(c);\n    texture.colorSpace = 'srgb'\n\n    const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n    const material = new MeshBasicMaterial({\n      map: texture,\n      transparent: true,\n      side: DoubleSide,\n      depthTest: false,\n      depthWrite: false,\n    });\n\n    if (map_obj.layer_type === 'kiosk') {\n      material.visible = false;\n    }\n\n    afterOnload(geometry, material);\n  };\n}\n\nfunction getImageLogo(allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry, object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: { storeLogo: Object3D }) => void): void {\n  const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n  if (img === null) return;\n\n  processImage(img, map_obj, (geometry, material) => {\n    const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n    // @ts-ignore\n    const floor_index = mesh.floor_index;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n    logoMesh.object_id = new_object_id;\n    logoMesh.floor_index = floor_index;\n    logoMesh.renderOrder = getRenderOrder('layer-image');\n    floors[floor_index]?.objsGroup.add(logoMesh);\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    logoMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    //@ts-ignore\n    BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    \n    handleAsync({storeLogo: BoundingSphereMesh});\n    */\n    handleAsync({ storeLogo: logoMesh });\n  })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id: string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): { textMesh: IExtMesh } | null | false {\n  const new_object_id = textLogoNamePrefix + object_id;\n  // deleteMeshByObjectID(new_object_id, scene, floors);\n  let result = null;\n\n  if (!geometry.boundingBox) {\n    geometry.computeBoundingBox();\n  }\n  if (!geometry.boundingBox) {\n    return null;\n  }\n\n  const boundingBox = geometry.boundingBox;\n\n  const mesh_center_point = new Vector3();\n  boundingBox.getCenter(mesh_center_point);\n\n  const mesh_size = new Vector3();\n  boundingBox.getSize(mesh_size);\n\n  //@ts-ignore\n  let map_obj: MapObj = allIndexedMapObjects[object_id] ? allIndexedMapObjects[object_id] : { layer_type: object_id.startsWith('escalator') ? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8 };\n\n  if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n    let text = '';\n    if (map_obj.layer_type === 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n      text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n    } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n      text = map_obj.custom_text;\n    } else {\n      text = '';\n    }\n\n    let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n    if (map_obj.text_color) {\n      text_color = hex_to_color(map_obj.text_color);\n    }\n\n    const material_settings = {\n      color: text_color,\n      transparent: true,\n      side: DoubleSide,\n      depthWrite: false,\n      depthTest: false,\n    };\n    let text_material = new MeshPhongMaterial(material_settings);\n    let text_geometry = new TextGeometry(text, {\n      font: myFont,\n      size: parseInt(map_obj.size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n\n    const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n    textMesh.userData.font = myFont;\n    layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n    textMesh.object_id = new_object_id;\n    textMesh.floor_index = floor_index;\n    textMesh.renderOrder = getRenderOrder('layer-text');\n    if (map_obj.layer_type === 'retail_name') {\n      textMesh.userData.retail_name = text;\n    }\n\n    floors[floor_index].objsGroup.add(textMesh);\n\n    //scene.add(textMesh);\n    //console.debug({UpdateTexts: scene});\n\n    // Show bounding sphere\n\n    /*const wireframeMaterial = new MeshBasicMaterial({\n        color: 0x0000ff,\n        wireframe: true,\n        transparent: true,\n        opacity: 0.25,\n    });\n    textMesh.geometry.computeBoundingSphere();\n    const BoundingSphereMesh = new Mesh(\n        new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n        wireframeMaterial\n    )\n    @ts-ignore\n    BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n    scene.add(BoundingSphereMesh);\n    */\n    result = { textMesh };\n  }\n\n  else if (\n    map_obj.layer_type === 'retail_logo' ||\n    map_obj.layer_type === 'custom_image' ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id != null) ||\n    (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    || (map_obj.layer_type === 'escalator')\n  ) {\n    getImageLogo(allIndexedMapObjects, allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n  }\n  return result;\n}","import { Dispatch, ReactNode, SetStateAction, createContext, useContext, useState } from \"react\"\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport type { Mesh } from \"three\";\nimport path from \"ngraph.path\";\nimport { EventedType } from \"ngraph.events\";\nimport { IFloorData } from \"src/types\";\n\n\ntype MapBoxContextType = {\n  meshByObjectId: Map<string, Mesh>;\n  setMeshByObjectId: Dispatch<SetStateAction<Map<string, Mesh>>> | Function;\n  allMapObjects: Array<string>;\n  setAllMapObjects: Dispatch<SetStateAction<Array<string>>> | Function;\n  allIndexedMapObjects: Record<string, MapObj>;\n  setAllIndexedMapObjects: Dispatch<SetStateAction<Record<string, MapObj>>> | Function;\n  allIndexedRetailers: Record<string, IRetailer>;\n  setAllIndexedRetailers: Dispatch<SetStateAction<Record<string, IRetailer>>> | Function;\n  allNodesFloor: Record<string, number>;\n  setAllNodesFloor: Dispatch<SetStateAction<Record<string, number>>> | Function;\n  pathFinderGraph: Graph<any, any> & EventedType\n  setPathFinderGraph: Dispatch<SetStateAction<Graph<any, any> & EventedType>> | Function;\n  ngraphPath: typeof path;\n  setNgraphPath: Dispatch<SetStateAction<typeof path>> | Function;\n  floorsData: IFloorData[];\n}\nconst MapBoxContext = createContext<MapBoxContextType>({\n  meshByObjectId: new Map<string, Mesh>(),\n  setMeshByObjectId: () => null,\n  allMapObjects: [],\n  setAllMapObjects: () => null,\n  allIndexedMapObjects: {},\n  setAllIndexedMapObjects: () => null,\n  allIndexedRetailers: {},\n  setAllIndexedRetailers: () => null,\n  allNodesFloor: {},\n  setAllNodesFloor: () => null,\n  pathFinderGraph: createGraph(),\n  setPathFinderGraph: () => null,\n  ngraphPath: path,\n  setNgraphPath: () => null,\n  floorsData: []\n})\n\nconst MapBoxContextProvider = ({ children }: { children: ReactNode }) => {\n\n  const [meshByObjectId, setMeshByObjectId] = useState<MapBoxContextType['meshByObjectId']>(new Map<string, Mesh>());\n  const [allMapObjects, setAllMapObjects] = useState<MapBoxContextType['allMapObjects']>([]);\n  const [allIndexedMapObjects, setAllIndexedMapObjects] = useState<MapBoxContextType['allIndexedMapObjects']>({});\n  const [allIndexedRetailers, setAllIndexedRetailers] = useState<MapBoxContextType['allIndexedRetailers']>({});\n  const [allNodesFloor, setAllNodesFloor] = useState<MapBoxContextType['allNodesFloor']>({});\n\n  //<{ x:number, y:number }, { weight: number }>\n  const [pathFinderGraph, setPathFinderGraph] = useState<MapBoxContextType['pathFinderGraph']>(createGraph());\n  const [ngraphPath, setNgraphPath] = useState<MapBoxContextType['ngraphPath']>(path);\n  const [floorsData] = useState<MapBoxContextType['floorsData']>([]);\n\n  return (\n    <MapBoxContext.Provider value={{\n      meshByObjectId,\n      setMeshByObjectId,\n      allMapObjects,\n      setAllMapObjects,\n      allIndexedMapObjects,\n      setAllIndexedMapObjects,\n      allIndexedRetailers,\n      setAllIndexedRetailers,\n      allNodesFloor,\n      setAllNodesFloor,\n      pathFinderGraph,\n      setPathFinderGraph,\n      ngraphPath,\n      setNgraphPath,\n      floorsData\n    }}\n    >\n      {children}\n    </MapBoxContext.Provider>\n  )\n\n}\n\nexport function useMapBoxContext() {\n  const context = useContext(MapBoxContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMapBoxContext must be used within MapBoxContextProvider\");\n  }\n\n  return context;\n}\n\nexport default MapBoxContextProvider;\n","import {\n  Group,\n  Mesh,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { loadFloors } from \"./loadFloors\";\nimport type { IConfig, IExtMesh, IFloorData, IMeshValues, TRoles } from \"../../types\";\nimport { defaultVars, mapit2DefaultVars } from \"../../defaults\";\n// import {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport { get_store_name_logo_geo } from \"src/helpers/draw.logo.helpers\";\nimport { IJsonConfig, IMeshParamsTmp } from \"../../types\";\nimport { hex_to_color } from \"src/helpers/misc\";\nimport { Kiosk, MapIt2Response, MapObj, IRetailer } from \"../../mapitApiTypes\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars }\n\nconst defaultMapObjValues = {\n  id: null,\n  center_id: config.CENTER_ID,\n  retailer_id: null,\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: 8,\n  rotate: 0,\n  offsetX: 0,\n  offsetY: 0,\n} as Record<string, string | number | null | undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\n\n// const floorsData:IFloorData[] = [];\nlet MEDIA_STORAGE_URI: string = '';\n\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n  for (let key in obj) {\n    delete obj[key];\n  }\n}\n\nfunction makeIndexedMapObjects(allIndexedMapObjects: Record<string, MapObj>, map_objs: MapObj[]) {\n  clearObject(allIndexedMapObjects);\n\n  allNonIndexedMapObjects = map_objs;\n\n  for (let i = 0; i < map_objs.length; i++) {\n    const obj = map_objs[i];\n    allIndexedMapObjects[obj.map_obj_name] = obj;\n    for (let key in defaultMapObjValues) {\n      const value = defaultMapObjValues[key];\n      //@ts-ignore\n      if (value != null && obj[key] == null) {\n        //@ts-ignore\n        allIndexedMapObjects[obj.map_obj_name][key] = value;\n      }\n    }\n  }\n}\n\nconst init = (allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: IJsonConfig, floors: IFloorData[], response: MapIt2Response) => {\n  const KIOSKS: Record<string, Kiosk> = {};\n  response.kiosks.forEach((kiosk) => {\n    const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n    if (mapObj) {\n      kiosk.map_obj_name = mapObj.map_obj_name;\n    }\n    KIOSKS[kiosk.id] = kiosk;\n  });\n\n\n  for (let index in response.retailers) {\n    const retailer = response.retailers[index];\n    allIndexedRetailers[retailer.id] = retailer;\n    allIndexedRetailers[retailer.id].index = index;\n  }\n\n  // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n  // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n  makeIndexedMapObjects(allIndexedMapObjects, response.map_objs);\n\n  floors.length = 0;\n  response.floors.forEach((value: IFloorData, index: number) => {\n    const objsGroup = new Group();\n    objsGroup.scale.y *= -1;\n    objsGroup.lookAt(0, 1, 0);\n\n    floors.push({\n      id: value.id,\n      // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n      svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n      title: value.title,\n      objsGroup: objsGroup,\n      interactiveObjs: [],\n      escalatorsObjs: [],\n      escalatorsNodes: {},\n      escalatorMeshes: [],\n      route_points: [],\n      route_tube: undefined,\n      route_texture: null,\n      routeMeshes: [],\n      route_active: false,\n    });\n  });\n  const DEFAULT_CAMERA_FOV = 75;\n  const DEFAULT_CAMERA_FAR = 10000;\n  config.CAMERA.far = DEFAULT_CAMERA_FAR;\n  config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n  const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n  config.CAMERA.maxDistance *= fovCorrection;\n  config.CAMERA.far *= fovCorrection;\n\n  const processedConfig: IConfig = {\n    ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n    BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n    BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n    BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n    BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n    BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n    CAMERA: {\n      ...config.CAMERA,\n      minZoom: parseInt(response.settings.MIN_ZOOM) ? parseInt(response.settings.MIN_ZOOM) : config.CAMERA.minZoom,\n      maxZoom: parseInt(response.settings.MAX_ZOOM) ? parseInt(response.settings.MAX_ZOOM) : config.CAMERA.maxZoom,\n      minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n      maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE) ? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n    },\n    CAMERA_CONTROLS_STATES: (() => {\n      const canvasWidth = window.screen.width;\n      if (config.CAMERA_CONTROLS_STATES) {\n        console.debug('config', { ...config.CAMERA_CONTROLS_STATES })\n        return { ...config.CAMERA_CONTROLS_STATES };\n      } else {\n\n        const roles: TRoles[] = [\"PORTAL\", \"PORTAL_RESPONSIVE\"]\n\n        if (!roles.includes(config.ROLE) && canvasWidth) {\n          if (canvasWidth <= 600) {\n            return response.camera_controls_states.mobile;\n          } else if (canvasWidth <= 1024) {\n            return response.camera_controls_states.tablet;\n          }\n        }\n        return response.camera_controls_states[config.DEVICE];\n      }\n    })(),\n    // CAMERA_CONTROLS_STATES: config.CAMERA_CONTROLS_STATES ? config.CAMERA_CONTROLS_STATES : response.camera_controls_states[config.DEVICE],\n    CENTER_ID: config.CENTER_ID,\n    CONTROLS: null,\n    DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n    DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n    DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n    DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n    DEVICE: config.DEVICE,\n    KIOSK: config.KIOSK ? config.KIOSK : '',\n    KIOSKS: KIOSKS,\n    MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n    ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n    OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n    OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n    ROLE: config.ROLE,\n    SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n    STATS: config.STATS === 'true' || config.STATS === '1',\n    STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n    STORE_HEIGHT: response.settings.STORE_HEIGHT ? response.settings.STORE_HEIGHT : config.STORE_HEIGHT ? config.STORE_HEIGHT : '8',\n    STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n    STYLE: response.settings.STYLE ? response.settings.STYLE : config.STYLE ? config.STYLE : '3D',\n    WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n    WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n    FLOORS: response.floors,\n    AMENITIES: response.amenities,\n    RETAILERS: response.retailers,\n    AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n    AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n    KIOSK_SIZE: response.settings.KIOSK_SIZE ? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n    ZOOM_STEP: response.settings.ZOOM_STEP ? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n    SELECTED_ZOOM_LIMIT: config.SELECTED_ZOOM_LIMIT ? config.SELECTED_ZOOM_LIMIT : response.settings.SELECTED_ZOOM_LIMIT ? response.settings.SELECTED_ZOOM_LIMIT : '4800',\n    SELECTED_ZOOM_LIMIT_DISTANCE: parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) ? parseInt(response.settings.SELECTED_ZOOM_LIMIT_DISTANCE) : parseInt(response.settings.CAMERA_MIN_DISTANCE) ? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n  };\n\n  // AMENITIES_NAV_BG_COLOR: string;\n  // AMENITIES_NAV_ICON_COLOR: string;\n\n  return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response | null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n  const { floorsData } = useMapBoxContext();\n  const { allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, setPathFinderGraph } = useMapBoxContext();\n  const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n  const [textParams, setTextParams] = useState<Array<{ textMesh: IExtMesh }[]>>([]);\n  const [storeLogos, setStoreLogos] = useState<{ storeLogo: Mesh }[][]>([]);\n  // const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n  const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n  const [urls, setUrls] = useState<string[]>([]);\n  const [processedConfig, setProcessedConfig] = useState<IConfig | null>(null);\n  let result = useLoader(SVGLoader, urls);\n\n  MEDIA_STORAGE_URI = useMemo(() => {\n    const r = /\\/$/;\n    if (mediaStorageURI) {\n      return mediaStorageURI?.replace(r, '');\n    }\n\n    return '';\n\n  }, [mediaStorageURI])\n\n  // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n  const myFont = useFont(fontData as unknown as FontData);\n\n  // const getWallShape = (...params: any): Shape | Shape[] => {\n  //     return []\n  // }\n\n\n  const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: { storeLogo: Mesh }) => {\n    setStoreLogos((prevLogos) => {\n      // console.debug({floorIndex});\n      if (prevLogos[floorIndex]) {\n        prevLogos[floorIndex].push({ ...meshLogo });\n      } else {\n        prevLogos[floorIndex] = [{ ...meshLogo }];\n      }\n      // console.debug({prevLogos});\n      return [...prevLogos];\n    });\n  }), [])\n\n  const mergedConfig = useMemo(() => {\n    let result = config;\n\n    if (jsonConfig) {\n      result = {\n        ...config,\n        ...jsonConfig,\n      }\n\n      if (jsonConfig.CAMERA) {\n        result.CAMERA = {\n          ...config.CAMERA,\n          ...jsonConfig.CAMERA,\n        }\n      }\n    }\n    if (!jsonConfig?.DEVICE && result.ROLE === 'WP_SITE') {\n      result.DEVICE = 'desktop';\n    }\n    return result;\n\n  }, [jsonConfig])\n\n  useEffect(() => {\n    if (!data) return;\n\n\n    // console.log('useMeshFloors[data]', {data})\n\n    const processedConfig = init(allIndexedMapObjects, allIndexedRetailers, mergedConfig, floorsData, data as MapIt2Response);\n    const values: string[] = [];\n    processedConfig.FLOORS.forEach((value) => {\n      // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n      //@ts-ignore\n      values.push(`${value.svg}`);\n    });\n\n    setProcessedConfig(processedConfig);\n    setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n  }, [data, allIndexedMapObjects, allIndexedRetailers, floorsData, jsonConfig, mergedConfig]);\n\n  const clearScene = useCallback(() => {\n    if (meshParams) {\n      meshParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.mesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (textParams) {\n      textParams.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.textMesh.removeFromParent();\n          })\n        }\n      })\n    }\n\n    if (storeLogos) {\n      storeLogos.forEach(floor => {\n        if (floor) {\n          floor.forEach(value => {\n            value.storeLogo.removeFromParent();\n          })\n        }\n      })\n    }\n\n    setMeshParams([]);\n    setTextParams([]);\n    setStoreLogos([]);\n  }, [meshParams, textParams, storeLogos])\n\n  useEffect(() => {\n    return () => {\n      clearScene();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  useEffect(() => {\n    if (!processedConfig || !urls.length || !myFont || !result) return;\n\n    const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, processedConfig, result, role);\n    const TextsAndLogos: Array<{ textMesh: IExtMesh }[]> = [];\n    allNonIndexedMapObjects.forEach((params) => {\n      let values: IMeshValues | undefined;\n      for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n        //@ts-ignore\n        values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n        if (values !== undefined) {\n          break;\n        }\n      }\n      if (!values) return null;\n      const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n      if (textParams) {\n        if (!TextsAndLogos[values.floor_index]) {\n          TextsAndLogos[values.floor_index] = [];\n        }\n        TextsAndLogos[values.floor_index].push(textParams);\n      }\n    })\n    const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n      return (acc + item.length);\n    }, 0);\n    const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n    if (countNonIndexedObjs !== 0) {\n      const mapObjNames = new Set<string>();\n      allNonIndexedMapObjects.forEach((item) => {\n        mapObjNames.add(item.map_obj_name);\n      });\n      GeometriesAndMaterials.forEach((items) => {\n        items.forEach(item => {\n          if (!mapObjNames.has(item.object_id)) {\n            const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n            if (textParams) {\n              if (!TextsAndLogos[item.floor_index]) {\n                TextsAndLogos[item.floor_index] = [];\n              }\n              TextsAndLogos[item.floor_index].push(textParams);\n            }\n          }\n        })\n      });\n    }\n    setMeshParams([...GeometriesAndMaterials]);\n    setTextParams(TextsAndLogos);\n    setPathFinderGraph(graph);\n    setEscalatorNodes([...escalator_nodes]);\n\n  }, [processedConfig, urls, result, myFont, allIndexedMapObjects, allIndexedRetailers, allMapObjects, allNodesFloor, pathFinderGraph, floorsData, role, setPathFinderGraph, handleAsyncStoreLogos]);\n\n  return useMemo(() => {\n    return {\n      config: processedConfig,\n      meshParams: meshParams,\n      textParams,\n      storeLogos,\n      floors: floorsData,\n      pathFinderGraph,\n      escalator_nodes: escalatorNodes,\n    }\n  }, [processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useState } from \"react\"\nimport { IConfig, IExtMesh } from \"src/types\";\n\n\nexport type TMeshObjectContext = {\n  MeshObject: IExtMesh[] | null;\n  SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n  cameraLength: number | undefined,\n  setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n  config: IConfig | undefined,\n  setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n  MeshObject: null,\n  SetMeshObject: () => null,\n  cameraLength: undefined,\n  setCameraLength: () => null,\n  config: undefined,\n  setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({ children }: { children: React.ReactNode }) {\n  const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n  const [config, setConfig] = useState<IConfig | undefined>();\n  const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n  return (\n    <MeshObjectContext.Provider\n      value={{\n        MeshObject,\n        SetMeshObject,\n        cameraLength,\n        setCameraLength,\n        config,\n        setConfig\n      }}\n    >\n      {children}\n    </MeshObjectContext.Provider>\n  )\n}\n\nexport function useMeshObjectContext() {\n  const context = useContext(MeshObjectContext);\n\n  if (context === undefined) {\n    throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n  }\n\n  return context;\n}\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { IConfig } from \"src/types\";\nimport { SpriteMaterial, Texture } from \"three\";\nimport styles from '../../MapBox.module.scss';\nimport { Html } from \"@react-three/drei\";\n\nexport const MapCenterMarker = ({ size, lockSize, blink, cameraLength, config }: { size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined }) => {\n  const [, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n\n  const [texture, setTexture] = useState<Texture | null>(null);\n  const scale = lockSize ? 5 * size / 256 : 8 * size;\n\n  useEffect(() => {\n    if (!lockSize && config !== undefined && cameraLength !== undefined) {\n      setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n    }\n  }, [lockSize, config, cameraLength])\n\n  const material = useMemo(() => {\n    if (!texture) {\n      return null;\n    }\n\n    const material = new SpriteMaterial({ map: texture, sizeAttenuation: !lockSize, depthTest: false, depthWrite: false, color: \"black\" });\n    return material;\n  }, [lockSize, texture])\n\n  // todo figure out better way\n  useEffect(() => {\n    const svgOrigin = document.getElementById('map-special-svg-kiosk')?.querySelector('svg');\n    if (svgOrigin) {\n      const svgData = (new XMLSerializer()).serializeToString(svgOrigin);\n      const svgBlob = new Blob([svgData], { type: 'image/svg+xml' });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const canvas = document.createElement('canvas');\n      canvas.width = 256//svgSize.width*0.1;\n      canvas.height = 256//svgSize.height*0.1;\n      const ctx = canvas.getContext('2d');\n      const img = document.createElement('img');\n      img.src = svgUrl;\n      img.onload = () => {\n        ctx?.drawImage(img, 96, 0, 64, 128);\n        const svgTexture = new Texture(canvas);\n        svgTexture.needsUpdate = true;\n        setTexture(svgTexture);\n      }\n    }\n  }, []);\n\n  if (material) {\n    // console.log('RENDER SPRITE')\n    return (\n      <group>\n        <sprite scale={scale} material={material}>\n        </sprite>\n        {blink && <Html><div className={styles.mapCenterMarker}></div></Html>}\n      </group>\n    )\n  } else {\n    return null\n  }\n}","import { IExtMesh, IMeshParams, IMeshValues } from \"../../types\";\nimport { ThreeEvent } from \"@react-three/fiber\";\nimport React, { } from \"react\";\nimport { Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB } from \"three\";\nimport { RouteTube } from \"./RouteTube\";\nimport { Html } from \"@react-three/drei\";\nimport styles from '../../MapBox.module.scss';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n  floorIndex: number,\n  currentFloorIndex: number;\n  meshFloors: IMeshParams;\n  currKioskObj: Mesh | null;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  routeTube?: Mesh;\n  visible: boolean,\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  handleChangeFloor: (index: number) => void;\n}\n\nconst getDarkerColor = (color: RGB) => {\n  if (color) {\n    var newColor = { ...color }\n    newColor.r = color.r * 0.92;\n    newColor.g = color.g * 0.92;\n    newColor.b = color.b * 0.92;\n    return newColor;\n  }\n  return null;\n}\n\nfunction MapObject(props: { type: string, mesh: IExtMesh, visible: boolean, currentFloorIndex: number, params?: IMeshValues }) {\n  const [, setUpdate] = React.useState(false);\n  const { type, mesh, currentFloorIndex } = props;\n  React.useEffect(() => {\n    mesh.userData.triggerUpdate = () => {\n      // setUpdate((value) => !value);\n    };\n    return () => mesh.userData.triggerUpdate = undefined\n  }, [mesh.userData, setUpdate]);\n\n  const { config, cameraLength } = useMeshObjectContext();\n\n  // console.warn({update});\n\n  switch (type) {\n    case 'storeLogo':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </primitive>\n      } else {\n        return <primitive key={mesh.uuid} object={mesh}>\n          {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n        </primitive>\n      }\n    case 'kiosk':\n      if (mesh.userData.kioskConfig && mesh.userData.kioskConfig.floorIndex === currentFloorIndex) {\n        return <>\n          {mesh.userData.kioskConfig ? <MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /> : null}\n        </>\n      } else {\n        return null;\n      }\n    default:\n      return null;\n  }\n}\n\nexport const Map = (params: IMapProps) => {\n  const { meshFloors, routeTube, floorIndex, currentFloorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor } = params;\n\n  const { config, meshParams, textParams, storeLogos } = meshFloors;\n  const floor = meshFloors.floors[floorIndex];\n\n  const onPointerMove = params.onPointerMove;\n  const onPointerOver = params.onPointerEnter;\n  const onPointerOut = params.onPointerLeave;\n  const onClick = params.onClick;\n\n  const floorMeshParams = meshParams[floorIndex];\n  const floorTextParams = textParams[floorIndex];\n  const floorStoreLogos = storeLogos[floorIndex];\n  const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n  return (\n    <group visible={visible}>\n      {floorMeshParams?.map((params) => {\n        if (!params.mesh) return null;\n\n        const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n        const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n        const active = activeObjectId && params.mesh.object_id === activeObjectId;\n        if (interactive) {\n          // TODO: move those colorDefault, active, etc to userData of mesh or material\n          if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n            // @ts-ignore\n            const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n            //console.log('Map', {baseColor, active, hovered})\n            params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n          } else {\n            // @ts-ignore\n            params.mesh.material.color = params.mesh.material.colorDefault;\n          }\n        }\n\n        return <group key={params.mesh.uuid} {...(interactive ? { onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n          <primitive object={params.mesh}></primitive>\n        </group>\n      })}\n      {floorTextParams?.map((params) => {\n        if (!params.textMesh) return null;\n        return (\n          <React.Fragment key={params.textMesh.uuid}>\n\n            <primitive object={params.textMesh}>\n              {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n              {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} currentFloorIndex={currentFloorIndex} type={'kiosk'} visible={visible} /> : null}\n            </primitive>\n          </React.Fragment>\n        )\n      })}\n      {floorStoreLogos?.map((params) => {\n        if (!params.storeLogo) return null;\n        return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} currentFloorIndex={currentFloorIndex} type={'storeLogo'} visible={visible} />\n      })}\n      {escalatorMeshes?.map((params) => {\n        //@ts-ignore\n        return <primitive key={`escalator-${params.object_id}`} object={params}>\n          <Html visible={true} position={params.geometry.boundingSphere?.center}>\n            <div id={styles.escalator_elems}\n              style={{ display: visible ? 'block' : 'none' }}\n              onClick={(e) => {\n                e.stopPropagation()\n                handleChangeFloor(params.goToFloor?.index || 0)\n                return false\n              }}\n              onPointerMove={(e) => e.stopPropagation()}>\n              <div className={styles.element} id={params.object_id as string}>\n                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? meshFloors.floors.length - params.goToFloor.index : ''}</div>\n              </div>\n            </div>\n          </Html>\n        </primitive>\n      })}\n      <RouteTube mesh={routeTube} />\n    </group>\n  )\n}","import type { Mesh } from \"three\";\nimport { Box3, Vector3 } from \"three\";\n\nexport function get_camera_focus_object(objs: Mesh[], fov: number, aspectRatio: number, style: string) {\n  // config.STYLE\n  // config.CAMERA.fov\n\n  if (!Array.isArray(objs)) {\n    objs = [objs];\n  }\n  if (!objs.length) {\n    console.warn('get_camera_focus_object: no objects passed');\n    return { position: new Vector3(), target: new Vector3() };\n  }\n\n  const objsBoundingBox = objs.reduce((box, obj) => {\n    if (!obj.geometry.boundingBox) {\n      obj.geometry.computeBoundingBox();\n    }\n    if (obj.geometry.boundingBox) {\n      box.union(obj.geometry.boundingBox);\n    }\n    return box;\n  }, new Box3());\n\n  const obj_size = new Vector3();\n  objsBoundingBox.getSize(obj_size);\n\n  const center = new Vector3();\n  objsBoundingBox.getCenter(center);\n\n  objs[0].localToWorld(center);\n\n  // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n  // var padding = max_length * 0.2;\n  // if (padding > 50) padding = 50;\n  // max_length += padding;\n  // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n  let tanFOV = Math.tan(Math.PI * fov / 360);\n  let padding = 1.1;\n  let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n  let new_height = (obj_size.y * padding) / 2 / tanFOV;\n  let new_y = Math.max(new_width, new_height);\n  let new_z = getCameraTiltPosition(new_y, style);\n\n  const target = new Vector3(center.x, 0, center.z);\n  const position = new Vector3(center.x, new_y, center.z + new_z);\n\n  // createjs.Ticker.framerate = 60;\n  // createjs.Tween.get(config.CONTROLS.target)\n  //     .to({ x: center.x, z: center.z }, 400);\n  // createjs.Tween.get(config.CAMERA.position)\n  //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n  return { position, target };\n}\n\nfunction getCameraTiltPosition(y: number, style: string): number {\n  let angle = 60;\n  if (style === '2D') angle = 89.9;\n  return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IMeshParams } from \"../../types\";\nimport { Map } from \"./Map\";\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\n// import { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { defaultVars } from \"src/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { useMapBoxContext } from \"src/contexts/MapBoxContextProvider\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\n// import { allNodesFloor } from \"src/globals\";\n\ninterface IFloorsMapProps {\n  meshFloors: IMeshParams;\n  currentFloorIndex: number;\n  onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n  onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n  onClick?: (e: ThreeEvent<MouseEvent>) => void;\n  onCameraMove?: (e: any) => void;\n  currKioskObj: Mesh;\n  currKioskFloorIndex: number;\n  routeTargetId?: string;\n  routeTargetFromId?: string;\n  amenityTargetType: string;\n  activeObjectId?: string;\n  hoverObjectId?: string;\n  handleChangeFloor: (index: number) => void;\n  escalatorNodes: string[];\n  zoom: IZoomData | null;\n  handleCameraLength?: (length: number) => void;\n  config: IConfig;\n  cameraPos?: { x: number, y: number, z: number } | undefined | null;\n  controlPos?: { x: number, y: number, z: number } | undefined | null;\n  handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n  isSelectedRetailerSlug: boolean;\n  setIsCameraInit: Function;\n  retailers: IRetailer[],\n  mapObjs: MapObj[],\n  handleObjectClick: (object: IExtMesh, targetId: string, softClick?: boolean) => void,\n  triggerClick: boolean,\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n  const { allIndexedMapObjects, allNodesFloor } = useMapBoxContext();\n  const [firstMove, setFirstMove] = useState<boolean>(false);\n  const { meshFloors,\n    currentFloorIndex,\n    currKioskObj,\n    currKioskFloorIndex,\n    routeTargetId,\n    routeTargetFromId,\n    amenityTargetType,\n    handleChangeFloor,\n    escalatorNodes,\n    zoom,\n    handleCameraLength,\n    config,\n    handleCameraAndControlsChange,\n    activeObjectId,\n    isSelectedRetailerSlug,\n    setIsCameraInit,\n    retailers,\n    mapObjs,\n    handleObjectClick,\n    triggerClick, } = params;\n  const { floors } = meshFloors;\n  const [cameraLimits, SetCameraLimits] = useState({ min: config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: 0, needsUpdate: true })\n  const { setCameraLength } = useMeshObjectContext();\n\n  const groupRef = useRef<Group>(null);\n  const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n  const mapControlRef = useRef<any>(null);\n  const { camera, scene } = useThree();\n  const cameraFocus = useRef<{\n    position: Vector3, target: Vector3,\n    fromPosition: Vector3, fromTarget: Vector3,\n    animationStartTime: number, duration: number\n  } | null>(null);\n  // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n  const style = meshFloors.config.STYLE;\n  const accentColor = meshFloors.config.ACCENT_COLOR;\n  const pathFinderGraph = meshFloors.pathFinderGraph;\n  const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n    routeTargetFromId ? routeTargetFromId : undefined;\n  const isUseDefaultsLimits = config.ROLE === \"PORTAL\" && routeTargetId;\n\n  const resetCamera = useCallback((fullReset: boolean = false) => {\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let meshes: Mesh[];\n    meshes = selectedFloorMeshParams.map(item => item.mesh);\n\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n\n\n    let isZeroCCS = true;\n\n    if (config.CAMERA_CONTROLS_STATES) {\n      let cameraV3 = config.CAMERA_CONTROLS_STATES.camera;\n      if (!(cameraV3 instanceof Vector3)) {\n        cameraV3 = new Vector3(cameraV3.x, cameraV3.y, cameraV3.z);\n      }\n      isZeroCCS = (cameraV3 as Vector3).length() === 0;\n    }\n\n    if (!fullReset && config.CAMERA_CONTROLS_STATES && !isZeroCCS && !['PORTAL'].includes(config.ROLE)) {\n      focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n      focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n    }\n\n    const cameraDistance = Math.min(\n      cameraLimits.max,\n      Math.max(\n        cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && cameraLimits.needsUpdate === false && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => ({\n        ...cl,\n        min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance,\n        max: config.CAMERA.maxDistance,\n      }));\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [camera, cameraLimits.needsUpdate, config.CAMERA.animSpeed, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA_CONTROLS_STATES, config.ROLE, currKioskFloorIndex, meshFloors.meshParams, style]);\n\n  const focusDistance = cameraFocus.current ? cameraFocus.current.position.distanceTo(cameraFocus.current.target) : 0;\n\n  useEffect(() => {\n\n    if (focusDistance > 0 && cameraLimits.needsUpdate) {\n      SetCameraLimits({ min: config.CAMERA.minDistance < 0.1 ? 0.1 : config.CAMERA.minDistance, max: config.CAMERA.maxDistance, initialDistance: focusDistance, needsUpdate: false })\n      setIsCameraInit(true);\n    }\n\n  }, [focusDistance, cameraLimits.needsUpdate, config.CAMERA])\n\n  useEffect(() => {\n\n    if (['DISPLAY_APP', 'WP_SITE'].includes(config.ROLE) && routeTargetId && cameraLimits.initialDistance > 0) {\n      SetCameraLimits(cl => {\n        const minDistance = Number(config.SELECTED_ZOOM_LIMIT_DISTANCE) < config.CAMERA.minDistance ? config.CAMERA.minDistance : Number(config.SELECTED_ZOOM_LIMIT_DISTANCE)\n        return {\n          ...cl,\n          needsUpdate: false,\n          min: minDistance < 0.1 ? 0.1 : minDistance,\n          max: config.CAMERA.maxDistance,\n        }\n      });\n    }\n  }, [config.CAMERA.maxZoom, config.CAMERA.minZoom, config.SELECTED_ZOOM_LIMIT, routeTargetId, cameraLimits.initialDistance])\n\n\n  useEffect(() => {\n    if (meshFloors.meshParams.length > 0) {\n      resetCamera();\n    }\n  }, [meshFloors.meshParams.length, resetCamera])\n\n  useEffect(() => {\n    if (!amenityTargetType || config.ROLE === 'PORTAL') {\n      setRouteTubes([]);\n      return;\n    }\n    const route = make_amenity_route(allNodesFloor, from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n    setRouteTubes(route);\n\n    if (currKioskObj && config.ROLE === \"DISPLAY_APP\") {\n      handleChangeFloor(currKioskFloorIndex);\n    }\n\n  }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from, config.ROLE, allNodesFloor, allIndexedMapObjects])\n\n  const clearEscalators = useCallback(() => {\n    meshFloors.floors.flat().forEach((item) => item.escalatorMeshes = []);\n  }, [meshFloors])\n\n  useEffect(() => {\n\n    if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n      if (config.ROLE === 'PORTAL') {\n        if (routeTargetId) {\n          const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n          if (targetMesh) {\n            setRouteTubes([targetMesh as IExtMesh])\n          }\n        } else {\n          clearEscalators();\n          setRouteTubes([]);\n        }\n      } else if (!amenityTargetType) {\n        clearEscalators();\n        setRouteTubes([]);\n      }\n      return;\n    }\n    if (!amenityTargetType) {\n      floors.forEach(floor => {\n        floor.escalatorMeshes = [];\n      });\n    }\n\n    // console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n    /* MAKE ROUTE PATH */\n\n    const route = create_route(allNodesFloor, from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n    setRouteTubes(route);\n\n  }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE, allNodesFloor, triggerClick]);\n\n  const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n  useEffect(() => {\n    if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n    if (!(camera instanceof PerspectiveCamera)) {\n      console.error('Camera is not a PerspectiveCamera');\n      return;\n    }\n    if (!selectedFloorMeshParams?.length) {\n      console.warn('objects not loaded yet');\n      return;\n    }\n\n    let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n    if (!activeObjectId && !amenityTargetType) {\n      return;\n    }\n\n    let meshes: Mesh[] = [];\n    if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n      meshes = [...routeMeshes]\n    } else if (activeObjectId && (config.ROLE === 'PORTAL' || isSelectedRetailerSlug)) {\n      const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n      if (currentActiveObject) {\n        meshes = [currentActiveObject.mesh];\n      }\n    }\n    if (!meshes.length) {\n      meshes = selectedFloorMeshParams.map(item => item.mesh);\n    }\n\n    const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n    const cameraDistance = Math.min(\n      isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max,\n      Math.max(\n        isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min,\n        focus.position.distanceTo(focus.target)\n      )\n    );\n    focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n    cameraFocus.current = {\n      ...focus,\n      fromPosition: mapControlRef.current.object.position.clone(),\n      fromTarget: mapControlRef.current.target.clone(),\n      animationStartTime: performance.now(),\n      duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n    };\n\n    // return () => {\n    //     cameraFocus.current = null;\n    // };\n  }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed, floors, activeObjectId, amenityTargetType, isSelectedRetailerSlug]);\n\n  useEffect(() => {\n    if (zoom?.direction && mapControlRef.current) {\n      if (!(camera instanceof PerspectiveCamera)) {\n        console.error('Camera is not a PerspectiveCamera');\n        return;\n      }\n\n      if (!selectedFloorMeshParams.length) {\n        console.warn('objects not loaded yet');\n        return;\n      }\n\n      let meshes: Mesh[];\n      if (routeTubes[currentFloorIndex]) {\n        meshes = [routeTubes[currentFloorIndex]];\n\n        const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n        if (currentActiveObject) {\n          meshes.push(currentActiveObject.mesh);\n        }\n      } else {\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n      }\n      const focus = {\n        position: mapControlRef.current.object.position.clone(),\n        target: mapControlRef.current.target.clone()\n      };\n\n      let cameraDistance = focus.position.distanceTo(focus.target);\n      const zoomStep = config.ZOOM_STEP ? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n      if (zoom.direction === 'in') {\n        cameraDistance -= zoomStep;\n      } else {\n        cameraDistance += zoomStep;\n      }\n\n      cameraDistance = Math.min(\n        cameraLimits.max,\n        Math.max(\n          cameraLimits.min,\n          cameraDistance\n        )\n      );\n\n      focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n      cameraFocus.current = {\n        ...focus,\n        fromPosition: mapControlRef.current.object.position.clone(),\n        fromTarget: mapControlRef.current.target.clone(),\n        animationStartTime: performance.now(),\n        duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n      };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [zoom])\n\n  // console.log('CameraLimits', cameraLimits)\n\n  const getInitialDistance = () => {\n    return cameraLimits.initialDistance\n  }\n\n\n  const onCameraMove = useCallback((e: any) => {\n    if (handleCameraLength) {\n      const vector = new Vector3();\n      vector.copy(e.target.object.position);\n      vector.sub(mapControlRef.current.target);\n      handleCameraLength(vector.length());\n      setCameraLength(vector.length());\n      if (handleCameraAndControlsChange) {\n        handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n      }\n    }\n  }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n  useFrame(() => {\n    if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n      if (!firstMove) {\n        setFirstMove(true);\n        cameraFocus.current.duration = 0;\n      }\n      const focus = cameraFocus.current;\n      const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n      const animationProgress = Math.min(1, animationTime / focus?.duration);\n      mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n      mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n      mapControlRef.current.object.updateProjectionMatrix();\n      if (animationProgress >= 1) {\n        cameraFocus.current = null;\n      }\n    }\n  })\n\n  const createRouteToStore = useCallback((retailerSlug: string) => {\n    if (retailerSlug.length) {\n      const retailer = retailers.find(item => item.slug === retailerSlug);\n      if (retailer) {\n        const mapObj = mapObjs.find(item => item.retailer_id === retailer.id);\n        if (mapObj) {\n          const obj = scene.getObjectByProperty('object_id', mapObj.map_obj_name);\n          if (obj) {\n            handleObjectClick(obj as IExtMesh, mapObj.map_obj_name, true);\n          }\n        }\n      }\n    }\n  }, [handleObjectClick, mapObjs, retailers, scene]);\n\n  useImperativeHandle(ref, () => ({\n    resetCamera,\n    createRouteToStore,\n    getInitialDistance,\n  }))\n\n\n  return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n    <>\n      <MapControls\n        makeDefault\n        onChange={onCameraMove}\n        ref={mapControlRef}\n        maxPolarAngle={Math.PI / 2}\n        minDistance={isUseDefaultsLimits ? defaultVars.CAMERA.minDistance : cameraLimits.min}\n        maxDistance={isUseDefaultsLimits ? defaultVars.CAMERA.maxDistance : cameraLimits.max}\n        enableZoom={config.ROLE === \"PORTAL\" || config.ROLE === \"DISPLAY_APP\"}\n        enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n        dampingFactor={0.3}\n      />\n\n      {floors && floors.map((value: IFloorData, index: number) => (\n        <Map\n          key={`Map-${index}`}\n          visible={currentFloorIndex === index}\n          floorIndex={index}\n          currentFloorIndex={currentFloorIndex}\n          currKioskObj={params.currKioskObj}\n          activeObjectId={params.activeObjectId}\n          hoverObjectId={params.hoverObjectId}\n          meshFloors={meshFloors}\n          routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n          onPointerEnter={params.onPointerEnter}\n          onPointerLeave={params.onPointerLeave}\n          onPointerMove={params.onPointerMove}\n          onClick={params.onClick}\n          handleChangeFloor={handleChangeFloor}\n        />\n      ))}\n    </>\n  </group>)\n})","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\nimport { IRetailer } from 'src/mapitApiTypes';\n\nexport const retailersApi = createApi({\n  reducerPath: 'retailersApi',\n  baseQuery: fetchBaseQuery({ baseUrl: '/api' }),\n  endpoints: (builder) => ({\n    getRetailers: builder.query<{ count: number, items: IRetailer[] }, { baseQuery: string, center_id: string, limit: number, page?: number }>({\n      query: ({ baseQuery, center_id, limit, page = 1 }) => ({\n        url: `${baseQuery}/v1/retailers?limit=${limit}&page=${page}`,\n        headers: {\n          center_id,\n        },\n      }),\n    })\n  })\n})\n\nexport const { useGetRetailersQuery, useLazyGetRetailersQuery } = retailersApi;","import { useLazyGetRetailersQuery } from \"src/services/retailersApi\"\nimport { useCallback, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\nconst useAllRetailers = (baseUrl: string, center_id: string, limit: number) => {\n  const [retailers, setRetailers] = useState<IRetailer[]>([])\n  const baseQuery = baseUrl?.lastIndexOf('/') === baseUrl.length - 1 ? baseUrl.slice(0, -1) : baseUrl;\n\n  const [getRetailers] = useLazyGetRetailersQuery()\n\n  const getAllRetailers = useCallback(() => new Promise<IRetailer[]>((resolve, reject) => {\n    let items: IRetailer[] = [];\n\n    const fetchData = (currentPage: number = 1) => {\n      getRetailers({ baseQuery, center_id, limit, page: currentPage }, true).then((response: any) => {\n        if (response?.data?.items) {\n          items = [...items, ...response.data.items];\n          if (response.data.count > items.length) {\n            fetchData(currentPage + 1);\n          } else {\n            setRetailers(items);\n            resolve(items);\n          }\n        }\n      })\n        .catch((err) => {\n          console.error('Error fetching retailers', err);\n          resolve([]);\n        });\n    };\n\n    fetchData();\n  }), [baseQuery, center_id, getRetailers, limit])\n\n  return { retailers, getAllRetailers }\n}\n\nexport default useAllRetailers;","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.scss';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\nimport \"./../../index.css\";\nimport { getAllAmenities } from \"src/helpers/amenities.helper\";\n\nconst UIComponent = ({\n  floors,\n  accentColor,\n  selectedFloorIndex,\n  handleFloorChange,\n  amenitiesList,\n  zoomIn,\n  zoomOut,\n  reset,\n  clearRoute,\n  handleAmenityClick,\n  role,\n  mapObjs,\n  onExtractedAmenities,\n}: IFloorSelectorProps & {\n  amenitiesList: IAmenitiesInteractiveList[],\n  zoomIn?: MouseEventHandler<HTMLDivElement>,\n  zoomOut?: MouseEventHandler<HTMLDivElement>,\n  reset?: (fullReset?: boolean) => void,\n  clearRoute?: MouseEventHandler<HTMLDivElement>,\n  handleAmenityClick: (type: string) => void,\n  role?: TRoles,\n  mapObjs?: MapObj[],\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n  const handleResetClick: MouseEventHandler = (e) => {\n    e.preventDefault();\n    if (reset instanceof Function) {\n      if (role === 'PORTAL_RESPONSIVE' || role === 'PORTAL') {\n        reset(true)\n      }\n      else {\n        reset();\n      }\n    }\n  }\n\n  const extractValues = useMemo<AmenityID[]>(() => {\n\n    if (!mapObjs) {\n      return [];\n    }\n\n    return mapObjs\n      .filter(obj => obj.layer_type === \"amenity\")\n      .map(obj => obj.value as AmenityID);\n  }, [mapObjs])\n  useEffect(() => {\n    if (onExtractedAmenities) {\n      onExtractedAmenities(extractValues)\n    }\n  }, [mapObjs, onExtractedAmenities, extractValues])\n\n  return (\n    <div id={styles['threejs-map-wrapper']}>\n      <div id={styles['threejs-map']}>\n        {floors.length > 0 && (\n          <div className={`map_controls ${styles.map_controls}`}>\n            <div className=\"map_controls_wrapper\">\n              {floors.length > 1 && (\n                <div className=\"floors btn_group\">\n                  {floors.map((floor: any, index: number) => (\n                    <div key={index} className={`floor control_btn ${index === selectedFloorIndex ? 'active' : ''}`} onClick={() => {\n                      handleFloorChange(index)\n                    }}>{floor.title}</div>\n                  ))}\n                </div>\n              )}\n\n              <div className=\"reset-zoom\">\n                <div onClick={handleResetClick} className=\"reset_btn control_btn\">RESET</div>\n\n                <div className=\"zoom_btns\">\n                  <div onClick={zoomOut} className=\"zoom-out control_btn\">–</div>\n                  <div onClick={zoomIn} className=\"zoom-in control_btn\">+</div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div className={`loading_map ${styles['hide']}`}>Loading map, please wait...</div>\n\n        {!['PORTAL', 'DISPLAY_APP'].includes(role as string) &&\n          <div className={`amenities ${styles.amenities}`} style={{ display: 'block' }}>\n            {amenitiesList.map((amenity, index) => {\n              if (!extractValues.includes(amenity.type)) {\n                return null;\n              }\n              return (\n                <div key={`amenity-${amenity.name}-${index}`}\n                  className={`${styles.amenity}`}\n                  onClick={() => handleAmenityClick(amenity.type)}\n                  dangerouslySetInnerHTML={{ __html: amenity.svg as string }}>\n                </div>\n              )\n            })}\n          </div>\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default UIComponent;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { useCallback, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, MeshPhongMaterial, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IMeshParamsTmp } from \"src/types\";\nimport textFontInterface from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useRetailersOptions, { RetailerOption } from \"./hooks/useRetailersOptions\";\n\n\ninterface IMapboxForm {\n  floorIndex: number;\n  meshFloors: IMeshParamsTmp;\n  config: IConfig;\n  data: any;\n  setData: (index: number, data: MapObj) => void;\n  selectedId: string;\n  centerId: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  apiURI?: string;\n  onResetData?: (data: MapObj) => void;\n  triggerSceneUpdate: Function;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n  [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n  id: '',\n  center_id: centerId,\n  retailer_id: '',\n  kiosk_id: null,\n  map_obj_name: '',\n  obj_type: 'retailer',\n  layer_type: 'retail_name',\n  value: '',\n  custom_text: '',\n  custom_image: '',\n  hover_text: '',\n  bg_color: '',\n  transparent: 0,\n  text_color: '',\n  size: '8',\n  lock_size: '0',\n  rotate: '0',\n  offsetX: '0',\n  offsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj, floorIndex: Number) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData, floorIndex) => {\n  const kioskConfig = obj.userData.kioskConfig;\n  if (kioskConfig) {\n    //TODO use 'value' until api with lock_size will be working\n    obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n    obj.userData.kioskConfig = {\n      ...kioskConfig,\n      lockSize: formData.value === '1',\n      blink: kioskConfig.blink,\n      size: Number(formData.size),\n      floorIndex: floorIndex\n    }\n    // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n    obj.userData.triggerUpdate?.();\n  }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n  const { data, setData, selectedId, centerId, config, floorIndex, onResetData, triggerSceneUpdate } = params;\n\n  const textFont = useFont(textFontInterface as unknown as FontData);\n  const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n  const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n  const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n  const [formData, setFormData] = useState<MapObj | null>(null);\n  const [rotation] = useState<number | undefined>(undefined);\n  const context = useMeshObjectContext();\n  const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n  const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n  const [, startTransition] = useTransition();\n  const intervalRefs = useRef<TIncDecInterval>({});\n\n  const { isLoading: isLoadingRetailers, loadOptions: loadRetailersOptions, retailers } = useRetailersOptions(centerId, params.apiURI ?? '');\n\n  const [selectedKiosksId, setSelectedKiosksId] = useState<number[]>([]);\n\n  const recheckSelectedKiosksId = useCallback((mapObjs: any[]) => {\n    if (mapObjs) {\n      const ids = (mapObjs as { kiosk_id: number }[]).reduce<number[]>((prev, cur) => {\n        if (cur.kiosk_id !== null) {\n          return [...prev, cur.kiosk_id];\n        }\n        return prev;\n      }, [])\n      setSelectedKiosksId([...ids]);\n    }\n  }, [])\n\n  useEffect(() => {\n    recheckSelectedKiosksId(data.map_objs);\n  }, [data.map_objs, recheckSelectedKiosksId])\n\n  const loadKiosksOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    // console.debug({ inputValue })\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.filter((item: any) => {\n        if (inputValue) {\n          return (item.title as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    callback(result);\n  }, [data.kiosks, selectedKiosksId])\n\n  const loadAmenitiesOptions = useCallback((inputValue: string, callback: (options: any[]) => void) => {\n    let result: any[] = [];\n    if (Object.keys(data.amenities).length) {\n      result = Object.keys(data.amenities).filter((item: string) => {\n        if (inputValue) {\n          return (data.amenities[item].name as string).toLowerCase().includes(inputValue.toLowerCase());\n        } else {\n          return true;\n        }\n      }).map((item: string) => {\n        return {\n          value: item,\n          label: data.amenities[item].name,\n        }\n      })\n    }\n    callback(result);\n  }, [data.amenities])\n\n  const getDefaultKioksOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data?.kiosks?.length) {\n      result = data.kiosks.map((item: any) => {\n        return {\n          value: item.id,\n          label: item.title,\n          isDisabled: selectedKiosksId.includes(item.id),\n        }\n      })\n    }\n    return result;\n  }, [data.kiosks, selectedKiosksId])\n\n  const getDefaultAmenitiesOptions = useCallback(() => {\n    let result: any[] = [];\n    if (data.amenities.length > 0) {\n      result = data.amenities.map((item: any) => {\n        return {\n          value: item.type,\n          label: item.name,\n        }\n      })\n    }\n    return result;\n  }, [data.amenities])\n\n  const makeImage = useCallback((formData: MapObj, obj: IExtMesh) => {\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let img = null;\n    if (formData.layer_type === 'retail_logo') {\n      const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n      if (retailIndex !== -1) {\n        img = getImage(formData, data.retailers[retailIndex]);\n      }\n    } else {\n      img = getImage(formData);\n    }\n    if (img instanceof HTMLImageElement) {\n      processImage(img, formData, (geometry, material) => {\n        obj.geometry = geometry;\n        obj.material = material;\n\n        const boundingBox = geometry.boundingBox;\n\n        const mesh_center_point = new Vector3();\n        if (boundingBox) {\n          boundingBox.getCenter(mesh_center_point);\n\n          const mesh_size = new Vector3();\n          boundingBox.getSize(mesh_size);\n          if (obj.object_id) {\n            layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n          }\n        }\n      });\n    }\n  }, [data.retailers, oldMapObjName])\n\n  const makeTextGeometry = useCallback((obj: IExtMesh, text: string, size: string) => {\n    if (!obj) return;\n    if (oldMapObjName !== formData?.map_obj_name) return;\n    let text_geometry = new TextGeometry(text, {\n      font: (obj.userData && obj.userData.font) ? obj.userData.font : textFont,\n      size: parseInt(size),\n      height: 0.01,\n      curveSegments: 4,\n    });\n    text_geometry.center();\n    if (obj.geometry) {\n      obj.geometry.dispose();\n    }\n    obj.geometry = text_geometry;\n  }, [formData?.map_obj_name, textFont, oldMapObjName])\n\n  const updateData = useCallback((formData: MapObj) => {\n    const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n    if (index !== -1) {\n      data.map_objs[index] = { ...formData };\n      setData(index, { ...formData });\n      recheckSelectedKiosksId(data.map_objs);\n    }\n  }, [data.map_objs, setData, recheckSelectedKiosksId])\n\n\n  const handleChangeTab = useCallback((k: any | null) => {\n\n    if (!formData) return;\n    const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n    if (key !== null) {\n      if (isTMainTabsKey(key)) {\n        setMainTabKey(key);\n        if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n          formData.obj_type = key;\n          if (key === 'retailer') {\n            formData.layer_type = 'retail_name';\n            clearKioskConfig(context, params.meshFloors);\n          } else if (key === 'special') {\n            formData.layer_type = 'kiosk';\n            formData.retailer_id = '';\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              if (obj) {\n                if (!obj.userData) {\n                  obj.userData = {};\n                }\n                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                obj.userData.kioskConfig = {\n                  lockSize: formData.value === '1',\n                  blink: false,\n                  size: Number(formData.size)\n\n                }\n                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n              }\n            }\n          } else if (key === 'custom') {\n            formData.layer_type = 'custom_text';\n            formData.retailer_id = '';\n            clearKioskConfig(context, params.meshFloors);\n          }\n          setMainTabKey('');\n          setRetailerTabsKey('');\n          setSpecialTabsKey('');\n          setFormData({ ...formData });\n          updateData({\n            ...formData,\n          });\n        }\n      } else if (isTRetailerTabsKey(key)) {\n        setRetailerTabsKey(key);\n        clearKioskConfig(context, params.meshFloors);\n        if (formData.id && retailerTabsKey && key) {\n          formData.layer_type = key;\n          if (formData.layer_type !== key) {\n            setFormData({ ...formData });\n          }\n          updateData({\n            ...formData,\n          })\n          if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n            let text = '';\n            switch (key) {\n              case 'retail_name':\n\n                if (!formData.retailer_id) {\n                  break;\n                }\n\n                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n\n                if (retailIndex !== -1) {\n                  text = data.retailers[retailIndex].retail_name;\n\n                }\n                break;\n              case 'retail_text':\n              case 'custom_text':\n                text = formData.custom_text;\n                break;\n            }\n            if (context && context.MeshObject) {\n              const obj = context.MeshObject[1];\n              makeTextGeometry(obj, text, formData.size);\n            }\n          }\n\n          if (['retail_logo', 'custom_image'].includes(key)) {\n            context?.MeshObject?.forEach((obj, index) => {\n              if (index === 0) return;\n\n              makeImage(formData, obj);\n            })\n          }\n        }\n      } else if (isTSpecialTabsKey(key)) {\n        setSpecialTabsKey(key);\n        formData.layer_type = key;\n        if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n          if (key !== 'kiosk') {\n            clearKioskConfig(context, params.meshFloors);\n          }\n          formData.layer_type = key;\n          formData.kiosk_id = '';\n          formData.retailer_id = '';\n          formData.value = '';\n          setFormData({ ...formData });\n          updateData({ ...formData });\n        }\n      }\n    }\n  }, [context, data.retailers, formData, mainTabKey, makeImage, makeTextGeometry, retailerTabsKey, specialTabsKey, updateData])\n\n\n  useEffect(() => {\n    switch (mainTabKey) {\n      case 'retailer':\n        handleChangeTab(retailerTabsKey);\n        break;\n    }\n  }, [formData, mainTabKey, retailerTabsKey])\n\n\n  const handleReset = () => {\n    if (!formData) return;\n    const defaultValues = getDefaultMapOjbValues(formData.center_id);\n    if (onResetData) {\n      onResetData({\n        ...formData,\n      })\n    }\n    setFormData({\n      ...defaultValues,\n      id: formData.id,\n    });\n    updateData({\n      ...defaultValues,\n      id: formData.id,\n    });\n  }\n\n  const handleChangeRetailer = (value: number | undefined) => {\n    if (value && formData) {\n      formData.retailer_id = value.toString();\n      formData.kiosk_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n    }\n  }\n\n  const handleChangeKiosk = ({ value }: { value: string }) => {\n    if (value && formData) {\n      formData.kiosk_id = value;\n      formData.retailer_id = '';\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        updateMapCenterMarkerFor(obj, formData, floorIndex);\n        triggerSceneUpdate();\n      })\n    }\n  }\n\n  const handleChangeAmenity = (newValue: any) => {\n    console.log('newValue', newValue);\n    const { value } = newValue;\n    if (value && formData) {\n      formData.value = value as string;\n      setFormData({ ...formData });\n      updateData({ ...formData });\n      context?.MeshObject?.forEach((obj, index) => {\n        if (index === 0) return;\n        makeImage(formData, obj);\n      })\n    }\n  }\n\n  const changeValue = (name: string, value: string) => {\n    if (!formData) return;\n    // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n    //     formData.custom_image = value;\n    //     setFormData({...formData});\n    //     updateData({...formData});\n    // }\n\n    context?.MeshObject?.forEach((obj, index) => {\n      if (!obj.userData) {\n        obj.userData = {};\n      }\n      if (!obj.userData.position) {\n        obj.userData.position = new Vector3();\n        if (obj.position) {\n          obj.userData.position.copy(obj.position);\n        }\n      }\n      const position = new Vector3();\n      if (obj.userData.position) {\n        position.copy(obj.userData.position);\n      }\n      switch (name) {\n        case 'custom_text':\n          if (index === 0) break;\n          formData.custom_text = value;\n          if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n            makeTextGeometry(obj, formData.custom_text, formData.size);\n          }\n          break;\n        case 'custom_image':\n          if (index === 0) break;\n          formData.custom_image = value;\n          makeImage(formData, obj);\n          updateData({\n            ...formData,\n          })\n          break;\n        case 'size':\n          if (index === 0) break;\n          formData.size = value;\n          if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n            let text = '';\n            if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n              const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n              if (retailIndex !== -1) {\n                text = data.retailers[retailIndex].retail_name;\n              }\n            } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n              text = formData.custom_text;\n            }\n            makeTextGeometry(obj, text, formData.size);\n          } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n            makeImage(formData, obj);\n            if (timeoutRef.current) {\n              clearInterval(timeoutRef.current);\n            }\n            timeoutRef.current = setTimeout(() => {\n              updateData({ ...formData });\n            }, 300);\n          } else if (['amenity'].includes(formData.layer_type)) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              setFormData({ ...formData });\n              updateData({ ...formData });\n            })\n          } else if (['kiosk'].includes(formData.layer_type)) {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'lock_size':\n          formData.lock_size = value;\n          //TODO use 'value' until api with lock_size will be working\n          formData.value = value;\n          if (formData.layer_type === 'kiosk') {\n            updateMapCenterMarkerFor(obj, formData, floorIndex);\n            triggerSceneUpdate();\n          }\n          break;\n        case 'rotate':\n          if (index === 0) break;\n          formData.rotate = value;\n          obj.rotation.set(\n            obj.rotation.x,\n            obj.rotation.y,\n            parseFloat(formData.rotate) * Math.PI / 180\n          );\n          break;\n\n        case 'offsetX':\n          if (index === 0) break;\n          position.x += parseFloat(value);\n          obj.position.setX(position.x);\n          formData.offsetX = value;\n          break;\n\n        case 'offsetY':\n          if (index === 0) break;\n          position.y += parseFloat(value);\n          obj.position.setY(position.y);\n          formData.offsetY = value;\n          break;\n\n        case 'text_color':\n          if (index === 0) break;\n          formData.text_color = value;\n          if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n            const material_settings = {\n              // color: hex_to_color(formData.text_color),\n              color: formData.text_color,\n              transparent: true,\n              side: DoubleSide,\n              depthWrite: false,\n              depthTest: false,\n            };\n            let text_material = new MeshPhongMaterial(material_settings);\n            obj.material = text_material;\n          } else if (\n            formData.layer_type === 'retail_logo' ||\n            formData.layer_type === 'custom_image' ||\n            (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n            (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n            makeImage(formData, obj);\n            startTransition(() => {\n              updateData({\n                ...formData,\n                text_color: formData.text_color.replace('#', ''),\n              });\n            })\n          }\n          break;\n\n        case 'bg_color':\n          if (index !== 0) break;\n          formData.bg_color = value;\n          let meshType: MeshType = 'store';\n          if (obj.object_id?.startsWith('big-store')) {\n            meshType = 'big-store';\n          }\n          obj.material = getMaterial(\n            config,\n            meshType,\n            formData.map_obj_name,\n            formData.bg_color,\n            formData.transparent === \"1\" ? true : false,\n            { [formData.map_obj_name]: { ...formData } }\n          );\n          // updateData({...formData});\n          break;\n\n        default:\n          break;\n      }\n      startTransition(() => {\n        setFormData({ ...formData })\n        updateData({ ...formData });\n      });\n\n    })\n  }\n  const handleChange = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value;\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  const handleChangeLock = (e: any) => {\n    const target = e.target as HTMLInputElement;\n    const value = target.value === '0' ? '1' : '0';\n    const name = target.name;\n    changeValue(name, value);\n  }\n\n  useEffect(() => {\n    if (data && data.map_objs && selectedId) {\n      const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n      if (index !== -1) {\n        setFormData({ ...data.map_objs[index] });\n      } else {\n        setFormData({\n          ...getDefaultMapOjbValues(centerId),\n          id: 'new-' + (new Date()).getTime(),\n        });\n      }\n    }\n    return () => {\n      setRetailerTabsKey('');\n    }\n  }, [centerId, data, selectedId])\n\n  useEffect(() => {\n    if (!formData) return;\n\n    if (formData.obj_type) {\n      handleChangeTab(formData.obj_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n    if (formData.layer_type) {\n      handleChangeTab(formData.layer_type);\n      setOldMapObjName(formData.map_obj_name);\n    }\n  }, [formData])\n\n  const decrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value -= 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const incrementValue = (key: TIncDecKey) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += 1;\n      changeValue(key, value.toString());\n    }\n  }\n\n  const rotateByFixedAngle = (key: TIncDecKey, angle: number) => {\n    if (!formData) return;\n    if (Object.hasOwn(formData, key)) {\n      let value = parseInt(formData[key]);\n      value += angle;\n      if (value > 360) {\n        value = angle;\n      } else if (value === 360) {\n        value = 0;\n      }\n\n      changeValue(key, value.toString());\n    }\n  }\n\n  const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      rotateByFixedAngle(key, angle);\n    }, 200);\n  }\n\n  const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      decrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        decrementValue(key);\n      }, 50);\n    }, 200);\n  }\n\n  const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n    if (intervalRefs.current[key]) return;\n\n    intervalRefs.current[key] = setInterval(() => {\n      incrementValue(key);\n      clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = setInterval(() => {\n        incrementValue(key);\n      }, 50)\n    }, 200);\n  }\n\n  const stopIntervals = () => {\n    let key: TIncDecKey;\n    for (key in intervalRefs.current) {\n      if (intervalRefs.current[key])\n        clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n      intervalRefs.current[key] = null;\n    }\n  }\n\n  const handleOnSubmit = () => {\n    if (params.onSubmit && context && context.MeshObject && formData) {\n      formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n      const kioskId = formData.kiosk_id !== null ? parseInt(formData.kiosk_id) : null;\n      params.onSubmit({ ...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId });\n    }\n  }\n\n  if (!formData) return null;\n\n  return (\n    <>\n      <Tab.Container activeKey={mainTabKey}>\n        <Col>\n          <Row>\n            <Col sm=\"9\">\n              <Nav\n                variant=\"tabs\"\n                className=\"flex-row\"\n                // activeKey={mainTabKey}\n                onSelect={handleChangeTab}\n              >\n                <Nav.Item>\n                  <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm=\"3\" className=\"px-0\">\n              {/* \n                //@ts-ignore */}\n              <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\">\n              <Tab.Content>\n                <Tab.Pane eventKey={\"retailer\"}>\n                  <AsyncSelect\n                    className=\"mb-3\"\n                    aria-label=\"Choose a Retailer\"\n                    loadOptions={loadRetailersOptions}\n                    isLoading={isLoadingRetailers}\n                    loadingMessage={() => <div>loading retailers...</div>}\n                    noOptionsMessage={() => 'Retailers not found'}\n                    placeholder=\"Choose a Retailer...\"\n                    value={retailers.filter((item: RetailerOption) => item.value === Number(formData.retailer_id))?.map((item: RetailerOption) => ({\n                      value: item.value,\n                      label: item.label,\n                    }))}\n                    defaultOptions={retailers.map((item: RetailerOption) => ({ value: item.value, label: item.label }))}\n                    onChange={(item) => handleChangeRetailer(item?.value)}\n                  />\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"retail-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                    <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                    <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              as=\"textarea\"\n                              name=\"custom_text\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"special\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"special-tab-form\"\n                    activeKey={specialTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose a Kiosk\"\n                        loadOptions={loadKiosksOptions}\n                        noOptionsMessage={() => 'Kiosks not found'}\n                        placeholder=\"Choose a Kiosk...\"\n                        value={data.kiosks?.filter((item: any) => formData.kiosk_id === item.id)?.map((item: any) => ({\n                          value: item.id,\n                          label: item.title,\n                        }))}\n                        defaultOptions={getDefaultKioksOptions()}\n                        onChange={handleChangeKiosk}\n\n                      />\n                    </Tab>\n                    <Tab eventKey=\"amenity\" title=\"Amenity\">\n                      <AsyncSelect\n                        className=\"mb-3\"\n                        aria-label=\"Choose Amenity\"\n                        loadOptions={loadAmenitiesOptions}\n                        noOptionsMessage={() => 'Amenity not found'}\n                        placeholder=\"Choose Amenity...\"\n                        value={data.amenities.filter((item: any) => formData.value === item.type).map((item: any) => ({\n                          value: item.type,\n                          label: item.name,\n                        }))}\n                        defaultOptions={getDefaultAmenitiesOptions()}\n                        onChange={handleChangeAmenity}\n                      />\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n                <Tab.Pane eventKey={\"custom\"}>\n                  <Tabs\n                    variant=\"pills\"\n                    id=\"custom-tab-form\"\n                    activeKey={retailerTabsKey}\n                    onSelect={handleChangeTab}\n                  >\n                    <Tab eventKey=\"custom_text\" title=\"Text\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">text</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              name=\"custom_text\"\n                              as=\"textarea\"\n                              rows={3}\n                              value={formData.custom_text}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                    <Tab eventKey=\"custom_image\" title=\"Image\">\n                      <Form.Group className=\"m-3\">\n                        <Row className=\"align-items-center mb-3\">\n                          <Col sm=\"2\">\n                            <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                          </Col>\n                          <Col sm=\"10\">\n                            <Form.Control\n                              type=\"string\"\n                              name=\"custom_image\"\n                              value={formData.custom_image}\n                              onChange={handleChange}\n                            />\n                          </Col>\n                        </Row>\n                      </Form.Group>\n                    </Tab>\n                  </Tabs>\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Col>\n      </Tab.Container>\n      <Form.Group className=\"mb-3 mt-3\">\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Size</Form.Label>\n          </Col>\n          <Col>\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('size')}\n                  onMouseDown={handleDecrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"size\"\n                  type=\"text\"\n                  value={formData.size}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('size')}\n                  onMouseDown={handleIncrement('size')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                <Row>\n                  <Col sm=\"4\">\n                    <Form.Check\n                      name=\"lock_size\"\n                      id=\"lock_size\"\n                      type=\"checkbox\"\n                      //TODO use 'value' until api with lock_size will be working\n                      value={formData.value}\n                      checked={formData.value === '1'}\n                      onChange={handleChangeLock}\n                    />\n                  </Col>\n                  <Col sm=\"8\" className=\"p-0\">\n                    <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                  </Col>\n                </Row>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Rotate</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('rotate')}\n                  onMouseDown={handleDecrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"rotate\"\n                  type=\"number\"\n                  value={rotation ?? formData.rotate}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('rotate')}\n                  onMouseDown={handleIncrement('rotate')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n              <div style={{ maxWidth: 50, height: 50 }}>\n                <Button\n                  onClick={() => rotateByFixedAngle('rotate', 45)}\n                  onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >\n                  <ArrowClockwise size={'1rem'} />\n                </Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset X</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetX')}\n                  onMouseDown={handleDecrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n\n                <Form.Control\n                  name=\"offsetX\"\n                  type=\"number\"\n                  value={formData.offsetX}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetX')}\n                  onMouseDown={handleIncrement('offsetX')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"4\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n          </Col>\n          <Col sm=\"8\">\n            <Row style={{ flexDirection: 'row' }}>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => decrementValue('offsetY')}\n                  onMouseDown={handleDecrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >-</Button>\n              </div>\n              <div style={{ maxWidth: 80, padding: 0 }}>\n                <Form.Control\n                  name=\"offsetY\"\n                  type=\"number\"\n                  value={formData.offsetY}\n                  onChange={handleChange}\n                />\n              </div>\n              <div style={{ maxWidth: 50 }}>\n                <Button\n                  onClick={() => incrementValue('offsetY')}\n                  onMouseDown={handleIncrement('offsetY')}\n                  onMouseUp={stopIntervals}\n                  onMouseLeave={stopIntervals}\n                  variant=\"outline-dark\"\n                  style={{ paddingLeft: '0.75rem', paddingRight: '0.75rem' }}\n                >+</Button>\n              </div>\n            </Row>\n          </Col>\n        </Row>\n        <Row className=\"align-items-center mb-3\">\n          <Col sm=\"3\" className=\"d-flex justify-content-start\">\n            <Form.Label className=\"mb-0\">BG Color</Form.Label>\n          </Col>\n          <Col sm=\"3\" className=\"p-0\">\n            <Form.Control\n              name=\"bg_color\"\n              type=\"string\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"2\">\n            <Form.Control\n              type=\"color\"\n              name=\"bg_color\"\n              value={getFormatedColor(formData.bg_color)}\n              onChange={handleChange}\n            />\n          </Col>\n          <Col sm=\"4\">\n            <Row>\n              <Col sm=\"3\">\n                <input\n                  name=\"transparent\"\n                  id=\"transparent\"\n                  type=\"checkbox\"\n                  value={formData.transparent}\n                  onChange={handleChange}\n                ></input>\n              </Col>\n              <Col sm=\"9\" className=\"p-0\">\n                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"4\" className=\"d-flex justify-content-start\">\n              <Form.Label className=\"mb-0\">Text Color</Form.Label>\n            </Col>\n            <Col sm=\"5\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                name=\"text_color\"\n                type=\"color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        {['kiosk', 'amenity'].includes(formData.layer_type) &&\n          <Row className=\"align-items-center mb-3\">\n            <Col sm=\"3\">\n              <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n            </Col>\n            <Col sm=\"6\">\n              <Form.Control\n                type=\"string\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n            <Col sm=\"3\">\n              <Form.Control\n                type=\"color\"\n                name=\"text_color\"\n                value={getFormatedColor(formData.text_color)}\n                onChange={handleChange}\n              />\n            </Col>\n          </Row>\n        }\n        <Row className=\"justify-content-center px-5 py-5\">\n          <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-') ? 'Save' : 'Update'}</button>\n        </Row>\n      </Form.Group>\n    </>\n  );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext, meshFloors: IMeshParamsTmp) {\n  if (context && context.MeshObject) {\n    const obj = context.MeshObject[1];\n    if (obj && obj.userData && obj.userData.kioskConfig) {\n      obj.userData.kioskConfig = null;\n      obj.userData?.triggerUpdate();\n      meshFloors.storeLogos.flat().filter(item => item !== undefined).forEach(item => {\n        if (item.storeLogo.object_id === obj.object_id && item.storeLogo.userData.kioskConfig !== undefined) {\n          item.storeLogo.userData.kioskConfig = null;\n          item.storeLogo.userData?.triggerUpdate();\n        }\n      });\n    }\n  }\n}\n\n","import { useCallback, useEffect, useState } from \"react\"\nimport useGetRetailers, { Data } from \"../useGetRetailersBySearch\";\nexport type RetailerOption = {\n  value: number,\n  label: string,\n  isDisabled?: boolean,\n  isFixed?: boolean,\n}\ntype UseRetailersOptions = (centerId: string, apiURI: string) => {\n  isLoading: boolean,\n  loadOptions: (inputValue: string, callback: (options: RetailerOption[]) => void) => void,\n  retailers: RetailerOption[],\n};\nconst useRetailersOptions: UseRetailersOptions = (centerId, apiURI) => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [retailers, setRetailers] = useState<any[]>([]);\n  const [limit] = useState<number>(100);\n  const fetchRetailers = useGetRetailers({ centerId, apiURI });\n\n  const processData = useCallback((data: Data, isLoadingMore?: boolean) => {\n    setIsLoading(false);\n    let result: any = [];\n    if (!data) return result;\n    if (!data.isError) {\n      result = data.items.map((item: any) => {\n        return {\n          value: item.id,\n          label: `${item.name}${item.location && item.location.length > 1 ? ', ' + item.location : ''}`,\n        }\n      })\n    } else {\n      console.error(`Fetch Retailers error: ${data.error}`)\n    }\n    return result;\n  }, []);\n\n  const loadOptions = useCallback((inputValue: string, callback: (options: RetailerOption[]) => void) => {\n    callback(retailers.filter(item => (item.label as string).toLowerCase().includes(inputValue)));\n  }, [retailers])\n\n  useEffect(() => {\n    setIsLoading(true);\n    const retailersData = fetchRetailers('', limit);\n    retailersData.then(data => {\n      const result = processData(data);\n      setRetailers([...result]);\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [fetchRetailers, limit, processData])\n\n  return {\n    isLoading,\n    loadOptions,\n    retailers,\n  }\n}\n\nexport default useRetailersOptions;","import { useCallback } from \"react\";\nimport useAllRetailers from \"src/Hooks/useAllRetailers\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype GetRetailersParams = {\n  centerId: string | number,\n  apiURI?: string,\n}\n\nexport type Data = {\n  isError: boolean,\n  error: string | null,\n  items: IRetailer[],\n}\n\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n  const { centerId, apiURI } = params;\n\n  const { getAllRetailers } = useAllRetailers(apiURI ?? '', centerId.toString(), 100);\n\n  const fetchRetailers = useCallback((search: string, limit?: number): Promise<Data> => {\n\n    const fetchAll = (): Promise<Data> => new Promise((resolve, reject) => {\n\n      getAllRetailers().then(retailers => {\n        resolve({\n          isError: false,\n          error: null,\n          items: retailers,\n        });\n      }).catch((e: any) => {\n        reject(e.message ? e.message : 'useGetRetailer: something went wrong!');\n      });\n\n    });\n\n    return fetchAll();\n\n  }, [getAllRetailers]);\n\n  return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n  centerId: string,\n  slug: string,\n  webApiURI: string,\n}\n\nexport type RetailerData = {\n  data: IRetailer | null,\n  isLoading: boolean,\n  isError: boolean,\n  error: string | null,\n}\n\nconst defaultData: RetailerData = {\n  data: null,\n  isLoading: false,\n  isError: false,\n  error: null,\n}\nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n  const { centerId, slug, webApiURI } = props;\n  const [data, setData] = useState<RetailerData>(defaultData);\n\n  useMemo(() => {\n    if (!slug || !centerId) {\n      setData({ ...defaultData });\n      return false;\n    }\n\n    let apiURI = webApiURI;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      setData({\n        isLoading: true,\n        data: null,\n        isError: false,\n        error: null,\n      })\n      fetch(`${apiURI}/v1/retailers/${slug}`, {\n        headers: {\n          center_id: centerId,\n        }\n      }).then(\n        (response) => response.json()\n      ).then(data => {\n        setData({\n          isLoading: false,\n          isError: false,\n          error: null,\n          data: {\n            id: data.id,\n            retail_name: data.name,\n            slug: data.slug,\n            location: data.location && data.location !== '-' ? data.location : '',\n            retailer_phone: data.retailer_phone,\n            retailer_description: data.global_retailer.description,\n            logo: data.media.url,\n            map_obj_name: '',\n          }\n        });\n      }).catch((e: any) => {\n        setData({\n          data: null,\n          isLoading: false,\n          isError: true,\n          error: `Error fetch retaler data: ${e.message}`,\n        })\n      })\n    } else {\n      setData({\n        isLoading: false,\n        isError: true,\n        error: 'webApiURI not provided!',\n        data: null,\n      })\n    }\n\n  }, [centerId, slug, webApiURI]);\n\n  return data;\n\n}\n\nexport default useRetailerData;\n","import { Form, FormGroup, Modal, Placeholder, Spinner } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n  amenity: string,\n  show: boolean,\n  onHide: () => void,\n  centerId: string,\n  retailers?: IRetailer[],\n  mapObjs?: MapObj[],\n  mapObjectName?: string,\n  webApiURI: string,\n  onClick?: (id: string, amenityType?: string) => void,\n  kioskId: string,\n}\n\nconst RetailerInfoList = ({ retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId }: { retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string }) => {\n  const [retailerId, setRetailerId] = useState<string>('');\n\n  const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    if (onClick) {\n      onClick(retailerId);\n    }\n  }\n\n  const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n    setRetailerId(e.target.value);\n  }\n\n  const filterRetailers = (retailers: IRetailer[], arrayObjects: MapObj[]) => {\n    return retailers.filter(retailer =>\n      arrayObjects.some(obj => obj.retailer_id === retailer.id)\n    );\n  }\n\n  if (!isAmenity && (isLoading || !retailer)) {\n    return (\n      <div>\n        <div className={styles['retailer-info-spinner']} >\n          <Spinner animation=\"border\" role=\"status\" variant=\"secondary\" />\n        </div>\n        <div className={styles['retailer-info-content']} >\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={5} /> <Placeholder bg=\"secondary\" xs={3} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={7} />\n          </div>\n          <div>\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n            <Placeholder bg=\"secondary\" xs={4} /> <Placeholder bg=\"secondary\" xs={3} /> <Placeholder bg=\"secondary\" xs={2} /> <Placeholder bg=\"secondary\" xs={5} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      {!!retailer && (\n        <>\n          <div className={styles['retailer-logo']}>\n            <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n          </div>\n          <div className={styles['retailer-info-content']} >\n            <div>\n              <b>Retailer:</b> {retailer.retail_name}\n            </div>\n            {retailer.location &&\n              <div>\n                <b>Location:</b> {retailer.location}\n              </div>\n            }\n            {retailer.retailer_phone &&\n              <div>\n                <b>Phone:</b> {retailer.retailer_phone}\n              </div>\n            }\n            {retailer.retailer_description &&\n              <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n            }\n          </div>\n        </>\n      )}\n      <Form className={styles['get-directions-from']}>\n        <FormGroup>\n          <div className=\"d-flex align-items-center gap-3\">\n            {!kioskId.length ?\n              <>\n                <Form.Select\n                  name=\"retailer\"\n                  onChange={onChange}\n                  value={retailerId}\n                >\n                  <option value={''} disabled>Get direction from ...</option>\n                  {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                    if (retailer && item.id === retailer.id) return null;\n                    return (\n                      <option key={index} value={item.id}>{item.retail_name}</option>\n                    )\n                  }\n                  )}\n                </Form.Select>\n                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n              </>\n              : null\n            }\n          </div>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n  const {\n    amenity,\n    show,\n    onHide,\n    centerId,\n    retailers,\n    mapObjs,\n    mapObjectName,\n    webApiURI,\n    onClick,\n    kioskId,\n  } = props;\n  const slug = useMemo(() => {\n    if (centerId && mapObjs && retailers && mapObjectName) {\n      const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n      if (mapObj && mapObj.retailer_id) {\n        const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n        if (retailer) {\n          return retailer.slug;\n        }\n      }\n    }\n    return '';\n  }, [centerId, mapObjectName, mapObjs, retailers]);\n  const data = useRetailerData({ centerId, slug, webApiURI });\n  const handleOnClick = (retailerId: string) => {\n    if (!onClick) return;\n    let mapObj = null;\n    if (kioskId) {\n      mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id ?? '') === parseInt(kioskId));\n    } else {\n      mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n    }\n\n    let mapObjectName = '';\n\n\n    if (mapObj) {\n      mapObjectName = mapObj.map_obj_name;\n    }\n\n    if (amenity) {\n      onClick(mapObjectName, amenity);\n    } else {\n      onClick(mapObjectName);\n    }\n  }\n\n  const isAmenity = (amenity !== '' || (mapObjectName ? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n  return (\n    <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n      <div className={styles['retailerInfoCloseBtn']}>\n        <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n      </div>\n      <Modal.Body className=\"p-3\">\n        <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n      </Modal.Body>\n    </Modal>\n  )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState, useTransition } from \"react\";\nimport { Canvas, ThreeEvent, useThree } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { Mesh, Object3D } from \"three\";\nimport { IExtMesh, IJsonConfig, IMeshParams, IMeshValues } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.scss';\nimport { Alert } from 'react-bootstrap';\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { getAllAmenities } from \"src/helpers/amenities.helper\";\nimport { defaultVars } from \"src/defaults\";\nimport { AmenityID } from \"src/MapBox\";\n\ninterface ISceneComponentProps {\n  mapitData?: MapIt2Response;\n  config: Partial<IJsonConfig>;\n  selectedActiveObjectId: string;\n  setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n  onMapDataUpdate?: (data: MapObj[]) => void;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n  handleClickOnRetailer?: (slug: string) => void;\n}\n\nexport interface IZoomData {\n  direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n  index: number,\n  data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n  const { data, refreshData, removeMissingMapObjects } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n  const [triggerClick, setTriggerClick] = useState<boolean>(false);\n  const [fromObjectId, setFromObjectId] = useState<string>('');\n  const [hovered, setHovered] = useState<boolean>(false);\n  const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n  const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n  const [cameraControlState, setCameraControlState] = useState<any>(null);\n  const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n  const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n  const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition, handleClickOnRetailer } = params;\n  const [IsCameraInit, setIsCameraInit] = useState(false);\n\n  const [, startTransition] = useTransition();\n  const [disableClicks, setDisableClicks] = useState(false);\n\n  const [selectedRetailerSlug, setSelectedRetailerSlug] = useState<string>('');\n\n  const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n  const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n  const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n  const [, setCameraLength] = useState<number>(0);\n\n  const statsParentRef = useRef<HTMLDivElement | null>(null);\n  const canvasWidthRef = useRef<number | undefined | null>(null);\n  canvasWidthRef.current = canvasWidth;\n  const cameraControlStateRef = useRef<any>(null);\n  cameraControlStateRef.current = cameraControlState;\n  const deviceTypeRef = useRef<string | undefined | null>(null);\n  deviceTypeRef.current = deviceType;\n  // console.log('DEVICE TYPE', deviceType);\n  const floorsMapRef = useRef<{\n    resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null,\n    createRouteToStore: (retailerSlug: string) => void | null,\n    getInitialDistance: () => number,\n  }>(null);\n\n  const handleCameraLength = useCallback((length: number) => {\n    setCameraLength(length);\n  }, [])\n\n  const handleFloorChange = (floorIndex: number) => {\n    setSelectedFloorIndex(floorIndex);\n  }\n\n  const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n\n  useEffect(() => {\n    if (data?.map_objs && data.map_objs.length > 0 && meshFloors.meshParams.length) {\n      const objectNames = meshFloors.meshParams.reduce<string[]>((prev, cur) => {\n        const curVal = cur.reduce<string[]>((subPrev, subCur) => {\n\n          return [...subPrev, subCur.object_id];\n        }, []);\n        return [...prev, ...curVal];\n      }, [])\n      if (objectNames) {\n        removeMissingMapObjects(objectNames);\n      }\n    }\n  }, [data?.map_objs, meshFloors.meshParams, removeMissingMapObjects])\n\n  const mapCenterMarkerRef = useRef(null);\n  const labelRef = useRef<HTMLDivElement>(null);\n  const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n  const context = useMeshObjectContext();\n  const { SetMeshObject } = context;\n  const [, setSceneKey] = useState(0);\n\n  const updateKey = useCallback(() => {\n    setSceneKey((value) => value + 1)\n  }, [])\n\n  const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n  const config = meshFloors.config;\n  const floors = meshFloors.floors;\n  const meshParams = meshFloors.meshParams;\n\n  const { setConfig: setCxtConfig } = context;\n\n  useEffect(() => {\n    if (context && meshFloors && meshFloors.config) {\n      setCxtConfig(meshFloors.config);\n    }\n  }, [context, meshFloors, setCxtConfig])\n\n  useImperativeHandle(ref, () => ({\n    refreshData,\n    createRouteToAmenity: handleAmenityClick,\n    createRouteToStore: floorsMapRef.current?.createRouteToStore,\n    getInitialDistance: floorsMapRef.current?.getInitialDistance,\n  }))\n\n  useEffect(() => {\n    if (statsParentRef.current) {\n      setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      const resizeWidth = () => {\n        setCanvasWidth(statsParentRef?.current?.offsetWidth);\n      }\n      window.addEventListener('resize', () => {\n        resizeWidth();\n        // Update your map or camera settings based on newWidth\n      });\n      resizeWidth();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [statsParentRef.current]);\n\n  const setCameraControlPos = useCallback((camera_controls_states: any) => {\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraPos(camera_controls_states.display_app.camera)\n      setControlPos(camera_controls_states.display_app.controls)\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n      if (canvasWidth > 1024) {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (canvasWidth > 600) {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      } else {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraPos(camera_controls_states.desktop.camera)\n        setControlPos(camera_controls_states.desktop.controls)\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraPos(camera_controls_states.display_app.camera)\n        setControlPos(camera_controls_states.display_app.controls)\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraPos(camera_controls_states.mobile.camera)\n        setControlPos(camera_controls_states.mobile.controls)\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraPos(camera_controls_states.tablet.camera)\n        setControlPos(camera_controls_states.tablet.controls)\n      }\n    }\n  }, [canvasWidth, config?.ROLE])\n\n  useEffect(() => {\n    if (data && data.camera_controls_states) {\n      setCameraControlState(data.camera_controls_states);\n      setCameraControlPos(data.camera_controls_states);\n    }\n  }, [data, setCameraControlPos]);\n\n  useEffect(() => {\n    if (cameraControlStateRef.current) {\n      setCameraControlPos(cameraControlStateRef.current);\n    }\n  }, [deviceType, canvasWidth, setCameraControlPos])\n\n\n  const { onSettingsLoading } = params;\n  useEffect(() => {\n    if (data && meshFloors.config && onSettingsLoading) {\n      onSettingsLoading?.(\n        {\n          ...data,\n          settings: {\n            ...data.settings,\n            STYLE: meshFloors.config.STYLE,\n            ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n            AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n            AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n            BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n            BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n            BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n            BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n            MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n            OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n            OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n            STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n            STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n            WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n            WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n            KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n            STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n            MIN_ZOOM: meshFloors.config.CAMERA?.minZoom?.toString(),\n            MAX_ZOOM: meshFloors.config.CAMERA?.maxZoom?.toString(),\n            CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n            CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n            ZOOM_STEP: meshFloors.config.ZOOM_STEP ?? defaultVars.ZOOM_STEP ?? '100',\n            SELECTED_ZOOM_LIMIT: meshFloors.config.SELECTED_ZOOM_LIMIT ?? defaultVars.SELECTED_ZOOM_LIMIT ?? '400',\n            SELECTED_ZOOM_LIMIT_DISTANCE: meshFloors.config.SELECTED_ZOOM_LIMIT_DISTANCE?.toString()\n          }\n        });\n    }\n  }, [data, meshFloors, onSettingsLoading])\n\n  const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n    if (canvasWidthRef.current === 0) return;\n    if (config?.ROLE === \"DISPLAY_APP\") {\n      setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n    } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n      if (canvasWidthRef.current > 1024) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (canvasWidthRef.current > 600) {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      } else {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      }\n    } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n      if (deviceTypeRef.current === \"desktop\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"display_app\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"mobile\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n      } else if (deviceTypeRef.current === \"tablet\") {\n        setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n      }\n    }\n  }, [config?.ROLE])\n\n  useEffect(() => {\n    if (cameraControlStateRef.current && setCameraControlPosition) {\n      setCameraControlPosition(cameraControlStateRef.current);\n    }\n  }, [cameraControlState, setCameraControlPosition])\n\n  // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n  let activeFromObjectId = '';\n  let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n  if (selectedActiveObjectId) {\n    activeObjectId = selectedActiveObjectId;\n    activeFromObjectId = fromObjectId;\n  } else if (amenityTargetType) {\n    activeObjectId = '';\n    activeFromObjectId = fromObjectId;\n    // activeFromObjectId = '';\n  }\n\n  const handleChangeMapitData = useCallback((index: number, newData: MapObj) => {\n    setFormMapObjData((prev) => {\n      const itemIndex = prev.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n      if (itemIndex !== -1) {\n        prev[itemIndex] = { index, data: { ...newData } };\n      } else {\n        prev.push({ index, data: { ...newData } })\n      }\n\n      return [...prev];\n    });\n\n  }, [])\n\n  const getMapitData = useCallback((): MapIt2Response | null => {\n    if (data && data.map_objs) {\n      if (formMapObjData) {\n        formMapObjData.forEach((value) => {\n          const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n          if (index !== -1) {\n            data.map_objs[index] = { ...value.data };\n          }\n        })\n      }\n    }\n\n    return data;\n  }, [data, formMapObjData])\n\n  const handleOnSubmit = (data: MapObjToSave) => {\n    if (params.onSubmit) {\n      params.onSubmit(data, refreshData);\n    }\n  }\n\n  const floorsCount = data?.floors?.length ?? 0;\n\n  useEffect(() => {\n    document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n  }, [currentHoveredObject]);\n\n  const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n    if (!config) {\n      return [null, 0, ''] // not an error - loading/initializing\n    }\n    let kioskError = '';\n    let currKioskObj: Mesh | null = null;\n    let currKioskFloorIndex = floorsCount ? floorsCount - 1 : 0;\n    if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n      const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n      const currKioskMeshParams = meshParams?.flat().find(mesh => mesh.object_id === kioskMapObjName);\n      if (currKioskMeshParams) {\n        currKioskObj = currKioskMeshParams.mesh;\n        currKioskFloorIndex = currKioskMeshParams.floor_index;\n      }\n    } else {\n      if (config.ROLE === 'WEBSITE') {\n        // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n      }\n      if (config.ROLE === 'WEBSITE') {\n        console.error('Kiosk not found in config');\n        // kioskError = 'Map initialization error';\n      }\n    }\n\n    return [currKioskObj, currKioskFloorIndex, kioskError]\n  }, [config, meshParams, floorsCount]);\n\n  const currentFloorIndex = selectedFloorIndex > -1 && selectedFloorIndex < floorsCount ? selectedFloorIndex : currKioskFloorIndex;\n\n  const resetHandle = (fullReset: boolean = false) => {\n\n    setSelectedActiveObjectId('');\n    setFromObjectId('');\n    setAmenityTargetType('');\n    setSelectedRetailerSlug('');\n\n    if (floorsMapRef.current) {\n      if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n        let ccs = null;\n        if (deviceTypeRef.current === \"desktop\") {\n          ccs = { ...data.camera_controls_states.desktop }\n        } else if (deviceTypeRef.current === \"display_app\") {\n          ccs = { ...data.camera_controls_states.display_app }\n        } else if (deviceTypeRef.current === \"mobile\") {\n          ccs = { ...data.camera_controls_states.mobile }\n        } else if (deviceTypeRef.current === \"tablet\") {\n          ccs = { ...data.camera_controls_states.tablet }\n        }\n\n        if (ccs) {\n          floorsMapRef?.current?.resetCamera(fullReset, ccs);\n        }\n      } else {\n\n        floorsMapRef?.current?.resetCamera(fullReset);\n\n      }\n    }\n\n  }\n\n  const ccsInit = useRef<{ [key: string]: boolean }>({\n    display_app: false,\n    desktop: false,\n    tablet: false,\n    mobile: false,\n  })\n\n  useEffect(() => {\n\n    if (!config || !deviceType) {\n      return;\n    }\n\n\n    if (!params.config.CAMERA_CONTROLS_STATES) {\n      //@ts-ignore\n      config.CAMERA_CONTROLS_STATES = data.camera_controls_states[deviceType]\n    }\n\n    floorsMapRef?.current?.resetCamera();\n\n  }, [deviceType, config, data?.camera_controls_states])\n\n  useEffect(() => {\n    if (!config) {\n      return;\n    }\n\n    const kiosks: IMeshValues[] = [];\n    meshFloors.meshParams.forEach(floor => {\n      floor.forEach(item => {\n        if (item?.mesh_type === \"kiosk\") {\n          kiosks.push(item);\n        }\n      })\n    })\n    // console.log('kiosks', kiosks);\n\n    const mapObjectIdToKiosk = new Map();\n    const mapObjectIdToLogo = new Map();\n    kiosks.forEach(item => {\n      mapObjectIdToKiosk.set(item.object_id, item.mesh);\n    });\n    // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n    meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n      floor.forEach(item => {\n        mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n      })\n    });\n    // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n    // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n    const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n    const currKioskLogo: IExtMesh[] = [];\n    const mapData = getMapitData();\n    kiosks.forEach(item => {\n      const kiosk = item.mesh;\n      const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n      const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n      if (kiosk && logo) {\n        //TODO use 'value' until api with lock_size will be working\n        // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n        if (logo.userData.kioskConfig !== null) {\n          logo.userData.kioskConfig = {\n            lockSize: mapObj?.value === '1',\n            blink: item.object_id === currKioskId,\n            size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE),\n            floorIndex: kiosk.floor_index,\n          }\n          // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n          logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n          logo.visible = true;\n        }\n        currKioskLogo.push(logo);\n      }\n    });\n\n    // return () => {\n    //     currKioskLogo?.forEach(mesh => {\n    //         mesh.userData.htmlContent = null;\n    //     });\n    // }\n  }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n  useEffect(() => {\n    if (onMapDataUpdate) {\n      const exportData: MapObj[] = [];\n\n      formMapObjData.forEach((value) => {\n        exportData.push({ ...value.data });\n      })\n    }\n  }, [formMapObjData, onMapDataUpdate])\n\n  useEffect(() => {\n    document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n  }, [hovered])\n\n  useEffect(() => {\n    if (config?.SELECTED_RETAILER_SLUG && IsCameraInit) {\n      setSelectedRetailerSlug(config.SELECTED_RETAILER_SLUG);\n    }\n  }, [config?.SELECTED_RETAILER_SLUG, IsCameraInit])\n\n  useEffect(() => {\n    if (config && data && data.retailers && data.map_objs && selectedRetailerSlug !== '') {\n      const retailer = data.retailers.find(item => {\n        return item.slug === selectedRetailerSlug;\n      })\n      if (retailer) {\n        const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n        const meshParam = meshParams?.flat().find(item => item.object_id === mapObject?.map_obj_name);\n        if (meshParam) {\n          setSelectedFloorIndex(meshParam.floor_index);\n        }\n        if (mapObject) {\n          setSelectedActiveObjectId(mapObject.map_obj_name);\n        }\n      }\n    }\n  }, [config, data, setSelectedActiveObjectId, selectedRetailerSlug, meshParams])\n\n\n  const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n    const textParams = meshFloors.textParams[currentFloorIndex]?.find(value => {\n      return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const logoParams = meshFloors.storeLogos[currentFloorIndex]?.find(value => {\n      return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n    })\n\n    const result = [object as IExtMesh];\n\n    if (textParams) {\n      result.push(textParams.textMesh);\n    }\n\n    if (logoParams) {\n      result.push(logoParams.storeLogo)\n    }\n\n    SetMeshObject([...result]);\n  }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, currentFloorIndex])\n\n  useEffect(() => {\n    if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n      const object = meshFloors.meshParams[currentFloorIndex]?.find((value) => value.object_id === selectedActiveObjectId);\n      if (object) {\n        //@ts-ignore\n        handleMeshObjectContext(object);\n      }\n      //@ts-ignore\n    }\n  }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, currentFloorIndex])\n\n  const handleAmenityClick = useCallback((type: string) => {\n    setSelectedActiveObjectId('')\n    setFromObjectId('')\n    if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n      setSelectedAmenityType(type)\n      setShowRetailerInfo(true);\n    } else {\n      setAmenityTargetType(type)\n    }\n  }, [config, setSelectedActiveObjectId]);\n\n  const handleObjectClick = useCallback((object: IExtMesh, targetId: string, softClick?: boolean) => {\n\n    if (!softClick && config?.ROLE === 'DISPLAY_APP' && handleClickOnRetailer && object.mesh_type?.includes(\"store\")) {\n\n      const mapObj = data?.map_objs.find((item) => item.map_obj_name === object.object_id && item.obj_type === \"retailer\")\n      if (mapObj) {\n        const retailer = data?.retailers.find((item) => item.id === mapObj.retailer_id)\n        if (retailer) {\n          handleClickOnRetailer(retailer.slug)\n        }\n      }\n\n      return false;\n    }\n\n    if (config?.ROLE === 'DISPLAY_APP' && currKioskObj) {\n      handleFloorChange(currKioskFloorIndex);\n    }\n\n    startTransition(() => {\n      handleMeshObjectContext(object);\n      setSelectedActiveObjectId(targetId ?? '');\n      setTriggerClick(t => !t);\n      setSelectedRetailerSlug('');\n      setAmenityTargetType('');\n      setFromObjectId('');\n    })\n\n  }, [handleMeshObjectContext, setSelectedActiveObjectId])\n\n  const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n    e.stopPropagation();\n    if (disableClicks) {\n      setDisableClicks(false);\n      return false;\n    }\n\n    const targetId = (e.object as IExtMesh).object_id;\n    const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n    if (mapObj && mapObj.layer_type === 'amenity') {\n      handleAmenityClick(mapObj.value);\n      if (config && config.ROLE === 'PORTAL') {\n        handleMeshObjectContext(e.object as IExtMesh);\n        setSelectedActiveObjectId(targetId ?? '');\n      }\n    } else {\n      handleObjectClick(e.object as IExtMesh, targetId ?? '');\n      if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n        setShowRetailerInfo(true);\n      }\n    }\n  }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext, disableClicks, handleObjectClick]);\n\n  const onCameraMove = useCallback((e: any) => {\n    if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n      return\n    }\n  }, []);\n\n  const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n\n    setHovered(true);\n    // console.log('onPointerEnter', e.object)\n    if (e.object.userData.storeName === '') {\n      // console.warn('onPointerEnter no storeName', e.object);\n      return;\n    }\n    setCurrentHoveredObject(e.object);\n  }, []);\n\n  const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    // console.log('onPointerLeave', e.object)\n    setCurrentHoveredObject(null);\n    setHovered(false);\n    if (labelRef && labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }, []);\n\n  const startMousePos = useRef<{ x: number | null, y: number | null, distance: number }>({ x: null, y: null, distance: -Infinity });\n\n  const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n    e.stopPropagation();\n    if (e.buttons > 0) {\n      if (startMousePos.current.x === null) {\n        startMousePos.current.x = e.clientX;\n      }\n      if (startMousePos.current.y === null) {\n        startMousePos.current.y = e.clientY;\n      }\n      if (startMousePos.current.x !== null && startMousePos.current.y !== null) {\n        let newDistance = Math.sqrt(Math.pow(startMousePos.current.x - e.clientX, 2) + Math.pow(startMousePos.current.y - e.clientY, 2));\n        if (newDistance > startMousePos.current.distance) {\n          startMousePos.current.distance = newDistance;\n        }\n      }\n\n      startTransition(() => {\n        // Disable dragging if the user accidentally moved the map within 15 pixels by clicking on the store\n        if (startMousePos.current.distance > 15) {\n          setDisableClicks(true);\n        }\n      });\n    } else {\n      startMousePos.current.x = startMousePos.current.y = null;\n      startMousePos.current.distance = -Infinity;\n    }\n\n    if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n      labelRef.current.style.top = `${e.offsetY - 65}px`;\n      labelRef.current.style.left = `${e.offsetX}px`;\n      labelRef.current.style.display = 'block';\n    } else if (labelRef.current) {\n      labelRef.current.style.display = 'none';\n    }\n  }\n\n  const messageStyle: CSSProperties = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%',\n  }\n\n  if (data && (!data.floors || data.floors.length <= 0)) {\n    return <div className=\"messageStyle\" style={messageStyle}>Map doesn't have any floors</div>\n  }\n\n  if (!config || !meshFloors.meshParams.length) {\n    console.warn('LOADING MAP')\n    if (config?.ROLE === 'WP_SITE') {\n      return <div className=\"messageStyle\" style={messageStyle}>No Map for Center</div>\n    }\n    return <div className=\"messageStyle\" style={messageStyle}>Map loading, please wait...</div>\n  }\n\n  if (kioskError) {\n    return <div className=\"messageStyle\" style={messageStyle}>{kioskError}</div>\n  }\n\n  if (!currKioskObj && config.ROLE === 'WEBSITE') {\n    console.error('NO KIOSK OBJECT FOUND');\n  }\n\n  // make sure that meshFloors conditionals are not null\n  const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n  let hoverObject = currentHoveredObject as IExtMesh\n  let hoverObjectId = '';\n  if (hoverObject && hoverObject.object_id) {\n    hoverObjectId = hoverObject.object_id;\n  }\n\n  const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n    if (!amenityType) {\n      setFromObjectId(retailerId);\n    } else {\n      // setSelectedActiveObjectId(retailerId);\n      setFromObjectId(retailerId);\n      setAmenityTargetType(amenityType);\n    }\n    setShowRetailerInfo(false);\n  }\n\n  return (\n    <>\n      {config.ROLE === 'PORTAL' &&\n        <div className={styles['mapbox-admin-form']}>\n          {!selectedActiveObjectId ?\n            <Alert variant=\"info\">Select a store to customize.</Alert>\n            :\n            <MapboxForm\n              floorIndex={currentFloorIndex}\n              meshFloors={meshFloors}\n              config={config}\n              data={getMapitData()}\n              setData={handleChangeMapitData}\n              selectedId={selectedActiveObjectId}\n              centerId={params.config.CENTER_ID as string}\n              onSubmit={handleOnSubmit}\n              apiURI={params.webApiURI}\n              onResetData={params.onResetData}\n              triggerSceneUpdate={updateKey}\n            />\n          }\n        </div>\n      }\n\n      <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n        <UIComponent\n          accentColor={config.ACCENT_COLOR.getStyle()}\n          floors={floors}\n          selectedFloorIndex={currentFloorIndex}\n          handleFloorChange={handleFloorChange}\n          amenitiesList={getAllAmenities()}\n          handleAmenityClick={handleAmenityClick}\n          reset={resetHandle}\n          zoomIn={() => setZoom({ direction: 'in' })}\n          zoomOut={() => setZoom({ direction: 'out' })}\n          role={config.ROLE}\n          mapObjs={data?.map_objs}\n          onExtractedAmenities={params.onExtractedAmenities}\n        />\n\n        <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n          {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n          <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n          <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n          {/*<axesHelper args={[5000]} />*/}\n\n          <ambientLight intensity={1} color={'#c4c4c4'} />\n          <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n          <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n          <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n\n          <FloorsMap\n            onCameraMove={onCameraMove}\n            meshFloors={meshFloorsChecked}\n            activeObjectId={activeObjectId}\n            hoverObjectId={hoverObjectId}\n            // @ts-ignore\n            currKioskObj={currKioskObj}\n            currKioskFloorIndex={currKioskFloorIndex}\n            routeTargetId={activeObjectId}\n            routeTargetFromId={activeFromObjectId}\n            currentFloorIndex={currentFloorIndex}\n            onPointerEnter={onPointerEnter}\n            onPointerLeave={onPointerLeave}\n            onPointerMove={onPointerMove}\n            onClick={onClick}\n            handleChangeFloor={handleFloorChange}\n            amenityTargetType={amenityTargetType}\n            escalatorNodes={meshFloors.escalator_nodes}\n            zoom={zoom}\n            handleCameraLength={handleCameraLength}\n            config={config}\n            ref={floorsMapRef}\n            cameraPos={cameraPos}\n            controlPos={controlPos}\n            handleCameraAndControlsChange={handleCameraAndControlsChange}\n            isSelectedRetailerSlug={true}\n            setIsCameraInit={setIsCameraInit}\n            retailers={data?.retailers ?? []}\n            mapObjs={data?.map_objs ?? []}\n            handleObjectClick={handleObjectClick}\n            triggerClick={triggerClick}\n          />\n        </Canvas>\n\n        {config.ROLE !== 'DISPLAY_APP' && (\n          <div ref={labelRef}\n            className=\"store-name-placeholder\"\n            style={{\n              position: 'absolute',\n              padding: 10,\n              background: '#ffffff',\n              fontWeight: 600,\n              color: '#000000',\n              fontSize: 16,\n              display: currentHoveredObject ? 'block' : 'none',\n              top: 300,\n              left: 400,\n              opacity: .8,\n            }}\n          >{currentHoveredObject && currentHoveredObject.userData.storeName}</div>\n        )}\n      </div>\n      {\n        config.ROLE !== 'PORTAL' ?\n          <RetailerInfoModal\n            amenity={selectedAmenityType}\n            show={showRetailerInfo}\n            onHide={() => setShowRetailerInfo(false)}\n            centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n            mapObjectName={selectedActiveObjectId}\n            retailers={data?.retailers}\n            mapObjs={data?.map_objs}\n            webApiURI={params.webApiURI ?? ''}\n            onClick={handleRetailerInfoOnClick}\n            kioskId={config.KIOSK.toString()}\n          />\n          : null\n      }\n    </>\n  )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\nimport useAllRetailers from \"./Hooks/useAllRetailers\";\nimport { getAllAmenities } from \"./helpers/amenities.helper\";\n\ninterface useMapIt2DataProps {\n  CENTER_ID: string;\n  mapitData?: MapIt2Response;\n  webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n  data: MapIt2Response | null,\n  refreshData: () => void,\n  removeMissingMapObjects: (objectNames: string[]) => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n  const [data, setData] = useState<MapIt2Response | null>(null);\n\n  if (!CENTER_ID && !mapitData) {\n    console.error('useMapit2Data requires either CENTER_ID or mapitData');\n  }\n\n  const { getAllRetailers } = useAllRetailers(webApiURI as string, CENTER_ID as string, 100);\n\n  const getData = useCallback(() => {\n    let apiURI = webApiURI || null;\n\n    if (apiURI) {\n      const r = /\\/$/;\n      apiURI = apiURI.replace(r, '');\n      const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n      const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n      const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n      const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n      const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n      const mapObjsPromise = fetch(mapObjsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const floorsPromise = fetch(floorsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      })\n        .then(data => {\n          if (!data\n            || !data.items\n            || (data.items && !data.items.length)) {\n            console.error('Empty floors data from server');\n          }\n          return data;\n        }).catch(e => { console.error(e) })\n\n      const kiosksPromise = fetch(kioskApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        },\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json()\n      }).catch(e => { console.error(e) })\n\n      const settingsPromise = fetch(settingsApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { console.error(e) })\n\n      const responsivePromise = fetch(responsiveApiUri, {\n        headers: {\n          center_id: CENTER_ID,\n        }\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n        }\n        return response.json();\n      }).catch(e => { throw new Error(e) })\n\n      Promise.all<Array<any>>([\n        // retailersPromise,\n        // getAllRetailers(CENTER_ID, 1, 100, apiURI, 0),\n        getAllRetailers(),\n        mapObjsPromise,\n        floorsPromise,\n        kiosksPromise,\n        settingsPromise,\n        responsivePromise\n      ]).then(data => {\n        if (data.length >= 5) {\n          const responseData: Partial<MapIt2Response> = {};\n          responseData.retailers = data[0].map((item: any): IRetailer => ({\n            id: item.id,\n            retail_name: item.name,\n            slug: item.slug,\n            location: item.location,\n            retailer_phone: '',\n            retailer_description: '',\n            logo: item.media.url,\n            map_obj_name: '',\n          }));\n          responseData.map_objs = [...data[1].items].map(item => ({\n            ...item,\n            offsetX: item.offset_x,\n            offsetY: item.offset_y,\n          }));\n          responseData.floors = [...data[2].items];\n          responseData.settings = {\n            ...demoData.settings as Settings,\n            KIOSK_SIZE: \"1\",\n          }\n          responseData.kiosks = [];\n          responseData.amenities = getAllAmenities();\n          responseData.kiosks = [...data[3].items];\n          const settings: Settings = data[4]?.settings ? data[4].settings : {\n            \"STYLE\": \"3D\",\n            \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n            \"ACCENT_COLOR\": \"4EA5FF\",\n            \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n            \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n            \"WALL_THICKNESS\": \"0.6\",\n            \"WALL_COLOR\": \"888888\",\n            \"BOUNDARY_THICKNESS\": \"0.8\",\n            \"BOUNDARY_COLOR\": \"888888\",\n            \"BASE_COLOR\": \"25292B\",\n            \"STORE_TEXT_COLOR\": \"222222\",\n            \"OVERLAY_COLOR\": \"FFFFFF\",\n            \"OVERLAY_OPACITY\": \"0.7\",\n            \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n            \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n            \"ZOOM_STEP\": \"100\",\n          };\n          if (data[5]) {\n            responseData.camera_controls_states = data[5];\n          } else {\n            responseData.camera_controls_states = { ...demoData.camera_controls_states }\n          }\n          responseData.settings = settings;\n\n          setData({ ...responseData as MapIt2Response })\n        }\n      })\n    }\n  }, [CENTER_ID, getAllRetailers, webApiURI])\n\n  useEffect(() => {\n    if (mapitData) {\n      setData(mapitData);\n      return;\n    }\n\n    if (!CENTER_ID) {\n      return;\n    }\n\n    getData();\n\n  }, [CENTER_ID, mapitData, getData]);\n\n  const removeMissingMapObjects = useCallback((objectNames: string[]) => {\n    if (data?.map_objs) {\n      const mapObjects = data.map_objs.filter(item => {\n        return objectNames.includes(item.map_obj_name)\n      })\n      if (mapObjects.length < data.map_objs.length) {\n        setData({\n          ...data,\n          map_objs: [...mapObjects],\n        })\n      }\n    }\n  }, [data]);\n\n  const refreshData = () => getData();\n  return { data, refreshData, removeMissingMapObjects };\n}","import { configureStore } from '@reduxjs/toolkit'\nimport { setupListeners } from '@reduxjs/toolkit/query'\nimport { retailersApi } from './services/retailersApi'\n\nexport const store = configureStore({\n  reducer: {\n    [retailersApi.reducerPath]: retailersApi.reducer,\n  },\n  middleware: (getDefalultMiddleware) => getDefalultMiddleware().concat(retailersApi.middleware),\n})\n\nsetupListeners(store.dispatch);\n","import { MutableRefObject, forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport styles from './MapBox.module.scss';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport { isMapIt2Response, MapIt2Response, MapObj, MapObjToSave } from \"./mapitApiTypes\";\nimport { IJsonConfig } from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MapBoxContextProvider from './contexts/MapBoxContextProvider';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n  createRouteToStore: (retailerSlug: string) => void;\n  getInitialDistance: () => number;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station';\n\nexport interface IAppProps {\n  mapitData?: unknown;\n  config: Partial<IJsonConfig>;\n  stats?: boolean;\n  onSettingsLoading?: (settings: MapIt2Response) => void;\n  webApiURI?: string;\n  mediaStorageURI?: string;\n  onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n  refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n  onResetData?: (data: MapObj) => void;\n  deviceType?: string | \"\";\n  setCameraControlPosition?: (cameraControlPos: any) => void;\n  onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n  handleClickOnRetailer?: (slug: string) => void;\n}\n\n\nconst MapBox = forwardRef(({\n  mapitData,\n  config,\n  onSettingsLoading,\n  webApiURI,\n  mediaStorageURI,\n  onSubmit,\n  refObj,\n  deviceType,\n  setCameraControlPosition,\n  onResetData,\n  onExtractedAmenities,\n  handleClickOnRetailer\n}: IAppProps, ref) => {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n  useImperativeHandle(ref, () => {\n    return {\n      getInitialDistance: refObj?.current?.getInitialDistance\n    }\n  });\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <Provider store={store}>\n      <MapBoxContextProvider>\n        <MeshObjectContextProvider>\n          <div className={`${styles['mapbox-component']} MAP_ROLE_${config.ROLE} ${config.ROLE !== 'PORTAL' ? styles.view : ''}`}>\n            <SceneComponent\n              ref={refObj}\n              setSelectedActiveObjectId={setSelectedActiveObjectId}\n              selectedActiveObjectId={selectedActiveObjectId}\n              mapitData={mapData}\n              config={config}\n              onSettingsLoading={onSettingsLoading}\n              webApiURI={webApiURI}\n              mediaStorageURI={mediaStorageURI}\n              onSubmit={handleOnSubmit}\n              onResetData={onResetData}\n              deviceType={deviceType}\n              setCameraControlPosition={setCameraControlPosition}\n              onExtractedAmenities={onExtractedAmenities}\n              handleClickOnRetailer={handleClickOnRetailer}\n            />\n            <div className={styles.hide}>\n              <div id=\"map-special-svg-kiosk\">\n                <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n                  <path fill=\"#444444\" d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-atm\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 577.8 577\">\n                  <path fill=\"#444444\" d=\"M388.7,314c-3.7-10.3-10.3-19.8-17.7-27.2c-7.4-7.4-17.7-14-29.5-19.1c-6.6-2.9-19.2-6.6-39.1-11.8V144.2 c13.3,2.2,22.8,8.1,30.2,16.2c7.4,8.1,11.8,19.9,14,35.3l39.8-5.9c-2.9-24.3-13.3-44.1-30.2-58.1c-13.3-11-31-17.7-53.8-19.8V93.4 h-24.3v18.4c-25.8,2.2-45,9.6-58.2,21.3c-19.9,17.7-29.5,39.7-29.5,67.6c0,15.5,3.7,29.4,10.3,41.9s16.2,22,28.7,28.7 c17,9.6,33.2,16.2,49.4,20.6v121.3c-14.8-1.5-28-8.8-39.1-22.8c-7.4-9.6-13.3-25-16.2-46.3l-39.1,7.4c1.5,20.6,6.6,37.5,15.5,51.5 s19.9,23.5,31.7,30.1c12.5,6.6,28,11,47.9,13.2v39v-0.1V483h22.1v-39c28-0.7,50.1-11,67.1-28.7c17-18.4,25.8-40.4,25.8-67.6 C394.6,336,392.4,324.3,388.7,314z M278.9,145.1v107.2c-17.7-5.2-30.2-11.8-37.6-20.6s-11.1-19.8-11.1-33.1c0-14,4.4-25.7,13.3-35.3 C252.2,153.9,263.7,147.4,278.9,145.1V145h0.7C279.3,145,279.1,145,278.9,145.1z M340,394.2c-9.6,11-22.1,18.4-37.6,19.8l0,0V297.9 c20.6,5.2,34.6,11.8,42,20.6c6.6,8.1,10.3,19.8,10.3,33.8C354.8,369.2,349.6,383.1,340,394.2z\" />\n                  <path fill=\"#444444\" d=\"M289.8,2.5c-158.7,0-288,128-288,287.2c0,158.3,129.3,287.2,288,287.2s288-128.9,288-287.2S448.6,2.5,289.8,2.5z M289.9,533.9C155,533.9,45.2,424.3,45.2,289.8C45.2,154.5,155,45.7,289.9,45.7s244.7,109.5,244.7,244.1S424.8,533.9,289.9,533.9z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-management\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 414.6\">\n                  <path fill=\"#444444\" d=\"M371.6,180.4c66.8,0,101,58.5,121.4,121.9l16.4,50.4c2.7,8.8-7.5,16.3-16.4,16.3h-56.6l-7.5-27.2 c-17.7-53.1-45-106.2-94.8-125.9c13-8.8,23.9-21.1,30.7-35.4C366.1,180.4,368.8,180.4,371.6,180.4z M441.2,145.7 c64.8,2,98.2,59.2,118.7,121.9l15.7,49.7c2.7,8.8-7.5,17.7-16.4,17.7h-35.5l-12.3-38.1c-16.4-53.1-44.3-106.2-94.8-125.9 C426.2,162.7,434.3,155.2,441.2,145.7z M51.6,334.3H16.8c-9.6,0-19.1-8.2-16.4-17.7l15.7-49.7C35.9,204.2,70.1,147.1,134.9,145 c6.1,9.5,15,18.4,24.6,24.5c-49.8,19.7-77.8,72.8-94.8,125.9L51.6,334.3L51.6,334.3z M437.7,0c35.5,0,64.8,28.6,64.8,64.7 c0,31.3-22.5,57.2-52.5,62.6c3.4-8.8,5.5-18.4,5.5-27.9c0-39.5-27.3-71.5-62.8-81C403.6,6.8,419.3,0,437.7,0L437.7,0z M137.6,0 c17.7,0,34.1,6.8,45,18.4c-35.5,9.5-62.8,41.5-62.8,81c0,9.5,2.1,19.1,5.5,27.9C96,121.9,72.8,96,72.8,64.7 C73.5,28.6,102.1,0,137.6,0L137.6,0z M287.7,0c19.8,0,37.5,8.8,49.8,22.5c-15.7,6.8-29.3,19.1-38.2,34l-3.4,5.5c-2.7,0-5.5,0-7.5,0 c-2,0-6.1,0-8.9,0l-3.4-5.5c-9.6-15-22.5-27.2-38.2-34C250.2,8.9,267.9,0,287.7,0L287.7,0z M287.7,226c66.8,0,101,58.5,122.1,121.9 l15.7,50.4c2.7,8.8-8.2,16.3-16.4,16.3H166.2c-9.6,0-19.8-8.2-16.4-16.3l15.7-50.4C186,284.6,220.8,226,287.7,226z M287.7,81 c35.5,0,64.8,28.6,64.8,64.7s-28.7,64.7-64.8,64.7c-35.5,0-64.8-28.6-64.8-64.7S252.2,81,287.7,81z M138.3,369H82.3 c-9.6,0-19.1-8.2-16.4-16.3l15.7-50.4c21.1-63.3,55.3-121.9,122.1-121.9c2.7,0,5.5,0,7.5,0c6.1,15,17.7,27.2,30.7,35.4 c-49.8,19.7-78.5,72.8-94.8,125.9C147.1,341.8,138.3,369,138.3,369z M203.8,34.7c23.9,0,44.3,12.9,55.9,31.3 c-32.1,12.2-55.9,42.9-55.9,79c0,6.1,0.7,12.2,2.1,18.4h-2.1c-35.5,0-64.8-28.6-64.8-64.7S168.3,34.7,203.8,34.7z M371.6,34.7 c35.5,0,64.8,28.6,64.8,64.7s-29.3,64-64.8,64h-2.7c2.1-6.1,2.7-12.2,2.7-18.4c0-36.8-23.9-66.7-55.9-79 C327.2,47.7,347,34.7,371.6,34.7z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-playarea\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 537.9\">\n                  <path fill=\"#444444\" d=\"M384.3,137c38,0,68.8-30.7,68.8-68.5S422.3,0,384.3,0s-68.8,30.7-68.8,68.5S346.4,137,384.3,137z\" />\n                  <path fill=\"#444444\" d=\"M283.3,96c20,26.3,35.9,53.3,67.6,64.4c31.2,11.1,60.5,11.1,83.5-5.3c22.9-16.4,34.7-46.8,54.1-87.2 c18.8-40.4,34.1-48,57-48c23.5,0,31.2,28.1,30.6,39.8s-10.6,31-40,52.7c-49.4,36.3-57.6,108.3-59.4,127.7 c-1.8,19.3-2.9,50.4,17.6,169.2c20.6,118.9-20,125.9-25.3,127.1c-5.3,0.6-21.2,8.2-31.1-16.4c-10-24.6-11.8-91.3-14.1-120 c-2.9-28.7-6.5-70.9-35.9-79c-30-8.2-40.6,39.8-51.7,76.1c-10.6,36.9-40,71.4-72.3,59.1s-29.4-50.4-10-78.5 c19.4-27.5,61.7-57.4,67.6-124.1c5.9-66.8-11.8-69.1-68.2-90.8c-55.8-22.3-60.5-33.4-67.6-48.6s7.6-46.8,31.1-52.7 C239.2,55.1,259.1,63.9,283.3,96L283.3,96z\" />\n                  <path fill=\"#444444\" d=\"M134.7,251.7c26.9,0,48.8-21.8,48.8-48.6s-21.8-48.6-48.8-48.6s-48.8,21.8-48.8,48.6S107.7,251.7,134.7,251.7z\" />\n                  <path fill=\"#444444\" d=\"M204,227.8c-15.3,17.6-28.2,35.7-51.1,41.6c-22.9,6.4-43.5,4.7-58.8-8.2c-15.3-12.9-21.7-35.1-32.9-64.4S40,161,23.5,159.8 C7.1,158.7,0,178,0,186.2c-0.6,8.2,5.9,22.3,25.3,39.2C58.2,253.5,60,305.1,60,318.5c0.6,13.5-0.6,35.7-21.7,118.3 s7.1,89.6,10.6,90.8s14.7,7,22.9-10s12.9-63.8,16.5-83.7c3.5-19.9,8.2-49.8,29.4-53.9s26.5,30.4,32.3,56.8 c5.9,26.3,24.7,52.7,47.6,45.7c22.9-7,23.5-34,11.2-54.4c-12.3-20.5-40-43.9-40.6-90.8c-0.6-47.4,12.3-48,52.9-60.3 c40.6-12.3,44.7-20.5,50.5-30.4c5.9-10-2.9-33.4-18.8-38.6C237.5,201.4,222.8,206.7,204,227.8L204,227.8z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-restroom\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 533.9\">\n                  <path fill=\"#444444\" d=\"M282.3,533.9h9.2V0h-9.2V533.9z\" />\n                  <path fill=\"#444444\" d=\"M118.2,97.1c25.4-4.6,41.6-30.1,34.7-55.5C146,16.2,122.9,2.3,97.4,6.9S58.1,39.3,62.8,62.4S95.1,104,118.2,97.1z\" />\n                  <path fill=\"#444444\" d=\"M159.8,145.6h4.6c0,0,2.3,0,2.3,2.3L183,270.4c2.3,9.2,9.2,16.2,18.5,16.2c11.6,0,18.5-9.2,18.5-20.8l-18.5-129.4 c-2.3-13.9-13.9-23.1-27.7-23.1H44.3c-13.9,0-25.4,9.2-27.7,23.1L0.4,265.8c-2.3,11.6,6.9,20.8,18.5,20.8c9.2,0,16.2-6.9,18.5-16.2 l16.2-122.5c0,0,0-2.3,2.3-2.3h4.6c0,0,2.3,0,2.3,2.3L30.4,390.6c0,0,0,2.3,2.3,2.3h37c0,0,2.3,0,2.3,2.3v117.9 c0,9.2,6.9,16.2,16.2,16.2s16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h11.6c0,0,2.3,0,2.3,2.3v117.9c0,9.2,6.9,16.2,16.2,16.2 c9.2,0,16.2-6.9,16.2-16.2V393c0,0,0-2.3,2.3-2.3h30.1c0,0,2.3,0,2.3-2.3l-27.7-242.7l0,0l0,0L159.8,145.6z\" />\n                  <path fill=\"#444444\" d=\"M497.3,76.3c13.9-23.1,4.6-50.9-16.2-62.4s-50.9-6.9-64.7,16.2c-13.9,23.1-4.6,50.9,16.2,62.4 C455.7,106.3,483.5,99.4,497.3,76.3z\" />\n                  <path fill=\"#444444\" d=\"M545.9,113.3h-178c-13.9,0-25.4,9.2-27.7,23.1v129.4c0,11.6,9.2,20.8,20.8,20.8s18.5-9.2,18.5-20.8V159.5c0,0,0-2.3,2.3-2.3 h2.3c0,0,2.3,0,2.3,2.3l25.4,161.8v187.2c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V323.6c0,0,0-2.3,2.3-2.3h6.9 c0,0,2.3,0,2.3,2.3v184.9c0,11.6,9.2,20.8,20.8,20.8l0,0c11.6,0,20.8-9.2,20.8-20.8V321.3l25.4-161.8c0,0,0-2.3,2.3-2.3h-2.3 c0,0,2.3,0,2.3,2.3v106.3c0,11.6,9.2,20.8,20.8,20.8s20.8-9.2,20.8-20.8V136.4C571.4,122.5,559.8,113.3,545.9,113.3L545.9,113.3 L545.9,113.3z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-family-restroom\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 522.5\">\n                  <path fill=\"#444444\" d=\"M119.8,91.5c25-5.9,40.5-30.8,34.6-55.7c-5.9-24.9-30.9-40.4-55.9-34.5S58,32,63.9,56.9S94.8,97.3,119.8,91.5z\" />\n                  <path fill=\"#444444\" d=\"M160.6,139.1h4.5c0.6,0,1.3,0.6,1.3,1.3l15.3,123.1c1.3,8.9,8.9,15.9,17.8,15.9c10.8,0,19.1-9.5,17.8-20.3l-15.9-128.9 c-1.9-13.3-13.4-24.1-27.4-24.1H43.4c-14,0-25.5,10.2-27.4,24.1L0.1,259.1c-1.3,10.8,7,20.3,17.8,20.3c8.9,0,16.5-7,17.8-15.9 l15.3-123.8c0-0.6,0.6-1.3,1.3-1.3h4.5c0.6,0,1.3,0.6,1.3,1.3L29.4,384.1c0,0.6,0.6,1.3,1.3,1.3H67c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v118.1 c0,9.5,7.6,16.5,16.5,16.5c9.5,0,16.5-7.6,16.5-16.5V387.3c0-0.6,0.6-1.3,1.3-1.3h36.3c0.6,0,1.3-0.6,1.3-1.3L158,140.3 C159.3,139.7,159.9,139.1,160.6,139.1L160.6,139.1z\" />\n                  <path fill=\"#444444\" d=\"M498.9,69.8c12.9-22.1,5.4-50.5-16.8-63.4c-22.2-12.9-50.6-5.4-63.6,16.7c-12.9,22.1-5.4,50.5,16.8,63.4 C457.5,99.4,486,91.9,498.9,69.8z\" />\n                  <path fill=\"#444444\" d=\"M547.9,106.1H369.6c-14,0-25.5,10.2-27.4,24.1v128.9c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7v-106 c0-0.6,0.6-1.3,1.3-1.3h2.5c0.6,0,1.3,0.6,1.3,1.3l25.5,162.5v187.3c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7v-186 c0-0.6,0.6-1.3,1.3-1.3h10.8c0.6,0,1.3,0.6,1.3,1.3v186c0,10.8,8.9,19.7,19.7,19.7h0.6c10.8,0,19.7-8.9,19.7-19.7V315.6l25.5-162.5 c0-0.6,0.6-1.3,1.3-1.3h2.6c0.6,0,1.3,0.6,1.3,1.3v106c0,10.8,8.9,19.7,19.7,19.7s19.7-8.9,19.7-19.7V130.2 C573.4,116.2,562,106.1,547.9,106.1L547.9,106.1z\" />\n                  <path fill=\"#444444\" d=\"M259.6,480l19.7-19.7L251.9,433L229,455.8c-7.6,7.6-5.7,20.3,1.3,27.3l32.5,33.6c12.7,12.7,29.3-5.1,17.2-17.1L259.6,480 L259.6,480z M288.9,347.9c19.1,0,34.4-15.2,34.4-34.3s-15.3-34.3-34.4-34.3s-34.4,15.2-34.4,34.3S269.7,347.9,288.9,347.9z  M369.7,405.7l-46.5-46.3c-3.8-3.8-8.3-6.3-14.7-6.3h-41.4c-6.4,0-10.8,2.5-14,6.3l-45.9,45.7c-12.7,12.7,4.5,28.6,17.2,15.9 l28-27.9v26h72.6v-26l28.6,28.6C364.6,433.6,381.8,417.1,369.7,405.7L369.7,405.7z M324.5,433l-27.4,27.3l19.7,19.7l-20.4,20.3 c-12.1,12.1,4.5,29.2,17.2,17.1l32.5-33.6c7-7,8.9-20.3,1.3-27.3C347.4,455.9,324.5,433,324.5,433z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-elevator\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 576\">\n                  <path fill=\"#444444\" d=\"M576,145.2v268.6c-0.1,1.6-0.3,3.1-0.3,4.7c-0.3,33.3-0.6,66.6-0.8,99.9c-0.1,21.1-9.7,37.2-26.7,49 c-7.7,5.4-15.9,9.3-25.9,8c-3.8-0.5-7.7-0.1-11.5-0.1c-115.3,0.1-230.6,0.2-345.9,0.3c-1.1,0-2.2,0.2-3.3,0.3h-16.9 c-1.2-0.1-2.4-0.3-3.6-0.3c-30.2-0.3-60.4-0.6-90.7-0.8c-11.1-0.1-20.7-4.1-29.1-11.2c-8.7-7.4-15.5-16.7-19.9-27.3l-0.2-0.5 c-0.7-1.6-1.1-3.4-1.2-5.4v0C0,492.8,0,455.1,0,417.4c0-124.1,0-248.1,0-372.2c0-0.2,0-0.3,0-0.5c0-1.5,0.3-2.9,0.7-4.2l0,0.1 C8.3,22.5,20.5,8.9,38.7,1c1.2-0.5,2.6-0.9,4-0.9h0c162.8,0,325.6,0,488.4,0c1.5,0,2.8,0.4,4.1,0.9l-0.1,0c3.4,1.4,6.1,2.7,8.8,4.2 l-0.4-0.2c19.7,11.2,30.9,27.8,31.3,50.8c0.4,28.2,0.6,56.3,0.8,84.5C575.7,141.8,575.8,143.5,576,145.2L576,145.2z M536.4,288.6 h0.3c0-56.7,0-113.4,0-170c0-18.2-0.4-36.4-0.7-54.6c-0.1-8-8.4-19.8-15.9-22.7c-1-0.4-2.1-0.6-3.2-0.7h0c-3.2-0.3-6.4-0.6-9.5-0.6 c-25.5-0.4-51-0.9-76.6-1c-96.4-0.2-192.7-0.4-289.1-0.4c-22.9,0-45.8,0.1-68.7,0.3c-3.4,0-6.8,0.1-10,0.9 c-9.9,2.3-17.1,8.3-21.7,17.3c-1,1.9-2,3.9-2.1,5.9c-0.1,149.8-0.1,299.6-0.1,449.4c0,0.9-0.1,2,0.3,2.7c2.7,4.2,5.1,8.6,8.3,12.3 c5.6,6.3,13.2,8.4,21.6,8.4c23.7,0.1,47.5,0.6,71.2,0.6c123.5,0,247,0,370.5,0c0.1,0,0.2,0,0.3,0c1.1,0,2.1-0.2,3-0.6l-0.1,0 c8.3-3.5,15.4-8.4,20.2-16.3c1.2-1.8,2-4.1,2-6.5l0,0C536.4,438.2,536.4,363.4,536.4,288.6L536.4,288.6z\" />\n                  <path fill=\"#444444\" d=\"M307,277.5l75.9,68.4l0.9-0.2V150.9h49.7v194.8l1,0.3l78.2-67.4c0.1,1,0.2,1.7,0.3,2.4c0.3,19.9,0.6,39.8,0.8,59.7 c0,0,0,0,0,0.1c0,1.4-0.5,2.6-1.4,3.6l0,0c-34.1,32.7-68.2,65.3-102.3,97.9c-0.3,0.3-0.6,0.5-1,0.9c-0.6-0.5-1.3-1-1.9-1.5 c-32.7-30.7-65.5-61.4-98.2-92c-1.4-1.2-2.3-3-2.3-5c0-0.1,0-0.3,0-0.4v0c0.2-20.9,0.3-41.9,0.4-62.8C307,280.5,307,279.4,307,277.5 L307,277.5z\" />\n                  <path fill=\"#444444\" d=\"M142.2,234.5L67,301.8c-0.1-1.2-0.3-1.9-0.3-2.7c-0.3-20.7-0.7-41.5-1-62.2c0-1.3,0.5-2.5,1.3-3.4l0,0 c33.3-31.4,66.7-62.8,100.1-94.1c0.3-0.3,0.6-0.5,1-0.8c5.9,5.7,11.8,11.3,17.7,16.9c28.1,26.9,56.2,53.9,84.3,80.9 c0.9,0.8,1.4,2,1.5,3.3v0c-0.5,20.2-1.1,40.3-1.6,60.5c0,0.3-0.1,0.7-0.2,1.7l-77.4-67.1l-0.9,0.1v193.9h-48.3v-194L142.2,234.5z\" />\n                </svg>\n              </div>\n              <div id=\"map-special-svg-security\">\n                <svg version=\"1.1\" id=\"Layer_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 576 597.6\">\n                  <path fill=\"#444444\" d=\"M554,80.7L298.5,1.5c-6.6-2-13.2-2-19.9,0L23.2,80.7C9.3,84.7,0,97.9,0,112.4c0,352.5,178.7,436.4,274,481.9 c4.6,2,9.3,3.3,13.9,3.3c4.6,0,9.9-1.3,13.9-3.3c96-45.5,274-129.4,274-481.9C577.2,97.9,567.9,85.3,554,80.7z M288.6,527.6 C197.2,484.1,73.5,411.4,66.2,136.2l222.4-68.6L511,136.8C503.7,412.1,379.3,484.1,288.6,527.6z\" />\n                  <path fill=\"#444444\" d=\"M278.7,152l-26.5,87.1l-90.7-2.6c-4.6,0-8.6,2.6-9.9,7.3c-1.3,4.6,0,9.2,4,11.9l74.8,51.5L200.6,393c-1.3,4.6,0,9.2,4,11.9 c4,2.6,8.6,2.6,12.6,0l72.1-54.8l72.1,54.8c4,2.6,8.6,2.6,12.6,0c4-2.6,5.3-7.3,4-11.9l-29.8-85.8l74.8-51.5c4-2.6,5.3-7.3,4-11.9 c-1.3-4.6-5.3-7.3-9.9-7.3l-90.7,2l-26.5-87.1c-1.3-4.6-5.3-7.3-9.9-7.3C283.9,144.1,280,147.4,278.7,152L278.7,152z\" />\n                </svg>\n              </div>\n            </div>\n          </div>\n        </MeshObjectContextProvider>\n      </MapBoxContextProvider>\n    </Provider>\n\n\n  );\n})\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\nimport { IAmenitiesInteractiveList } from \"./types\";\n\nexport type IRetailer = {\n  id: string;\n  index?: string;\n  retail_name: string;\n  slug: string;\n  location: string;\n  retailer_phone: string;\n  retailer_description: string;\n  logo: string;\n  map_obj_name: string;\n};\n\nexport type MapObj = {\n  id: string | number;\n  center_id: string;\n  retailer_id: string;\n  kiosk_id: string | null;\n  map_obj_name: string;\n  obj_type: string;\n  layer_type: string;\n  value: string;\n  custom_text: string;\n  custom_image: string;\n  hover_text: string;\n  bg_color: string;\n  transparent: string | number;\n  text_color: string;\n  size: string;\n  lock_size: string;\n  rotate: string;\n  offsetX: string;\n  offsetY: string;\n  goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & { kiosk_id: number | null };\n\nexport type Floor = {\n  id: string;\n  svg_map?: string;\n  objsGroup?: Group;\n  interactiveObjs?: any[];\n  escalatorsObjs?: any[];\n  escalatorsNodes?: Record<any, any>;\n  escalatorMeshes?: any[];\n  route_points?: IRoutePoint[];\n  route_tube?: any;\n  route_texture?: Texture | null | undefined;\n  routeMeshes?: any[];\n  route_active?: boolean;\n  center_id?: string;\n  title: string;\n  svg?: string;\n  status?: string;\n  created_at?: string;\n};\n\nexport type CameraControlsState = {\n  camera: { x: number, y: number, z: number };\n  controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n  STYLE: '2D' | '3D',\n  MAP_BACKGROUND_COLOR: string;\n  ACCENT_COLOR: string;\n  STORE_DEFAULT_COLOR: string;\n  BIG_STORE_DEFAULT_COLOR: string;\n  WALL_THICKNESS: string;\n  WALL_COLOR: string;\n  BOUNDARY_THICKNESS: string;\n  BOUNDARY_COLOR: string;\n  BASE_COLOR: string;\n  STORE_TEXT_COLOR: string;\n  STORE_HEIGHT: string;\n  OVERLAY_COLOR: string;\n  OVERLAY_OPACITY: string;\n  AMENITIES_NAV_BG_COLOR: string;\n  AMENITIES_NAV_ICON_COLOR: string;\n  KIOSK_SIZE: string;\n  MIN_ZOOM: string;\n  MAX_ZOOM: string;\n  CAMERA_MIN_DISTANCE: string;\n  CAMERA_MAX_DISTANCE: string;\n  ZOOM_STEP: string;\n  SELECTED_ZOOM_LIMIT: string;\n  SELECTED_ZOOM_LIMIT_DISTANCE: string;\n};\n\nexport type Kiosk = {\n  id: string;\n  title: string;\n  map_obj_name: string;\n};\n\nexport type Amenity = {\n  name: string;\n  image: string;\n};\n\nexport type MapIt2Response = {\n  retailers: IRetailer[];\n  map_objs: MapObj[];\n  floors: Floor[];\n  camera_controls_states: {\n    display_app: CameraControlsState;\n    desktop: CameraControlsState;\n    tablet: CameraControlsState;\n    mobile: CameraControlsState;\n  };\n  settings: Settings;\n  kiosks: Kiosk[];\n  amenities: IAmenitiesInteractiveList[];\n};\n\nexport type IRoutePoint = {\n  name: string;\n  node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n  if (typeof obj !== 'object' || obj === null) return false;\n\n  const response = obj as Record<string, unknown>;\n\n  return (\n    Array.isArray(response.retailers) &&\n    Array.isArray(response.map_objs) &&\n    Array.isArray(response.floors) &&\n    typeof response.camera_controls_states === 'object' &&\n    response.camera_controls_states !== null &&\n    typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n    typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n    typeof response.settings === 'object' &&\n    Array.isArray(response.kiosks) &&\n    typeof response.amenities === 'object'\n  );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","hex_to_color","hex_code","Color","getFormatedColor","replace","amenities","type","getAllAmenities","map","item","svg","svg_block","document","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","XMLSerializer","serializeToString","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","allIndexedMapObjects","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","allMapObjects","allIndexedRetailers","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","escalator_clone","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","get_route_texture","scale","setDrawRange","ctx","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minZoom","maxZoom","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","SELECTED_ZOOM_LIMIT","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","set","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svgData","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","size","get_store_name_logo_geo","textLogoNamePrefix","myFont","handleAsync","new_object_id","result","boundingBox","computeBoundingBox","mesh_center_point","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","logoMesh","storeLogo","getImageLogo","MapBoxContext","createContext","meshByObjectId","Map","setMeshByObjectId","setAllMapObjects","setAllIndexedMapObjects","setAllIndexedRetailers","setAllNodesFloor","createGraph","setPathFinderGraph","setNgraphPath","floorsData","MapBoxContextProvider","children","useState","_jsx","Provider","useMapBoxContext","context","useContext","Error","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","meshParams","setMeshParams","textParams","setTextParams","storeLogos","setStoreLogos","escalatorNodes","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","mergedConfig","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","title","far","fov","fovCorrection","settings","parseFloat","MIN_ZOOM","MAX_ZOOM","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","canvasWidth","screen","camera_controls_states","mobile","tablet","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","SELECTED_ZOOM_LIMIT_DISTANCE","values","clearScene","removeFromParent","GeometriesAndMaterials","graph","results","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","point","origin_point","target_direction","storeIntersects","intersectObjects","object","escalatorIntersects","assign_route_nodes_to_stores","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","loadFloors","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","useMeshObjectContext","MapCenterMarker","lockSize","blink","setSizeFactor","setTexture","SpriteMaterial","sizeAttenuation","svgOrigin","svgBlob","Blob","svgUrl","URL","createObjectURL","svgTexture","Texture","needsUpdate","_jsxs","Html","className","MapObject","setUpdate","React","currentFloorIndex","triggerUpdate","kioskConfig","htmlContent","pointerEvents","distanceFactor","uuid","_Fragment","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","Fragment","boundingSphere","display","stopPropagation","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","ref","firstMove","setFirstMove","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","isSelectedRetailerSlug","setIsCameraInit","mapObjs","handleObjectClick","triggerClick","cameraLimits","SetCameraLimits","min","initialDistance","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","isUseDefaultsLimits","resetCamera","fullReset","selectedFloorMeshParams","meshes","focus","aspect","isZeroCCS","cameraV3","controls","cameraDistance","setLength","fromPosition","fromTarget","animationStartTime","duration","cl","focusDistance","Number","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","clearEscalators","flat","targetMesh","currentActiveObject","zoomStep","getInitialDistance","onCameraMove","vector","animationTime","animationProgress","lerpVectors","createRouteToStore","retailerSlug","slug","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","retailersApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getRetailers","query","limit","page","url","headers","useLazyGetRetailersQuery","useAllRetailers","setRetailers","lastIndexOf","slice","getAllRetailers","Promise","resolve","reject","fetchData","currentPage","then","catch","err","UIComponent","selectedFloorIndex","handleFloorChange","amenitiesList","zoomIn","zoomOut","reset","handleAmenityClick","onExtractedAmenities","extractValues","filter","preventDefault","Function","styles","dangerouslySetInnerHTML","__html","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","MapboxForm","setData","selectedId","onResetData","triggerSceneUpdate","textFont","textFontInterface","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","isLoadingRetailers","loadOptions","loadRetailersOptions","useRetailersOptions","apiURI","setIsLoading","fetchRetailers","toString","search","isError","useGetRetailers","processData","isLoadingMore","label","location","inputValue","callback","toLowerCase","selectedKiosksId","setSelectedKiosksId","recheckSelectedKiosksId","ids","prev","cur","loadKiosksOptions","isDisabled","loadAmenitiesOptions","getDefaultKioksOptions","getDefaultAmenitiesOptions","makeImage","retailIndex","findIndex","HTMLImageElement","makeTextGeometry","updateData","handleChangeTab","k","clearKioskConfig","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadingMessage","noOptionsMessage","placeholder","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","handleChangeKiosk","newValue","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","kioskId","handleRotateByFixedAngle","defaultData","RetailerInfoList","isAmenity","retailerId","setRetailerId","alt","retailer_phone","retailer_description","FormGroup","Select","disabled","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","fetch","json","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","SceneComponent","refreshData","removeMissingMapObjects","mapitData","getData","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","mapObjsPromise","ok","status","statusText","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","all","responseData","offset_x","offset_y","demoData","objectNames","mapObjects","useMapit2Data","setTriggerClick","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","handleClickOnRetailer","IsCameraInit","disableClicks","setDisableClicks","selectedRetailerSlug","setSelectedRetailerSlug","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","subPrev","subCur","labelRef","currentHoveredObject","setCurrentHoveredObject","setSceneKey","updateKey","showRetailerInfo","setShowRetailerInfo","setCxtConfig","createRouteToAmenity","offsetWidth","resizeWidth","addEventListener","setCameraControlPos","display_app","desktop","onSettingsLoading","getHexString","camPos","ctrlTarget","activeFromObjectId","handleChangeMapitData","newData","itemIndex","getMapitData","floorsCount","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","meshParam","handleMeshObjectContext","logoParams","targetId","softClick","t","startMousePos","Infinity","messageStyle","top","left","transform","meshFloorsChecked","Alert","getStyle","resetHandle","ccs","Canvas","Stats","parent","intensity","buttons","clientX","clientY","newDistance","sqrt","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","configureStore","reducer","middleware","getDefalultMiddleware","concat","setupListeners","dispatch","MapBox","refObj","setMapData","isMapIt2Response","xmlns","viewBox","fill","d","version"],"mappings":"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"}