{"version":3,"file":"index.module.js","sources":["../src/Hooks/useMeshFloors/nodesUtils.ts","../src/Hooks/useMeshFloors/getMeshParams.ts","../src/globals.ts","../src/helpers/misc.ts","../src/helpers/amenities.helper.ts","../src/components/Amenities/ATM.tsx","../src/components/Amenities/Management.tsx","../src/components/Amenities/PlayArea.tsx","../src/components/Amenities/Restroom.tsx","../src/components/Icons/FamilyRestroom.tsx","../src/components/Amenities/Elevator.tsx","../src/components/Amenities/Security.tsx","../src/components/Icons/DogPoopStation.tsx","../src/Hooks/useMeshFloors/getMaterialAndGeometry.ts","../src/Hooks/useMeshFloors/getWallShape.ts","../src/helpers/route.helpers.ts","../src/Hooks/useMeshFloors/loadFloors.ts","../src/defaults.ts","../src/helpers/draw.logo.helpers.ts","../src/Hooks/useMeshFloors/index.tsx","../src/components/SceneComponent/SceneProperties.tsx","../src/components/SceneComponent/CameraProperties.tsx","../src/helpers/easing.ts","../src/components/SceneComponent/RouteTube.tsx","../src/contexts/MeshObjectContextProvider.tsx","../src/components/SceneComponent/MapCenterMarker.tsx","../src/components/SceneComponent/Map.tsx","../src/helpers/camera.helpers.ts","../src/components/SceneComponent/FloorsMap.tsx","../src/components/UIComponent/FloorSelector.tsx","../src/components/UIComponent/index.tsx","../src/components/MapboxForm/useGetRetailersBySearch.ts","../src/components/MapboxForm/MapboxForm.tsx","../src/Hooks/useRetailerData/useRetailerData.ts","../src/components/SceneComponent/RetailerInfoModal.tsx","../src/components/SceneComponent/SceneComponent.tsx","../src/useMapit2Data.ts","../src/MapBox.tsx","../src/mapitApiTypes.ts"],"sourcesContent":["import type {Vector2} from \"three\";\nimport {IFloorData} from \"../../types\";\n\nexport function next_node_name(node_count: number) {\n    return 'node-' + node_count;\n}\n\nexport function get_node_name(vertex: Vector2, floor_index: number, floors: IFloorData[], node_count: number): [string , boolean] {\n    let exists = false;\n    let node_name:string = '-name-not-found-';\n    const currentFloor = floors[floor_index];\n    if (currentFloor.route_points !== undefined) {\n        for (let i = 0; i < currentFloor.route_points.length; i++) {\n            if (vertex.x == currentFloor.route_points[i].node.x && vertex.y == currentFloor.route_points[i].node.y) {\n                exists = true;\n                node_name = currentFloor.route_points[i].name;\n                break;\n            }\n        }\n        if (!exists) {\n            node_name = next_node_name(node_count);\n            // draw_points([{ x: vertex.x, y: vertex.y }]);\n        }\n    }\n    return [node_name, exists];\n}","// import {SVGResultPaths} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResultPaths } from \"three-stdlib\";\nimport {Graph} from \"ngraph.graph\";\nimport {Color, LineCurve, Vector2, Vector3} from \"three\";\nimport {get_node_name} from \"./nodesUtils\";\nimport {MeshType} from \"./getMaterialAndGeometry\";\nimport { IConfig, IFloorData } from \"../../types\";\n\nexport const getMeshParams = (path: SVGResultPaths, paths: SVGResultPaths[], floors: IFloorData[], floor_index: number, config: IConfig, nodeCount: number, allNodesFloor: Record<string, number>, pathFinderGraph: Graph) => {\n    const consolePrefix = 'MeshParams';\n    let mesh_type:MeshType = null;\n    var layer_color: Color | string = path.color.clone();\n    var extrude = 0;\n    var z_index = 0;\n    var mesh_visible = true;\n    var mesh_draw = true;\n    var mesh_transparent = false;\n    var line_thickness = config.WALL_THICKNESS;\n    var interactiveMesh = true;\n    var layer_name = path.userData?.node.id;\n    if (layer_name != undefined) {\n        if (layer_name.startsWith('boundary')) {\n            mesh_type = 'boundary';\n            layer_color = config.BOUNDARY_COLOR;\n            line_thickness = config.BOUNDARY_THICKNESS;\n            if (config.STYLE == '3D') {\n                extrude = 9;\n            }\n        } else if (layer_name.startsWith('wall')) {\n            mesh_type = 'wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 8.5;\n            }\n        } else if (layer_name.startsWith('outer-wall')) {\n            mesh_type = 'outer-wall';\n            layer_color = config.WALL_COLOR;\n            if (config.STYLE == '3D') {\n                mesh_draw = false;\n            }\n        } else if (layer_name.startsWith('building-base')) {\n            mesh_type = 'building-base';\n            layer_color = config.BUILDING_BASE_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 12;\n                z_index = -12;\n            }\n        } else if (layer_name.startsWith('base')) {\n            mesh_type = 'base';\n            layer_color = config.BASE_COLOR;\n        } else if (layer_name.startsWith('store')) {\n            mesh_type = 'store';\n            layer_color = config.STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = parseInt(config.STORE_HEIGHT);\n            }\n            if (layer_name.startsWith('store-underlay')) {\n                interactiveMesh = false;\n            }\n        } else if (layer_name.startsWith('big-store')) {\n            mesh_type = 'big-store';\n            layer_color = config.BIG_STORE_DEFAULT_COLOR;\n            if (config.STYLE == '3D') {\n                extrude = 16;\n            }\n        } else if (layer_name.startsWith('route-path')) {\n            mesh_type = 'route-path';\n            mesh_draw = false;\n            path.subPaths.forEach(subPath => {\n                if (subPath.curves.length == 0) {\n                    console.warn(consolePrefix + 'Route-path standalone anchor point exists, layer_name: \"%s\"', layer_name);\n                }\n\n                subPath.curves.forEach(curve => {\n                    //@ts-ignore\n                    const v1:Vector2 = curve.v1;\n                    //@ts-ignore\n                    const v2:Vector2 = curve.v2;\n\n                    const [node1_name, exists1] = get_node_name(v1, floor_index, floors, nodeCount);\n                    if (!exists1) {\n                        floors[floor_index].route_points?.push({\n                            name: node1_name,\n                            node: new Vector3(v1.x, v1.y, 1)\n                        });\n                        allNodesFloor[node1_name] = floor_index;\n                    }\n                    const [node2_name, exists2] = get_node_name(v2, floor_index, floors, nodeCount);\n                    if (!exists2) {\n                        floors[floor_index].route_points?.push({\n                            name: node2_name,\n                            node: new Vector3(v2.x, v2.y, 1)\n                        });\n                        allNodesFloor[node2_name] = floor_index;\n                    }\n                    pathFinderGraph.addNode(node1_name, { ...v1 });\n                    pathFinderGraph.addNode(node2_name, { ...v2 });\n\n                    // pathFinderGraph.addLink(node1_name, node2_name);\n                    pathFinderGraph.addLink(node1_name, node2_name, { weight: v1.distanceTo(v2) });\n                    pathFinderGraph.addLink(node2_name, node1_name, { weight: v1.distanceTo(v2) });\n                });\n            });\n        } else if (layer_name.startsWith('escalator-')) {\n            mesh_type = 'escalator';\n            mesh_visible = false;\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('kiosk-')) {\n            mesh_type = 'kiosk';\n            mesh_transparent = true;\n        } else if (layer_name.startsWith('amenity-')) {\n            mesh_type = 'amenity';\n            mesh_transparent = true;\n            z_index = 1;\n        } else if (layer_name.startsWith('overlay')) {\n            mesh_type = 'overlay';\n        } else if (layer_name.startsWith('special-shape')) {\n            mesh_type = 'special-shape';\n        } else {\n            extrude = 1;\n        }\n    } else {\n        console.warn(consolePrefix + 'Layer name is undefined, path', path)\n    }\n\n\n    /*console.debug({\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    })*/\n    return {\n        mesh_type,\n        layer_color,\n        extrude,\n        z_index,\n        mesh_visible,\n        mesh_draw,\n        mesh_transparent,\n        line_thickness,\n        interactiveMesh,\n        path,\n        layer_name,\n    }\n}","import createGraph from \"ngraph.graph\";\nimport {IRetailer, MapObj} from \"./mapitApiTypes\";\nimport type {Mesh} from \"three\";\nimport path from \"ngraph.path\";\n\nexport const meshByObjectId = new Map<string,Mesh>();\nexport const allMapObjects:string[] = [];\nexport const allIndexedMapObjects = {} as Record<string, MapObj>;\nexport const allIndexedRetailers = {} as Record<string, IRetailer>;\nexport const allNodesFloor = {} as Record<string, number>;\n\n//<{ x:number, y:number }, { weight: number }>\nexport const pathFinderGraph = createGraph();\nexport const ngraphPath = path;\n","import {Color} from \"three\";\n\nexport function hex_to_color(hex_code: string) {\n    return new Color(hex_code.length === 6 ? parseInt('0x' + hex_code, 16) : hex_code);\n}\n\nexport const getFormatedColor = (color: string) => {\n    if (!color.length) return '';\n\n    const r = /#/g;\n    return '#' + color.replace(r, '');\n}","import ATMIcon from \"src/components/Amenities/ATM\";\nimport ElevatorIcon from \"src/components/Amenities/Elevator\";\nimport ManagementIcon from \"src/components/Amenities/Management\";\nimport PlayAreaIcon from \"src/components/Amenities/PlayArea\";\nimport RestroomIcon from \"src/components/Amenities/Restroom\";\nimport SecurityIcon from \"src/components/Amenities/Security\";\nimport DogPoopStation from \"src/components/Icons/DogPoopStation\";\nimport FamilyRestroom from \"src/components/Icons/FamilyRestroom\";\nimport { IAmenitiesInteractiveList } from \"src/types\";\n\nexport const amenitiesList: IAmenitiesInteractiveList[] = [\n    {\n        name: 'ATM',\n        type: 'atm',\n        icon: ATMIcon,\n    },\n    {\n        name: 'Management',\n        type: 'management',\n        icon: ManagementIcon,\n    },\n    {\n        name: 'Kids Area',\n        type: 'playarea',\n        icon: PlayAreaIcon,\n    },\n    {\n        name: 'Restroom',\n        type: 'restroom',\n        icon: RestroomIcon,\n    },\n    {\n        name: 'Family Restroom',\n        type: 'family-restroom',\n        icon: FamilyRestroom,\n    },\n    {\n        name: 'Elevator',\n        type: 'elevator',\n        icon: ElevatorIcon,\n    },\n    {\n        name: 'Security',\n        type: 'security',\n        icon: SecurityIcon,\n    },\n    {\n        name: 'Dog Poop Station',\n        type: 'dog-poop-station',\n        icon: DogPoopStation,\n    },\n] \n\n","const ATMIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n            <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n            <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ATMIcon;","\nconst ManagementIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n            <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n            <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default ManagementIcon;","\nconst PlayAreaIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n            <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n            <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default PlayAreaIcon;","\nconst RestroomIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n            <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default RestroomIcon;","\nconst FamilyRestroom = () => {\n  return (\n    <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n      <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n      <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n    </svg>\n  )\n}\n\nexport default FamilyRestroom;","\nconst ElevatorIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n            <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n            <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"currentColor\" />\n        </svg>\n    )\n}\n\nexport default ElevatorIcon;","\nconst SecurityIcon = () => {\n    return (\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n            <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"currentColor\" />\n        </svg>\n\n    )\n}\n\nexport default SecurityIcon;","\nconst DogPoopStation = () => {\n    return (\n\n        <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n            <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n            <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n            <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n            <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n            <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n        </svg>\n    )\n}\n\nexport default DogPoopStation;","import {BackSide, Color, DoubleSide, ExtrudeGeometry, Mesh, MeshLambertMaterial, ShapeGeometry, Vector3} from \"three\";\nimport {getWallShape} from \"./getWallShape\";\n// import {mergeGeometries} from \"three/examples/jsm/utils/BufferGeometryUtils\";\nimport { mergeBufferGeometries as mergeGeometries } from \"three-stdlib\";\nimport {allMapObjects} from \"../../globals\";\nimport {IConfig, IExtMesh, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {hex_to_color} from \"../../helpers/misc\";\n\nimport {IRetailer, MapObj} from \"../../mapitApiTypes\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\n\n\nconst renderOrders = {\n    'route-path': 0,\n    'escalator': 0,\n    'underlay': 0,\n    'overlay': 1,\n    'building-base': 1,\n    'base': 2,\n    'store': 3,\n    'big-store': 4,\n    'kiosk': 5,\n    'wall': 6,\n    'outer-wall': 7,\n    'boundary': 8,\n    'amenity': 9,\n    'layer-image': 10,\n    'layer-text': 11,\n    'route-tube': 12,\n    'special-shape': 13,\n};\n\nexport type MeshType = keyof typeof renderOrders | null;\n\nexport function getRenderOrder(mesh_type: MeshType): number {\n    if (mesh_type !== undefined && mesh_type !== null && renderOrders[mesh_type] !== undefined) {\n        return renderOrders[mesh_type];\n    }\n    // console.warn(`Unknown mesh type: ${mesh_type}`)\n    return 0;\n}\n\nexport const getMaterial = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    layer_color: Color | string,\n    mesh_transparent: boolean,\n    allIndexedMapObjects: Record<string, MapObj>,\n) => {\n    const material_settings = {\n        color: layer_color instanceof Color ? layer_color : hex_to_color(layer_color),\n        side: DoubleSide,\n        transparent: false,\n        depthWrite: true,\n        depthTest: true,\n        opacity: 1,\n    }\n    if (config.STYLE == '2D' || mesh_type == 'base' || mesh_type == null) {\n        if (mesh_type != 'boundary') {\n            material_settings.depthWrite = false;\n            material_settings.depthTest = false;\n        }\n    }\n    if (mesh_type == 'overlay') {\n        material_settings.color = config.OVERLAY_COLOR;\n        material_settings.opacity = config.OVERLAY_OPACITY;\n    }\n    if (mesh_type && ['store', 'big-store', 'kiosk'].includes(mesh_type) && config.ROLE != 'PORTAL' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].transparent == 1) {\n        material_settings.opacity = 0;\n    }\n    var material = new MeshLambertMaterial(material_settings);\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        material.colorDefault = material.color;\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].bg_color != '') {\n            material.color = hex_to_color(allIndexedMapObjects[layer_name].bg_color);\n            //@ts-ignore\n            material.colorDefault = material.color;\n        }\n        //@ts-ignore\n        material.active = false;\n    }\n    if (config.ROLE != 'PORTAL' && mesh_transparent) {\n        material.opacity = 0;\n        material.transparent = true;\n    }\n\n    material.transparent = material.opacity !== 1;\n\n    return material;\n}\n\nexport const getGeometry = (\n    config: IConfig,\n    mesh_type: MeshType,\n    layer_name: string,\n    extrude: number,\n    line_thickness: number,\n    path: any,\n) => {\n    const consolePrefix = 'MaterialAndGeometry';\n\n    let shapes = path.toShapes(true);\n\n    // shapes.forEach((shape, index) => {\n    let extrude_meshes;\n    if (config.STYLE == '2D') {\n        extrude_meshes = ['building-base'];\n    } else {\n        extrude_meshes = ['store', 'big-store', 'base', 'building-base'];\n    }\n\n    let wall_meshes = ['wall', 'outer-wall', 'boundary'];\n\n    var geometry;\n    if (mesh_type && extrude_meshes.includes(mesh_type)) {\n        geometry = new ExtrudeGeometry(shapes, {\n            depth: -extrude,\n            bevelEnabled: false,\n        });\n    } else if (mesh_type && wall_meshes.includes(mesh_type)) {\n        //@ts-ignore\n        let wall_geometries = [];\n        //@ts-ignore\n        path.subPaths.forEach(subPath => {\n            //@ts-ignore\n            subPath.curves.forEach(curve => {\n                if (curve.type == 'LineCurve') {\n                    let shape_extend = 0;\n                    if (mesh_type == 'boundary') {\n                        shape_extend = 1;\n                    } else if (mesh_type == 'wall') {\n                        // shape_extend = 1 / 3;\n                    }\n                    let shape1 = getWallShape(curve, line_thickness, shape_extend);\n                    let wall_geometry = new ExtrudeGeometry(shape1, {\n                        depth: -extrude,\n                        bevelEnabled: false,\n                    });\n                    wall_geometries.push(wall_geometry);\n                } else {\n                    console.warn(consolePrefix + '\"%s\" found in walls. Check layer \"%s\"', curve.type, layer_name);\n                }\n            });\n        });\n\n        if (wall_geometries.length == 1) {\n            //@ts-ignore\n            geometry = wall_geometries[0];\n        } else if (wall_geometries.length > 1) {\n            //@ts-ignore\n            geometry = mergeGeometries(wall_geometries);\n        } else {\n            console.warn(consolePrefix + 'Unneccessary wall exists \"%s\"', layer_name);\n        }\n    } else {\n        geometry = new ShapeGeometry(shapes);\n        try {\n            //@ts-ignore\n            if (geometry.attributes.position.count == 0) {\n                console.warn(consolePrefix + 'Unneccessary map shape \"%s\"', layer_name, path.userData.node);\n            }\n        } catch (e: any) {\n            console.error(e.message);\n        }\n    }\n\n    return geometry;\n}\n\nexport const getMaterialAndGeometry = (config: IConfig, mesh_type: MeshType, layer_name: string, layer_color: Color | string, mesh_transparent: boolean, mesh_visible: boolean, z_index: number, extrude: number, line_thickness: number, floors: any, floor_index: number, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, path: any, role?: TRoles): IMeshValues => {\n    \n    const material = getMaterial(\n        config,\n        mesh_type,\n        layer_name,\n        layer_color,\n        mesh_transparent,\n        allIndexedMapObjects\n    );\n\n    const geometry = getGeometry(\n        config,\n        mesh_type,\n        layer_name,\n        extrude,\n        line_thickness,\n        path\n    );\n\n    const mesh = new Mesh(geometry, material) as IExtMesh;\n    mesh.object_id = layer_name;\n    mesh.mesh_type = mesh_type;\n    mesh.floor_index = floor_index;\n    mesh.visible = mesh_visible;\n    mesh.position.z = z_index;\n    let storeName = '';\n    if (['retail_name', 'retail_text', 'custom_text', 'amenity'].includes(allIndexedMapObjects[layer_name]?.layer_type)) {\n        if (allIndexedMapObjects[layer_name].layer_type && allIndexedMapObjects[layer_name].layer_type == 'retail_name' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n            storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].custom_text;\n            if (storeName === '' && allIndexedMapObjects[layer_name].retailer_id && allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id]) {\n                storeName = allIndexedRetailers[allIndexedMapObjects[layer_name].retailer_id].retail_name;\n            }\n        } else if (['amenity'].includes(allIndexedMapObjects[layer_name].layer_type)) {\n            storeName = allIndexedMapObjects[layer_name].value;\n            if (storeName.length > 1) {\n                const amenity = amenitiesList.find(item => item.type === storeName)\n                if (amenity) {\n                    storeName = amenity.name;\n                }\n            }\n        }\n    }\n    mesh.userData.storeName = storeName;\n    if (config.STYLE == '2D') {\n        mesh.renderOrder = getRenderOrder(mesh_type);\n        if (layer_name && layer_name.includes('underlay')) {\n            mesh.renderOrder = getRenderOrder('underlay');\n        }\n    }\n\n    floors[floor_index].objsGroup.add(mesh);\n\n    if (mesh_type == 'escalator') {\n        floors[floor_index].escalatorsNodes[layer_name] = null;\n        floors[floor_index].escalatorsObjs.push(mesh);\n        mesh.escalator_id = floor_index + '-' + layer_name;\n    }\n\n    if (mesh_type && ['store', 'big-store', 'kiosk', 'amenity'].includes(mesh_type)) {\n        //@ts-ignore\n        mesh.route_node_id = null;\n\n        // add floor_index to the kiosks\n        if (allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'kiosk') {\n            var kiosk_id = allIndexedMapObjects[layer_name].kiosk_id;\n            /*if (kiosk_id != null && ngCtrlElem.scope().kiosks[kiosk_id]) {\n                ngCtrlElem.scope().kiosks[kiosk_id].floor_index = floor_index;\n            }*/\n        }\n\n        if (config.ROLE === 'PORTAL') {\n            allMapObjects.push(layer_name);\n        }\n        if (\n            (config.ROLE !== 'PORTAL' && mesh_type == 'kiosk') ||\n            (config.ROLE !== 'PORTAL' && config.ROLE !== 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].obj_type == 'retailer' && allIndexedMapObjects[layer_name].retailer_id != null) ||\n            (config.ROLE !== 'PORTAL' && config.ROLE != 'PORTAL_KIOSK' && allIndexedMapObjects[layer_name] && allIndexedMapObjects[layer_name].layer_type == 'amenity' && allIndexedMapObjects[layer_name].value != '') ||\n            (config.ROLE === 'PORTAL' && (allIndexedMapObjects[layer_name]) && (allIndexedMapObjects[layer_name].obj_type === 'special' || allIndexedMapObjects[layer_name].obj_type === 'custom')) ||\n            (config.ROLE === 'PORTAL' && ['store', 'kiosk', 'amenity'].includes(mesh.mesh_type?? ''))\n        ) {\n            // if (interactiveMesh) {\n            floors[floor_index].interactiveObjs.push(mesh);\n            // }\n        } else if (\n            (config.ROLE === 'PORTAL')\n        ) {\n            floors[floor_index].interactiveObjs.push(mesh);\n        }\n    }\n\n    // if (['store', 'big-store'].includes(mesh_type as string)) {\n    //     console.debug({allIndexedMapObjects: allIndexedMapObjects[layer_name]});\n    // }\n\n    return {\n        mesh,\n        geometry,\n        material,\n        object_id: layer_name,\n        mesh_type,\n        floor_index,\n        visible: mesh_visible,\n        renderOrder: mesh.renderOrder,\n    }\n    // });\n\n}","import {LineCurve, Shape, Vector3} from \"three\";\n\nexport function getWallShape(curve: LineCurve, thickness = 3, shape_extend = 0) {\n    let wallShape = new Shape();\n    let point1 = new Vector3(curve.v1.x, curve.v1.y, 0);\n    let point2 = new Vector3(curve.v2.x, curve.v2.y, 0);\n\n    // form help and formulas in /assets/threejs/help/\n    let dir = point2.clone().sub(point1).normalize().multiplyScalar(-thickness * shape_extend);\n    let point1_center = point1.clone().add(dir);\n\n    dir = point1.clone().sub(point2).normalize().multiplyScalar(-thickness * shape_extend);\n    let point2_center = point2.clone().add(dir);\n\n    let distance = point1.distanceTo(point2_center);\n\n    let point1_above = {\n        x: point1_center.x - (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y - (point1_center.x - point2.x) * thickness / distance\n    };\n    let point1_below = {\n        x: point1_center.x + (point2.y - point1_center.y) * thickness / distance,\n        y: point1_center.y + (point1_center.x - point2.x) * thickness / distance\n    };\n\n    let point2_above = {\n        x: point2_center.x + (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y + (point2_center.x - point1.x) * thickness / distance\n    };\n    let point2_below = {\n        x: point2_center.x - (point1.y - point2_center.y) * thickness / distance,\n        y: point2_center.y - (point2_center.x - point1.x) * thickness / distance\n    };\n\n    wallShape.moveTo(point1_above.x, point1_above.y);\n    wallShape.lineTo(point1_below.x, point1_below.y);\n    wallShape.lineTo(point2_below.x, point2_below.y);\n    wallShape.lineTo(point2_above.x, point2_above.y);\n\n    // shape.moveTo(point1_above.x, point1_above.y);\n    // shape.bezierCurveTo(point1_above.x, point1_above.y, point1_long_center.x, point1_long_center.y, point1_below.x, point1_below.y);\n    // shape.lineTo(point2_below.x, point2_below.y);\n    // shape.bezierCurveTo(point2_below.x, point2_below.y, point2_long_center.x, point2_long_center.y, point2_above.x, point2_above.y);\n\n    return wallShape;\n}","import {\n    BufferGeometry,\n    CanvasTexture,\n    Color,\n    CurvePath,\n    DoubleSide,\n    LineCurve3,\n    Mesh,\n    MeshBasicMaterial,\n    Object3D,\n    Raycaster,\n    Scene,\n    TubeGeometry,\n    Vector3,\n} from \"three\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {allNodesFloor} from \"../globals\";\nimport * as ngraphPath from \"ngraph.path\";\nimport {PathFinder} from \"ngraph.path\";\nimport {IRetailer, MapObj} from \"../mapitApiTypes\";\nimport {IExtMesh, IFloorData} from \"../types\";\nimport {Graph, Node} from \"ngraph.graph\";\n\nconst consolePrefix = 'ROUTE: ';\nlet route_exists = null;\nlet activeMapObjectName: string | null = null;\n\nfunction makeObjectActive(object_id: string | null = null, accentColor: string | Color, scene: Scene) {\n    clearActiveEffect(scene);\n    if (object_id != null) activeMapObjectName = object_id;\n    let obj = scene.getObjectByProperty('object_id', activeMapObjectName as string) as IExtMesh;\n    // obj.material.color = config.ACCENT_COLOR;\n    //@ts-ignore\n    obj.material.color = new Color(`#${accentColor}`);\n    //@ts-ignore\n    obj.material.active = true;\n    return obj;\n}\n\nfunction clearActiveEffect(scene: Scene) {\n    if (activeMapObjectName) {\n        let obj = scene.getObjectByProperty('object_id', activeMapObjectName) as IExtMesh;\n        //@ts-ignore\n        obj.material.color = { ...obj.material.colorDefault };\n        //@ts-ignore\n        obj.material.active = false;\n        activeMapObjectName = null;\n    }\n}\n\nexport function delete_route_path(floors: IFloorData[]) {\n    for (let floor_index = 0; floor_index < floors.length; floor_index++) {\n        const floor = floors[floor_index];\n        floor.route_active = false;\n\n        if (floor.route_tube != null) {\n            floor.route_tube.geometry.dispose();\n            //@ts-ignore\n            floor.route_tube.material.dispose();\n            floor.objsGroup?.remove(floor.route_tube);\n        }\n\n        floor.route_tube = undefined;\n        floor.route_texture = null;\n        floor.escalatorMeshes = [];\n    }\n}\n\nexport function create_route(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, floors: IFloorData[], escalator_nodes: string[], pathFinderGraph: Graph, style: string): Mesh[] {\n    if (from_mesh_object_id === to_mesh_object_id) {\n        return [];\n    }\n    const routePaths = create_route_paths(from_mesh_object_id, to_mesh_object_id, scene, allNodesFloor, escalator_nodes, floors, pathFinderGraph, style);\n    if (!routePaths.length) console.warn(consolePrefix + 'No route found in between \"%s\" and \"%s\"', from_mesh_object_id, to_mesh_object_id);\n\n    return routePaths;\n}\n\nfunction create_route_paths(from_mesh_object_id: string, to_mesh_object_id: string, scene: Scene, allNodesFloor: Record<string, number>, escalator_nodes: any[] , floors: IFloorData[], pathFinderGraph: Graph, style: string, routeCallback = null) {\n    // TODO: remove scene dependency and scene.getObjectByProperty\n    const routePaths = [] as any[];\n    delete_route_path(floors);\n    let from_obj = scene.getObjectByProperty('object_id', from_mesh_object_id) as IExtMesh;\n    let to_obj = scene.getObjectByProperty('object_id', to_mesh_object_id) as IExtMesh;\n    let from_node_name = from_obj.route_node_id;\n    let to_node_name = to_obj.route_node_id;\n\n    // console.log({\n    //     from_mesh_object_id,\n    //     to_mesh_object_id,\n    //     from_obj,\n    //     to_obj,\n    //     from_node_name,\n    //     to_node_name,\n    // })\n\n    // from_node_name = 'node-147';\n    // to_node_name = 'node-221';\n\n    if (!from_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', from_mesh_object_id);\n    if (!to_node_name) console.error(consolePrefix + 'Route Anchor point missing for \"%s\"', to_mesh_object_id);\n\n    if (!from_node_name || !to_node_name) return routePaths;\n\n    const from_route_floor_index = from_obj.floor_index;\n    const to_route_floor_index = to_obj.floor_index;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n    const routeNodes = get_route_nodes(from_node_name, to_node_name, aStarPathFinder);\n    const routeNodesEsclators = [];\n    if (!routeNodes) {\n        return [];\n    }\n    const floor_routes = [];\n\n    for (let index = 0; index < routeNodes.length; index++) {\n        const routeNode = routeNodes[index];\n        if (floor_routes[allNodesFloor[routeNode.id]]) {\n            floor_routes[allNodesFloor[routeNode.id]].push(routeNode);\n        } else {\n            floor_routes[allNodesFloor[routeNode.id]] = [routeNode];\n        }\n\n        if (escalator_nodes.includes(routeNode.id) && escalator_nodes.includes(routeNodes[index - 1].id) && escalator_nodes.includes(routeNodes[index + 1].id)) {\n            // don't consider these middle escalators nodes\n        } else {\n            routeNodesEsclators.push(routeNode);\n        }\n    }\n    for (let index = 0; index < routeNodesEsclators.length; index++) {\n        const routeNode = routeNodesEsclators[index];\n        if (\n            allNodesFloor[routeNodesEsclators[0].id] !== allNodesFloor[routeNodesEsclators[routeNodesEsclators.length - 1].id] // proceed only if the start node and end node is not on the same floor\n            && escalator_nodes.includes(routeNode.id) // proceed only if the current node is a escalator\n        ) {\n            const escalator_id = Object.keys(floors[allNodesFloor[routeNode.id]].escalatorsNodes as object).find(key => floors[allNodesFloor[routeNode.id]]?.escalatorsNodes?.[key] === routeNode.id);\n            const escalator_mesh: IExtMesh = scene.getObjectByProperty('escalator_id', allNodesFloor[routeNode.id] + '-' + escalator_id) as IExtMesh;\n            let goToFloor = null;\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index + 1].id] && escalator_nodes.includes(routeNodesEsclators[index + 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index + 1].id],\n                    direction: 'Next',\n                };\n            }\n\n            if (allNodesFloor[routeNode.id] !== allNodesFloor[routeNodesEsclators[index - 1].id] && escalator_nodes.includes(routeNodesEsclators[index - 1].id)) {\n                goToFloor = {\n                    index: allNodesFloor[routeNodesEsclators[index - 1].id],\n                    direction: 'Previous',\n                };\n            }\n\n            if (goToFloor && escalator_mesh) {\n                escalator_mesh.goToFloor = goToFloor;\n                //@ts-ignore\n                floors[allNodesFloor[routeNode.id]]?.escalatorMeshes?.push(escalator_mesh);\n            }\n        }\n\n    }\n    for (let floor_index = 0; floor_index < floor_routes.length; floor_index++) {\n        const floor_route = floor_routes[floor_index];\n        if (floor_route && floor_route.length > 1) {\n            const routePath = create_route_path(floor_route, floor_index, floors, style);\n            routePaths[floor_index] = routePath;\n\n            floors[floor_index].route_active = true;\n            floors[floor_index].routeMeshes = [ routePath ];\n            if (floor_index === from_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(from_obj);\n            }\n            if (floor_index === to_route_floor_index) {\n                //@ts-ignore\n                floors[floor_index]?.routeMeshes?.push(to_obj);\n\n            }\n        }\n    }\n\n    // setTimeout(function () {\n    //     //TODO openFloorMap functionality\n    //     // openFloorMap(from_route_floor_index);\n    // });\n\n    return routePaths;\n}\n\nfunction create_route_path(\n    routeNodes: Node<any>[],\n    floor_index: number,\n    floors: IFloorData[],\n    style = '2D',// config.STYLE\n) {\n    let distance = 0;\n    let route_path = new CurvePath<Vector3>();\n    for (let i = 1; i < routeNodes.length; i++) {\n        let from_node = new Vector3(routeNodes[i - 1].data.x, routeNodes[i - 1].data.y, 0);\n        let to_node = new Vector3(routeNodes[i].data.x, routeNodes[i].data.y, 0);\n        route_path.add(new LineCurve3(from_node, to_node));\n        distance += from_node.distanceTo(to_node);\n    };\n    var geometry: TubeGeometry = new TubeGeometry(route_path, 400, 6, 8);\n    //@ts-ignore\n    geometry = new BufferGeometry().copy(geometry);\n    var material = new MeshBasicMaterial({\n        map: get_route_texture(distance, floor_index, floors),\n        transparent: true,\n        side: DoubleSide,\n        depthTest: false,\n        depthWrite: false,\n    });\n\n    let route_tube = new Mesh(geometry, material) as IExtMesh;\n    if (style === '2D') {\n        route_tube.position.z = -10;\n        route_tube.scale.z = 0.1;\n    }\n    route_tube.position.z = 0;\n    route_tube.renderOrder = getRenderOrder('route-tube');\n    route_tube.mesh_type = 'route-tube';\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, route_tube.geometry.index.count);\n    // draw_route_tube(route_tube, geometry.attributes.position.count, floors);\n\n    floors[floor_index].route_tube = route_tube;\n    floors[floor_index].objsGroup?.add(route_tube);\n\n    return route_tube;\n}\n\nfunction get_route_nodes(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>) {\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n    return routeNodes;\n}\n\n//TODO\nfunction get_nodes_distance(from_node_name: string, to_node_name: string, aStarPathFinder: PathFinder<any>, pathFinderGraph: Graph) {\n    let distance = 0;\n\n    let routeNodes = aStarPathFinder.find(to_node_name, from_node_name);\n    if (routeNodes.length == 0) return false;\n\n    for (let i = 1; i < routeNodes.length; i++) {\n        let link = pathFinderGraph.getLink(routeNodes[i - 1].id, routeNodes[i].id);\n        distance += link?.data.weight || 0;\n    };\n    return distance;\n}\n\nfunction draw_route_tube(route_tube: IExtMesh, total_faces: number) {\n    //@ts-ignore\n    route_tube.geometry.setDrawRange(0, total_faces);\n    /*createjs.Ticker.framerate = 60;\n    createjs.Tween.get({ x: 0 },\n        {\n            onChange: function (event) {\n                route_tube.geometry.setDrawRange(0, event.target.target.x);\n            },\n            onComplete: function () {\n                animate_route_path(floors);\n            }\n        })\n        .to({ x: total_faces }, 1000, createjs.Ease.cubicInOut);\n    */\n}\n\nfunction get_route_texture(distance: number, floor_index: number, floors: IFloorData[]) {\n    let canvas = document.createElement(\"canvas\");\n    let ctx = canvas.getContext(\"2d\");\n    if (ctx) {\n        ctx.canvas.width = distance;\n        ctx.canvas.height = 80;\n\n        ctx.fillStyle = \"#4ea5ff\";\n        ctx.fillRect(0, 0, distance, 80);\n\n        let grd_width = 0.1 * distance;\n        const min_grd_width = 60;\n        const max_grd_width = 120;\n        if (grd_width < min_grd_width) grd_width = min_grd_width;\n        if (grd_width > max_grd_width) grd_width = max_grd_width;\n\n        let grd = ctx.createLinearGradient(0, 0, grd_width, 0);\n        grd.addColorStop(0, \"#4ea5ff\");\n        grd.addColorStop(0.4, \"white\");\n        grd.addColorStop(0.6, \"white\");\n        grd.addColorStop(1, \"#4ea5ff\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(10, 0, grd_width, 80);\n\n    let route_texture = new CanvasTexture(ctx.canvas);\n    route_texture.offset.x = 1;\n    route_texture.colorSpace = 'srgb';\n\n        floors[floor_index].route_texture = route_texture;\n\n        return route_texture;\n    } else {\n        return undefined;\n    }\n}\n\n//TODO\nfunction animate_route_path(floors: IFloorData[]) {\n    /*floors.forEach(floor => {\n        if (floor.route_texture != null) {\n            createjs.Ticker.framerate = 60;\n            createjs.Tween.get(floor.route_texture.offset, { loop: true })\n                .to({ x: -1 }, 2000, createjs.Ease.cubicInOut)\n        }\n    });*/\n}\n\nexport function assign_route_nodes_to_stores(\n    floor_index: number,\n     floors: IFloorData[],\n     allIndexedMapObjects: Record<string, MapObj>,\n     allIndexedRetailers: Record<string, IRetailer>,\n     allNodesFloor: Record<string, number>,\n     escalator_nodes: string[],\n     find_store_node_raycaster: Raycaster,\n     role: string, //config.ROLE\n     ) {\n    const result = new Map();\n    const currentFloor = floors[floor_index];\n    if (currentFloor && currentFloor.route_points) {\n        currentFloor.route_points.forEach(point => {\n            let origin_point = new Vector3(point.node.x, point.node.y, -10);\n            let target_direction = new Vector3(0, 0, 1);\n            find_store_node_raycaster.set(origin_point, target_direction);\n            //@ts-ignore\n            var storeIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].interactiveObjs);\n            if (storeIntersects.length) {\n                //@ts-ignore\n                storeIntersects[0].object.route_node_id = point.name;\n                //@ts-ignore\n                result.set(storeIntersects[0].object.object_id, point.name);\n                if (false && role != 'PORTAL') {\n                    //@ts-ignore\n                    var retailer_id = allIndexedMapObjects[storeIntersects[0].object.object_id].retailer_id;\n                    if (retailer_id != null && allIndexedRetailers[retailer_id]) {\n                        var retailer_index = allIndexedRetailers[retailer_id].index;\n                        // ngCtrlElem.scope().allRetailers[retailer_index].has_route = true;\n                    }\n                }\n            }\n\n            var escalatorIntersects = find_store_node_raycaster.intersectObjects(floors[floor_index].escalatorsObjs as Object3D[]);\n            if (escalatorIntersects.length) {\n                const obj: IExtMesh = escalatorIntersects[0].object as IExtMesh;\n                let escalator_obj_id = obj.object_id;\n                const escalatorNodes = floors[floor_index].escalatorsNodes;\n                if (escalatorNodes) {\n                    escalatorNodes[escalator_obj_id as string] = point.name;\n                    allNodesFloor[point.name] = floor_index;\n                    escalator_nodes.push(point.name);\n                }\n            }\n        });\n    }\n    return result;\n}\n\nexport function linkFloorEscalators(floors: IFloorData[], pathFinderGraph: Graph) {\n    // console.log('linkFloorEscalators', floors)\n    if (floors.length > 1) {\n        for(let i=0; i < (floors.length-1); i++) {\n            // console.log('floors[i]',i, floors[i])\n            const floor_escalators = floors[i].escalatorsNodes;\n            // console.log('floor_escalators', floor_escalators);\n            Object.keys(floor_escalators as object).forEach(escalator => {\n                if (floors[i].escalatorsNodes?.[escalator] != null && floors[i+1].escalatorsNodes?.[escalator] != null) {\n                    // console.log('escalator, add link from floor %d to %d (and back)', i, i+1, escalator)\n                    const nodeIdFrom = floors[i].escalatorsNodes?.[escalator];\n                    const nodeIdTo = floors[i+1].escalatorsNodes?.[escalator];\n                    if (nodeIdFrom && nodeIdTo) {\n                        pathFinderGraph.addLink(nodeIdFrom, nodeIdTo, { weight: 1 });\n                        pathFinderGraph.addLink(nodeIdTo, nodeIdFrom, { weight: 1 });\n                    }\n                } else {\n                    // console.error(consolePrefix + 'Escalator route anchor point missing \"%s\"', escalator);\n                }\n            })\n        }\n    }\n}\n\nexport function make_amenity_route(kiosk_obj_name: string, amenity_type: string, scene: Scene, allIndexedMapObjects: Record<string, MapObj>, pathFinderGraph: Graph, floors: IFloorData[], escalator_nodes: string[], style: string ): Mesh[] {\n    let kiosk_obj: IExtMesh = scene.getObjectByProperty('object_id', kiosk_obj_name) as IExtMesh;\n    // if (!kiosk_obj) return [];\n    let kiosk_node_name = kiosk_obj? kiosk_obj.route_node_id : '';\n\n    var to_obj_name = null;\n\n    var shortest_distance = 9999;\n    // var map_objs = ngCtrlElem.scope().amenities[amenity_type];\n    const map_objs: string[] = [];\n    for(let key in allIndexedMapObjects) {\n        const mapObject = allIndexedMapObjects[key];\n        if (\n            mapObject.layer_type === 'amenity'\n            && mapObject.obj_type === 'special'\n            && mapObject.value === amenity_type\n        ) {\n            map_objs.push(key);\n        }\n    }\n    map_objs.forEach((amenity_obj_name: string, index: number) => {\n        let amenity_obj: IExtMesh = scene.getObjectByProperty('object_id', amenity_obj_name) as IExtMesh;\n\n    const aStarPathFinder = ngraphPath.aStar(pathFinderGraph, {\n        distance: function (fromNode, toNode, link) {\n            if (link.data) return link.data.weight;\n            return false;\n        },\n        //@ts-ignore\n        debug: true,\n    });\n\n    if (amenity_obj && kiosk_node_name) {\n        var amenity_node_name = amenity_obj.route_node_id;\n        try {\n            var route_distance = get_nodes_distance(kiosk_node_name ?? '', amenity_node_name ?? '', aStarPathFinder, pathFinderGraph);\n            if (route_distance && route_distance < shortest_distance) {\n                shortest_distance = route_distance;\n                to_obj_name = amenity_obj_name;\n            }\n        } catch(e: any) {\n            console.warn(`Amenity Path: ${e.message}`);\n        }\n    }\n    if (!kiosk_node_name && amenity_obj) {\n        to_obj_name = amenity_node_name;\n    }\n    });\n    return create_route(kiosk_obj_name, to_obj_name?? '', scene, floors, escalator_nodes, pathFinderGraph, style);\n}\n\n","import {getMeshParams} from \"./getMeshParams\";\n// import {SVGResult} from \"three/examples/jsm/loaders/SVGLoader\";\nimport { SVGResult } from \"three-stdlib\";\nimport {IConfig, IFloorData, IMeshValues, TMapMode, TRoles} from \"src/types\";\nimport {allIndexedMapObjects, allIndexedRetailers, allNodesFloor, pathFinderGraph} from \"src/globals\";\nimport {getMaterialAndGeometry} from \"./getMaterialAndGeometry\";\nimport {Raycaster} from \"three\";\nimport {assign_route_nodes_to_stores, linkFloorEscalators} from \"src/helpers/route.helpers\";\n\n// TODO: get rid of this global variable\nlet node_count = 0;\n\nexport function loadFloors(floors:IFloorData[], config:IConfig, results:SVGResult[], role?: TRoles) {\n    const GeometriesAndMaterials: Array<IMeshValues[]> = [];\n    const escalator_nodes: string[] = [];\n    results.forEach((result, floor_index) => {\n        if (result.paths && result.paths.length) {\n            const pathIds = [];\n            for (let i = 0; i < result.paths.length; i++) {\n                pathIds.push(result.paths[i]?.userData?.node.id);\n            }\n            const paths = result.paths;\n            for (let i = 0; i < paths.length; i++) {\n                const {\n                    mesh_type,\n                    layer_color,\n                    extrude,\n                    z_index,\n                    mesh_visible,\n                    mesh_draw,\n                    mesh_transparent,\n                    line_thickness,\n                    interactiveMesh,\n                    path,\n                    layer_name,\n                } = getMeshParams(\n                    paths[i],\n                    paths,\n                    floors,\n                    floor_index,\n                    config,\n                    ++node_count,\n                    //@ts-ignore\n                    allNodesFloor,\n                    pathFinderGraph\n                );\n\n                if (mesh_draw) {\n                    const meshParams = getMaterialAndGeometry(\n                        config,\n                        mesh_type,\n                        layer_name,\n                        layer_color,\n                        mesh_transparent,\n                        mesh_visible,\n                        z_index,\n                        extrude,\n                        line_thickness,\n                        floors,\n                        floor_index,\n                        allIndexedMapObjects,\n                        allIndexedRetailers,\n                        path,\n                        role\n                    );\n\n                    if (layer_name.startsWith('kiosk-')) {\n                        if (role === 'PORTAL') {\n                            // meshParams.mesh.visible = false;\n                            //@ts-ignore\n                            // meshParams.mesh.material.visible = false;\n                        }\n                    }\n\n                    if (!GeometriesAndMaterials[floor_index]) {\n                        GeometriesAndMaterials[floor_index] = [];\n                    }\n\n                    GeometriesAndMaterials[floor_index].push(meshParams);\n                }\n            }\n            const findStoreNodeRaycaster = new Raycaster();\n            const routeNodeIds = assign_route_nodes_to_stores(\n                floor_index,\n                floors,\n                allIndexedMapObjects,\n                allIndexedRetailers,\n                allNodesFloor,\n                escalator_nodes,\n                findStoreNodeRaycaster,\n                config.ROLE\n            );\n            \n            if (routeNodeIds.size && GeometriesAndMaterials[floor_index].length) {\n                for (let i = 0; i < GeometriesAndMaterials[floor_index].length; i++) {\n                    if (routeNodeIds.has(GeometriesAndMaterials[floor_index][i].mesh.object_id)) {\n                        GeometriesAndMaterials[floor_index][i].mesh.route_node_id = routeNodeIds.get(GeometriesAndMaterials[floor_index][i].mesh.object_id);\n                    }\n                }\n            }\n\n            linkFloorEscalators(floors, pathFinderGraph);\n\n        }\n    })\n\n    return { GeometriesAndMaterials, graph: pathFinderGraph, escalator_nodes};\n}","import {IJsonConfig} from \"./types\";\n\nexport const mapit2DefaultVars: Partial<IJsonConfig> = {\n    ROLE: 'WEBSITE',\n    DEVICE: 'display_app',\n    CENTER_ID: '',\n    KIOSK: '',\n    STYLE: '3D',\n    DEFAULT_SELECTED_STORE: '',\n    DEBUG: '1',\n\n    MAP_BACKGROUND_COLOR: \"FFFFFF\",\n    ACCENT_COLOR: \"4EA5FF\",\n    STORE_DEFAULT_COLOR: \"E2E2E2\",\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: \"3D3D3D\",\n    WALL_THICKNESS: '0.6',\n    WALL_COLOR: \"888888\",\n    BOUNDARY_THICKNESS: '0.8',\n    BOUNDARY_COLOR: \"888888\",\n    BASE_COLOR: \"25292B\",\n    STORE_TEXT_COLOR: \"222222\",\n    OVERLAY_COLOR: \"FFFFFF\",\n    OVERLAY_OPACITY: '0.7',\n    // AMENITIES_NAV_BG_COLOR: \"000000\",\n    // AMENITIES_NAV_ICON_COLOR: \"FFFFFF\"\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    }\n}\n\nexport const defaultVars: IJsonConfig = {\n    MAP_BACKGROUND_COLOR: '',\n    ROLE: 'WEBSITE', // PORTAL, WEBSITE, DISPLAY_APP, WP_SITE, PORTAL_KIOSK, PORTAL_RESPONSIVE\n    DEVICE: 'display_app',\n    KIOSK: '',\n    FLOORS: [],\n    KIOSKS: {},\n    CENTER_ID: null,\n    STATS: 'false',\n    STYLE: '3D', // 2D, 3D\n    DEBUG: '0',\n    ACCENT_COLOR: '4EA5FF',\n    STORE_DEFAULT_COLOR: 'E2E2E2',\n    STORE_HEIGHT: '8',\n    BIG_STORE_DEFAULT_COLOR: '3D3D3D',\n    WALL_THICKNESS: '0.6',\n    BOUNDARY_THICKNESS: '0.8',\n    WALL_COLOR: '888888',\n    BOUNDARY_COLOR: '888888',\n    BASE_COLOR: '25292B',\n    BUILDING_BASE_COLOR: 'DADADA',\n    STORE_TEXT_COLOR: '222222',\n    OVERLAY_COLOR: 'FFFFFF',\n    OVERLAY_OPACITY: '0.7',\n    CAMERA_CONTROLS_STATES: null, // all devices camera and controls states\n    ORIGINAL_CAMERA_POSITION: null, // loaded and fit to canvas loaded area without any custom positions\n    DEFAULT_CAMERA_POSITION: null, // custom default camera position\n    DEFAULT_CONTROLS_TARGET: null, // custom default controls target\n    DEFAULT_SELECTED_STORE: null,\n    CAMERA: {\n        minDistance: 400,\n        maxDistance: 3500,\n        animSpeed: 0.2,\n    },\n    KIOSK_SIZE: '15',\n    ZOOM_STEP: '100',\n};","import { allIndexedMapObjects } from \"../globals\";\nimport { DoubleSide, MeshPhongMaterial, Mesh, CanvasTexture, MeshBasicMaterial, PlaneGeometry, Vector3, BufferGeometry, Box3, Color, SphereGeometry } from \"three\";\nimport type { Object3D, Scene } from \"three\";\n// import { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry';\nimport { TextGeometry } from \"three-stdlib\";\nimport {IExtMesh} from \"../types\";\nimport {getRenderOrder} from \"../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport {hex_to_color} from \"./misc\";\nimport { IRetailer, MapObj } from \"../mapitApiTypes\";\n\n\nexport function drawTextLogoStoreOnMap(allNonIndexedMapObjects: Record<any, any>[], scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<string, IRetailer>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    for (let textLogoLayerAddedIndex = 0; textLogoLayerAddedIndex < allNonIndexedMapObjects.length; textLogoLayerAddedIndex++) {\n        addTextOrLogoOnStore(allNonIndexedMapObjects[textLogoLayerAddedIndex], scene, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors);\n    }\n}\n\nfunction addTextOrLogoOnStore(map_obj: any, scene: Scene, textLogoNamePrefix: string, allIndexedMapObjects: Record<string, MapObj>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>[]) {\n    //@ts-ignore\n    let mesh = scene.getObjectByProperty('object_id', map_obj.map_obj_name);\n    if (mesh) {\n        //@ts-ignore\n        add_store_name_logo(mesh, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floors, scene);\n    }\n}\n\nfunction deleteMeshByObjectID(object_id: string, scene: Scene, floors: Record<any, any>) {\n    if (object_id) {\n        let mesh = scene.getObjectByProperty('object_id', object_id);\n        if (mesh) {\n            //@ts-ignore\n            mesh.geometry.dispose();\n            //@ts-ignore\n            mesh.material.dispose();\n            //@ts-ignore\n            floors[mesh.floor_index].objsGroup.remove(mesh);\n        }\n    }\n}\n\nfunction getCenterPoint(mesh: Mesh) {\n    var mesh_center_point = new Vector3();\n    getMeshGroupBoundingBox(mesh).getCenter(mesh_center_point);\n    return mesh_center_point;\n}\n\nfunction getMeshSize(mesh: Mesh) {\n    var point = new Vector3();\n    //@ts-ignore\n    getMeshGroupBoundingBox(mesh).getSize(point);\n    return point;\n}\n\nexport function getMeshGroupBoundingBox(mesh: Mesh | Array<Mesh>) {\n    if (!Array.isArray(mesh)) {\n        mesh = [mesh];\n    }\n    const box = mesh.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        //@ts-ignore\n        box.union(obj.geometry.boundingBox);\n        return box;\n    }, new Box3());\n    return box;\n}\n\nfunction layer_text_logo_position(mesh: Mesh, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    const object_id = (mesh as IExtMesh).object_id;\n    if (!object_id) return;\n    return layer_text_logo_position_by_id(object_id, newMeshPos, mesh_size, newMesh, allIndexedMapObjects);\n}\nexport function layer_text_logo_position_by_id(object_id: string, newMeshPos: Vector3, mesh_size: Vector3, newMesh: Mesh, allIndexedMapObjects: Record<any, any>) {\n    let map_obj = allIndexedMapObjects[object_id];\n\n    if (!map_obj) {\n        map_obj = {\n            offsetX: \"0\",\n            offsetY: \"0\",\n            rotate: \"0\",\n        }\n    }\n\n    let offsetX = parseInt(map_obj.offsetX);\n    let offsetY = parseInt(map_obj.offsetY);\n\n    newMeshPos.z = -mesh_size.z;\n\n    //@ts-ignore\n    newMesh.obj_angle = parseInt(map_obj.rotate); //-180 to 180\n    //@ts-ignore\n    newMesh.rotateZ(newMesh.obj_angle * Math.PI / 180);\n\n    newMesh.scale.y *= -1;\n\n    newMeshPos.x += offsetX;\n    newMeshPos.y += offsetY;\n\n    newMesh.position.set(newMeshPos.x, newMeshPos.y, newMeshPos.z + 1);\n}\n\n/*function add_store_name_logo(mesh: Mesh, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, scene: Scene) {\n    //@ts-ignore\n    var new_object_id = textLogoNamePrefix + mesh.object_id;\n    deleteMeshByObjectID(new_object_id, scene, floors);\n\n    var mesh_center_point = getCenterPoint(mesh);\n    var mesh_size = getMeshSize(mesh);\n    //@ts-ignore\n    let map_obj = allIndexedMapObjects[mesh.object_id];\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            return false;\n        }\n\n        let text_color = config.STORE_TEXT_COLOR;\n        if (map_obj.text_color != null) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material);\n        layer_text_logo_position(mesh, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        //@ts-ignore\n        textMesh.object_id = new_object_id;\n        //@ts-ignore\n        textMesh.floor_index = mesh.floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        //@ts-ignore\n        floors[mesh.floor_index].objsGroup.add(textMesh);\n        scene.add(textMesh);\n        console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        \n    }\n\n     else if (\n        map_obj.layer_type === 'retail_logo' ||\n        map_obj.layer_type === 'custom_image' ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'kiosk' && map_obj.kiosk_id !== null) ||\n        (map_obj.obj_type === 'special' && map_obj.layer_type === 'amenity' && map_obj.value !== '')\n    ) {\n        //@ts-ignore\n        getImageLogo(allIndexedRetailers, map_obj, mesh, mesh_center_point, mesh_size);\n    }\n}*/\nexport const getImage = (map_obj: Record<string, any>, retailer?: IRetailer): HTMLImageElement | null => {\n        const img = new Image();\n        img.crossOrigin = 'Anonymous';\n        if (map_obj.obj_type == 'retailer') {\n            if (retailer) {\n                img.src = retailer.logo;\n            } else {\n                console.error('retailer not found');\n                return null;\n            }\n        } else if (map_obj.obj_type == 'special') {\n    \n            let svg_image_name = map_obj.value;\n            if (map_obj.layer_type == 'kiosk') svg_image_name = 'kiosk';\n            if (map_obj.layer_type == 'escalator') svg_image_name = 'escalator';\n            if (svg_image_name) {\n                let svg_color = '222222';\n                if (map_obj.text_color != null) {\n                    svg_color = map_obj.text_color;\n                }\n    \n                const svg_block = document.getElementById('map-special-svg-' + svg_image_name)\n                if (!svg_block) {\n                    console.error('svg_block not found', svg_image_name);\n                    return null;\n                }\n                const svg_element = svg_block.querySelector(\"svg\");\n                if (!svg_element) {\n                    console.error('svg_element not found', svg_image_name);\n                    return null;\n                }\n    \n                const svgColoredParts = svg_element.querySelectorAll('[fill]');\n                svgColoredParts.forEach((svgColoredPart) => {\n                    svgColoredPart.setAttribute('fill', '#' + svg_color);\n                })\n    \n                const svgData = (new XMLSerializer()).serializeToString(svg_element);\n                img.src = \"data:image/svg+xml;base64,\" + window.btoa(unescape(encodeURIComponent(svgData)));\n            }\n    \n        } else {\n            if (map_obj?.custom_image?.startsWith('http')) {\n                img.src = map_obj.custom_image;\n            } else {\n                return null;\n            }\n        }\n\n        return img;\n}\n\nexport const processImage = (img: HTMLImageElement, map_obj: Record<string, any>, afterOnload: (geometry: PlaneGeometry, material: MeshBasicMaterial) => void) => {\n    img.onload = function () {\n        const c = document.createElement(\"canvas\");\n        const ctx = c.getContext(\"2d\");\n\n        c.width = img.width;\n        c.height = img.height;\n\n        ctx?.drawImage(img, 0, 0);\n\n        let texture = new CanvasTexture(c);\n        texture.colorSpace = 'srgb'\n\n        const geometry = new PlaneGeometry(map_obj.size, map_obj.size * img.height / img.width);\n        const material = new MeshBasicMaterial({\n            map: texture,\n            transparent: true,\n            side: DoubleSide,\n            depthTest: false,\n            depthWrite: false,\n        });\n\n        if (map_obj.layer_type === 'kiosk') {\n            material.visible = false;\n        }\n        \n        afterOnload(geometry, material);\n    };\n}\n\nfunction getImageLogo(allIndexedRetailers: Record<string, any>, map_obj: Record<string, any>, mesh: BufferGeometry,object_id: string, new_object_id: string | null, mesh_center_point: Vector3, mesh_size: Vector3, floors: any, handleAsync: (meshLogo: {storeLogo: Object3D}) => void): void {\n    const img = getImage(map_obj, allIndexedRetailers[map_obj.retailer_id]);\n\n    if (img === null) return;\n\n    processImage(img, map_obj, (geometry, material) => {\n        const logoMesh = new Mesh(geometry, material) as IExtMesh;\n\n        // @ts-ignore\n        const floor_index = mesh.floor_index;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, logoMesh, allIndexedMapObjects);\n        logoMesh.object_id = new_object_id;\n        logoMesh.floor_index = floor_index;\n        logoMesh.renderOrder = getRenderOrder('layer-image');\n        floors[floor_index]?.objsGroup.add(logoMesh);\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        logoMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(logoMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        //@ts-ignore\n        BoundingSphereMesh.position.copy(logoMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        \n        handleAsync({storeLogo: BoundingSphereMesh});\n        */\n        handleAsync({storeLogo: logoMesh});\n    })\n\n}\n\n\n\nexport function get_store_name_logo_geo(geometry: BufferGeometry, object_id:string, floor_index: number, textLogoNamePrefix: string, allIndexedMapObjects: Record<any, any>, allIndexedRetailers: Record<any, any>, config: Record<any, any>, myFont: any, floors: Record<any, any>, handleAsync: (meshLogo: any) => void): {textMesh: IExtMesh} | null | false {\n    const new_object_id = textLogoNamePrefix + object_id;\n    // deleteMeshByObjectID(new_object_id, scene, floors);\n    let result = null;\n\n    if (!geometry.boundingBox) {\n        geometry.computeBoundingBox();\n    }\n    if (!geometry.boundingBox) {\n        return null;\n    }\n\n    const boundingBox = geometry.boundingBox;\n\n    const mesh_center_point = new Vector3();\n    boundingBox.getCenter(mesh_center_point);\n\n    const mesh_size = new Vector3();\n    boundingBox.getSize(mesh_size);\n\n    //@ts-ignore\n    let map_obj: MapObj = allIndexedMapObjects[object_id]? allIndexedMapObjects[object_id] : {layer_type: object_id.startsWith('escalator')? 'escalator' : 'custom_text', 'custom_text': '', 'size': 8};\n\n    if (['retail_name', 'retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n        let text = '';\n        if (map_obj.layer_type == 'retail_name' && map_obj.retailer_id && allIndexedRetailers[map_obj.retailer_id]) {\n            text = allIndexedRetailers[map_obj.retailer_id].retail_name;\n        } else if (['retail_text', 'custom_text'].includes(map_obj.layer_type)) {\n            text = map_obj.custom_text;\n        } else {\n            text = '';\n        }\n\n        let text_color = hex_to_color(config.STORE_TEXT_COLOR);\n        if (map_obj.text_color) {\n            text_color = hex_to_color(map_obj.text_color);\n        }\n\n        const material_settings = {\n            color: text_color,\n            transparent: true,\n            side: DoubleSide,\n            depthWrite: false,\n            depthTest: false,\n        };\n        let text_material = new MeshPhongMaterial(material_settings);\n        let text_geometry = new TextGeometry(text, {\n            font: myFont,\n            size: parseInt(map_obj.size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n\n        const textMesh = new Mesh(text_geometry, text_material) as IExtMesh;\n        textMesh.userData.font = myFont;\n        layer_text_logo_position_by_id(object_id, mesh_center_point, mesh_size, textMesh, allIndexedMapObjects);\n        textMesh.object_id = new_object_id;\n        textMesh.floor_index = floor_index;\n        textMesh.renderOrder = getRenderOrder('layer-text');\n        if (map_obj.layer_type === 'retail_name') {\n            textMesh.userData.retail_name = text;\n        }\n\n        floors[floor_index].objsGroup.add(textMesh);\n\n        //scene.add(textMesh);\n        //console.debug({UpdateTexts: scene});\n\n        // Show bounding sphere\n\n        /*const wireframeMaterial = new MeshBasicMaterial({\n            color: 0x0000ff,\n            wireframe: true,\n            transparent: true,\n            opacity: 0.25,\n        });\n        textMesh.geometry.computeBoundingSphere();\n        const BoundingSphereMesh = new Mesh(\n            new SphereGeometry(textMesh.geometry.boundingSphere?.radius || 1, 32, 32),\n            wireframeMaterial\n        )\n        @ts-ignore\n        BoundingSphereMesh.position.copy(textMesh.geometry.boundingSphere.center || [0, 0, 0]);\n        scene.add(BoundingSphereMesh);\n        */\n        result = { textMesh };\n    }\n\n    else if (\n       map_obj.layer_type == 'retail_logo' ||\n       map_obj.layer_type == 'custom_image' ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'kiosk' && map_obj.kiosk_id != null) ||\n       (map_obj.obj_type == 'special' && map_obj.layer_type == 'amenity' && map_obj.value != '')\n       || (map_obj.layer_type == 'escalator')\n   ) {\n        getImageLogo(allIndexedRetailers, map_obj, geometry, object_id, new_object_id, mesh_center_point, mesh_size, floors, handleAsync);\n\n\n   }\n   return result;\n}","import {\n    Group,\n    Scene,\n    Object3D,\n    Mesh,\n    BufferGeometry,\n    Color,\n} from \"three\";\nimport { useLoader } from \"@react-three/fiber\";\nimport { SVGLoader } from \"three/examples/jsm/loaders/SVGLoader.js\";\nimport {useCallback, useEffect, useMemo, useState} from \"react\";\nimport createGraph, { Graph } from \"ngraph.graph\";\nimport {loadFloors} from \"./loadFloors\";\nimport type {IConfig, IExtMesh, IFloorData, IMeshParams, IMeshValues, TMapMode, TRoles} from \"../../types\";\nimport {defaultVars, mapit2DefaultVars} from \"../../defaults\";\nimport {allIndexedMapObjects, allIndexedRetailers} from \"../../globals\";\nimport {drawTextLogoStoreOnMap, get_store_name_logo_geo} from \"src/helpers/draw.logo.helpers\";\nimport { FontLoader, Font } from \"three-stdlib\";\nimport { IJsonConfig, IMeshParamsTmp} from \"../../types\";\nimport {hex_to_color} from \"src/helpers/misc\";\nimport {Kiosk, Floor, MapIt2Response, MapObj} from \"../../mapitApiTypes\";\nimport { EventedType } from \"ngraph.events\";\nimport fontData from './optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\n\n// if (!isDefined(typeof MAPIT2)) window.MAPIT2 = { ...defaultVars };\n// window.MAPIT2 = { ...defaultVars, ...MAPIT2 };\n\nexport const textLogoNamePrefix = 'custom-layer-';\n\nconst config: IJsonConfig = { ...defaultVars, ...mapit2DefaultVars}\n\nconst defaultMapObjValues = {\n\tid: null,\n\tcenter_id: config.CENTER_ID,\n\tretailer_id: null,\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: 8,\n\trotate: 0,\n\toffsetX: 0,\n\toffsetY: 0,\n} as Record<string, string | number | null| undefined>;\n\n\nlet allNonIndexedMapObjects: MapObj[] = [];\n\nconst extraMapObjects = []\nlet activeMapObjectName = null;\nconst floorsData:IFloorData[] = [];\nconst floors = [] as Floor[];\nlet floors_loaded = 0;\nlet MEDIA_STORAGE_URI: string = '';\n\nfunction select<T>(...values: T[]) {\n    return values.find(value => value !== '' && value != null) || values.at(-1);\n}\n\nconst clearObject = (obj: Record<string, MapObj>) => {\n\tfor (let key in obj) {\n\t\tdelete obj[key];\n\t}\n}\n\nfunction makeIndexedMapObjects(map_objs: MapObj[]) {\n\tclearObject(allIndexedMapObjects);\n\n    allNonIndexedMapObjects = map_objs;\n\n    for (let i = 0; i < map_objs.length; i++) {\n        const obj = map_objs[i];\n        allIndexedMapObjects[obj.map_obj_name] = obj;\n        for (let key in defaultMapObjValues) {\n            const value = defaultMapObjValues[key];\n            //@ts-ignore\n            if (value != null && obj[key] == null) {\n                //@ts-ignore\n                allIndexedMapObjects[obj.map_obj_name][key] = value;\n            }\n        }\n    }\n}\n\nconst init = (config: IJsonConfig, floors:IFloorData[], response: MapIt2Response) => {\n    const KIOSKS:Record<string, Kiosk> = {};\n\n    response.kiosks.forEach((kiosk) => {\n        const mapObj = response.map_objs.find(item => item.kiosk_id === kiosk.id);\n        if (mapObj) {\n            kiosk.map_obj_name = mapObj.map_obj_name;\n        }\n        KIOSKS[kiosk.id] = kiosk;\n    });\n\n\n    for (let index in response.retailers) {\n        const retailer = response.retailers[index];\n        allIndexedRetailers[retailer.id] = retailer;\n        allIndexedRetailers[retailer.id].index = index;\n    }\n\n    // ngCtrlElem.scope().amenitiesNav.bg_color = response.settings.AMENITIES_NAV_BG_COLOR;\n    // ngCtrlElem.scope().amenitiesNav.icon_color = response.settings.AMENITIES_NAV_ICON_COLOR;\n\n    makeIndexedMapObjects(response.map_objs);\n\n    floors.length = 0;\n    response.floors.forEach((value: IFloorData, index: number) => {\n        const objsGroup = new Group();\n        objsGroup.scale.y *= -1;\n        objsGroup.lookAt(0, 1, 0);\n\n        floors.push({\n            id: value.id,\n            // svg_map: BASE_URL + 'data/mapit2/' + value.svg,\n            svg_map: MEDIA_STORAGE_URI + '/' + value.svg,\n            title: value.title,\n            objsGroup: objsGroup,\n            interactiveObjs: [],\n            escalatorsObjs: [],\n            escalatorsNodes: {},\n            escalatorMeshes: [],\n            route_points: [],\n            route_tube: undefined,\n            route_texture: null,\n            routeMeshes: [],\n            route_active: false,\n        });\n    });\n    const DEFAULT_CAMERA_FOV = 75;\n    const WP_SITE_CAMERA_FOV = 30;\n    const DEFAULT_CAMERA_FAR = 10000;\n    config.CAMERA.far = DEFAULT_CAMERA_FAR;\n    config.CAMERA.fov = DEFAULT_CAMERA_FOV;\n    const fovCorrection = DEFAULT_CAMERA_FOV / config.CAMERA.fov;\n    config.CAMERA.maxDistance *= fovCorrection;\n    config.CAMERA.far *= fovCorrection;\n\n    const processedConfig: IConfig = {\n        ACCENT_COLOR: hex_to_color(response.settings.ACCENT_COLOR ? response.settings.ACCENT_COLOR : config.ACCENT_COLOR),\n        BASE_COLOR: hex_to_color(response.settings.BASE_COLOR ? response.settings.BASE_COLOR : config.BASE_COLOR),\n        BIG_STORE_DEFAULT_COLOR: hex_to_color(response.settings.BIG_STORE_DEFAULT_COLOR ? response.settings.BIG_STORE_DEFAULT_COLOR : config.BIG_STORE_DEFAULT_COLOR),\n        BOUNDARY_COLOR: hex_to_color(response.settings.BOUNDARY_COLOR ? response.settings.BOUNDARY_COLOR : config.BOUNDARY_COLOR),\n        BOUNDARY_THICKNESS: parseFloat(response.settings.BOUNDARY_THICKNESS ? response.settings.BOUNDARY_THICKNESS : config.BOUNDARY_THICKNESS),\n        BUILDING_BASE_COLOR: hex_to_color(config.BUILDING_BASE_COLOR),\n        CAMERA: {\n            ...config.CAMERA,\n            minDistance: parseInt(response.settings.CAMERA_MIN_DISTANCE)? parseInt(response.settings.CAMERA_MIN_DISTANCE) : config.CAMERA.minDistance,\n            maxDistance: parseInt(response.settings.CAMERA_MAX_DISTANCE)? parseInt(response.settings.CAMERA_MAX_DISTANCE) : config.CAMERA.maxDistance,\n        },\n        CAMERA_CONTROLS_STATES: response.camera_controls_states[config.DEVICE],\n        CENTER_ID: config.CENTER_ID,\n        CONTROLS: null,\n        DEBUG: config.DEBUG, // config.DEBUG === 'true' || config.DEBUG === '1'\n        DEFAULT_CAMERA_POSITION: config.DEFAULT_CAMERA_POSITION,\n        DEFAULT_CONTROLS_TARGET: config.DEFAULT_CONTROLS_TARGET,\n        DEFAULT_SELECTED_STORE: config.DEFAULT_SELECTED_STORE,\n        DEVICE: config.DEVICE,\n        KIOSK: config.KIOSK? config.KIOSK : '',\n        KIOSKS: KIOSKS,\n        MAP_BACKGROUND_COLOR: hex_to_color(response.settings.MAP_BACKGROUND_COLOR ? response.settings.MAP_BACKGROUND_COLOR : config.MAP_BACKGROUND_COLOR),\n        ORIGINAL_CAMERA_POSITION: config.ORIGINAL_CAMERA_POSITION,\n        OVERLAY_COLOR: hex_to_color(response.settings.OVERLAY_COLOR ? response.settings.OVERLAY_COLOR : config.OVERLAY_COLOR),\n        OVERLAY_OPACITY: parseFloat(response.settings.OVERLAY_OPACITY ? response.settings.OVERLAY_OPACITY : config.OVERLAY_OPACITY),\n        ROLE: config.ROLE,\n        SELECTED_RETAILER_SLUG: config.SELECTED_RETAILER_SLUG,\n        STATS: config.STATS === 'true' || config.STATS === '1',\n        STORE_DEFAULT_COLOR: hex_to_color(response.settings.STORE_DEFAULT_COLOR ? response.settings.STORE_DEFAULT_COLOR : config.STORE_DEFAULT_COLOR),\n        STORE_HEIGHT: response.settings.STORE_HEIGHT? response.settings.STORE_HEIGHT : config.STORE_HEIGHT? config.STORE_HEIGHT : '8',\n        STORE_TEXT_COLOR: hex_to_color(response.settings.STORE_TEXT_COLOR ? response.settings.STORE_TEXT_COLOR : config.STORE_TEXT_COLOR),\n        STYLE: response.settings.STYLE? response.settings.STYLE : config.STYLE? config.STYLE : '3D',\n        WALL_COLOR: hex_to_color(response.settings.WALL_COLOR ? response.settings.WALL_COLOR : config.WALL_COLOR),\n        WALL_THICKNESS: parseFloat(response.settings.WALL_THICKNESS ? response.settings.WALL_THICKNESS : config.WALL_THICKNESS),\n        FLOORS: response.floors,\n        AMENITIES: response.amenities,\n        RETAILERS: response.retailers,\n        AMENITIES_NAV_BG_COLOR: hex_to_color(response.settings.AMENITIES_NAV_BG_COLOR),\n        AMENITIES_NAV_ICON_COLOR: hex_to_color(response.settings.AMENITIES_NAV_ICON_COLOR),\n        KIOSK_SIZE: response.settings.KIOSK_SIZE? response.settings.KIOSK_SIZE : config.KIOSK_SIZE,\n        ZOOM_STEP: response.settings.ZOOM_STEP? response.settings.ZOOM_STEP : config.ZOOM_STEP,\n    };\n\n    // AMENITIES_NAV_BG_COLOR: string;\n    // AMENITIES_NAV_ICON_COLOR: string;\n\n    return processedConfig;\n}\n\n/*function get_node_name(vertex: any, floor_index: any) {\n    let exists = false;\n    let node_name = null;\n    for (let i = 0; i < floors[floor_index].route_points.length; i++) {\n        if (vertex.x == floors[floor_index].route_points[i].node.x && vertex.y === floors[floor_index].route_points[i].node.y) {\n            exists = true;\n            node_name = floors[floor_index].route_points[i].name;\n            break;\n        }\n    }\n    if (!exists) {\n        node_name = next_node_name();\n        floors[floor_index].route_points.push({\n            name: node_name,\n            node: new Vector3(vertex.x, vertex.y, 1)\n        });\n        //@ts-ignore\n        allNodesFloor[node_name] = floor_index;\n\n        // draw_points([{ x: vertex.x, y: vertex.y }]);\n    }\n    return node_name;\n}*/\n\n/*function next_node_name() {\n    node_count++;\n    return 'node-' + node_count;\n}*/\n\n\nconst useMeshFloors = (data: MapIt2Response|null, jsonConfig?: Partial<IJsonConfig>, role?: TRoles, mediaStorageURI?: string): IMeshParamsTmp => {\n    const [meshParams, setMeshParams] = useState<IMeshValues[][]>([]);\n    const [textParams, setTextParams] = useState<Array<{textMesh:IExtMesh}[]>>([]);\n    const [storeLogos, setStoreLogos] = useState<{storeLogo: Mesh}[][]>([]);\n    const [pathFinderGraph, setPathFinderGraph] = useState<Graph & EventedType>();\n    const [escalatorNodes, setEscalatorNodes] = useState<string[]>([]);\n    const [urls, setUrls] = useState<string[]>([]);\n    const [ processedConfig, setProcessedConfig ] = useState<IConfig|null>(null);\n    let result = useLoader(SVGLoader, urls);\n\n    MEDIA_STORAGE_URI = useMemo(() => {\n        const r = /\\/$/;\n        if (mediaStorageURI) {\n            return mediaStorageURI?.replace(r, '');\n        }\n\n        return '';\n\n    }, [mediaStorageURI])\n\n    const consolePrefix = 'MAPIT2';\n    // const myFont = useLoader(FontLoader, 'assets/threejs/threejs/examples/fonts/optimer_regular.typeface.json')\n    const myFont = useFont(fontData as unknown as FontData);\n\n    // const getWallShape = (...params: any): Shape | Shape[] => {\n    //     return []\n    // }\n\n\n    const handleAsyncStoreLogos = useCallback((floorIndex: number) => ((meshLogo: {storeLogo: Mesh}) => {\n        setStoreLogos((prevLogos) => {\n            // console.debug({floorIndex});\n            if (prevLogos[floorIndex]) {\n                prevLogos[floorIndex].push({...meshLogo});\n            } else {\n                prevLogos[floorIndex] = [{...meshLogo}];\n            }\n            // console.debug({prevLogos});\n            return [...prevLogos];\n        });\n    }), [])\n\n\n    useEffect(() => {\n        if (!data) return;\n\n\n        // console.log('useMeshFloors[data]', {data})\n\n        const processedConfig = init(jsonConfig ? {...config, ...jsonConfig} : config, floorsData, data as MapIt2Response);\n        const values: string[] = [];\n        processedConfig.FLOORS.forEach((value) => {\n            // values.push(`${MEDIA_STORAGE_URI}/${value.svg}`);\n            //@ts-ignore\n            values.push(`${value.svg}`);\n        });\n\n        setProcessedConfig(processedConfig);\n        setUrls([...values]);\n    // }, [JSON.stringify(data)]);\n    return () => {\n        if (meshParams) {\n            meshParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.mesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (textParams) {\n            textParams.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.textMesh.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        if (storeLogos) {\n            storeLogos.forEach(floor => {\n                if (floor) {\n                    floor.forEach(value => {\n                        value.storeLogo.removeFromParent();\n                    })\n                }\n            })\n        }\n\n        setMeshParams([]);\n        setTextParams([]);\n        setStoreLogos([]);\n    }\n    }, [data]);\n\n    useEffect(() => {\n        if (!processedConfig || !urls.length || !myFont || !result) return;\n\n        const { GeometriesAndMaterials, graph, escalator_nodes } = loadFloors(floorsData, processedConfig, result, role);\n        const TextsAndLogos:Array<{textMesh:IExtMesh}[]> = [];\n        allNonIndexedMapObjects.forEach((params) => {\n            let values: IMeshValues | undefined;\n            for (let i = 0; i < GeometriesAndMaterials.length; i++) {\n                //@ts-ignore\n                values = GeometriesAndMaterials[i].find(item => item.object_id === params.map_obj_name);\n                if (values !== undefined) {\n                    break;\n                } \n            }\n            if (!values) return null;\n            const textParams = get_store_name_logo_geo(values.geometry, params.map_obj_name, values.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(values.floor_index));\n            if (textParams) {\n                if (!TextsAndLogos[values.floor_index]) {\n                    TextsAndLogos[values.floor_index] = [];\n                }\n                TextsAndLogos[values.floor_index].push(textParams);\n            }\n        })\n        const GAMCount = GeometriesAndMaterials.reduce((acc, item) => {\n            return (acc + item.length);\n        }, 0);\n        const countNonIndexedObjs = GAMCount - allNonIndexedMapObjects.length;\n        if (countNonIndexedObjs !== 0) {\n            const mapObjNames = new Set<string>();\n            allNonIndexedMapObjects.forEach((item) => {\n                mapObjNames.add(item.map_obj_name);\n            });\n            GeometriesAndMaterials.forEach((items) => {\n                items.forEach(item => {\n                    if (!mapObjNames.has(item.object_id)) {\n                        const textParams = get_store_name_logo_geo(item.geometry, item.object_id, item.floor_index, textLogoNamePrefix, allIndexedMapObjects, allIndexedRetailers, config, myFont, floorsData, handleAsyncStoreLogos(item.floor_index));\n                        if (textParams) {\n                            if (!TextsAndLogos[item.floor_index]) {\n                                TextsAndLogos[item.floor_index] = [];\n                            }\n                            TextsAndLogos[item.floor_index].push(textParams);\n                        }\n                    }\n                })\n            });\n        }\n        setMeshParams(GeometriesAndMaterials);\n        setTextParams(TextsAndLogos);\n        setPathFinderGraph(graph);\n        setEscalatorNodes([...escalator_nodes]);\n\n    }, [processedConfig, urls, result, myFont]);\n\n    return useMemo(() => {\n        return {\n            config: processedConfig,\n            meshParams,\n            textParams,\n            storeLogos,\n            floors: floorsData,\n            pathFinderGraph,\n            escalator_nodes: escalatorNodes,\n        }\n    }, [ processedConfig, meshParams, textParams, storeLogos, floorsData, pathFinderGraph, escalatorNodes ])\n}\n\nexport default useMeshFloors","import {useThree} from \"@react-three/fiber\";\nimport {Color} from \"three\";\n\ninterface IScenePropertiesProps {\n    background?: Color | string;\n}\n\nexport const SceneProperties = (params:IScenePropertiesProps) => {\n    const { scene } = useThree();\n    if (params.background) {\n        scene.background = new Color(params.background);\n    }\n    return null;\n}","import {useThree} from \"@react-three/fiber\";\nimport { ICameraPropertiesProps } from \"src/types\";\nimport {PerspectiveCamera} from \"three\";\n\nexport const CameraProperties = (props:ICameraPropertiesProps) => {\n    const { camera } = useThree();\n\n    const cameraProjectionNeedsUpdate = props.far || props.near || props.fov;\n    if (props.far) {\n        camera.far = props.far;\n    }\n    if (props.near) {\n        camera.near = props.near;\n    }\n\n    if (camera instanceof PerspectiveCamera) {\n        if (props.fov) {\n            camera.fov = props.fov;\n        }\n    }\n\n    if (cameraProjectionNeedsUpdate) {\n        camera.updateProjectionMatrix();\n    }\n\n    return null;\n}","export function easeInOutCubic(x: number): number {\n    return x < 0.5 ? 4 * x * x * x : 1 - Math.pow(-2 * x + 2, 3) / 2;\n}","import React, {useEffect, useRef} from \"react\";\nimport type {Mesh} from \"three\";\nimport {easeInOutCubic} from \"../../helpers/easing\";\nimport {MeshBasicMaterial} from \"three\";\nimport {useFrame} from \"@react-three/fiber\";\n\ninterface IRouteTubeProps {\n    mesh?: Mesh;\n}\n\nexport function RouteTube({mesh}: IRouteTubeProps) {\n    const animateRoute = useRef<Function | null>(null);\n\n    useEffect(() => {\n        if (!mesh) {\n            return;\n        }\n\n        if (!mesh.geometry.index?.count) {\n            console.log('NO ROUTE TUBE GEOMETRY INDEX COUNT');\n            return;\n        }\n\n        if (!(mesh.material instanceof MeshBasicMaterial)) {\n            return;\n        }\n        if (!mesh.material.map) {\n            console.log('NO ROUTE TEXTURE');\n            return;\n        }\n\n        mesh.geometry.setDrawRange(0, 0);\n\n        const end = mesh.geometry.index.count;\n        const animateTube = (\n            () => {\n                const length = 1000;\n                const startTime = performance.now();\n                return () => {\n                    const progress = (performance.now() - startTime) / length;\n                    const drawRangeEnd = Math.floor(easeInOutCubic(progress) * end);\n\n                    if (progress >= 1) {\n                        animateRoute.current = animateTexture;\n                    }\n\n                    mesh.geometry.setDrawRange(0, drawRangeEnd);\n                }\n            }\n        )();\n\n        const animateTexture = (() => {\n            if (!(mesh.material instanceof MeshBasicMaterial)) {\n                return null;\n            }\n            if (!mesh.material.map) {\n                return null;\n            }\n            const offsetVector = mesh.material.map.offset;\n            const length = 2000;\n            const progressStart = 0.1;\n            const progressLength = 1 + progressStart;\n            const startTime = performance.now();\n            return () => {\n                const progress = (performance.now() - startTime) / length % 1;\n                offsetVector.x = progressStart - progressLength * easeInOutCubic(progress);\n            }\n        })();\n\n        animateRoute.current = animateTube;\n\n        return () => {\n            animateRoute.current = null;\n            mesh.removeFromParent();\n            if (mesh.material instanceof MeshBasicMaterial) {\n                mesh.material.dispose();\n            }\n            if (mesh.geometry) {\n                mesh.geometry.dispose();\n            }\n        }\n\n    }, [mesh]);\n\n    useFrame(() => {\n        if (animateRoute.current) {\n            try {\n                animateRoute.current();\n            } catch( e: any ) {\n                console.error(`ERROR ANIMATE ROUTE: ${e.message}`)\n                animateRoute.current = null;\n            }\n        }\n    });\n\n    if (!mesh) return null;\n    return <primitive object={mesh}></primitive>\n}","import { createContext, useContext, useEffect, useState } from \"react\"\nimport { Object3D } from \"three\";\nimport { IConfig, IExtMesh } from \"src/types\";\n\n\nexport type TMeshObjectContext = {\n    MeshObject: IExtMesh[] | null;\n    SetMeshObject: React.Dispatch<React.SetStateAction<IExtMesh[] | null>> | Function;\n    cameraLength: number | undefined,\n    setCameraLength: React.Dispatch<React.SetStateAction<number | undefined>> | Function;\n    config: IConfig | undefined,\n    setConfig: React.Dispatch<React.SetStateAction<IConfig | undefined>> | Function;\n}\n\nconst MeshObjectContext = createContext<TMeshObjectContext>({\n    MeshObject: null,\n    SetMeshObject: () => null,\n    cameraLength: undefined,\n    setCameraLength: () => null,\n    config: undefined,\n    setConfig: () => null,\n});\n\nexport default function MeshObjectContextProvider({children}: {children: React.ReactNode}) {\n    const [MeshObject, SetMeshObject] = useState<IExtMesh[] | null>(null);\n    const [config, setConfig] = useState<IConfig | undefined>();\n    const [cameraLength, setCameraLength] = useState<number | undefined>();\n\n    return (\n        <MeshObjectContext.Provider\n            value={{\n                MeshObject,\n                SetMeshObject,\n                cameraLength,\n                setCameraLength,\n                config,\n                setConfig\n            }}\n        >\n            {children}\n        </MeshObjectContext.Provider>\n    )\n}\n\nexport function useMeshObjectContext() {\n    const context = useContext(MeshObjectContext);\n\n    if (context === undefined) {\n        throw new Error(\"useMeshObjectContext must be used within MeshObjectContextProvider\");\n    }\n\n    return context;\n}\n","import React, {useContext, useEffect, useState} from \"react\";\nimport styles from '../../MapBox.module.css';\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { IConfig } from \"src/types\";\n\nexport const MapCenterMarker = ({size, lockSize, blink, cameraLength, config}: {size: number, lockSize?: boolean, blink: boolean, cameraLength: number | undefined, config: IConfig | undefined}) => {\n    const [sizeFactor, setSizeFactor] = useState<number>(1) // 1 - keep original size value\n    const kioskElementRef = React.useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!lockSize && config !== undefined && cameraLength !== undefined) {\n            setSizeFactor(1 - (cameraLength - config.CAMERA.minDistance) / (config.CAMERA.maxDistance - config.CAMERA.minDistance))\n        }\n    }, [lockSize, config, cameraLength])\n\n    useEffect(() => {\n        if (lockSize) {\n            setSizeFactor(1);\n        }\n    }, [lockSize]);\n\n    // todo figure out better way\n    useEffect(() => {\n        if (!kioskElementRef.current) return;\n        const kioskElement = kioskElementRef.current;\n        const svgOrigin = document.querySelector('#map-special-svg-kiosk svg');\n        let svgClone:Node;\n        if (svgOrigin) {\n            svgClone = svgOrigin.cloneNode(true);\n            kioskElement.appendChild(svgClone);\n        }\n\n        return () => {\n            if (svgClone) {\n                kioskElement.removeChild(svgClone);\n            }\n        }\n    }, []);\n\n    return <>\n        <div className={styles['kioskMarker']} ref={kioskElementRef} style={{width: sizeFactor*size*2, height: sizeFactor*size*10}}></div>\n        {blink? <div className={styles['mapCenterMarker']}></div> : null}\n    </>\n}","import {IExtMesh, IMeshParams, IMeshValues, TRoles} from \"../../types\";\nimport {ThreeEvent, context, useThree} from \"@react-three/fiber\";\nimport React, {MouseEventHandler, useEffect} from \"react\";\nimport {Mesh, MeshLambertMaterial, MeshStandardMaterial, RGB, BoxHelper} from \"three\";\nimport {RouteTube} from \"./RouteTube\";\nimport {Html} from \"@react-three/drei\";\nimport styles from '../../MapBox.module.css';\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\n\ninterface IMapProps {\n    floorIndex: number,\n    meshFloors: IMeshParams;\n    currKioskObj: Mesh | null;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    routeTube?: Mesh;\n    visible: boolean,\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>;\n}\n\nconst getDarkerColor = (color: RGB) => {\n    if (color) {\n        var newColor = { ...color }\n        newColor.r = color.r * 0.92;\n        newColor.g = color.g * 0.92;\n        newColor.b = color.b * 0.92;\n        return newColor;\n    }\n    return null;\n}\n\nfunction MapObject(props: { type: string, mesh:IExtMesh, visible:boolean, params?:IMeshValues}) {\n    const [ update, setUpdate ] = React.useState(false);\n    const { type, mesh, params } = props;\n    const { camera } = useThree();\n    React.useEffect(() => {\n        mesh.userData.triggerUpdate = () => {\n            setUpdate((value) => !value);\n        };\n    }, [mesh.userData, setUpdate]);\n\n    const {config, cameraLength} = useMeshObjectContext();\n\n    // console.warn({update});\n    switch (type) {\n        case 'storeLogo':\n            if (mesh.userData.kioskConfig) {\n                return <primitive key={mesh.uuid} object={mesh}>\n                    {mesh.userData.kioskConfig ? <Html style={{ pointerEvents: 'none' }} distanceFactor={undefined}><MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /></Html> : null}\n                </primitive>\n            }\n            return <primitive key={mesh.uuid} object={mesh}>\n                {mesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={mesh.userData.distanceFactor}>{mesh.userData.htmlContent}</Html> : null}\n            </primitive>\n        case 'kiosk': \n            return <>\n                {mesh.userData.kioskConfig ? <Html style={{ pointerEvents: 'none' }} distanceFactor={undefined}><MapCenterMarker size={mesh.userData.kioskConfig.size} blink={mesh.userData.kioskConfig.blink} cameraLength={cameraLength} config={config} lockSize={mesh.userData.kioskConfig.lockSize} /></Html> : null}\n            </>\n        default:\n            return null;\n    }\n}\n\nexport const Map = (params: IMapProps) => {\n    const {meshFloors, routeTube, floorIndex, activeObjectId, hoverObjectId, visible, handleChangeFloor} = params;\n\n    const { config, meshParams, textParams, storeLogos} = meshFloors;\n    const floor = meshFloors.floors[floorIndex];\n\n    const onPointerMove = params.onPointerMove;\n    const onPointerOver = params.onPointerEnter;\n    const onPointerOut = params.onPointerLeave;\n    const onClick = params.onClick;\n\n    const floorMeshParams = meshParams[floorIndex];\n    const floorTextParams = textParams[floorIndex];\n    const floorStoreLogos = storeLogos[floorIndex];\n    const escalatorMeshes = meshFloors.floors[floorIndex].escalatorMeshes;\n\n    // console.log('Map', floorIndex, { meshParams, floorIndex, floorMeshParams, floorTextParams, floorStoreLogos, routeTubes})\n    return (\n        <group visible={visible}>\n            {floorMeshParams?.map((params) => {\n                if (!params.mesh) return null;\n\n                const interactive = (visible && params.mesh.visible && floor.interactiveObjs && floor.interactiveObjs.includes(params.mesh));\n                const hovered = hoverObjectId && params.mesh.object_id === hoverObjectId;\n                const active = activeObjectId && params.mesh.object_id === activeObjectId;\n                if (interactive) {\n                    // TODO: move those colorDefault, active, etc to userData of mesh or material\n                    if ((active || hovered) && (params.mesh.material instanceof MeshLambertMaterial || params.mesh.material instanceof MeshStandardMaterial)) {\n                        // @ts-ignore\n                        const baseColor = active ? config.ACCENT_COLOR : params.mesh.material.colorDefault;\n                        //console.log('Map', {baseColor, active, hovered})\n                        params.mesh.material.color = hovered ? getDarkerColor(baseColor) : baseColor;\n                    } else {\n                        // @ts-ignore\n                        params.mesh.material.color = params.mesh.material.colorDefault;\n                    }\n                }\n\n                return <group key={params.mesh.uuid} {...(interactive? {onPointerOver, onPointerMove, onPointerOut, onClick } : {})}>\n                    <primitive object={params.mesh}></primitive>\n                </group>\n            })}\n            {floorTextParams?.map((params) => {\n                if (!params.textMesh) return null;\n                return (\n                    <React.Fragment key={params.textMesh.uuid}>\n                        <primitive object={params.textMesh}>\n                            {/* {params.textMesh.userData.htmlContent ? <Html style={{ pointerEvents: 'none' }} distanceFactor={params.textMesh.userData.distanceFactor}>{params.textMesh.userData.htmlContent}</Html> : null} */}\n                            {params.textMesh.userData.kioskConfig ? <MapObject key={undefined} mesh={params.textMesh} type={'kiosk'} visible={visible} /> : null}\n                        </primitive>\n                    </React.Fragment>\n                )\n            })}\n            {floorStoreLogos?.map((params) => {\n                if (!params.storeLogo) return null;\n\n                return <MapObject key={params.storeLogo.uuid} mesh={params.storeLogo} type={'storeLogo'} visible={visible} />\n            })}\n            {escalatorMeshes?.map((params) => {\n                //@ts-ignore\n                return <primitive key={`escalator-${params.object_id}`} object={params}>\n                    <Html visible={true} position={params.geometry.boundingSphere?.center}>\n                        <div onClick={handleChangeFloor(params.goToFloor?.index || 0)} id={styles.escalator_elems} style={{ display: visible ? 'block' : 'none' }}>\n                            <div className={styles.element} id={params.object_id as string}>\n                                <div className={styles.label}>{params.goToFloor?.direction}: Floor {params.goToFloor ? params.goToFloor.index + 1 : ''}</div>\n                            </div>\n                        </div>\n                    </Html>\n                </primitive>\n            })}\n            <RouteTube mesh={routeTube} />\n        </group>\n    )\n}","import type {Mesh} from \"three\";\nimport {Box3, Vector3} from \"three\";\n\nexport function get_camera_focus_object(objs:Mesh[], fov:number, aspectRatio: number, style: string) {\n    // config.STYLE\n    // config.CAMERA.fov\n\n    if (!Array.isArray(objs)) {\n        objs = [objs];\n    }\n    if (!objs.length) {\n        console.warn('get_camera_focus_object: no objects passed');\n        return { position: new Vector3(), target: new Vector3() };\n    }\n\n    const objsBoundingBox = objs.reduce((box, obj) => {\n        if (!obj.geometry.boundingBox) {\n            obj.geometry.computeBoundingBox();\n        }\n        if (obj.geometry.boundingBox) {\n            box.union(obj.geometry.boundingBox);\n        }\n        return box;\n    }, new Box3());\n\n    const obj_size = new Vector3();\n    objsBoundingBox.getSize(obj_size);\n\n    const center = new Vector3();\n    objsBoundingBox.getCenter(center);\n\n    objs[0].localToWorld(center);\n\n    // var max_length = (obj_size.x > obj_size.y && aspectRatio() < 1 ? obj_size.x : obj_size.y) / 2;\n    // var padding = max_length * 0.2;\n    // if (padding > 50) padding = 50;\n    // max_length += padding;\n    // var new_y = max_length / Math.tan(camera.fov * Math.PI / 360);\n\n    let tanFOV = Math.tan(Math.PI * fov / 360);\n    let padding = 1.1;\n    let new_width = (obj_size.x * padding) / 2 / (tanFOV * aspectRatio);\n    let new_height = (obj_size.y * padding) / 2 / tanFOV;\n    let new_y = Math.max(new_width, new_height);\n    let new_z = getCameraTiltPosition(new_y, style);\n\n    const target = new Vector3(center.x, 0, center.z);\n    const position = new Vector3(center.x, new_y, center.z + new_z);\n\n    // createjs.Ticker.framerate = 60;\n    // createjs.Tween.get(config.CONTROLS.target)\n    //     .to({ x: center.x, z: center.z }, 400);\n    // createjs.Tween.get(config.CAMERA.position)\n    //     .to({ x: center.x, y: new_y, z: center.z + new_z }, 400);\n\n    return {position, target};\n}\n\nfunction getCameraTiltPosition(y:number, style:string): number {\n    let angle = 60;\n    if (style == '2D') angle = 89.9;\n    return y / Math.tan(angle * Math.PI / 180);\n}","import { IConfig, IExtMesh, IFloorData, IJsonConfig, IMeshParams, TMapMode } from \"../../types\";\nimport { Map } from \"./Map\";\nimport React, { MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from \"react\";\nimport { Group, Mesh, PerspectiveCamera, Vector3 } from \"three\";\nimport { ThreeEvent, useFrame, useThree } from \"@react-three/fiber\";\nimport { get_camera_focus_object } from \"../../helpers/camera.helpers\";\nimport { MapControls } from \"@react-three/drei\";\nimport { create_route, make_amenity_route } from \"../../helpers/route.helpers\";\nimport { allIndexedMapObjects } from \"../../globals\";\nimport { IZoomData } from \"./SceneComponent\";\nimport { isMobile } from \"react-device-detect\";\nimport { defaultVars } from \"src/defaults\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\n\ninterface IFloorsMapProps {\n    meshFloors: IMeshParams;\n    currentFloorIndex: number;\n    onPointerEnter?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerLeave?: (e: ThreeEvent<PointerEvent>) => void;\n    onPointerMove?: (e: ThreeEvent<PointerEvent>) => void;\n    onClick?: (e: ThreeEvent<MouseEvent>) => void;\n    onCameraMove?: (e: any) => void;\n    currKioskObj: Mesh;\n    currKioskFloorIndex: number;\n    routeTargetId?: string;\n    routeTargetFromId?: string;\n    amenityTargetType: string;\n    activeObjectId?: string;\n    hoverObjectId?: string;\n    handleChangeFloor: (index: number) => MouseEventHandler<HTMLDivElement>,\n    escalatorNodes: string[];\n    zoom: IZoomData | null;\n    handleCameraLength?: (length: number) => void;\n    config: IConfig;\n    cameraPos?: { x: number, y: number, z: number } | undefined | null;\n    controlPos?: { x: number, y: number, z: number } | undefined | null;\n    handleCameraAndControlsChange?: (camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => void;\n}\n\n\nexport const FloorsMap = forwardRef((params: IFloorsMapProps, ref) => {\n    const [firstMove, setFirstMove] = useState<boolean>(false);\n    const { meshFloors,\n        currentFloorIndex,\n        currKioskObj,\n        currKioskFloorIndex,\n        routeTargetId,\n        routeTargetFromId,\n        amenityTargetType,\n        handleChangeFloor,\n        escalatorNodes,\n        zoom,\n        handleCameraLength,\n        config,\n        cameraPos,\n        controlPos,\n        handleCameraAndControlsChange,\n        activeObjectId } = params;\n    const { floors } = meshFloors;\n\n    const {setCameraLength} = useMeshObjectContext();\n\n    const groupRef = useRef<Group>(null);\n    const [routeTubes, setRouteTubes] = useState<Mesh[]>([]);\n    const mapControlRef = useRef<any>(null);\n    const { camera, scene } = useThree();\n    const cameraFocus = useRef<{\n        position: Vector3, target: Vector3,\n        fromPosition: Vector3, fromTarget: Vector3,\n        animationStartTime: number, duration: number\n    } | null>(null);\n    // const cameraFocus = useRef<{ position:Vector3, target:Vector3, animationStartTime:number, cameraTime:number, targetTime:number } | null>(null);\n\n    const style = meshFloors.config.STYLE;\n    const accentColor = meshFloors.config.ACCENT_COLOR;\n    const pathFinderGraph = meshFloors.pathFinderGraph;\n    const from = currKioskObj ? (currKioskObj as IExtMesh).object_id :\n        routeTargetFromId ? routeTargetFromId : undefined;\n\n    useEffect(() => {\n        if(meshFloors.meshParams.length > 0)\n        {\n            resetCamera();\n        }\n    },[meshFloors.meshParams.length])\n\n    useEffect(() => {\n        if (!amenityTargetType || config.ROLE === 'PORTAL') {\n            setRouteTubes([]);\n            return;\n        }\n        const route = make_amenity_route(from ?? '', amenityTargetType, scene, allIndexedMapObjects, pathFinderGraph, floors, escalatorNodes, style);\n        setRouteTubes(route);\n    }, [amenityTargetType, scene, pathFinderGraph, floors, escalatorNodes, style, from])\n\n    useEffect(() => {\n\n        if (!from || !routeTargetId || config.ROLE === 'PORTAL') {\n            if (config.ROLE === 'PORTAL') {\n                if (routeTargetId) {\n                    const targetMesh = scene.getObjectByProperty('object_id', routeTargetId);\n                    if (targetMesh) {\n                        setRouteTubes([targetMesh as IExtMesh])\n                    }\n                } else {\n                    setRouteTubes([]);\n                }\n        } else if (!amenityTargetType){\n                setRouteTubes([]);\n            }\n            return;\n        }\n        if (!amenityTargetType) {\n            floors.forEach(floor => {\n                floor.escalatorMeshes = [];\n            });\n        }\n\n\n        console.log('Make route from %s to %s', from, routeTargetId, pathFinderGraph);\n\n        /* MAKE ROUTE PATH */\n\n        const route = create_route(from, routeTargetId, scene, floors, meshFloors.escalator_nodes, pathFinderGraph, style);\n\n        // TODO: activate object (moved out of create_route function)\n        // makeObjectActive(to_mesh_object_id, accentColor, scene);\n\n        // TODO: focus object (moved out of create_route function)\n        // if (!routePaths.length) {\n        //     let obj = scene.getObjectByProperty('object_id', to_mesh_object_id);\n        //     const {position, target} =get_camera_focus_object([obj], camera.fov, camera.aspectRatio, '2D');\n        //     camera.position.copy(position);\n        // }\n\n\n        setRouteTubes(route);\n\n    }, [from, routeTargetId, scene, camera, floors, accentColor, pathFinderGraph, style, meshFloors.escalator_nodes, amenityTargetType, config.ROLE]);\n\n    const selectedFloorMeshParams = meshFloors.meshParams[currentFloorIndex];\n    useEffect(() => {\n        if (config.ROLE === 'PORTAL_RESPONSIVE') return;\n\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n        let routeMeshes = floors[currentFloorIndex]?.routeMeshes\n\n        if (!activeObjectId && !amenityTargetType)\n        {\n            return;\n        }\n\n        let meshes: Mesh[]=[];\n        if (routeTubes[currentFloorIndex] && routeMeshes?.length) {\n\n            meshes = [...routeMeshes]\n        } else if(activeObjectId && config.ROLE == 'PORTAL') {\n            const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n            if (currentActiveObject) {\n                meshes = [currentActiveObject.mesh];\n            }\n        }\n        if(!meshes.length)\n        {\n            meshes = selectedFloorMeshParams.map(item => item.mesh);\n        }\n\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' || config.ROLE === 'WP_SITE' ? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n\n        // return () => {\n        //     cameraFocus.current = null;\n        // };\n    }, [routeTubes, selectedFloorMeshParams, currentFloorIndex, style, camera, routeTargetId, config.ROLE, config.CAMERA.maxDistance, config.CAMERA.minDistance, config.CAMERA.animSpeed]);\n\n    useEffect(() => {\n        if (zoom?.direction && mapControlRef.current) {\n            if (!(camera instanceof PerspectiveCamera)) {\n                console.error('Camera is not a PerspectiveCamera');\n                return;\n            }\n\n            if (!selectedFloorMeshParams.length) {\n                console.warn('objects not loaded yet');\n                return;\n            }\n\n            let meshes: Mesh[];\n            if (routeTubes[currentFloorIndex]) {\n                meshes = [routeTubes[currentFloorIndex]];\n\n                const currentActiveObject = routeTargetId && selectedFloorMeshParams.find(item => item.mesh.object_id === routeTargetId);\n                if (currentActiveObject) {\n                    meshes.push(currentActiveObject.mesh);\n                }\n            } else {\n                meshes = selectedFloorMeshParams.map(item => item.mesh);\n            }\n            const focus = {\n                position: mapControlRef.current.object.position.clone(),\n                target: mapControlRef.current.target.clone()\n            };\n\n            let cameraDistance = focus.position.distanceTo(focus.target);\n            const zoomStep = config.ZOOM_STEP? parseInt(config.ZOOM_STEP) : parseInt(defaultVars.ZOOM_STEP as string);\n\n            if (zoom.direction === 'in') {\n                cameraDistance -= zoomStep;\n            } else {\n                cameraDistance += zoomStep;\n            }\n\n            cameraDistance = Math.min(\n                config.CAMERA.maxDistance,\n                Math.max(\n                    config.CAMERA.minDistance,\n                    cameraDistance\n                )\n            );\n\n            focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n            cameraFocus.current = {\n                ...focus,\n                fromPosition: mapControlRef.current.object.position.clone(),\n                fromTarget: mapControlRef.current.target.clone(),\n                animationStartTime: performance.now(),\n                duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n            };\n        }\n    }, [zoom])\n\n    // useEffect(() => {\n    //     if (mapControlRef.current) {\n\n    //         // Set initial camera position\n    //         if (cameraPos)\n    //             mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n    //         // Set initial controls target\n    //         if (controlPos)\n    //             mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n    //         mapControlRef.current.update();\n    //     }\n    // }, [mapControlRef]);\n\n    // useEffect(() => {\n    //     if (mapControlRef.current) {\n    //         if (cameraPos)\n    //             mapControlRef.current.object.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n\n    //         // Set initial controls target\n    //         if (controlPos)\n    //             mapControlRef.current.target.set(controlPos.x, controlPos.y, controlPos.z);\n    //         mapControlRef.current.update();\n    //     }\n    // }, [cameraPos, controlPos]);\n\n\n    const onCameraMove = useCallback((e: any) => {\n        if (handleCameraLength) {\n            const vector = new Vector3();\n            vector.copy(e.target.object.position);\n            vector.sub(mapControlRef.current.target);\n            handleCameraLength(vector.length());\n            setCameraLength(vector.length());\n            if (handleCameraAndControlsChange)\n                handleCameraAndControlsChange(mapControlRef.current.object.position.clone(), mapControlRef.current.target.clone())\n        }\n    }, [handleCameraLength, handleCameraAndControlsChange, setCameraLength])\n\n    useFrame(() => {\n        if (cameraFocus.current?.duration && cameraFocus.current?.duration > 0) {\n            if (!firstMove) {\n                setFirstMove(true);\n                cameraFocus.current.duration = 0;\n            }\n            const focus = cameraFocus.current;\n            const animationTime = (performance.now() - focus.animationStartTime) / 1000;\n\n            const animationProgress = Math.min(1, animationTime / focus?.duration);\n            mapControlRef.current.object.position.lerpVectors(focus.fromPosition, focus.position, animationProgress);\n            mapControlRef.current.target.lerpVectors(focus?.fromTarget, focus.target, animationProgress);\n\n            mapControlRef.current.object.updateProjectionMatrix();\n            if (animationProgress >= 1) {\n                cameraFocus.current = null;\n            }\n        }\n    })\n\n    const resetCamera = (fullReset: boolean = false, cameraControlsStates?: any) => {\n        if (!(camera instanceof PerspectiveCamera)) {\n            console.error('Camera is not a PerspectiveCamera');\n            return;\n        }\n        const selectedFloorMeshParams = meshFloors.meshParams[currKioskFloorIndex];\n        if (!selectedFloorMeshParams.length) {\n            console.warn('objects not loaded yet');\n            return;\n        }\n\n\n        let meshes: Mesh[];\n        meshes = selectedFloorMeshParams.map(item => item.mesh);\n        \n\n        const focus = get_camera_focus_object(meshes, camera.fov, camera.aspect, config.ROLE === 'PORTAL' ? '2D' : style);\n        const cameraDistance = Math.min(\n            config.CAMERA.maxDistance,\n            Math.max(\n                config.CAMERA.minDistance,\n                focus.position.distanceTo(focus.target)\n            )\n        );\n        focus.position.sub(focus.target).setLength(cameraDistance).add(focus.target);\n\n        if (config.CAMERA_CONTROLS_STATES && !['PORTAL', 'PORTAL_RESPONSIVE'].includes(config.ROLE)) {\n            focus.position.set(config.CAMERA_CONTROLS_STATES.camera.x, config.CAMERA_CONTROLS_STATES.camera.y, config.CAMERA_CONTROLS_STATES.camera.z);\n            focus.target.set(config.CAMERA_CONTROLS_STATES.controls.x, config.CAMERA_CONTROLS_STATES.controls.y, config.CAMERA_CONTROLS_STATES.controls.z);\n        }\n\n        // if (cameraPos && controlPos && !['PORTAL', 'PORTAL_RESPONSIVE'].includes(config.ROLE)) {\n        //     focus.position.set(cameraPos.x, cameraPos.y, cameraPos.z);\n        //     focus.target.set(controlPos.x, controlPos.y, controlPos.z);\n        // }\n\n        cameraFocus.current = {\n            ...focus,\n            fromPosition: mapControlRef.current.object.position.clone(),\n            fromTarget: mapControlRef.current.target.clone(),\n            animationStartTime: performance.now(),\n            duration: config.CAMERA.animSpeed, // how long it takes to move camera to get to new position\n        };\n\n    };\n\n    useImperativeHandle(ref, () => ({\n        resetCamera,\n    }))\n\n    return (<group rotation={[Math.PI / 2, 0, 0]} ref={groupRef}>\n        <>\n            <MapControls\n                makeDefault\n                onChange={onCameraMove}\n                ref={mapControlRef}\n                maxPolarAngle={Math.PI / 2}\n                minDistance={config.CAMERA.minDistance}\n                maxDistance={config.CAMERA.maxDistance}\n                enableZoom={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n                enableRotate={config.ROLE !== \"WP_SITE\" && config.ROLE !== \"PORTAL_RESPONSIVE\" && config.ROLE !== \"DISPLAY_APP\"}\n                dampingFactor={0.3}\n            />\n\n            {floors && floors.map((value: IFloorData, index: number) => (\n                <Map\n                    key={`Map-${index}`}\n                    visible={currentFloorIndex === index}\n                    floorIndex={index}\n                    currKioskObj={params.currKioskObj}\n                    activeObjectId={params.activeObjectId}\n                    hoverObjectId={params.hoverObjectId}\n                    meshFloors={meshFloors}\n                    routeTube={config.ROLE !== 'PORTAL' ? routeTubes && routeTubes[index] : undefined}\n                    onPointerEnter={params.onPointerEnter}\n                    onPointerLeave={params.onPointerLeave}\n                    onPointerMove={params.onPointerMove}\n                    onClick={params.onClick}\n                    handleChangeFloor={handleChangeFloor}\n                />\n            ))}\n        </>\n    </group>)\n})","import { IFloorSelectorProps } from \"../../types\";\nimport styles from \"../../MapBox.module.css\";\n\ntype TFloorButtonProps = {\n  isActive: boolean;\n  onClick: (e: any) => void;\n  text: string;\n};\n\nconst FloorButton = ({ isActive, onClick, text }: TFloorButtonProps) => {\n  return (\n    <div\n      className={`${styles.floor} ${styles.control_btn} ${\n        isActive ? styles.active : \"\"\n      }`}\n      onClick={onClick}\n    >\n      {text}\n    </div>\n  );\n};\n\nconst FloorSelector = ({\n  floors,\n  selectedFloorIndex,\n  handleFloorChange,\n  accentColor,\n}: IFloorSelectorProps) => {\n  const floorButtons: Array<TFloorButtonProps & { key: string }> = [];\n  for (let i = 0; i < floors.length; i++) {\n    const style = { display: \"flex\", cursor: \"pointer\", background: \"white\" };\n    if (i === selectedFloorIndex) {\n      style.background = accentColor;\n    }\n    floorButtons.push({\n      key: `floor-change-btn-${i}`,\n      isActive: i === selectedFloorIndex,\n      onClick: handleFloorChange(i),\n      text: floors[i].title,\n    });\n  }\n\n  return (\n    <div className={`${styles.floors} ${styles.btn_group}`}>\n      {floorButtons.length > 0 && (\n        <div className={styles['floors-dropdown']}>\n          {floorButtons.slice().reverse().map((value) => (\n            <FloorButton\n              key={value.key}\n              isActive={value.isActive}\n              onClick={value.onClick}\n              text={value.text}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FloorSelector;\n","import { IAmenitiesInteractiveList, IFloorSelectorProps, TRoles } from \"src/types\";\nimport FloorSelector from \"./FloorSelector\";\nimport { MouseEventHandler, useEffect, useMemo } from \"react\";\nimport styles from '../../MapBox.module.css';\nimport { MapObj } from \"src/mapitApiTypes\";\nimport { AmenityID } from \"src/MapBox\";\n\nconst UIComponent = ({\n    floors,\n    accentColor,\n    selectedFloorIndex,\n    handleFloorChange,\n    amenitiesList,\n    zoomIn,\n    zoomOut,\n    reset,\n    clearRoute,\n    handleAmenityClick,\n    role,\n    mapObjs,\n    onExtractedAmenities,\n}: IFloorSelectorProps & {\n    amenitiesList: IAmenitiesInteractiveList[],\n    zoomIn?: MouseEventHandler<HTMLDivElement>,\n    zoomOut?: MouseEventHandler<HTMLDivElement>,\n    reset?: () => void,\n    clearRoute?: MouseEventHandler<HTMLDivElement>,\n    handleAmenityClick: (type: string) => void,\n    role?: TRoles,\n    mapObjs?: MapObj[],\n    onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n) => {\n    const handleResetClick: MouseEventHandler = (e) => {\n        e.preventDefault();\n        if (reset instanceof Function) {\n            reset();\n        }\n    }\n\n    const extractValues = useMemo<AmenityID[]>(() => {\n\n        if(!mapObjs)\n        {\n            return [];\n        }\n        \n        return mapObjs\n          .filter(obj => obj.layer_type === \"amenity\")\n          .map(obj => obj.value as AmenityID);\n      }, [mapObjs])\n      useEffect(() => {\n        if (onExtractedAmenities) {\n            onExtractedAmenities(extractValues)\n        }\n      }, [mapObjs, onExtractedAmenities, extractValues])\n    \n\n return(\n        <div id={styles['threejs-map-wrapper']}>\n            <div id={styles['threejs-map']}>\n                <div id={styles['map_controls']} className={`${!floors? 'hide' : ''}`}>\n                    <div className={styles['btn_group']}>\n                        <div onClick={handleResetClick} className={`${styles['reset']} ${styles['control_btn']}`}>RESET</div>\n                        <div onClick={clearRoute} className={`${styles['clear_route']} ${styles['control_btn']} ${clearRoute? '' : styles.hide}`}>Clear Route</div>\n                    </div>\n                    <FloorSelector accentColor={accentColor} floors={floors} selectedFloorIndex={selectedFloorIndex} handleFloorChange={handleFloorChange}/>\n                    <div className={`${styles['btn_group']} ${styles['zoom_btns']}`}>\n                        <div onClick={zoomOut} className={`${styles['zoom-out']} ${styles['control_btn']}`}>–</div>\n                        <div onClick={zoomIn} className={`${styles['zoom-in']} ${styles['control_btn']}`}>+</div>\n                    </div>\n                </div>\n                <div id={styles['mapit2_loader']} className={styles['hide']}>Loading map, please wait...</div>\n                    {!['PORTAL','DISPLAY_APP'].includes(role as string) &&\n                        <div className={`${styles.amenities}`} style={{ display: 'block' }}>\n                            {amenitiesList.map((amenity, index) => {\n                                if(!extractValues.includes(amenity.type))\n                                {\n                                    return null;\n                                }\n                                return (\n                                <div key={`amenity-${amenity.name}-${index}`} className={`${styles.amenity}`} style={{ backgroundColor: '#000000' }} onClick={() => handleAmenityClick(amenity.type)}>\n                                    <div className={styles.img}>\n                                        {/* <img src={amenity.icon} alt={amenity.name} /> */}\n                                        <amenity.icon />\n                                    </div>\n                                    <div className={`${styles.name}`}>{amenity.name}</div>\n                                </div>\n                            )})}\n                        </div>\n                    }\n            </div>\n        </div>\n )   \n}\n\nexport default UIComponent;\n","import { useCallback, useMemo, useState } from \"react\";\n\ntype GetRetailersParams = {\n    centerId: string | number,\n    apiURI?: string,\n    limit?: number,\n    page?: number,\n}\n\ntype Data = {\n    isError: boolean,\n    error: string | null,\n    items: any[],\n    count: number,\n}\n\nconst defaultData: Data = {\n    isError: false,\n    error: null,\n    items: [],\n    count: 0,\n}\nconst useGetRetailersBySearch = (params: GetRetailersParams) => {\n    const { centerId, apiURI, limit, page } = params;\n\n    const fetchRetailers = useCallback((search: string) => {\n        const r = /\\/$/;\n        const uri = apiURI?.replace(r, '');\n        const url = `${uri}/v1/retailers?limit=${limit ? limit : 100}&page=${page ? page : 1}&search=${search ? search : ''}`;\n\n        return fetch(url, {\n            headers: {\n                center_id: centerId.toString(),\n            },\n        }).then(response => {\n            if (!response.ok) {\n                return {\n                    ...defaultData,\n                    isError: true,\n                    error: `Server error: [${response.status}] [${response.statusText}] [${response.url}]`,\n                    items: [],\n                };\n            }\n            return (async () => {\n                return await response.json().then(retailers => {\n                    return {\n                        ...defaultData,\n                        items: retailers.items,\n                        count: retailers.count,\n                    }\n                });\n            })()\n        }).catch((e: any) => {\n            return {\n                ...defaultData,\n                isError: true,\n                error: e.message ? e.message : 'useGetRetailer: something went wrong!',\n                items: [],\n            };\n        })\n    }\n        , [centerId, limit, page, apiURI]);\n\n    return fetchRetailers;\n}\n\nexport default useGetRetailersBySearch;\n","import { MeshType, getMaterial } from \"../../Hooks/useMeshFloors/getMaterialAndGeometry\";\nimport { TMeshObjectContext, useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport { getImage, layer_text_logo_position_by_id, processImage } from \"src/helpers/draw.logo.helpers\";\nimport { getFormatedColor, hex_to_color } from \"src/helpers/misc\";\nimport { IRetailer, MapObj, MapObjToSave } from \"src/mapitApiTypes\";\nimport { MouseEventHandler, SyntheticEvent, useEffect, useRef, useState, useTransition } from \"react\";\nimport { Button, Col, Form, FormControl, FormControlProps, Nav, Row, Tab, Tabs } from \"react-bootstrap\"\nimport { ArrowClockwise } from \"react-bootstrap-icons\";\nimport { DoubleSide, Euler, MeshBasicMaterial, MeshPhongMaterial, Object3D, Vector3 } from \"three\";\n// import { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\nimport { Geometry, TextGeometry } from \"three-stdlib\";\nimport { IConfig, IExtMesh, IJsonConfig, IMeshParamsTmp } from \"src/types\";\nimport fontData from 'src/Hooks/useMeshFloors/optimer_regular.typeface.json'\nimport { FontData, useFont } from \"@react-three/drei\";\nimport AsyncSelect from 'react-select/async';\nimport useGetRetailers from \"./useGetRetailersBySearch\";\nimport { MapCenterMarker } from \"../SceneComponent/MapCenterMarker\";\n\n\ninterface IMapboxForm {\n    floorIndex: number;\n    meshFloors: IMeshParamsTmp;\n    config: IConfig;\n    data: any;\n    setData: (index: number, data: MapObj) => void;\n    selectedId: string;\n    centerId: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    apiURI?: string;\n    onResetData?: (data: MapObj) => void;\n}\n\nconst mainTabs = ['retailer', 'special', 'custom', ''] as const;\ntype TMainTabsKey = (typeof mainTabs)[number];\nconst isTMainTabsKey = (x: any): x is TMainTabsKey => mainTabs.includes(x);\n\nconst retailerTabs = ['retail_name', 'retail_text', 'retail_logo', 'custom_text', 'custom_image', ''] as const;\ntype TRetailerTabsKey = (typeof retailerTabs)[number];\nconst isTRetailerTabsKey = (x: any): x is TRetailerTabsKey => retailerTabs.includes(x);\n\nconst specialTabs = ['kiosk', 'amenity', ''] as const;\ntype TSpecialTabsKey = (typeof specialTabs)[number];\nconst isTSpecialTabsKey = (x: any): x is TSpecialTabsKey => specialTabs.includes(x);\n\nconst IncDecNames = ['size', 'rotate', 'offsetX', 'offsetY'] as const;\ntype TIncDecKey = (typeof IncDecNames)[number]\ntype TIncDecInterval = {\n    [Key in TIncDecKey]?: NodeJS.Timeout | null;\n}\n\nexport const getDefaultMapOjbValues = (centerId: string): MapObj => ({\n\tid: '',\n\tcenter_id: centerId,\n\tretailer_id: '',\n\tkiosk_id: null,\n\tmap_obj_name: '',\n\tobj_type: 'retailer',\n\tlayer_type: 'retail_name',\n\tvalue: '',\n\tcustom_text: '',\n\tcustom_image: '',\n\thover_text: '',\n\tbg_color: '',\n\ttransparent: 0,\n\ttext_color: '',\n\tsize: '8',\n    lock_size: '0',\n\trotate: '0',\n\toffsetX: '0',\n\toffsetY: '0',\n});\n\ntype UpdateMapCenterMarkerFor = (obj: IExtMesh, formData: MapObj) => void;\n\n\nconst updateMapCenterMarkerFor: UpdateMapCenterMarkerFor = (obj, formData) => {\n    const kioskConfig = obj.userData.kioskConfig;\n    if (kioskConfig) {\n        //TODO use 'value' until api with lock_size will be working\n        obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n        obj.userData.kioskConfig = {\n            lockSize: formData.value === '1',\n            blink: kioskConfig.blink,\n            size: Number(formData.size)\n        }\n        // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={blink} size={Number(formData.size)} />\n        obj.userData.triggerUpdate?.();\n    }\n}\n\nconst MapboxForm = (params: IMapboxForm) => {\n\n    const {data, setData, selectedId, centerId, config, floorIndex, meshFloors, onResetData} = params;\n\n    const myFont = useFont(fontData as unknown as FontData);\n    const [mainTabKey, setMainTabKey] = useState<TMainTabsKey>('');\n    const [retailerTabsKey, setRetailerTabsKey] = useState<TRetailerTabsKey>('');\n    const [specialTabsKey, setSpecialTabsKey] = useState<TSpecialTabsKey>('');\n    const [formData, setFormData] = useState<MapObj | null>(null);\n    const [rotation, setRotation] = useState<number | undefined>(undefined);\n    const context = useMeshObjectContext();\n    const [oldMapObjName, setOldMapObjName] = useState<string | null>(null);\n    const timeoutRef = useRef<NodeJS.Timeout | null>(null);\n    const [, startTransition] = useTransition();\n    const intervalRefs = useRef<TIncDecInterval>({});\n\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n    const fetchRetailers = useGetRetailers({centerId, apiURI: params.apiURI});\n\n    const loadOptions = (inputValue: string, callback: (options: any[]) => void) => {\n        setIsLoading(true);\n        const retailersData = fetchRetailers(inputValue);\n        retailersData.then(data => {\n            setIsLoading(false);\n            let result: any = [];\n            if (!data) return result;\n            if (!data.isError) {\n                result = data.items.map((item: any) => {\n                    return {\n                        value: item.id,\n                        label: item.name,\n                    }\n                })\n            } else {\n                console.error(`Fetch Retailers error: ${data.error}`)\n            }\n            callback(result);\n        })\n    }\n\n    useEffect(() => {\n        switch(mainTabKey) {\n            case 'retailer':\n                handleChangeTab(retailerTabsKey);\n                break;\n        }\n    }, [formData, mainTabKey, retailerTabsKey])\n\n    const handleChangeTab = (k:  any | null) => {\n        if (!formData) return;\n        const key: TMainTabsKey | TRetailerTabsKey | TSpecialTabsKey | null = k;\n        if (key !== null) {\n            if (isTMainTabsKey(key)) {\n                setMainTabKey(key);\n                if (formData.id && formData.obj_type !== key && mainTabKey && key) {\n                    formData.obj_type = key;\n                    if (key === 'retailer') {\n                        formData.layer_type = 'retail_name';\n                        clearKioskConfig(context);\n                    } else if (key === 'special') {\n                        formData.layer_type = 'kiosk';\n                        formData.retailer_id = '';\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            if (obj) {\n                                if (!obj.userData) {\n                                    obj.userData = {};\n                                }\n                                obj.userData.distanceFactor = formData?.value === '1' ? 1500 : undefined;\n                                obj.userData.kioskConfig = {\n                                    lockSize: formData.value === '1',\n                                    blink: false,\n                                    size: Number(formData.size)\n                                }\n                                // obj.userData.htmlContent = <MapCenterMarker lockSize={formData.value === '1'} blink={false} size={parseInt(formData.size)} /> \n                            }\n                        }\n                    } else if (key === 'custom') {\n                        formData.layer_type = 'custom_text';\n                        formData.retailer_id = '';\n                        clearKioskConfig(context);\n                    }\n                    setMainTabKey('');\n                    setRetailerTabsKey('');\n                    setSpecialTabsKey('');\n                    setFormData({...formData});\n                    updateData({\n                        ...formData,\n                    });\n                }\n            } else if (isTRetailerTabsKey(key)) {\n                setRetailerTabsKey(key);\n                clearKioskConfig(context);\n                if (formData.id && retailerTabsKey && key) {\n                    formData.layer_type = key;\n                    if (formData.layer_type !== key) {\n                        setFormData({ ...formData });\n                    }\n                    updateData({\n                        ...formData,\n                    })\n                    if (['retail_name', 'custom_text', 'retail_text'].includes(key)) {\n                        let text = '';\n                        switch (key) {\n                            case 'retail_name':\n                               \n                                if(!formData.retailer_id)\n                                {\n                                    break;\n                                }\n\n                                const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                               \n                                if (retailIndex !== -1) {\n                                    text = data.retailers[retailIndex].retail_name;\n\n                                }\n                                break;\n                            case 'retail_text':\n                            case 'custom_text':\n                                text = formData.custom_text;\n                                break;\n                        }\n                        if (context && context.MeshObject) {\n                            const obj = context.MeshObject[1];\n                            makeTextGeometry(obj, text, formData.size);\n                        }\n                    }\n\n                    if (['retail_logo', 'custom_image'].includes(key)) {\n                        context?.MeshObject?.forEach((obj, index) => {\n                            if (index === 0) return;\n\n                            makeImage(formData, obj);\n                        })\n                    }\n                }\n            } else if (isTSpecialTabsKey(key)) {\n                setSpecialTabsKey(key);\n                formData.layer_type = key;\n                if (formData.id && formData.layer_type !== key && specialTabsKey && key) {\n                    if (key !== 'kiosk') {\n                        clearKioskConfig(context);\n                    }\n                    formData.layer_type = key;\n                    formData.kiosk_id = '';\n                    formData.retailer_id = '';\n                    formData.value = '';\n                    setFormData({ ...formData });\n                    updateData({ ...formData });\n                }\n            }\n        }\n    }\n\n    const handleRotateChange = (e: any) => {\n        if (!formData) return;\n        formData.rotate = e.target.value;\n        setFormData({...formData});\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = {...formData};\n            setData(index, {...data});\n        }\n    }\n\n    const handleReset = () => {\n        if (!formData) return;\n        const defaultValues = getDefaultMapOjbValues(formData.center_id);\n        if (onResetData) {\n            onResetData({\n                ...formData,\n            })\n        }\n        setFormData({\n            ...defaultValues,\n            id: formData.id,\n        });\n        updateData({\n            ...defaultValues,\n            id: formData.id,\n        });\n    }\n\n    const updateData = (formData: MapObj) => {\n        const index = data.map_objs.findIndex((value: MapObj) => value.id === formData.id);\n        if (index !== -1) {\n            data.map_objs[index] = { ...formData };\n            setData(index, { ...formData });\n        }\n    }\n\n    const handleChangeRetailer = ({value}: {value: string}) => {\n        if (value && formData) {\n            formData.retailer_id = value;\n            formData.kiosk_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n        }\n    }\n\n    const handleChangeKiosk = (e: any) => {\n        if (e.target.value && formData) {\n            formData.kiosk_id = e.target.value;\n            formData.retailer_id = '';\n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                updateMapCenterMarkerFor(obj, formData);\n            })\n        }\n    }\n\n    const handleChangeAmenity = (e: any) => {\n        if (e.target.value && formData) {\n            formData.value = e.target.value; \n            setFormData({...formData});\n            updateData({...formData});\n            context?.MeshObject?.forEach((obj, index) => {\n                if (index === 0) return;\n                makeImage(formData, obj);\n            })\n        }\n    }\n\n    const makeTextGeometry = (obj: IExtMesh, text: string, size: string) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let text_geometry = new TextGeometry(text, {\n            font: (obj.userData && obj.userData.font)? obj.userData.font : myFont,\n            size: parseInt(size),\n            height: 0.01,\n            curveSegments: 4,\n        });\n        text_geometry.center();\n        if (obj.geometry) {\n            obj.geometry.dispose();\n        }\n        obj.geometry = text_geometry;\n    }\n\n    const makeImage = (formData: MapObj, obj: IExtMesh) => {\n        if (oldMapObjName !== formData?.map_obj_name) return;\n        let img = null;\n        if (formData.layer_type === 'retail_logo') {\n            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n            if (retailIndex !== -1) {\n                img = getImage(formData, data.retailers[retailIndex]);\n            }\n        } else {\n            img = getImage(formData);\n        }\n        if (img instanceof HTMLImageElement) {\n            processImage(img, formData, (geometry, material) => {\n                obj.geometry = geometry;\n                obj.material = material;\n\n                const boundingBox = geometry.boundingBox;\n\n                const mesh_center_point = new Vector3();\n                if (boundingBox) {\n                    boundingBox.getCenter(mesh_center_point);\n\n                    const mesh_size = new Vector3();\n                    boundingBox.getSize(mesh_size);\n                    if (obj.object_id) {\n                        layer_text_logo_position_by_id(obj.object_id, mesh_center_point, mesh_size, obj, { [obj.object_id]: { ...formData } });\n                    }\n                }\n            });\n        }\n    }\n\n    const changeValue = (name: string, value: string) => {\n        if (!formData) return;\n        // if (name === 'custom_image' && context?.MeshObject && context.MeshObject.length <= 1) {\n        //     formData.custom_image = value;\n        //     setFormData({...formData});\n        //     updateData({...formData});\n        // }\n\n        context?.MeshObject?.forEach((obj, index) => {\n            if (!obj.userData) {\n                obj.userData = {};\n            }\n            if (!obj.userData.position) {\n                obj.userData.position = new Vector3();\n                if (obj.position) {\n                    obj.userData.position.copy(obj.position);\n                }\n            }\n            const position = new Vector3();\n            if (obj.userData.position){\n                position.copy(obj.userData.position);\n            }\n            switch (name) {\n                case 'custom_text':\n                    if (index === 0) break;\n                    formData.custom_text = value;\n                    if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        makeTextGeometry(obj, formData.custom_text, formData.size);\n                    }\n                    break;\n                case 'custom_image':\n                    if (index === 0) break;\n                    formData.custom_image = value;\n                    makeImage(formData, obj);\n                    updateData({\n                        ...formData,\n                    })\n                    break;\n                case 'size':\n                    if (index === 0) break;\n                    formData.size = value;\n                    if (!(['retail_logo', 'kiosk', 'amenity', 'custom_image'].includes(formData.layer_type))) {\n                        let text = '';\n                        if (formData.layer_type === 'retail_name' && obj.userData && obj.userData.retail_name) {\n                            const retailIndex = data.retailers.findIndex((item: IRetailer) => formData.retailer_id.toString() === item.id.toString());\n                            if (retailIndex !== -1) {\n                                text = data.retailers[retailIndex].retail_name;\n                            }\n                        } else if (['retail_text', 'custom_text'].includes(formData.layer_type)) {\n                            text = formData.custom_text;\n                        }\n                        makeTextGeometry(obj, text, formData.size);\n                    } else if (formData.layer_type === 'retail_logo' || formData.layer_type === 'custom_image') {\n                        makeImage(formData, obj);\n                        if (timeoutRef.current) {\n                            clearInterval(timeoutRef.current);\n                        }\n                        timeoutRef.current = setTimeout(() => {\n                            updateData({ ...formData });\n                        }, 300);\n                    } else if (['amenity'].includes(formData.layer_type)) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            setFormData({ ...formData });\n                            updateData({ ...formData });\n                        })\n                    } else if (['kiosk'].includes(formData.layer_type)) {\n                        updateMapCenterMarkerFor(obj, formData);\n                    }\n                    break;\n                case 'lock_size':\n                    formData.lock_size = value;\n                    //TODO use 'value' until api with lock_size will be working\n                    formData.value = value;\n                    if (formData.layer_type === 'kiosk') {\n                        updateMapCenterMarkerFor(obj, formData);\n                    }\n                    break;\n                case 'rotate':\n                    if (index === 0) break;\n                    formData.rotate = value;\n                    obj.rotation.set(\n                        obj.rotation.x,\n                        obj.rotation.y,\n                        parseFloat(formData.rotate) * Math.PI / 180\n                    );\n                    break;\n\n                case 'offsetX':\n                    if (index === 0) break;\n                    position.x += parseFloat(value);\n                    obj.position.setX(position.x);\n                    formData.offsetX = value;\n                    break;\n\n                case 'offsetY':\n                    if (index === 0) break;\n                    position.y += parseFloat(value);\n                    obj.position.setY(position.y);\n                    formData.offsetY = value;\n                    break;\n\n                case 'text_color':\n                    if (index === 0) break;\n                    formData.text_color = value;\n                    if (['retail_name', 'retail_text', 'custom_text'].includes(formData.layer_type)) {\n                        const material_settings = {\n                            // color: hex_to_color(formData.text_color),\n                            color: formData.text_color,\n                            transparent: true,\n                            side: DoubleSide,\n                            depthWrite: false,\n                            depthTest: false,\n                        };\n                        let text_material = new MeshPhongMaterial(material_settings);\n                        obj.material = text_material;\n                    } else if (\n                        formData.layer_type === 'retail_logo' ||\n                        formData.layer_type === 'custom_image' ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'kiosk' && formData.kiosk_id != null) ||\n                        (formData.obj_type === 'special' && formData.layer_type === 'amenity' && formData.value !== '')) {\n                        makeImage(formData, obj);\n                        startTransition(() => {\n                            updateData({\n                                ...formData,\n                                text_color: formData.text_color.replace('#', ''),\n                            });\n                        })\n                    }\n                    break;\n\n                case 'bg_color':\n                    if (index !== 0) break;\n                    formData.bg_color = value;\n                    let meshType: MeshType = 'store';\n                    if (obj.object_id?.startsWith('big-store')) {\n                        meshType = 'big-store';\n                    }\n                    obj.material = getMaterial(\n                        config,\n                        meshType,\n                        formData.map_obj_name,\n                        formData.bg_color,\n                        formData.transparent === \"1\"? true : false,\n                        {[formData.map_obj_name]: {...formData}}\n                        );\n                    // updateData({...formData});\n                    break;\n            \n                default:\n                    break;\n            }\n            startTransition(() => {\n                setFormData({ ...formData })\n                updateData({ ...formData });\n            });\n\n        })\n    }\n    const handleChange = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value;\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    const handleChangeLock = (e: any) => {\n        const target = e.target as HTMLInputElement;\n        const value = target.value === '0'? '1' : '0';\n        const name = target.name;\n        changeValue(name, value);\n    }\n\n    useEffect(() => {\n        if (data && data.map_objs && selectedId) {\n            const index = data.map_objs.findIndex((value: any) => value.map_obj_name === selectedId);\n            if (index !== -1) {\n                setFormData({...data.map_objs[index]});\n            } else {\n                setFormData({\n                    ...getDefaultMapOjbValues(centerId),\n                    id: 'new-' + (new Date()).getTime(),\n                });\n            }\n        }\n        return () => {\n            setRetailerTabsKey('');\n        }\n    }, [data, selectedId])\n\n    useEffect(() => {\n        if (!formData) return;\n        if (formData.obj_type) {\n            handleChangeTab(formData.obj_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n        if (formData.layer_type) {\n            handleChangeTab(formData.layer_type);\n            setOldMapObjName(formData.map_obj_name);\n        }\n    }, [formData])\n\n    const decrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value -= 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const incrementValue = (key: TIncDecKey) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += 1;\n            changeValue(key, value.toString());\n        }\n    }\n\n    const rotateByFixedAngle = (key:TIncDecKey, angle: number) => {\n        if (!formData) return;\n        if (Object.hasOwn(formData, key)) {\n            let value = parseInt(formData[key]);\n            value += angle;\n            if (value > 360) {\n                value = angle;\n            } else if (value === 360) {\n                value = 0;\n            }\n\n            changeValue(key, value.toString());\n        }\n    }\n\n    const handleRotateByFixedAngle = (key: TIncDecKey, angle: number) => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            rotateByFixedAngle(key, angle);\n        }, 100);\n    } \n\n    const handleDecrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            decrementValue(key);\n        }, 100);\n    }\n\n    const handleIncrement = (key: 'size' | 'rotate' | 'offsetX' | 'offsetY') => () => {\n        if (intervalRefs.current[key]) return;\n\n        intervalRefs.current[key] = setInterval(() => {\n            incrementValue(key);\n        }, 100);\n    }\n\n    const stopIntervals = () => {\n        let key:TIncDecKey;\n        for (key in intervalRefs.current) {\n            if (intervalRefs.current[key])\n                clearInterval(intervalRefs.current[key] as NodeJS.Timeout);\n                intervalRefs.current[key] = null;\n        }\n    }\n\n    const handleOnSubmit = () => {\n        if (params.onSubmit && context && context.MeshObject && formData) {\n            formData.kiosk_id = formData.kiosk_id === '' ? null : formData.kiosk_id;\n            const kioskId = formData.kiosk_id !== null? parseInt(formData.kiosk_id) : null;\n            params.onSubmit({...formData, map_obj_name: context.MeshObject[0].object_id as string, kiosk_id: kioskId});\n        }\n    }\n\n    if (!formData) return null;\n\n    return (\n        <>\n            <Tab.Container activeKey={mainTabKey}>\n                <Col>\n                    <Row>\n                        <Col sm=\"9\">\n                            <Nav\n                                variant=\"tabs\"\n                                className=\"flex-row\"\n                                // activeKey={mainTabKey}\n                                onSelect={handleChangeTab}\n                            >\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"retailer\"}>Retailer</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"special\"}>Special</Nav.Link>\n                                </Nav.Item>\n                                <Nav.Item>\n                                    <Nav.Link eventKey={\"custom\"}>Custom</Nav.Link>\n                                </Nav.Item>\n                            </Nav>\n                        </Col>\n                        <Col sm=\"3\" className=\"px-0\">\n                            {/* \n                //@ts-ignore */}\n                            <Button variant=\"danger\" className=\"mb-3\" onClick={handleReset}>Reset</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col sm=\"12\">\n                            <Tab.Content>\n                                <Tab.Pane eventKey={\"retailer\"}>\n                            <AsyncSelect\n                                className=\"mb-3\"\n                                aria-label=\"Choose a Retailer\"\n                                loadOptions={loadOptions}\n                                noOptionsMessage={() => 'Retailers not found'}\n                                placeholder=\"Choose a Retailer...\"\n                                value={data.retailers?.filter((item: IRetailer) => item.id === formData.retailer_id)?.map((item: IRetailer) => ({\n                                    value: item.id,\n                                    label: `${item.retail_name}${item.location && item.location.length > 1 ? item.location : ''}`,\n                                }))}\n                                defaultOptions={data.retailers?.map((item: any) => ({value: item.id, label: `${item.retail_name}${item.location && item.location.length > 1? item.location : ''}`}))}\n                                onChange={handleChangeRetailer}\n\n                            />\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"retail-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                    >\n                        <Tab eventKey=\"retail_name\" title=\"Retail Name\"></Tab>\n                        <Tab eventKey=\"retail_logo\" title=\"Retail Logo\"></Tab>\n                        <Tab eventKey=\"retail_text\" title=\"Custom Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            as=\"textarea\"\n                                            name=\"custom_text\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"special\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"special-tab-form\"\n                        activeKey={specialTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"kiosk\" title=\"Kiosk\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.kiosk_id?? ''} onChange={handleChangeKiosk}>\n                                <option value={''} disabled hidden>Choose a Kiosk...</option>\n                                {data.kiosks?.map((value: any, index: number) => <option key={`kiosk-${value.id}-${index}`} value={value.id}>{value.title}</option>)}\n                            </Form.Select>\n                        </Tab>\n                        <Tab eventKey=\"amenity\" title=\"Amenity\">\n                            <Form.Select className=\"m-3\" aria-label=\"Choose a Retailer\" value={formData.value} onChange={handleChangeAmenity}>\n                                <option value={''} disabled hidden>Choose Amenity...</option>\n                                {Object.keys(data.amenities)?.map((value: string) => (\n                                    <option key={`amenity-${value}`} value={value}>{data.amenities[value].name}</option>\n                                ))}\n                            </Form.Select>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                                <Tab.Pane eventKey={\"custom\"}>\n                    <Tabs\n                        variant=\"pills\"\n                        id=\"custom-tab-form\"\n                        activeKey={retailerTabsKey}\n                        onSelect={handleChangeTab}\n                     >\n                        <Tab eventKey=\"custom_text\" title=\"Text\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">text</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            name=\"custom_text\"\n                                            as=\"textarea\"\n                                            rows={3}\n                                            value={formData.custom_text}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                        <Tab eventKey=\"custom_image\" title=\"Image\">\n                            <Form.Group className=\"m-3\">\n                                <Row className=\"align-items-center mb-3\">\n                                    <Col sm=\"2\">\n                                        <Form.Label className=\"mb-0\">Image URL</Form.Label>\n                                    </Col>\n                                    <Col sm=\"10\">\n                                        <Form.Control\n                                            type=\"string\"\n                                            name=\"custom_image\"\n                                            value={formData.custom_image}\n                                            onChange={handleChange}\n                                        />\n                                    </Col>\n                                </Row>\n                            </Form.Group>\n                        </Tab>\n                    </Tabs>\n                                </Tab.Pane>\n                            </Tab.Content>\n                        </Col>\n                    </Row>\n                </Col>\n            </Tab.Container>\n            <Form.Group className=\"mb-3 mt-3\">\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Size</Form.Label>\n                    </Col>\n                    <Col>\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('size')}\n                                    onMouseDown={handleDecrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"size\"\n                                    type=\"text\"\n                                    value={formData.size}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('size')}\n                                    onMouseDown={handleIncrement('size')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >+</Button>\n                            </div>\n                            <div className=\"d-flex justify-content-center\" style={{ maxWidth: 80, flexDirection: 'column' }}>\n                                <Row>\n                                    <Col sm=\"4\">\n                                        <Form.Check\n                                            name=\"lock_size\"\n                                            id=\"lock_size\"\n                                            type=\"checkbox\"\n                                            //TODO use 'value' until api with lock_size will be working\n                                            value={formData.value}\n                                            checked={formData.value === '1'}\n                                            onChange={handleChangeLock}\n                                        />\n                                    </Col>\n                                    <Col sm=\"8\" className=\"p-0\">\n                                        <Form.Label htmlFor=\"lock_size\" className=\"mb-0\">Lock</Form.Label>\n                                    </Col>\n                                </Row>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Rotate</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('rotate')}\n                                    onMouseDown={handleDecrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"rotate\"\n                                    type=\"number\"\n                                    value={rotation ?? formData.rotate}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('rotate')}\n                                    onMouseDown={handleIncrement('rotate')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                            <div style={{maxWidth: 50, height: 50}}>\n                                <Button\n                                    onClick={() => rotateByFixedAngle('rotate', 45)}\n                                    onMouseDown={handleRotateByFixedAngle('rotate', 45)}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >\n                                    <ArrowClockwise size={'1rem'} />\n                                </Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset X</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetX')}\n                                    onMouseDown={handleDecrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n\n                                <Form.Control\n                                    name=\"offsetX\"\n                                    type=\"number\"\n                                    value={formData.offsetX}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetX')}\n                                    onMouseDown={handleIncrement('offsetX')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">Offset Y</Form.Label>\n                    </Col>\n                    <Col sm=\"8\">\n                        <Row style={{flexDirection: 'row'}}>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => decrementValue('offsetY')}\n                                    onMouseDown={handleDecrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                >-</Button>\n                            </div>\n                            <div style={{maxWidth: 80, padding: 0}}>\n                                <Form.Control\n                                    name=\"offsetY\"\n                                    type=\"number\"\n                                    value={formData.offsetY}\n                                    onChange={handleChange}\n                                />\n                            </div>\n                            <div style={{maxWidth: 50}}>\n                                <Button\n                                    onClick={() => incrementValue('offsetY')}\n                                    onMouseDown={handleIncrement('offsetY')}\n                                    onMouseUp={stopIntervals}\n                                    onMouseLeave={stopIntervals}\n                                    variant=\"outline-dark\"\n                                    style={{paddingLeft: '0.75rem', paddingRight: '0.75rem'}}\n                                  >+</Button>\n                            </div>\n                        </Row>\n                    </Col>\n                </Row>\n                <Row className=\"align-items-center mb-3\">\n                    <Col sm=\"3\" className=\"d-flex justify-content-start\">\n                        <Form.Label className=\"mb-0\">BG Color</Form.Label>\n                    </Col>\n                    <Col sm=\"3\" className=\"p-0\">\n                        <Form.Control\n                            name=\"bg_color\"\n                            type=\"string\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"2\">\n                        <Form.Control\n                            type=\"color\"\n                            name=\"bg_color\"\n                            value={getFormatedColor(formData.bg_color)}\n                            onChange={handleChange}\n                        />\n                    </Col>\n                    <Col sm=\"4\">\n                        <Row>\n                            <Col sm=\"3\">\n                                <input\n                                        name=\"transparent\"\n                                        id=\"transparent\"\n                                        type=\"checkbox\"\n                                        value={formData.transparent}\n                                        onChange={handleChange}\n                                ></input>\n                            </Col>\n                            <Col sm=\"9\" className=\"p-0\">\n                                <Form.Label htmlFor=\"transparent\" className=\"mb-0\">Transparent</Form.Label>\n                            </Col>\n                        </Row>\n                    </Col>\n                </Row>\n                {['retail_name', 'custom_text', 'retail_text'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"4\" className=\"d-flex justify-content-start\">\n                            <Form.Label className=\"mb-0\">Text Color</Form.Label>\n                        </Col>\n                        <Col sm=\"5\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                name=\"text_color\"\n                                type=\"color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                {['kiosk', 'amenity'].includes(formData.layer_type) && \n                    <Row className=\"align-items-center mb-3\">\n                        <Col sm=\"3\">\n                            <Form.Label className=\"mb-0\">Icon Color</Form.Label>\n                        </Col>\n                        <Col sm=\"6\">\n                            <Form.Control\n                                type=\"string\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                        <Col sm=\"3\">\n                            <Form.Control\n                                type=\"color\"\n                                name=\"text_color\"\n                                value={getFormatedColor(formData.text_color)}\n                                onChange={handleChange}\n                            />\n                        </Col>\n                    </Row>\n                }\n                <Row className=\"justify-content-center px-5 py-5\">\n                    <button onClick={handleOnSubmit} className=\"btn btn-success\">{formData.id.toString().startsWith('new-')? 'Save' : 'Update'}</button>\n                </Row>\n            </Form.Group>\n        </>\n    );\n}\n\nexport default MapboxForm;\nfunction clearKioskConfig(context: TMeshObjectContext) {\n    if (context && context.MeshObject) {\n        const obj = context.MeshObject[1];\n        if (obj && obj.userData && obj.userData.kioskConfig) {\n            obj.userData.kioskConfig = undefined;\n        }\n    }\n}\n\n","import { useMemo, useState } from \"react\";\nimport { IRetailer } from \"src/mapitApiTypes\";\n\ntype RetailerDataProps = {\n    centerId: string,\n    slug: string,\n    webApiURI: string,\n}\n\nexport type RetailerData = {\n    data: IRetailer | null,\n    isLoading: boolean,\n    isError: boolean,\n    error: string | null,\n}\n\nconst defaultData: RetailerData = {\n    data: null,\n    isLoading: false,\n    isError: false,\n    error: null,\n} \nconst useRetailerData = (props: RetailerDataProps): RetailerData => {\n    const {centerId, slug, webApiURI} = props;\n    const [data, setData] = useState<RetailerData>(defaultData);\n\n    useMemo(() => {\n        if (!slug || !centerId) {\n            setData({...defaultData});\n            return false;\n        }\n\n        let apiURI = webApiURI;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            setData({\n                isLoading: true,\n                data: null,\n                isError: false,\n                error: null,\n            })\n            fetch(`${apiURI}/v1/retailers/${slug}`, {\n                headers: {\n                    center_id: centerId,\n                }\n            }).then(\n                (response) => response.json()\n            ).then(data => {\n                setData({\n                    isLoading: false,\n                    isError: false,\n                    error: null,\n                    data: {\n                        id: data.id,\n                        retail_name: data.name,\n                        slug: data.slug,\n                        location: data.location && data.location !== '-'? data.location : '',\n                        retailer_phone: data.retailer_phone,\n                        retailer_description: data.global_retailer.description,\n                        logo: data.media.url,\n                        map_obj_name: '',\n                    }\n                });\n            }).catch((e: any) => {\n                setData({\n                    data: null,\n                    isLoading: false,\n                    isError: true,\n                    error: `Error fetch retaler data: ${e.message}`,\n                })\n            })\n        } else {\n            setData({\n                isLoading: false,\n                isError: true,\n                error: 'webApiURI not provided!',\n                data: null,\n            })\n        }\n\n    }, [centerId, slug, webApiURI]);\n\n    return data;\n\n}\n\nexport default useRetailerData;\n","import { Col, Form, FormGroup, Modal, Placeholder, Row, Spinner  } from \"react-bootstrap\";\nimport { XCircle } from \"react-feather\";\nimport { XCircleFill } from \"react-bootstrap-icons\";\nimport { IRetailer, MapObj } from \"src/mapitApiTypes\";\nimport { CSSProperties, ChangeEventHandler, MouseEventHandler, useMemo, useState } from \"react\";\nimport useRetailerData from \"src/Hooks/useRetailerData/useRetailerData\";\nimport styles from './RetailerInfoModal.module.css';\n\ntype RetailerInfoModalProps = {\n    amenity: string,\n    show: boolean,\n    onHide: () => void,\n    centerId: string,\n    retailers?: IRetailer[],\n    mapObjs?: MapObj[],\n    mapObjectName?: string,\n    webApiURI: string,\n    onClick?: (id: string, amenityType?: string) => void,\n    kioskId: string,\n}\n\nconst RetailerInfoList = ({retailers, retailer, isLoading, onClick, isAmenity, mapObjs, kioskId}: {retailers?: IRetailer[], retailer: IRetailer | null, isLoading: boolean, onClick?: (id: string) => void, isAmenity: boolean, mapObjs?: MapObj[], kioskId: string}) => {\n    const [retailerId, setRetailerId] = useState<string>('');\n\n    const handleOnClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n        e.preventDefault();\n        if (onClick) {\n            onClick(retailerId);\n        }\n    }\n\n    const onChange: ChangeEventHandler<HTMLSelectElement> = (e) => {\n        setRetailerId(e.target.value);\n    }\n\n    const filterRetailers = (retailers:IRetailer[], arrayObjects:MapObj[]) => {\n        return retailers.filter(retailer => \n            arrayObjects.some(obj => obj.retailer_id === retailer.id)\n        );\n    }\n\n    if (!isAmenity && (isLoading || !retailer )) {\n        return (\n        <div>\n            <div className={styles['retailer-info-spinner']} >\n                <Spinner animation=\"border\" role=\"status\" variant=\"secondary\"/>\n            </div>\n            <div className={styles['retailer-info-content']} >\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={5} /> <Placeholder bg=\"secondary\"  xs={3} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={7} />\n                </div>\n                <div>\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                    <Placeholder bg=\"secondary\"  xs={4} /> <Placeholder bg=\"secondary\"  xs={3} /> <Placeholder bg=\"secondary\"  xs={2} /> <Placeholder bg=\"secondary\"  xs={5} />\n                </div>\n            </div>\n        </div>\n        )\n    }\n\n    return (\n        <div>\n            {!!retailer && (\n                <>\n                    <div className={styles['retailer-logo']}>\n                        <img className={styles['img']} src={retailer.logo} alt={retailer.retail_name} />\n                    </div>\n                    <div className={styles['retailer-info-content']} >\n                        <div>\n                            <b>Retailer:</b> {retailer.retail_name}\n                        </div>\n                        {retailer.location &&\n                            <div>\n                                <b>Location:</b> {retailer.location}\n                            </div>\n                        }\n                        {retailer.retailer_phone &&\n                            <div>\n                                <b>Phone:</b> {retailer.retailer_phone}\n                            </div>\n                        }\n                        {retailer.retailer_description &&\n                            <div dangerouslySetInnerHTML={{ __html: retailer.retailer_description }}></div>\n                        }\n                    </div>\n                </>\n            )}\n            <Form className={styles['get-directions-from']}>\n                <FormGroup>\n                    <div className=\"d-flex align-items-center gap-3\">\n                        {!kioskId.length ?\n                            <>\n                                <Form.Select\n                                    name=\"retailer\"\n                                    onChange={onChange}\n                                    value={retailerId}\n                                >\n                                    <option value={''} disabled>Get direction from ...</option>\n                                    {filterRetailers(retailers ?? [], mapObjs ?? [])?.map((item, index) => {\n                                        if (retailer && item.id === retailer.id) return null;\n                                        return (\n                                            <option key={index} value={item.id}>{item.retail_name}</option>\n                                        )\n                                    }\n                                    )}\n                                </Form.Select>\n                                <button onClick={handleOnClick} className=\"btn btn-primary text-nowrap\">Map IT</button>\n                            </>\n                            : null\n                        }\n                    </div>\n                </FormGroup>\n            </Form>\n        </div>\n    );\n}\n\nconst RetailerInfoModal = (props: RetailerInfoModalProps) => {\n    const {\n        amenity,\n        show,\n        onHide,\n        centerId,\n        retailers,\n        mapObjs,\n        mapObjectName,\n        webApiURI,\n        onClick,\n        kioskId,\n    } = props;\n    const slug = useMemo(() => {\n        if (centerId && mapObjs && retailers && mapObjectName) {\n            const mapObj = mapObjs.find(item => item.map_obj_name === mapObjectName);\n            if (mapObj && mapObj.retailer_id) {\n                const retailer = retailers.find(item => item.id === mapObj.retailer_id);\n                if (retailer) {\n                    return retailer.slug;\n                }\n            }\n        }\n        return '';\n    }, [centerId, mapObjectName, mapObjs, retailers]);\n    const data = useRetailerData({ centerId, slug, webApiURI });\n    const handleOnClick = (retailerId: string) => {\n        if (!onClick) return;\n        let mapObj = null;\n        if (kioskId) {\n            mapObj = mapObjs?.find(item => parseInt(item?.kiosk_id?? '') === parseInt(kioskId));\n        } else {\n            mapObj = mapObjs?.find(item => parseInt(item.retailer_id) === parseInt(retailerId));\n        }\n\n        let mapObjectName = '';\n\n\n        if (mapObj) {\n            mapObjectName = mapObj.map_obj_name;\n        }\n\n        if (amenity) {\n            onClick(mapObjectName, amenity);\n        } else {\n            onClick(mapObjectName);\n        }\n    }\n\n    const isAmenity = (amenity !== '' || (mapObjectName? mapObjectName.startsWith('kiosk') : false)) && !(mapObjectName && (mapObjectName.startsWith('store') || mapObjectName.startsWith('big-store')));\n    return (\n        <Modal show={show} dialogClassName={styles['retailer-info-modal']} className=\"px-2\" onHide={onHide} centered>\n            <div className={styles['retailerInfoCloseBtn']}>\n                <XCircle onClick={onHide} size={24} color=\"white\" className={styles['close-x-circle']} />\n            </div>\n            <Modal.Body className=\"p-3\">\n                <RetailerInfoList retailers={retailers} retailer={data.data} isLoading={data.isLoading} onClick={handleOnClick} isAmenity={isAmenity} mapObjs={mapObjs} kioskId={kioskId} />\n            </Modal.Body>\n        </Modal>\n    )\n}\n\nexport default RetailerInfoModal;\n","import React, { CSSProperties, MouseEventHandler, forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from \"react\";\nimport { Canvas, ThreeEvent, context, useThree } from \"@react-three/fiber\";\nimport useMeshFloors, { textLogoNamePrefix } from \"../../Hooks/useMeshFloors\";\nimport { SceneProperties } from \"./SceneProperties\";\nimport { CameraProperties } from \"./CameraProperties\";\nimport { DoubleSide, Mesh, MeshLambertMaterial, Object3D } from \"three\";\nimport { IAmenitiesInteractiveList, IExtMesh, IJsonConfig, IMeshParams, IMeshValues, TMapMode, TMapSettingsProps } from \"src/types\";\nimport { FloorsMap } from \"./FloorsMap\";\nimport { useMapit2Data } from \"../../useMapit2Data\";\nimport { MapIt2Response, MapObj, MapObjToSave } from \"../../mapitApiTypes\";\nimport { Stats } from '@react-three/drei';\nimport UIComponent from \"../../components/UIComponent\";\nimport { MapCenterMarker } from \"./MapCenterMarker\";\nimport { delete_route_path } from \"src/helpers/route.helpers\";\nimport { useMeshObjectContext } from \"src/contexts/MeshObjectContextProvider\";\nimport MapboxForm from \"../../components/MapboxForm/MapboxForm\";\nimport styles from '../../MapBox.module.css';\nimport { Alert } from 'react-bootstrap';\nimport { hex_to_color } from \"src/helpers/misc\";\nimport RetailerInfoModal from \"./RetailerInfoModal\";\nimport { Vector3 } from \"three\";\nimport { amenitiesList } from \"src/helpers/amenities.helper\";\nimport { AmenityID } from \"src/MapBox\";\nimport { defaultVars } from \"src/defaults\";\n\ninterface ISceneComponentProps {\n    mapitData?: MapIt2Response;\n    config: Partial<IJsonConfig>;\n    selectedActiveObjectId: string;\n    setSelectedActiveObjectId: React.Dispatch<React.SetStateAction<string>>;\n    onMapDataUpdate?: (data: MapObj[]) => void;\n    onSettingsLoading?: (settings: MapIt2Response) => void;\n    webApiURI?: string;\n    mediaStorageURI?: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    onResetData?: (data: MapObj) => void;\n    deviceType?: string | \"\";\n    setCameraControlPosition?: (cameraControlPos: any) => void;\n    onExtractedAmenities?: (amenityIds: AmenityID[]) => void;\n}\n\nexport interface IZoomData {\n    direction: 'in' | 'out';\n}\n\nexport type TFormMapObjData = {\n    index: number,\n    data: MapObj,\n}\n\nconst SceneComponent = forwardRef((params: ISceneComponentProps, ref) => {\n    const { data, refreshData } = useMapit2Data({ mapitData: params.mapitData, CENTER_ID: params.config.CENTER_ID as string, webApiURI: params.webApiURI });\n    const [fromObjectId, setFromObjectId] = useState<string>('');\n    const [hovered, setHovered] = useState<boolean>(false);\n    const [selectedFloorIndex, setSelectedFloorIndex] = useState<number>(-1);\n    const [formMapObjData, setFormMapObjData] = useState<TFormMapObjData[]>([]);\n    const [cameraControlState, setCameraControlState] = useState<any>(null);\n    const [cameraPos, setCameraPos] = useState<{ x: number, y: number, z: number } | null>();\n    const [controlPos, setControlPos] = useState<{ x: number, y: number, z: number } | null>();\n    const [canvasWidth, setCanvasWidth] = useState<number | undefined>(0);\n    const { selectedActiveObjectId, setSelectedActiveObjectId, onMapDataUpdate, deviceType, setCameraControlPosition } = params;\n\n    const [amenityTargetType, setAmenityTargetType] = useState<string>('');\n    const [selectedAmenityType, setSelectedAmenityType] = useState<string>('');\n    const [zoom, setZoom] = useState<IZoomData | null>(null);\n\n    const [cameraLength, setCameraLength] = useState<number>(0);\n\n    const statsParentRef = useRef<HTMLDivElement | null>(null);\n    const canvasWidthRef = useRef<number | undefined | null>(null);\n    canvasWidthRef.current = canvasWidth;\n    const cameraControlStateRef = useRef<any>(null);\n    cameraControlStateRef.current = cameraControlState;\n    const deviceTypeRef = useRef<string | undefined | null>(null);\n    deviceTypeRef.current = deviceType;\n    const floorsMapRef = useRef<{ resetCamera: (fullReset?: boolean, cameraControlsStates?: any) => void | null }>(null);\n\n    const handleCameraLength = useCallback((length: number) => {\n        setCameraLength(length);\n    }, [])\n\n    const handleFloorChange = (floorIndex: number): MouseEventHandler<HTMLDivElement> => (e) => {\n        setSelectedFloorIndex(floorIndex);\n    }\n\n    const meshFloors = useMeshFloors(data, params.config, params.config.ROLE, params.mediaStorageURI);\n    const mapCenterMarkerRef = useRef(null);\n    const labelRef = useRef<HTMLDivElement>(null);\n    const [currentHoveredObject, setCurrentHoveredObject] = useState<Object3D | null>(null);\n    const context = useMeshObjectContext();\n    const {SetMeshObject} = context;\n\n    const [showRetailerInfo, setShowRetailerInfo] = useState<boolean>(false);\n    const config = meshFloors.config;\n    const floors = meshFloors.floors;\n    const meshParams = meshFloors.meshParams;\n\n    const {setConfig: setCxtConfig} = context;\n\n    useEffect(() => {\n        if (context && meshFloors && meshFloors.config) {\n            setCxtConfig(meshFloors.config);\n        }\n    }, [meshFloors, setCxtConfig])\n\n    useImperativeHandle(ref, () => ({\n        refreshData,\n        createRouteToAmenity: handleAmenityClick,\n    }))\n\n    useEffect(() => {\n        if (statsParentRef.current) {\n            const resizeWidth = () => {\n                setCanvasWidth(statsParentRef?.current?.offsetWidth);\n            }\n            window.addEventListener('resize', () => {\n                resizeWidth();\n                // Update your map or camera settings based on newWidth\n            });\n            resizeWidth();\n        }\n    }, [statsParentRef.current]);\n\n    useEffect(() => {\n        if (data && data.camera_controls_states) {\n            setCameraControlState(data.camera_controls_states);\n            setCameraControlPos(data.camera_controls_states);\n        }\n    }, [data]);\n\n    useEffect(() => {\n        if (cameraControlStateRef.current) {\n            setCameraControlPos(cameraControlStateRef.current);\n        }\n    }, [deviceType, canvasWidth])\n\n    const setCameraControlPos = (camera_controls_states: any) => {\n        if (config?.ROLE === \"DISPLAY_APP\") {\n            setCameraPos(camera_controls_states.display_app.camera)\n            setControlPos(camera_controls_states.display_app.controls)\n        } else if (config?.ROLE === \"WP_SITE\" && canvasWidth) {\n            if (canvasWidth > 1024) {\n                setCameraPos(camera_controls_states.desktop.camera)\n                setControlPos(camera_controls_states.desktop.controls)\n            } else if (canvasWidth > 600) {\n                setCameraPos(camera_controls_states.tablet.camera)\n                setControlPos(camera_controls_states.tablet.controls)\n            } else {\n                setCameraPos(camera_controls_states.mobile.camera)\n                setControlPos(camera_controls_states.mobile.controls)\n            }\n        } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n            if (deviceTypeRef.current === \"desktop\") {\n                setCameraPos(camera_controls_states.desktop.camera)\n                setControlPos(camera_controls_states.desktop.controls)\n            } else if (deviceTypeRef.current === \"display_app\") {\n                setCameraPos(camera_controls_states.display_app.camera)\n                setControlPos(camera_controls_states.display_app.controls)\n            } else if (deviceTypeRef.current === \"mobile\") {\n                setCameraPos(camera_controls_states.mobile.camera)\n                setControlPos(camera_controls_states.mobile.controls)\n            } else if (deviceTypeRef.current === \"tablet\") {\n                setCameraPos(camera_controls_states.tablet.camera)\n                setControlPos(camera_controls_states.tablet.controls)\n            }\n        }\n    }\n    const {onSettingsLoading} = params;\n    useEffect(() => {\n        if (data && meshFloors.config && onSettingsLoading) {\n            onSettingsLoading?.(\n                {\n                    ...data,\n                    settings: {\n                        ...data.settings,\n                        STYLE: meshFloors.config.STYLE,\n                        ACCENT_COLOR: meshFloors.config.ACCENT_COLOR.getHexString(),\n                        AMENITIES_NAV_BG_COLOR: meshFloors.config.AMENITIES_NAV_BG_COLOR.getHexString(),\n                        AMENITIES_NAV_ICON_COLOR: meshFloors.config.AMENITIES_NAV_ICON_COLOR.getHexString(),\n                        BASE_COLOR: meshFloors.config.BASE_COLOR.getHexString(),\n                        BIG_STORE_DEFAULT_COLOR: meshFloors.config.BIG_STORE_DEFAULT_COLOR.getHexString(),\n                        BOUNDARY_COLOR: meshFloors.config.BOUNDARY_COLOR.getHexString(),\n                        BOUNDARY_THICKNESS: meshFloors.config.BOUNDARY_THICKNESS.toString(),\n                        MAP_BACKGROUND_COLOR: meshFloors.config.MAP_BACKGROUND_COLOR.getHexString(),\n                        OVERLAY_COLOR: meshFloors.config.OVERLAY_COLOR.getHexString(),\n                        OVERLAY_OPACITY: meshFloors.config.OVERLAY_OPACITY.toString(),\n                        STORE_DEFAULT_COLOR: meshFloors.config.STORE_DEFAULT_COLOR.getHexString(),\n                        STORE_TEXT_COLOR: meshFloors.config.STORE_TEXT_COLOR.getHexString(),\n                        WALL_COLOR: meshFloors.config.WALL_COLOR.getHexString(),\n                        WALL_THICKNESS: meshFloors.config.WALL_THICKNESS.toString(),\n                        KIOSK_SIZE: meshFloors.config.KIOSK_SIZE ? meshFloors.config.KIOSK_SIZE : '15',\n                        STORE_HEIGHT: meshFloors.config.STORE_HEIGHT || '8',\n                        CAMERA_MAX_DISTANCE: meshFloors.config.CAMERA.maxDistance.toString(),\n                        CAMERA_MIN_DISTANCE: meshFloors.config.CAMERA.minDistance.toString(),\n                        ZOOM_STEP: meshFloors.config.ZOOM_STEP?? defaultVars.ZOOM_STEP?? '100',\n                    }\n                });\n        }\n    }, [data, meshFloors, onSettingsLoading])\n\n    const handleCameraAndControlsChange = useCallback((camPos: { x: number, y: number, z: number }, ctrlTarget: { x: number, y: number, z: number }) => {\n        if(canvasWidthRef.current === 0) return;\n        if (config?.ROLE === \"DISPLAY_APP\") {\n            setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n        } else if (config?.ROLE === \"WP_SITE\" && canvasWidthRef.current) {\n            if (canvasWidthRef.current > 1024) {\n                setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n            } else if (canvasWidthRef.current > 600) {\n                setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n            } else {\n                setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n            }\n        } else if (config?.ROLE === \"PORTAL_RESPONSIVE\") {\n            if (deviceTypeRef.current === \"desktop\") {\n                setCameraControlState({ ...cameraControlStateRef.current, \"desktop\": { camera: camPos, controls: ctrlTarget } });\n            } else if (deviceTypeRef.current === \"display_app\") {\n                setCameraControlState({ ...cameraControlStateRef.current, \"display_app\": { camera: camPos, controls: ctrlTarget } });\n            } else if (deviceTypeRef.current === \"mobile\") {\n                setCameraControlState({ ...cameraControlStateRef.current, \"mobile\": { camera: camPos, controls: ctrlTarget } });\n            } else if (deviceTypeRef.current === \"tablet\") {\n                setCameraControlState({ ...cameraControlStateRef.current, \"tablet\": { camera: camPos, controls: ctrlTarget } });\n            }\n        }\n    },[config?.ROLE])\n\n    useEffect(() => {\n        if (cameraControlStateRef.current && setCameraControlPosition) {\n            setCameraControlPosition(cameraControlStateRef.current);\n        }\n    }, [cameraControlState, setCameraControlPosition])\n\n    // if selectedActiveObjectId is not -1, then it is set to the DEFAULT_SELECTED_STORE\n    let activeFromObjectId = '';\n    let activeObjectId = config?.DEFAULT_SELECTED_STORE ?? '';\n    if (selectedActiveObjectId) {\n        activeObjectId = selectedActiveObjectId;\n        activeFromObjectId = fromObjectId;\n    } else if (amenityTargetType) {\n        activeObjectId = '';\n        activeFromObjectId = fromObjectId;\n        // activeFromObjectId = '';\n    }\n\n    const handleChangeMapitData = (index: number, newData: MapObj) => {\n        const itemIndex = formMapObjData.findIndex((item) => item.data.map_obj_name === newData.map_obj_name);\n\n        if (itemIndex !== -1) {\n            formMapObjData[itemIndex] = { index, data: { ...newData } };\n        } else {\n            formMapObjData.push({ index, data: { ...newData } })\n        }\n\n        setFormMapObjData([...formMapObjData]);\n    }\n\n    const getMapitData = useCallback((): MapIt2Response | null => {\n        if (data && data.map_objs) {\n            if (formMapObjData) {\n                formMapObjData.forEach((value) => {\n                    const index = data.map_objs.findIndex((item: MapObj) => item.map_obj_name === value.data.map_obj_name);\n                    if (index !== -1) {\n                        data.map_objs[index] = { ...value.data };\n                    }\n                })\n            }\n        }\n\n        return data;\n    }, [data, formMapObjData])\n\n    const handleOnSubmit = (data: MapObjToSave) => {\n        if (params.onSubmit) {\n            params.onSubmit(data, refreshData);\n        }\n    }\n\n    useEffect(() => {\n        document.body.style.cursor = currentHoveredObject ? 'pointer' : 'default';\n    }, [currentHoveredObject]);\n\n    const [currKioskObj, currKioskFloorIndex, kioskError]: [Mesh | null, number, string] = useMemo(() => {\n        if (!config) {\n            return [null, 0, ''] // not an error - loading/initializing\n        }\n        let kioskError = '';\n        let currKioskObj: Mesh | null = null;\n        let currKioskFloorIndex = 0;\n        if (config.KIOSKS && config.KIOSKS[config.KIOSK]) {\n            const kioskMapObjName = config.KIOSKS[config.KIOSK].map_obj_name;\n            const currKioskMeshParams = meshParams.flat().find(mesh => mesh.object_id === kioskMapObjName);\n            if (currKioskMeshParams) {\n                currKioskObj = currKioskMeshParams.mesh;\n                currKioskFloorIndex = currKioskMeshParams.floor_index;\n            }\n        } else {\n            if (config.ROLE === 'WEBSITE') {\n                // kioskError = \"This Kiosk is not assigned in MAP, so routes won't work. Please assign the Kiosk from Edit Map first.\";\n            }\n            if (config.ROLE === 'WEBSITE') {\n                console.error('Kiosk not found in config');\n                // kioskError = 'Map initialization error';\n            }\n        }\n\n        return [currKioskObj, currKioskFloorIndex, kioskError]\n    }, [config, meshParams]);\n\n    const resetHandle = () => {\n\n        setSelectedFloorIndex(currKioskFloorIndex);\n        setSelectedActiveObjectId('');\n        setFromObjectId('');\n        setAmenityTargetType('');\n\n            if (floorsMapRef.current) {\n                if (config?.ROLE === \"PORTAL_RESPONSIVE\" && data && data.camera_controls_states) {\n                    let ccs = null;\n                    if (deviceTypeRef.current === \"desktop\") {\n                        ccs = { ...data.camera_controls_states.desktop }\n                    } else if (deviceTypeRef.current === \"display_app\") {\n                        ccs = { ...data.camera_controls_states.display_app }\n                    } else if (deviceTypeRef.current === \"mobile\") {\n                        ccs = { ...data.camera_controls_states.mobile }\n                    } else if (deviceTypeRef.current === \"tablet\") {\n                        ccs = { ...data.camera_controls_states.tablet }\n                    }\n                    console.debug({\n                        device: deviceTypeRef.current,\n                        ccs\n                    })\n                    if (ccs) {\n                        floorsMapRef?.current?.resetCamera(false, ccs);\n                    }\n                } else {\n\n                    floorsMapRef?.current?.resetCamera();\n\n                }\n            }\n\n    }\n\n    useEffect(() => {\n        if (!config) {\n            return;\n        }\n\n        const kiosks: IMeshValues[] = [];\n        meshFloors.meshParams.forEach(floor => {\n            floor.forEach(item => {\n                if (item?.mesh_type === \"kiosk\") {\n                    kiosks.push(item);\n                }\n            })\n        })\n        // console.log('kiosks', kiosks);\n\n        const mapObjectIdToKiosk = new Map();\n        const mapObjectIdToLogo = new Map();\n        kiosks.forEach(item => {\n            mapObjectIdToKiosk.set(item.object_id, item.mesh);\n        });\n        // console.log('meshFloors.storeLogos', meshFloors.storeLogos)\n        meshFloors.storeLogos.filter(item => item !== undefined).forEach(floor => {\n            floor.forEach(item => {\n                mapObjectIdToLogo.set(item.storeLogo.object_id, item.storeLogo);\n            })\n        });\n        // console.log('mapObjectIdToKiosk', mapObjectIdToKiosk);\n        // console.log('mapObjectIdToLogo', mapObjectIdToLogo);\n\n        const currKioskId = (currKioskObj as IExtMesh)?.object_id;\n        const currKioskLogo: IExtMesh[] = [];\n        const mapData = getMapitData();\n        kiosks.forEach(item => {\n            const kiosk = item.mesh;\n            const logo = mapObjectIdToLogo.get('custom-layer-' + item.object_id);\n            const mapObj = mapData?.map_objs.find(item => item.map_obj_name === kiosk.object_id);\n            if (kiosk && logo) {\n                //TODO use 'value' until api with lock_size will be working\n                // const newKoef = mapObj?.value === '1' ? 1 : 1 - koef;\n                logo.userData.kioskConfig = {\n                    lockSize: mapObj?.value === '1',\n                    blink: item.object_id === currKioskId,\n                    size: mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)\n                }\n                // logo.userData.htmlContent = <MapCenterMarker lockSize={mapObj?.value === '1'} blink={item.object_id === currKioskId} size={mapObj ? Number(mapObj.size) : Number(config.KIOSK_SIZE)}/>\n                logo.userData.distanceFactor = mapObj?.value === '1' ? 1500 : undefined;\n                logo.visible = true;\n\n                currKioskLogo.push(logo);\n            }\n        });\n\n        // return () => {\n        //     currKioskLogo?.forEach(mesh => {\n        //         mesh.userData.htmlContent = null;\n        //     });\n        // }\n    }, [meshFloors, currKioskObj, config, getMapitData]);\n\n\n    useEffect(() => {\n        if (onMapDataUpdate) {\n            const exportData: MapObj[] = [];\n\n            formMapObjData.forEach((value) => {\n                exportData.push({ ...value.data });\n            })\n        }\n    }, [formMapObjData])\n\n    useEffect(() => {\n        document.body.style.cursor = hovered ? 'pointer' : 'auto';\n\n    }, [hovered])\n\n    useEffect(() => {\n        if (config && data && data.retailers && data.map_objs && config.SELECTED_RETAILER_SLUG) {\n            const retailer = data.retailers.find(item => {\n                return item.slug === config.SELECTED_RETAILER_SLUG;\n            })\n            if (retailer) {\n                const mapObject = data.map_objs.find(item => item.retailer_id === retailer.id);\n                if (mapObject) {\n                    setSelectedActiveObjectId(mapObject.map_obj_name);\n                }\n            }\n        }\n    }, [config, data, setSelectedActiveObjectId])\n\n\n    const handleMeshObjectContext = useCallback((object: IExtMesh) => {\n            const textParams = meshFloors.textParams[selectedFloorIndex === -1 ? 0 : selectedFloorIndex]?.find(value => {\n                return value.textMesh.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const logoParams = meshFloors.storeLogos[selectedFloorIndex === -1 ? 0 : selectedFloorIndex]?.find(value => {\n                return value.storeLogo.object_id === `${textLogoNamePrefix}${(object as IExtMesh).object_id}`\n            })\n\n            const result = [object as IExtMesh];\n\n            if (textParams) {\n                result.push(textParams.textMesh);\n            }\n\n            if (logoParams) {\n                result.push(logoParams.storeLogo)\n            }\n\n            SetMeshObject([...result]);\n    }, [meshFloors.storeLogos, meshFloors.textParams, SetMeshObject, selectedFloorIndex])\n\n    useEffect(() => {\n        if (meshFloors.meshParams && meshFloors.meshParams.length && selectedActiveObjectId) {\n            const object = meshFloors.meshParams[selectedFloorIndex === -1 ? 0 : selectedFloorIndex].find((value) => value.object_id === selectedActiveObjectId);\n            if (object) {\n                //@ts-ignore\n                handleMeshObjectContext(object);\n            }\n            //@ts-ignore\n        }\n    }, [meshFloors, handleMeshObjectContext, selectedActiveObjectId, selectedFloorIndex])\n\n    const handleAmenityClick = useCallback((type: string) => {\n        setSelectedActiveObjectId('')\n        setFromObjectId('')\n        if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n            setSelectedAmenityType(type)\n            setShowRetailerInfo(true);\n        } else {\n            setAmenityTargetType(type)\n        }\n    }, [config, setSelectedActiveObjectId]);\n\n    const onClick = useCallback((e: ThreeEvent<MouseEvent>) => {\n        e.stopPropagation();\n        // console.log('onClick', e.object)\n\n        const targetId = (e.object as IExtMesh).object_id;\n        const mapObj = data?.map_objs.find(item => item.map_obj_name === targetId);\n        if (mapObj && mapObj.layer_type === 'amenity') {\n            handleAmenityClick(mapObj.value);\n            if (config && config.ROLE === 'PORTAL') {\n                handleMeshObjectContext(e.object as IExtMesh);\n                setSelectedActiveObjectId(targetId ?? '');\n            }\n        } else {\n            handleMeshObjectContext(e.object as IExtMesh);\n            setSelectedActiveObjectId(targetId ?? '');\n            // console.log('set active object', targetId);\n            setAmenityTargetType('');\n            setFromObjectId('');\n            if (config && config.ROLE !== 'PORTAL' && !config.KIOSK) {\n                setShowRetailerInfo(true);\n            }\n        }\n    }, [config, handleAmenityClick, setSelectedActiveObjectId, data?.map_objs, handleMeshObjectContext]);\n\n    const onCameraMove = useCallback((e: any) => {\n        if (!mapCenterMarkerRef || !mapCenterMarkerRef.current) {\n            return\n        }\n    }, []);\n\n    const onPointerEnter = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        console.debug()\n        setHovered(true);\n        // console.log('onPointerEnter', e.object)\n        if (!e.object.userData.storeName && config && config.ROLE !== 'PORTAL') {\n            // console.warn('onPointerEnter no storeName', e.object);\n            return;\n        }\n        setCurrentHoveredObject(e.object);\n    }, [config]);\n\n    const onPointerLeave = useCallback((e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerLeave', e.object)\n        setCurrentHoveredObject(null);\n        setHovered(false);\n        if (labelRef && labelRef.current) {\n            labelRef.current.style.display = 'none';\n        }\n    }, []);\n\n    const onPointerMove = (e: ThreeEvent<PointerEvent>) => {\n        e.stopPropagation();\n        // console.log('onPointerMove', e.object)\n\n        if (labelRef && labelRef.current && e.object.userData.storeName && e.object.userData.storeName !== '') {\n            labelRef.current.style.top = `${e.offsetY - 65}px`;\n            labelRef.current.style.left = `${e.offsetX}px`;\n            labelRef.current.style.display = 'block';\n        } else if (labelRef.current) {\n            labelRef.current.style.display = 'none';\n        }\n    }\n\n    const messageStyle: CSSProperties = {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%',\n    }\n\n    if (data && (!data.floors || data.floors.length <= 0)) {\n        return <div style={messageStyle}>Map doesn't have any floors</div>\n    }\n\n    if (!config || !meshFloors.meshParams.length) {\n        console.warn('LOADING MAP')\n        if (config?.ROLE === 'WP_SITE') {\n            return <div style={messageStyle}>No map for Center</div>\n        }\n        return <div style={messageStyle}>Map loading, please wait...</div>\n    }\n\n    if (kioskError) {\n        return <div style={messageStyle}>{kioskError}</div>\n    }\n\n    const currentFloorIndex = selectedFloorIndex > -1 ? selectedFloorIndex : currKioskFloorIndex;\n\n    if (!currKioskObj && config.ROLE === 'WEBSITE') {\n        console.error('NO KIOSK OBJECT FOUND');\n        // return <div style={messageStyle}>Map initialization error</div>\n    }\n\n    // make sure that meshFloors conditionals are not null\n    const meshFloorsChecked: IMeshParams = meshFloors as IMeshParams;\n\n\n    let hoverObject = currentHoveredObject as IExtMesh\n    let hoverObjectId = '';\n    if (hoverObject && hoverObject.object_id) {\n        hoverObjectId = hoverObject.object_id;\n    }\n\n    const handleRetailerInfoOnClick = (retailerId: string, amenityType?: string) => {\n        if (!amenityType) {\n            setFromObjectId(retailerId);\n        } else {\n            // setSelectedActiveObjectId(retailerId);\n            setFromObjectId(retailerId);\n            setAmenityTargetType(amenityType);\n        }\n        setShowRetailerInfo(false);\n    }\n\n    return (\n        <>\n            {config.ROLE === 'PORTAL' &&\n                <div className={styles['mapbox-admin-form']}>\n                    {!selectedActiveObjectId ?\n                        <Alert variant=\"info\">Select a store to customize.</Alert>\n                        :\n                        <MapboxForm\n                            floorIndex={currentFloorIndex}\n                            meshFloors={meshFloors}\n                            config={config}\n                            data={getMapitData()}\n                            setData={handleChangeMapitData}\n                            selectedId={selectedActiveObjectId}\n                            centerId={params.config.CENTER_ID as string}\n                            onSubmit={handleOnSubmit}\n                            apiURI={params.webApiURI}\n                            onResetData={params.onResetData}\n                        />\n                    }\n                </div>\n            }\n\n            <div ref={statsParentRef} style={{ position: 'relative', width: '100%' }}>\n                <UIComponent\n                    accentColor={config.ACCENT_COLOR.getStyle()}\n                    floors={floors}\n                    selectedFloorIndex={currentFloorIndex}\n                    handleFloorChange={handleFloorChange}\n                    amenitiesList={amenitiesList}\n                    handleAmenityClick={handleAmenityClick}\n                    reset={resetHandle}\n                    zoomIn={() => setZoom({ direction: 'in' })}\n                    zoomOut={() => setZoom({ direction: 'out' })}\n                    role={config.ROLE}\n                    mapObjs={data?.map_objs}\n                    onExtractedAmenities={params.onExtractedAmenities}\n                />\n                <Canvas style={{ position: 'absolute', top: 0, left: 0 }} flat>\n                    {Number(params.config.STATS) ? <Stats className={styles.stats} parent={statsParentRef} /> : null}\n                    <SceneProperties background={config.MAP_BACKGROUND_COLOR} />\n                    <CameraProperties near={1} far={config.CAMERA.far} fov={config.CAMERA.fov} />\n                    {/*<axesHelper args={[5000]} />*/}\n\n                    <ambientLight intensity={1} color={'#c4c4c4'} />\n                    <directionalLight position={[0, 400, 0]} color={'#ffffff'} intensity={0.3} />\n                    <directionalLight position={[0, 0, 400]} color={'#c4c4c4'} intensity={0.2} />\n                    <directionalLight position={[0, 0, -400]} color={'#c4c4c4'} intensity={0.2} />\n                    <FloorsMap\n                        onCameraMove={onCameraMove}\n                        meshFloors={meshFloorsChecked}\n                        activeObjectId={activeObjectId}\n                        hoverObjectId={hoverObjectId}\n                        // @ts-ignore\n                        currKioskObj={currKioskObj}\n                        currKioskFloorIndex={currKioskFloorIndex}\n                        routeTargetId={activeObjectId}\n                        routeTargetFromId={activeFromObjectId}\n                        currentFloorIndex={currentFloorIndex}\n                        onPointerEnter={onPointerEnter}\n                        onPointerLeave={onPointerLeave}\n                        onPointerMove={onPointerMove}\n                        onClick={onClick}\n                        handleChangeFloor={handleFloorChange}\n                        amenityTargetType={amenityTargetType}\n                        escalatorNodes={meshFloors.escalator_nodes}\n                        zoom={zoom}\n                        handleCameraLength={handleCameraLength}\n                        config={config}\n                        ref={floorsMapRef}\n                        cameraPos={cameraPos}\n                        controlPos={controlPos}\n                        handleCameraAndControlsChange={handleCameraAndControlsChange}\n                    />\n                </Canvas>\n                <div ref={labelRef}\n                    style={{\n                        position: 'absolute',\n                        padding: 10,\n                        background: '#ffffff',\n                        fontWeight: 600,\n                        color: '#000000',\n                        fontSize: 16,\n                        display: currentHoveredObject ? 'block' : 'none',\n                        top: 300,\n                        left: 400,\n                        opacity: .8,\n                    }}\n                >\n                    <div>\n                        {currentHoveredObject && currentHoveredObject.userData.storeName}\n                    </div>\n                </div>\n\n            </div>\n\n            <RetailerInfoModal\n                amenity={selectedAmenityType}\n                show={showRetailerInfo}\n                onHide={() => setShowRetailerInfo(false)}\n                centerId={params.config.CENTER_ID ? params.config.CENTER_ID.toString() : ''}\n                mapObjectName={selectedActiveObjectId}\n                retailers={data?.retailers}\n                mapObjs={data?.map_objs}\n                webApiURI={params.webApiURI ?? ''}\n                onClick={handleRetailerInfoOnClick}\n                kioskId={config.KIOSK.toString()}\n            />\n        </>\n    )\n});\n\n\n\nexport default SceneComponent;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { IRetailer, MapIt2Response, Settings } from \"./mapitApiTypes\";\nimport demoData from './demo/data.json';\n\ninterface useMapIt2DataProps {\n    CENTER_ID: string;\n    mapitData?: MapIt2Response;\n    webApiURI?: string;\n}\n\ntype Mapit2DataReturn = {\n    data: MapIt2Response | null,\n    refreshData: () => void,\n}\n\n/**\n * This is a hook that fetches the mapit2 data from the server by CENTER_ID. or uses the data passed in.\n * @param CENTER_ID\n * @param mapitData\n */\nexport function useMapit2Data({ CENTER_ID, mapitData, webApiURI }: useMapIt2DataProps): Mapit2DataReturn {\n    const [data, setData] = useState<MapIt2Response | null>(null);\n\n    if (!CENTER_ID && !mapitData) {\n        console.error('useMapit2Data requires either CENTER_ID or mapitData');\n    }\n\n    const getData = useCallback(() => {\n        let apiURI = webApiURI || null;\n\n        if (apiURI) {\n            const r = /\\/$/;\n            apiURI = apiURI.replace(r, '');\n            const retailersApiUri = `${apiURI}/v1/retailers?limit=100&page=1`;\n            const mapObjsApiUri = `${apiURI}/v1/mapit2/data`;\n            const floorsApiUri = `${apiURI}/v1/mapit2/floors?limit=100&offset=0`;\n            const kioskApiUri = `${apiURI}/v1/display_kiosks?limit=100&page=1&display_type_id=1`;\n            const settingsApiUri = `${apiURI}/v1/mapit2/settings/${CENTER_ID}`;\n            const responsiveApiUri = `${apiURI}/v1/mapit2/responsive/${CENTER_ID}`\n\n            const retailersPromise = fetch(retailersApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { console.error(e) })\n\n            const mapObjsPromise = fetch(mapObjsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => { console.error(e) })\n\n            const floorsPromise = fetch(floorsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            })\n                .then(data => {\n                    if (!data\n                        || !data.items\n                        || (data.items && !data.items.length)) {\n                        console.error('Empty floors data from server');\n                    }\n                    return data;\n                }).catch(e => { console.error(e) })\n\n            const kiosksPromise = fetch(kioskApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                },\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json()\n            }).catch(e => { console.error(e) })\n\n            const settingsPromise = fetch(settingsApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    console.error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { console.error(e) })\n\n            const responsivePromise = fetch(responsiveApiUri, {\n                headers: {\n                    center_id: CENTER_ID,\n                }\n            }).then(response => {\n                if (!response.ok) {\n                    throw new Error(`Server error: [${response.status}] [${response.statusText}] [${response.url}]`);\n                }\n                return response.json();\n            }).catch(e => { throw new Error(e) })\n\n            Promise.all<Array<any>>([\n                retailersPromise,\n                mapObjsPromise,\n                floorsPromise,\n                kiosksPromise,\n                settingsPromise,\n                responsivePromise\n            ]).then(data => {\n                if (data.length >= 5) {\n                    const responseData: Partial<MapIt2Response> = {};\n                    responseData.retailers = data[0].items.map((item: any): IRetailer => ({\n                        id: item.id,\n                        retail_name: item.name,\n                        slug: item.slug,\n                        location: item.location,\n                        retailer_phone: '',\n                        retailer_description: '',\n                        logo: item.media.url,\n                        map_obj_name: '',\n                    }));\n                    responseData.map_objs = [...data[1].items].map(item => ({\n                        ...item,\n                        offsetX: item.offset_x,\n                        offsetY: item.offset_y,\n                    }));\n                    responseData.floors = [...data[2].items];\n                    responseData.settings = {\n                        ...demoData.settings as Settings,\n                        KIOSK_SIZE: \"1\",\n                    }\n                    responseData.kiosks = [];\n                    responseData.amenities = { ...demoData.amenities };\n                    responseData.kiosks = [...data[3].items];\n                    const settings: Settings = data[4]?.settings ? data[4].settings : {\n                        \"STYLE\": \"3D\",\n                        \"MAP_BACKGROUND_COLOR\": \"FFFFFF\",\n                        \"ACCENT_COLOR\": \"4EA5FF\",\n                        \"STORE_DEFAULT_COLOR\": \"E2E2E2\",\n                        \"BIG_STORE_DEFAULT_COLOR\": \"3D3D3D\",\n                        \"WALL_THICKNESS\": \"0.6\",\n                        \"WALL_COLOR\": \"888888\",\n                        \"BOUNDARY_THICKNESS\": \"0.8\",\n                        \"BOUNDARY_COLOR\": \"888888\",\n                        \"BASE_COLOR\": \"25292B\",\n                        \"STORE_TEXT_COLOR\": \"222222\",\n                        \"OVERLAY_COLOR\": \"FFFFFF\",\n                        \"OVERLAY_OPACITY\": \"0.7\",\n                        \"AMENITIES_NAV_BG_COLOR\": \"000000\",\n                        \"AMENITIES_NAV_ICON_COLOR\": \"FFFFFF\",\n                        \"ZOOM_STEP\": \"100\",\n                    };\n                    if (data[5]) {\n                        responseData.camera_controls_states = data[5];\n                    } else {\n                        responseData.camera_controls_states = { ...demoData.camera_controls_states };\n                    }\n                    responseData.settings = settings;\n\n                    setData({ ...responseData as MapIt2Response })\n                }\n            })\n        }\n    }, [CENTER_ID, webApiURI])\n\n    useEffect(() => {\n        if (mapitData) {\n            setData(mapitData);\n            return;\n        }\n\n        if (!CENTER_ID) {\n            return;\n        }\n\n        getData();\n\n    }, [CENTER_ID, mapitData, getData]);\n\n    const refreshData = () => getData();\n    return { data, refreshData };\n}","import React, { MutableRefObject, useEffect, useRef, useState } from 'react';\nimport styles from './MapBox.module.css';\nimport SceneComponent from './components/SceneComponent/SceneComponent';\nimport {isMapIt2Response, MapIt2Response, MapObj, MapObjToSave} from \"./mapitApiTypes\";\nimport {IJsonConfig, TMapMode, TMapSettingsProps, TRoles} from \"./types\";\nimport MeshObjectContextProvider from 'src/contexts/MeshObjectContextProvider';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nexport type MapBoxRefFs = {\n  refreshData: () => void,\n  createRouteToAmenity: (amenityId: AmenityID) => void;\n}\n\nexport type AmenityID = 'atm' | 'management' | 'playarea' | 'restroom' | 'family-restroom' | 'elevator' | 'security' | 'dog-poop-station' ;\n\nexport interface IAppProps {\n    mapitData?: unknown;\n    config: Partial<IJsonConfig>;\n    stats?: boolean;\n    onSettingsLoading?: (settings: MapIt2Response) => void;\n    webApiURI?: string;\n    mediaStorageURI?: string;\n    onSubmit?: (data: MapObjToSave, refreshData?: () => void) => void;\n    refObj?: MutableRefObject<MapBoxRefFs | null> | undefined,\n    onResetData?: (data: MapObj) => void;\n    deviceType?: string | \"\";\n    setCameraControlPosition?: (cameraControlPos: any) => void;\n    onExtractedAmenities?: (amenityIds: AmenityID[]) => void\n}\n\n\nfunction MapBox({ mapitData, config, onSettingsLoading, webApiURI, mediaStorageURI, onSubmit, refObj, deviceType, setCameraControlPosition, onResetData, onExtractedAmenities }: IAppProps) {\n  const [selectedActiveObjectId, setSelectedActiveObjectId] = useState<string>('');\n  const [mapData, setMapData] = useState<any>(undefined);\n\n  useEffect(() => {\n    setMapData(mapitData);\n  }, [mapitData])\n\n  if (!mapitData && !config.CENTER_ID) {\n    console.error('Please provide either mapitData or CENTER_ID');\n    return null;\n  }\n  if (!config.CENTER_ID && !isMapIt2Response(mapitData)) {\n    console.error('mapitData is not a valid MapIt2Response');\n    return null;\n  }\n\n  const handleOnSubmit = (data: MapObjToSave, refreshData?: () => void) => {\n    if (onSubmit) {\n      onSubmit(data, refreshData);\n    }\n  }\n\n  return (\n    <MeshObjectContextProvider>\n      <div className={`${styles['mapbox-component']} ${config.ROLE !== 'PORTAL'? styles.view : ''}`}>\n        <SceneComponent\n          ref={refObj}\n          setSelectedActiveObjectId={setSelectedActiveObjectId}\n          selectedActiveObjectId={selectedActiveObjectId}\n          mapitData={mapData}\n          config={config}\n          onSettingsLoading={onSettingsLoading}\n          webApiURI={webApiURI}\n          mediaStorageURI={mediaStorageURI}\n          onSubmit={handleOnSubmit}\n          onResetData={onResetData}\n          deviceType={deviceType}\n          setCameraControlPosition={setCameraControlPosition}\n          onExtractedAmenities={onExtractedAmenities}\n        />\n        <div className={styles.hide}>\n          <div id=\"map-special-svg-kiosk\">\n            <svg id=\"Layer_2\" data-name=\"Layer 2\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 443.83 787.21\">\n              <path d=\"M451,587.7V8.14H7.14V589.5H111.43V730.89H71.27L38.59,763.58v31.78H416.36V764.93l-34.05-34H345.78V587.7ZM396.91,71.23v452.7H59.85V71.23Z\" transform=\"translate(-7.14 -8.14)\" fill=\"#222222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-atm\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 248.08 247.92\">\n              <path d=\"M122,257.27c-5.39-1-10.81-1.79-16.17-2.92C46.21,241.73,4.83,187.22,8.2,125.78,11.48,65.91,58.61,16.49,118.57,10.07a123.9,123.9,0,0,1,136.17,105.3c9.72,65.14-34,126.76-99,139.57-4.56.9-9.16,1.56-13.74,2.33Zm119.67-124c0-60.41-49.38-109.74-109.76-109.66S22.16,73.17,22.33,133.47A109.8,109.8,0,0,0,131.87,242.79C192.39,242.87,241.67,193.71,241.67,133.26Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n              <path d=\"M142.74,209.12v17.52h-20V209.15c-16.35-2.42-30.49-8.31-39.37-22.87-5.29-8.67-7.81-18.17-8.61-28.56H104c.63,12.29,6,21.26,18.19,26a31.6,31.6,0,0,0,.46-3.66c0-11.83-.09-23.66.1-35.49,0-3-.93-4.26-3.86-5.14-6.36-1.9-12.81-3.81-18.77-6.68-24.22-11.66-29.61-43.54-10.9-63.07,7.4-7.74,16.65-12,27-14.3,1.94-.43,3.89-.79,6.33-1.28V38.43H142.7c0,4.09.19,8-.06,12-.21,3.14,1,4.26,4,4.9C161.3,58.39,173.8,65,180.47,79.1c2.7,5.7,3.82,12.15,5.84,18.89h-29c-2.52-5-4.56-9.87-7.34-14.25-1.3-2-4-3.16-6.85-5.24-.21,2.37-.43,3.76-.43,5.15,0,9,.2,18-.12,27-.15,4,1,5.68,5,6.81a120.71,120.71,0,0,1,19.6,7.27c29.52,14.08,31.09,54.34,5.8,72.94a60.33,60.33,0,0,1-25.11,10.52Zm.17-25.19c12.19-2.62,18.79-10.58,18-21.25-.58-8.26-7.84-14.53-18-15.4Zm-20.7-73.36V79.24c-8.71,1.32-14.1,7.27-14.38,15.45C107.55,103.15,112,108.2,122.21,110.57Z\" transform=\"translate(-8.01 -9.35)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-management\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 772.14 772.14\">\n              <path d=\"M12.61,738.09V58.45C28.35,20.11,40.21,12.29,82.7,12.29q319.74,0,639.46,0c41.63,0,62.59,21,62.59,62.6q0,319.73,0,639.46c0,42.33-7.5,53.72-46.15,70.07H59C35.27,777.22,19.94,761.66,12.61,738.09ZM400.34,61.77c-107.07,0-214.15.2-321.22-.26-12.89-.06-16.48,3.72-16.45,16.58q.55,319.68,0,639.36c0,12.41,2.94,17,16.27,16.93q319.68-.57,639.36,0c13.72,0,17.24-4.07,17.22-17.54q-.62-318.92.09-637.82c0-15.33-5.44-17.56-18.71-17.5C611.41,62,505.88,61.77,400.34,61.77Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n              <path d=\"M262.69,306.22V651.6H192.15V166.28c30.74,0,61.46-.43,92.13.58,3.59.11,8.35,7.62,10.16,12.58Q342.59,311.11,390.09,443c1.68,4.63,3.75,9.13,6.67,16.17,25-70.19,49-137.75,73-205.3,9.13-25.64,18-51.37,27.69-76.8,1.63-4.29,6.68-10.23,10.3-10.34,28.14-.86,56.31-.47,85.28-.47V651.68h-70.4V306.9l-3.4-.66c-40.49,114.34-81,228.68-122.82,346.81L266,305.68Z\" transform=\"translate(-12.61 -12.29)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-playarea\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 670 772.73\">\n              <path d=\"M148.12,16l38.67,19.35c-1.08,3.94-1,5.26-1.61,5.69C146.81,68.47,142,105.72,153.25,148.13c4,15,10.9,27.7,8.38,46.15-3.85,28.24,2.4,58.08,5.93,87,7.47,61.24,15.95,122.37,24.06,183.54.22,1.7,1,3.32,5.06,4.77,0-6.85-.19-13.72,0-20.57q3.48-108,7-216.07c.49-15.79-.36-28.92-15.76-41.44-31.82-25.87-40.12-82.17-21.82-117.88,12.56-24.5,42.67-39.33,70-34.48,29.31,5.19,52.71,28.25,56.62,55.79,6.76,47.64-31.32,101.11-82.12,110.92-3.34,93-6.71,186.81-10.08,280.64l2,.51c8.65-25.2,17.71-50.26,25.86-75.62,12.44-38.67,20.78-45.73,62-45.4,25.4.2,51.66-5.14,75.71,8.28h0c10,20.57,21.3,40.63,29.58,61.87,8.15,20.92,13.22,43,22.11,64.6,0-22.62-1-45.31.36-67.85.9-14.63,2.86-30.09,8.56-43.36,15.8-36.77,49.23-48,85.26-51.6,53.64-5.4,91.8,16.8,118.08,67.53,4.33-48.86,8.76-95.83,12.54-142.85,1.47-18.36,2-36.83,1.8-55.24,0-4.14-3.6-9.86-7.24-12.11-38.47-23.86-61.06-77.9-50.47-122.24,7.85-32.89,45-57.77,80.43-53.93,34.42,3.72,64.49,35.87,65.08,69.56.87,50.08-32.63,99.45-78.55,111.54-8,98.49-16.21,198.19-24,297.92-1.24,15.88-.18,31.94-.77,47.89-.61,16.7-9.35,26.37-22.36,25.79-12.72-.56-20.17-9.65-20.3-25.88-.23-31.43,0-62.86-.16-94.28,0-5.15-.88-10.3-1.35-15.45l-4.94,0c-.44,5.2-1.27,10.39-1.28,15.59q-.09,149.16,0,298.31c0,6.16.36,12.61-1.28,18.41-3.27,11.61-9.78,20.13-23.7,20.13-13.76,0-20.67-8.24-24.18-19.78-1.75-5.74-1.29-12.24-1.29-18.4,0-55.13.07-110.26,0-165.39,0-5.75-1.1-11.49-1.68-17.24l-4.78-.27c-.79,5.38-2.25,10.76-2.26,16.14-.14,55.13,0,110.26,0,165.39,0,5.65.47,11.51-.8,16.92-3.05,13-9.77,22.67-25,22.54-12.68-.11-22.84-8.63-24.07-23.15-1.39-16.37-.93-32.92-.93-49.4q0-132.15.09-264.3c0-4.84-.76-9.69-1.16-14.53l-4.29-.33c-.77,4.87-2.16,9.73-2.2,14.6-.21,31.95.12,63.89-.24,95.83-.22,20.06-10.43,27-30.12,22.18-3.33-.82-7.64.15-10.89,1.63C405.73,577.45,398.51,575.6,393,561c-6.64-17.8-11.54-36.25-17.17-54.42-4.77-15.39-9.5-30.79-16.31-45.56,4.61,66.85,34.83,126.95,50.18,192.46H356c-.4,6.2-1,11.09-1,16-.07,30.92.13,61.83,0,92.74-.09,17.27-7.59,26.31-21.15,26.44s-21.28-8.67-21.46-26.19c-.33-30.39.05-60.8-.24-91.19-.05-5.32-1.93-10.62-3-15.92l-5.05.34c-.55,5.2-1.55,10.39-1.57,15.59-.14,27.31,0,54.62,0,81.92,0,4.12.27,8.27-.08,12.36-1.21,14.52-9.54,23.29-21.64,23.09s-20.85-9.05-21.09-23.66c-.51-30.9-.11-61.82-.09-92.74,0-5.55,0-11.1,0-18.3h-54.7c15.54-65.55,45.77-125.27,48.86-192.3a75.07,75.07,0,0,0-3.63,8.3c-9,29.51-17.65,59.11-26.79,88.56C220,569.27,213.22,577.24,200.64,574c-13.58-3.53-12.34-14-12.36-25.82-.06-33.23-.45-66.69-4.26-99.64-8.85-76.66-19.93-153.07-29.78-229.61-2.15-16.73-7.5-28.15-25.78-34.52-36.3-12.65-68.26-62.14-66.11-99.94,1.71-30,18.74-50.32,45.57-62.84,4.11-1.92,8.25-3.76,12.38-5.64Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M366.14,374.32c-10.69-26.47-3.48-53.71-3.51-80.64,0-5.71-.5-11.43-.77-17.14l-6.36-.05c0,7.36-.44,14.76.07,22.08,2.61,37.58-28.14,62.52-64,51.69-22.85-6.91-35.81-29.12-32.36-54.56.85-6.27.13-12.75.13-19.13l-7-.39c-.36,6.46-1.24,12.95-1,19.38.8,18.49,2.46,36.94,2.93,55.43.15,6-2.36,12-3.42,16.92-8-28.07-16.1-55.61-23.69-83.28-5.76-21-.8-30.34,20.52-31.34,21.48-1,43.14,2.79,64.75,3.44,7.73.23,15.57-3.86,23.32-3.71,15.13.3,30.72.3,45.19,4,11.92,3.08,10.3,15.27,7.59,25-4.42,15.82-10.3,31.26-14.23,47.19-3.64,14.79-5.54,30-8.21,45.07Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n              <path d=\"M573.81,274.55c-.08,26.89-23.52,50.26-50.32,50.17-27.05-.08-50.08-23.2-50.09-50.26,0-27.7,22.11-49.49,50.18-49.45S573.9,247,573.81,274.55Z\" transform=\"translate(-62.25 -15.96)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 732.38 614.5\">\n              <path d=\"M129.05,159.85a55.6,55.6,0,1,1,55.6,55.6,55.69,55.69,0,0,1-55.6-55.6m55.7,69.6h-1.5a133.5,133.5,0,0,0-132,134.6v58.6a27,27,0,0,0,54,0v-58.9a78.92,78.92,0,0,1,18.9-52.2v366a27,27,0,1,0,53.9,0V472.65h13.2v204.9a27,27,0,0,0,54,0V311.35a78.75,78.75,0,0,1,18.9,50.4v60.9a27,27,0,0,0,54,0v-61.2c-.8-73.1-60.5-132-133.4-132m596.5,182.1c-3.7-8-7.3-16.8-11.1-26.2-25.9-62.1-64.9-155.9-157.8-155.9s-132,93.9-157.7,156c-3.9,9.3-7.6,18.1-11.2,26.1a27,27,0,0,0,13.5,35.7,26.17,26.17,0,0,0,11.1,2.4,26.93,26.93,0,0,0,24.6-15.9c3.9-8.5,7.7-17.8,11.8-27.6,19.4-46.8,37.7-86.1,63.7-106.9l-70.4,174.4c-10,24.6,3.7,44.8,30.2,44.8h23.8v159.1a27,27,0,0,0,54,0V518.45h13.1v159.1a27,27,0,0,0,54,0V518.45h23.9c26.6,0,40.2-20.2,30.3-44.8l-70.4-174.4c26,20.7,44.2,60,63.7,106.8,4,9.8,8,19.2,11.8,27.7a26.93,26.93,0,0,0,24.6,15.9,27.41,27.41,0,0,0,11.1-2.4,27.12,27.12,0,0,0,13.4-35.7m-169-196.2a55.65,55.65,0,1,0-55.6-55.6,55.61,55.61,0,0,0,55.6,55.6m-228-125.3a14.08,14.08,0,0,0-14.1,14.1v580.7a14.1,14.1,0,1,0,28.2,0V104.15a14.08,14.08,0,0,0-14.1-14.1\" transform=\"translate(-51.24 -90.05)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-family-restroom\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 648 604.44\">\n              <path d=\"M483.26,183.08v386.3c0,20.7,3.14,35.6,25.57,35.6,19.63,0,26.32-13.86,26.32-35.6v-214h10.61v214c0,22.64,8.55,35.6,28.5,35.6,19.25,0,27.17-11.72,27.17-35.6V183.08h12.24V322.52c0,20.29,1.88,32.84,20.75,32.84,15.42,0,21.58-12.38,21.58-32.84V193.68c0-60.18-27-74.85-90.31-74.85H515.52c-64.65,0-86.88,18.41-86.88,77.21V322.52c0,19,2.67,32.84,21.83,32.84,16.63,0,20.56-12.55,20.56-32.84V183.08\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M97.85,188.81,35.17,411.09H90V575.35c0,17.9,5.81,31.18,23,31.18,16.19,0,23.49-12.42,23.49-31.18V411.09h12.67V575.35c0,17.9,5.81,31.18,23.07,31.18,16.95,0,23.64-13.28,23.64-31.18V411.09h58.29L189.45,188.81l12.84-3.06L242,312.43c3.55,11.83,13.09,18.19,22.2,18.19,10.86,0,18.07-8.11,18.07-18.63,0-1.41,0-5.55-2.25-13.3L243.65,175.23c-12.45-42-35.09-56.37-75.2-56.37H127c-53.8,0-70.43,17.68-79.58,51.26L8,313.13c0,9.38,8.71,18,18.63,18,8.54,0,16.13-5.55,20-17.4l39-127,12.22,2.09\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M444.91,518.05l-12.71-42.8c-5.36-18.12-17.21-46.31-57.5-46.31H329.6c-40.48,0-52.27,28.19-57.94,46.31l-12.45,42.8c-3.94,11.24-.6,19.51,7.92,22,8.11,2.4,14.93-2.71,18.68-12.67l7.7-29.5c1.82-7,5.6-10,11-8.29,5.18,2.26,5.41,7.32,3.34,14.3,0,0-10.85,72.51-3.74,92,6.62,17.86,32,16,48,15.37,16.16.61,40.9,2.49,47.75-15.37,6.82-19.51-4.18-92-4.18-92-1.23-7-1.23-12,3.94-14.3,5-1.72,8.74,1.25,11,8.29l7.85,29.5c3.15,10,10.42,15.07,18.53,12.67,8.29-2.5,11.59-10.77,7.92-22m-93-102.53A48.95,48.95,0,1,0,303,366.57a48.87,48.87,0,0,0,48.83,48.95\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M542.27,104.18c25.92,0,47.77-21.76,47.77-49a48.11,48.11,0,0,0-47.77-48c-26,0-47.59,21.39-47.59,48,0,27.24,21.6,49,47.59,49\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n              <path d=\"M145.37,104.18c26,0,46.33-21.76,46.33-47.57S171.35,8.66,145.37,8.66s-46.91,22-46.91,48,21,47.57,46.91,47.57\" transform=\"translate(-8 -7.22)\" fill=\"#262626\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-elevator\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 581.01 581\">\n              <path d=\"M480.87,597H125.13A112.77,112.77,0,0,1,12.5,484.34V128.66A112.77,112.77,0,0,1,125.13,16H480.87A112.77,112.77,0,0,1,593.5,128.66V484.34A112.77,112.77,0,0,1,480.87,597ZM125.13,42.39a86.35,86.35,0,0,0-86.24,86.27V484.34a86.35,86.35,0,0,0,86.24,86.27H480.87a86.35,86.35,0,0,0,86.24-86.27V128.66a86.35,86.35,0,0,0-86.24-86.27Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M428.75,273.7a24.08,24.08,0,0,1-17.18-7.13L303,158,194.42,266.57A24.3,24.3,0,0,1,160,232.21l143-143L446,232.21a24.31,24.31,0,0,1-17.2,41.49\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n              <path d=\"M303,538.3,160.05,395.35A24.31,24.31,0,0,1,194.44,361L303,469.53,411.56,361A24.31,24.31,0,1,1,446,395.35Z\" transform=\"translate(-12.5 -16)\" fill=\"#111\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-security\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 752.09 736.37\">\n              <path d=\"M28.78,317.59c2.71-4.8,5.33-9.66,8.15-14.4,11-18.36,31.75-27.56,53.13-23.59a49.46,49.46,0,0,1,40.14,39.7c.84,4.22,1.11,8.54,1.85,14.52h27.87c47.62,0,95.26-.18,142.88.32,10.18.1,15.63-2.52,18.93-12.91,19.06-60,38.82-119.85,58.39-179.92C350,120.53,340.16,99.37,349,73.44c6.33-18.56,27.67-33.56,47.89-33.67,21-.11,43.11,15.71,48.91,34.9,8.25,27.35-1.23,46.47-34.08,67.83,24.11,60,48.07,120.23,72.84,180.12,2,4.88,9.59,10.54,14.65,10.61,58.85.74,117.72.47,172.57.47,9.85-16.1,17.17-32.4,28.59-45,6.1-6.72,19.14-9.19,29.27-9.78,23.25-1.37,43.85,15.44,49.75,38,5.34,20.38-4.28,44.15-22.46,55.51-22.92,14.32-42.71,10.61-71.23-13.63-43,36.09-85.92,72.38-129.15,108.32-28,23.26-28.07,23-17.53,57.41q22.77,74.34,45.21,148.64c41.33,4,58.12,15.31,63.85,42.81,4.13,19.85-6.2,42.06-24.53,52.79-19.66,11.49-42.35,9.43-59.3-5.39-19.58-17.12-22.15-38.26-7.81-71.85-18.57-11.81-37.52-23.65-56.24-35.84-31.49-20.49-62.66-41.46-94.41-61.52-4.67-3-13.62-5-17.49-2.51-52.3,33.14-104,67.14-155.92,100.92,13.47,35.69,10.4,56.32-10.74,72.49-18,13.8-41,14.65-59.62,2.2s-26.72-35.64-20-58c7.12-23.77,26.9-35,63.15-34.91Q233,583.23,261.26,490.64L114.85,368c-17.47,11.79-38,19.64-57.78,5.48-11.49-8.21-19-22-28.29-33.28Z\" transform=\"translate(-28.78 -39.77)\" fill=\"#222\" />\n            </svg>\n          </div>\n          <div id=\"map-special-svg-dog-poop-station\">\n            <svg id=\"Layer_1\" data-name=\"Layer 1\" viewBox=\"0 0 752.1 736.4\">\n              <ellipse transform=\"matrix(0.9488 -0.3159 0.3159 0.9488 -30.6034 83.2258)\" fill=\"#222\" cx=\"241.4\" cy=\"136\" rx=\"85.6\" ry=\"135.9\" />\n              <ellipse transform=\"matrix(0.3917 -0.9201 0.9201 0.3917 178.2635 541.6781)\" fill=\"#222\" cx=\"498.8\" cy=\"136\" rx=\"135.8\" ry=\"85.7\" />\n              <ellipse transform=\"matrix(0.665 -0.7469 0.7469 0.665 -223.1496 187.105)\" fill=\"#222\" cx=\"97\" cy=\"342.3\" rx=\"74.4\" ry=\"109.6\" />\n              <ellipse transform=\"matrix(0.6879 -0.7258 0.7258 0.6879 -19.9475 571.058)\" fill=\"#222\" cx=\"654\" cy=\"308.7\" rx=\"111.1\" ry=\"75.7\" />\n              <path fill=\"#222\" d=\"M747.3,578.7c-9.7-67.6-60.5-124.7-119.6-134.8l7.4,1.7c-48.9-3.7-96.1-32.2-126.4-76.3\n\t\tc-14.6-21.3-25.8-46.4-44.8-62.7c-15.5-13.3-34.9-19.4-54.1-22.6c-30.9-5.1-63.1-3.3-92.3,9.5s-55,37.1-68.5,69.4\n\t\tc-7.4,17.8-11,37.5-18.6,55.2C209.1,468,160.4,494,129.8,537c-22.6,31.8-34.8,73.1-33.6,114.1c0.3,10.8,1.6,22,6.5,31.3\n\t\tc4.9,9.5,13.1,16.1,21.4,21.7c40.2,27.1,90.4,34.1,135.1,19c56.2-19,105.8-71.2,164.1-65c21,2.2,40.7,12,60.7,19.4\n\tc73,27,154.5,22,224.6-13.7c9.8-5,19.6-10.8,26.8-19.9C748.9,626.8,750.6,601.3,747.3,578.7z\"/>\n            </svg>\n          </div>\n          <div id=\"map-special-svg-escalator\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"512\" height=\"398\" viewBox=\"0 0 512 398\">\n              <g fillRule=\"evenodd\">\n                <path fill=\"#FFF\" d=\"M217.01,68.67 C235.674,68.677 250.846,53.503 250.85,34.83 C250.846,16.072 235.674,0.9 217.01,0.87 C198.243,0.9 183.071,16.072 183.05,34.83 C183.071,53.503 198.243,68.677 217.01,68.67\"></path>\n                <path fill=\"#FFF\" d=\"M250.49,129.63 L250.49,108.27 C250.507,62.826 183.412,63.326 183.41,108.27 L183.41,195.39 L183.53,195.39 L120.17,258.87 C114.172,264.805 113.443,265.065 101.69,265.11 C101.691,265.075 62.93,265.11 62.93,265.11 C23.943,265.065 0.557,300.113 0.53,329.79 C0.557,359.539 23.943,397.1 66.41,397.11 C66.41,397.11 119.149,397.1 135.41,397.11 C151.738,397.1 171.491,390.871 187.73,375.51 L389.93,174.03 C394.237,170.175 396.633,168.978 404.09,168.99 C404.09,168.99 431.929,168.978 454.01,168.99 C478,168.978 512,141.75 511.97,102.51 C512,63.651 477.75,37.75 451.97,37.71 L373.25,37.71 C356.899,37.664 335.943,44.326 323.45,56.79 L250.49,129.63\"></path>\n                <path fill=\"#FFF\" d=\"M377.93,71.19 L448.85,71.19 C466.144,71.211 477.75,90.498 477.77,102.03 C477.75,113.502 469.516,134.969 448.37,134.91 L405.77,134.91 C387.75,134.969 379.75,137.5 369.41,147.87 L165.65,351.63 C157.443,359.826 146.989,363.093 133.61,363.15 L66.41,363.15 C49.149,363.093 33.943,348.496 33.89,329.31 C33.943,310.156 48.443,299.415 63.41,299.43 L109.49,299.43 C122.943,299.415 131.775,295.581 139.49,287.91 L346.61,80.79 C355.083,72.276 363.502,71.211 377.93,71.19\"></path>\n              </g>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </MeshObjectContextProvider>\n\n  );\n}\n\nexport default MapBox;\n","// API mapit2 data types\n\nimport { Group, Texture, Vector3 } from \"three\";\n\nexport type IRetailer = {\n    id: string;\n    index?: string;\n    retail_name: string;\n    slug: string;\n    location: string;\n    retailer_phone: string;\n    retailer_description: string;\n    logo: string;\n    map_obj_name: string;\n};\n\nexport type MapObj = {\n    id: string | number;\n    center_id: string;\n    retailer_id: string;\n    kiosk_id: string | null;\n    map_obj_name: string;\n    obj_type: string;\n    layer_type: string;\n    value: string;\n    custom_text: string;\n    custom_image: string;\n    hover_text: string;\n    bg_color: string;\n    transparent: string | number;\n    text_color: string;\n    size: string;\n    lock_size: string;\n    rotate: string;\n    offsetX: string;\n    offsetY: string;\n    goToFloor?: Function;\n};\n\nexport type MapObjToSave = Omit<Omit<MapObj, 'goToFloor'>, 'kiosk_id'> & {kiosk_id: number | null};\n\nexport type Floor = {\n    id: string;\n    svg_map?: string;\n    objsGroup?: Group;\n    interactiveObjs?: any[];\n    escalatorsObjs?: any[];\n    escalatorsNodes?: Record<any, any>;\n    escalatorMeshes?: any[];\n    route_points?: IRoutePoint[];\n    route_tube?: any;\n    route_texture?: Texture | null | undefined;\n    routeMeshes?: any[];\n    route_active?: boolean;\n    center_id?: string;\n    title: string;\n    svg?: string;\n    status?: string;\n    created_at?: string;\n};\n\nexport type CameraControlsState = {\n    camera: { x: number, y: number, z: number };\n    controls: { x: number, y: number, z: number };\n};\n\nexport type Settings = {\n    STYLE: '2D' | '3D',\n    MAP_BACKGROUND_COLOR: string;\n    ACCENT_COLOR: string;\n    STORE_DEFAULT_COLOR: string;\n    BIG_STORE_DEFAULT_COLOR: string;\n    WALL_THICKNESS: string;\n    WALL_COLOR: string;\n    BOUNDARY_THICKNESS: string;\n    BOUNDARY_COLOR: string;\n    BASE_COLOR: string;\n    STORE_TEXT_COLOR: string;\n    STORE_HEIGHT: string;\n    OVERLAY_COLOR: string;\n    OVERLAY_OPACITY: string;\n    AMENITIES_NAV_BG_COLOR: string;\n    AMENITIES_NAV_ICON_COLOR: string;\n    KIOSK_SIZE: string;\n    CAMERA_MIN_DISTANCE: string;\n    CAMERA_MAX_DISTANCE: string;\n    ZOOM_STEP: string;\n};\n\nexport type Kiosk = {\n    id: string;\n    title: string;\n    map_obj_name: string;\n};\n\nexport type Amenity = {\n    name: string;\n    image: string;\n};\n\nexport type MapIt2Response = {\n    retailers: IRetailer[];\n    map_objs: MapObj[];\n    floors: Floor[];\n    camera_controls_states: {\n        display_app: CameraControlsState;\n        desktop: CameraControlsState;\n        tablet: CameraControlsState;\n        mobile: CameraControlsState;\n    };\n    settings: Settings;\n    kiosks: Kiosk[];\n    amenities: Record<string, Amenity>;\n};\n\nexport type IRoutePoint = {\n    name: string;\n    node: Vector3;\n}\n\nexport function isMapIt2Response(obj: unknown): obj is MapIt2Response {\n    if (typeof obj !== 'object' || obj === null) return false;\n\n    const response = obj as Record<string, unknown>;\n\n    return (\n        Array.isArray(response.retailers) &&\n        Array.isArray(response.map_objs) &&\n        Array.isArray(response.floors) &&\n        typeof response.camera_controls_states === 'object' &&\n        response.camera_controls_states !== null &&\n        typeof (response.camera_controls_states as Record<string, unknown>).display_app === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).desktop === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).tablet === 'object' &&\n        typeof (response.camera_controls_states as Record<string, unknown>).mobile === 'object' &&\n        typeof response.settings === 'object' &&\n        Array.isArray(response.kiosks) &&\n        typeof response.amenities === 'object'\n    );\n}"],"names":["get_node_name","vertex","floor_index","floors","node_count","exists","node_name","currentFloor","undefined","route_points","i","length","x","node","y","name","next_node_name","getMeshParams","path","paths","config","nodeCount","allNodesFloor","pathFinderGraph","consolePrefix","mesh_type","layer_color","color","clone","extrude","z_index","mesh_visible","mesh_draw","mesh_transparent","line_thickness","WALL_THICKNESS","interactiveMesh","layer_name","userData","id","startsWith","BOUNDARY_COLOR","BOUNDARY_THICKNESS","STYLE","WALL_COLOR","BUILDING_BASE_COLOR","BASE_COLOR","STORE_DEFAULT_COLOR","parseInt","STORE_HEIGHT","BIG_STORE_DEFAULT_COLOR","subPaths","forEach","subPath","curves","console","warn","curve","v1","v2","node1_name","exists1","push","Vector3","node2_name","exists2","addNode","addLink","weight","distanceTo","allIndexedMapObjects","allIndexedRetailers","createGraph","hex_to_color","hex_code","Color","getFormatedColor","replace","amenitiesList","type","icon","ATMIcon","_jsxs","xmlns","viewBox","children","_jsx","d","transform","fill","ManagementIcon","PlayAreaIcon","RestroomIcon","FamilyRestroom","ElevatorIcon","SecurityIcon","DogPoopStation","cx","cy","rx","ry","renderOrders","escalator","underlay","overlay","base","store","kiosk","wall","boundary","amenity","getRenderOrder","getMaterial","material_settings","side","DoubleSide","transparent","depthWrite","depthTest","opacity","OVERLAY_COLOR","OVERLAY_OPACITY","includes","ROLE","material","MeshLambertMaterial","colorDefault","bg_color","active","getMaterialAndGeometry","role","geometry","getGeometry","extrude_meshes","shapes","toShapes","ExtrudeGeometry","depth","bevelEnabled","wall_geometries","shape_extend","shape1","thickness","wallShape","Shape","point1","point2","dir","sub","normalize","multiplyScalar","point1_center","add","point2_center","distance","point1_above","point1_below","point2_above","point2_below","moveTo","lineTo","getWallShape","wall_geometry","mergeGeometries","ShapeGeometry","attributes","position","count","e","error","message","mesh","Mesh","object_id","visible","z","storeName","layer_type","retailer_id","retail_name","custom_text","value","find","item","renderOrder","objsGroup","escalatorsNodes","escalatorsObjs","escalator_id","route_node_id","obj_type","interactiveObjs","create_route","from_mesh_object_id","to_mesh_object_id","scene","escalator_nodes","style","routePaths","routeCallback","floor","route_active","route_tube","dispose","remove","route_texture","escalatorMeshes","delete_route_path","from_obj","getObjectByProperty","to_obj","from_node_name","to_node_name","from_route_floor_index","to_route_floor_index","routeNodes","aStarPathFinder","get_route_nodes","ngraphPath","aStar","fromNode","toNode","link","data","debug","routeNodesEsclators","floor_routes","index","routeNode","Object","keys","key","escalator_mesh","goToFloor","direction","floor_route","routePath","create_route_path","routeMeshes","create_route_paths","route_path","CurvePath","from_node","to_node","LineCurve3","TubeGeometry","BufferGeometry","copy","MeshBasicMaterial","map","get_route_texture","scale","setDrawRange","ctx","document","createElement","getContext","canvas","width","height","fillStyle","fillRect","grd_width","min_grd_width","max_grd_width","grd","createLinearGradient","addColorStop","CanvasTexture","offset","colorSpace","loadFloors","results","GeometriesAndMaterials","result","meshParams","findStoreNodeRaycaster","Raycaster","routeNodeIds","find_store_node_raycaster","Map","point","origin_point","target_direction","set","storeIntersects","intersectObjects","object","escalatorIntersects","escalatorNodes","assign_route_nodes_to_stores","size","has","get","nodeIdFrom","nodeIdTo","linkFloorEscalators","graph","defaultVars","MAP_BACKGROUND_COLOR","DEVICE","KIOSK","FLOORS","KIOSKS","CENTER_ID","STATS","DEBUG","ACCENT_COLOR","STORE_TEXT_COLOR","CAMERA_CONTROLS_STATES","ORIGINAL_CAMERA_POSITION","DEFAULT_CAMERA_POSITION","DEFAULT_CONTROLS_TARGET","DEFAULT_SELECTED_STORE","CAMERA","minDistance","maxDistance","animSpeed","KIOSK_SIZE","ZOOM_STEP","layer_text_logo_position_by_id","newMeshPos","mesh_size","newMesh","map_obj","offsetX","offsetY","rotate","obj_angle","rotateZ","Math","PI","getImage","retailer","img","Image","crossOrigin","src","logo","svg_image_name","svg_color","text_color","svg_block","getElementById","svg_element","querySelector","querySelectorAll","svgColoredPart","setAttribute","svgData","XMLSerializer","serializeToString","window","btoa","unescape","encodeURIComponent","custom_image","processImage","afterOnload","onload","c","drawImage","texture","PlaneGeometry","getImageLogo","new_object_id","mesh_center_point","handleAsync","logoMesh","storeLogo","get_store_name_logo_geo","textLogoNamePrefix","myFont","boundingBox","computeBoundingBox","getCenter","getSize","text","text_material","MeshPhongMaterial","text_geometry","TextGeometry","font","curveSegments","center","textMesh","kiosk_id","defaultMapObjValues","center_id","map_obj_name","hover_text","allNonIndexedMapObjects","floorsData","MEDIA_STORAGE_URI","useMeshFloors","jsonConfig","mediaStorageURI","setMeshParams","useState","textParams","setTextParams","storeLogos","setStoreLogos","setPathFinderGraph","setEscalatorNodes","urls","setUrls","processedConfig","setProcessedConfig","useLoader","SVGLoader","useMemo","useFont","fontData","handleAsyncStoreLogos","useCallback","floorIndex","meshLogo","prevLogos","useEffect","init","response","kiosks","mapObj","map_objs","retailers","obj","clearObject","makeIndexedMapObjects","Group","lookAt","svg_map","svg","title","far","fov","fovCorrection","settings","parseFloat","CAMERA_MIN_DISTANCE","CAMERA_MAX_DISTANCE","camera_controls_states","CONTROLS","SELECTED_RETAILER_SLUG","AMENITIES","amenities","RETAILERS","AMENITIES_NAV_BG_COLOR","AMENITIES_NAV_ICON_COLOR","values","removeFromParent","TextsAndLogos","params","reduce","acc","mapObjNames","Set","items","SceneProperties","useThree","background","CameraProperties","props","camera","cameraProjectionNeedsUpdate","near","PerspectiveCamera","updateProjectionMatrix","easeInOutCubic","pow","RouteTube","animateRoute","useRef","log","end","animateTube","startTime","performance","now","progress","drawRangeEnd","current","animateTexture","offsetVector","useFrame","MeshObjectContext","createContext","MeshObject","SetMeshObject","cameraLength","setCameraLength","setConfig","MeshObjectContextProvider","Provider","useMeshObjectContext","context","useContext","Error","MapCenterMarker","lockSize","blink","sizeFactor","setSizeFactor","kioskElementRef","React","kioskElement","svgOrigin","svgClone","cloneNode","appendChild","removeChild","_Fragment","className","styles","ref","MapObject","update","setUpdate","triggerUpdate","kioskConfig","Html","pointerEvents","distanceFactor","htmlContent","uuid","meshFloors","routeTube","activeObjectId","hoverObjectId","handleChangeFloor","onPointerMove","onPointerOver","onPointerEnter","onPointerOut","onPointerLeave","onClick","floorMeshParams","floorTextParams","floorStoreLogos","interactive","hovered","MeshStandardMaterial","baseColor","newColor","r","g","b","getDarkerColor","Fragment","boundingSphere","escalator_elems","display","element","label","get_camera_focus_object","objs","aspectRatio","Array","isArray","target","objsBoundingBox","box","union","Box3","obj_size","localToWorld","tanFOV","tan","new_y","max","new_z","angle","getCameraTiltPosition","FloorsMap","forwardRef","firstMove","setFirstMove","currentFloorIndex","currKioskObj","currKioskFloorIndex","routeTargetId","routeTargetFromId","amenityTargetType","zoom","handleCameraLength","handleCameraAndControlsChange","groupRef","routeTubes","setRouteTubes","mapControlRef","cameraFocus","accentColor","from","resetCamera","route","kiosk_obj_name","amenity_type","kiosk_obj","kiosk_node_name","to_obj_name","shortest_distance","mapObject","amenity_obj_name","amenity_obj","amenity_node_name","route_distance","getLink","get_nodes_distance","make_amenity_route","targetMesh","selectedFloorMeshParams","meshes","currentActiveObject","focus","aspect","cameraDistance","min","setLength","fromPosition","fromTarget","animationStartTime","duration","zoomStep","onCameraMove","vector","animationTime","animationProgress","lerpVectors","fullReset","cameraControlsStates","controls","useImperativeHandle","rotation","MapControls","makeDefault","onChange","maxPolarAngle","enableZoom","enableRotate","dampingFactor","FloorButton","isActive","control_btn","FloorSelector","selectedFloorIndex","handleFloorChange","floorButtons","btn_group","slice","reverse","UIComponent","zoomIn","zoomOut","reset","clearRoute","handleAmenityClick","mapObjs","onExtractedAmenities","extractValues","filter","preventDefault","Function","hide","backgroundColor","defaultData","isError","mainTabs","retailerTabs","specialTabs","getDefaultMapOjbValues","centerId","lock_size","updateMapCenterMarkerFor","formData","Number","MapboxForm","setData","selectedId","onResetData","mainTabKey","setMainTabKey","retailerTabsKey","setRetailerTabsKey","specialTabsKey","setSpecialTabsKey","setFormData","setRotation","oldMapObjName","setOldMapObjName","timeoutRef","startTransition","useTransition","intervalRefs","isLoading","setIsLoading","fetchRetailers","apiURI","limit","page","search","uri","fetch","headers","toString","then","ok","Promise","resolve","json","reject","status","statusText","url","catch","useGetRetailers","handleChangeTab","k","clearKioskConfig","updateData","retailIndex","findIndex","makeTextGeometry","makeImage","HTMLImageElement","changeValue","clearInterval","setTimeout","setX","setY","meshType","handleChange","Date","getTime","decrementValue","hasOwn","incrementValue","rotateByFixedAngle","handleDecrement","setInterval","handleIncrement","stopIntervals","Tab","Container","activeKey","Col","Row","sm","Nav","variant","onSelect","Item","Link","eventKey","Button","handleReset","defaultValues","Content","Pane","AsyncSelect","loadOptions","inputValue","callback","noOptionsMessage","placeholder","location","defaultOptions","handleChangeRetailer","Tabs","Form","Label","Control","as","rows","Select","disabled","hidden","flexDirection","maxWidth","onMouseDown","onMouseUp","onMouseLeave","paddingLeft","paddingRight","padding","Check","checked","htmlFor","ArrowClockwise","handleOnSubmit","onSubmit","kioskId","handleRotateByFixedAngle","RetailerInfoList","isAmenity","retailerId","setRetailerId","alt","retailer_phone","retailer_description","dangerouslySetInnerHTML","__html","FormGroup","filterRetailers","arrayObjects","some","Spinner","animation","Placeholder","bg","xs","RetailerInfoModal","show","onHide","mapObjectName","webApiURI","slug","global_retailer","description","media","useRetailerData","Modal","dialogClassName","centered","XCircle","Body","SceneComponent","refreshData","mapitData","getData","mapObjsApiUri","floorsApiUri","kioskApiUri","settingsApiUri","responsiveApiUri","retailersPromise","mapObjsPromise","floorsPromise","kiosksPromise","settingsPromise","responsivePromise","all","responseData","offset_x","offset_y","demoData","useMapit2Data","fromObjectId","setFromObjectId","setHovered","setSelectedFloorIndex","formMapObjData","setFormMapObjData","cameraControlState","setCameraControlState","cameraPos","setCameraPos","controlPos","setControlPos","canvasWidth","setCanvasWidth","selectedActiveObjectId","setSelectedActiveObjectId","onMapDataUpdate","deviceType","setCameraControlPosition","setAmenityTargetType","selectedAmenityType","setSelectedAmenityType","setZoom","statsParentRef","canvasWidthRef","cameraControlStateRef","deviceTypeRef","floorsMapRef","labelRef","currentHoveredObject","setCurrentHoveredObject","showRetailerInfo","setShowRetailerInfo","setCxtConfig","createRouteToAmenity","resizeWidth","offsetWidth","addEventListener","setCameraControlPos","display_app","desktop","tablet","mobile","onSettingsLoading","getHexString","camPos","ctrlTarget","activeFromObjectId","getMapitData","body","cursor","kioskError","kioskMapObjName","currKioskMeshParams","flat","mapObjectIdToKiosk","mapObjectIdToLogo","currKioskId","mapData","handleMeshObjectContext","logoParams","stopPropagation","targetId","messageStyle","top","left","meshFloorsChecked","handleChangeMapitData","newData","itemIndex","Alert","getStyle","resetHandle","ccs","device","Canvas","Stats","stats","parent","intensity","fontWeight","fontSize","handleRetailerInfoOnClick","amenityType","MapBox","refObj","setMapData","isMapIt2Response","view","fillRule"],"mappings":"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"}